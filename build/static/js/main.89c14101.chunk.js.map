{"version":3,"sources":["assets/images/fruits-vegetables-basket-by-oblik-studio.svg","components/Button/ButtonHistory.js","components/Button/ButtonProfil.js","components/Button/ButtonScan.js","components/Scan/Scan.js","components/Navbar/Navbar.js","assets/images/logo.svg","assets/images/bitmap.png","components/Header/Header.js","pages/History.js","pages/Error404.js","components/Button/ButtonCreateAccount.js","components/Button/ButtonLogin.js","components/Button/ButtonNoAccount.js","pages/Login.js","components/Traceability/leaflet-curve/leaflet.curve.js","components/Traceability/leaflet-curve/Curve.js","components/Traceability/Traceability.js","assets/images/nutella.png","components/Environnement/Environnement.js","pages/Product.js","components/Labels/Labels.js","pages/Profil.js","components/Button/ButtonSignup.js","pages/Signup.js","components/Button/ButtonSignin.js","pages/Signin.js","components/Button/ButtonChangePassword.js","assets/users/users.js","pages/ProfileConfiguration.js","components/Charts/DoughnutChartEcoScore.js","components/Charts/BarChartCarbonImpact.js","pages/Statistics.js","components/Test/Scanner.js","components/Test/Scan_home.js","App.js","reportWebVitals.js","index.js"],"names":["ButtonHistory","className","class","ButtonProfil","ButtonScan","configurationPromise","configure","engineLocation","catch","error","alert","style","position","top","bottom","left","right","margin","maxWidth","maxHeight","Scan","props","ref","React","createRef","then","ScanditSDKBarcodePicker","create","current","barcodePicker","onScan","on","onError","this","destroy","prevProps","JSON","stringify","scanSettings","applyScanSettings","visible","setVisible","AnimatePresence","exitBeforeEnter","motion","div","id","initial","animate","transition","duration","exit","onClick","onCrossClicked","Component","Navbar","state","showScanner","barcode","undefined","bcProductId","height","updateWindowDimensions","setState","window","innerHeight","handleScannerButton","bool","handleBarcode","res","arr","split","length","render","Fragment","to","vibrateOnScan","enableTorchToggle","enablePinchToZoom","enableCameraSwitcher","guiStyle","ScanSettings","enabledSymbologies","codeDuplicateFilter","scanResult","console","log","barcodes","data","message","location","pathname","addEventListener","removeEventListener","Header","src","blob","alt","logo","RenderHistoryItem","labelColor","item","label","pathProduct","name","opacity","image","brand","color","marginRight","History","componentDidMount","userId","localStorage","getItem","token","loadHistoryInformations","loadLocalStorageHistory","fetch","method","credentials","headers","Headers","authorization","response","json","items","loading","history","parse","itemList","map","Object","keys","fruits","Error404","ButtonCreateAccount","ButtonLogin","ButtonNoAccount","Login","Verify","isExpired","decodedToken","jwt","decode","complete","dateNow","Date","getTime","payload","exp","push","L","Curve","Path","extend","options","initialize","path","setOptions","_initialUpdate","_setPath","getPath","_coords","setPath","redraw","getBounds","_bounds","_computeBounds","lastPoint","lastCommand","coord","bound","LatLngBounds","i","String","lat","latLng","lng","controlPoint1","controlPoint2","endPoint","diffLat","diffLng","controlPoint","getCenter","_update","_map","_updatePath","_renderer","_updatecurve","_project","lastCoord","curCommand","curPoint","_points","latLngToLayerPoint","curve","SVG","include","layer","_curvePointsToPath","_path","getTotalLength","dashArray","strokeDasharray","strokeDashoffset","points","point","str","x","y","positions","option","getOptions","fromProps","toProps","leafletElement","setStyleIfChanged","propTypes","children","PropTypes","oneOfType","arrayOf","node","object","array","isRequired","withLeaflet","Traceability","zoom","swiper","currentIndex","getMaterialIcon","mode","getTransportMode","getTranslation","displaySlides","slides","products","product","pastille","TransportCO2Impact","value","transport","productsOutput","productName","seller","localisation","city","country","type","buyer","Math","round","dist","handleMarkerClick","latlng","index","elem","document","getElementsByClassName","scrollIntoView","behavior","slideTo","p","latitude","longitude","getZoomRatio","flyTo","onSlideChange","parseFloat","long","displayMarker","markers","icon","icon2","marker1","lat1","long1","marker2","lat2","long2","zIndex","Icon","iconUrl","iconRetinaUrl","iconSize","Point","Marker","zIndexOffset","curves","setAttribute","getCurveOptions","fill","delay","totalCO2Traceability","toFixed","Map","center","minZoom","scrollWheelZoom","maxBounds","maxBoundsViscosity","getBottomRef","whenCreated","TileLayer","attribution","url","spaceBetween","slidesPerView","centeredSlides","activeIndex","onSwiper","toRadian","degree","PI","origin","destination","distance","lon1","lon2","deltaLat","deltaLon","a","pow","sin","cos","asin","sqrt","getDistance","latlng1","latlng2","offsetX","offsetY","r","theta","atan2","r2","theta2","midpointX","RenderColor","labelLevel","ecoscore_score","Environnement","width","showTransport","materials","getColor","note","getColorImpact","getLabel","getLabelImpact","getLabelImpactPackaging","getColorImpactPackaging","dataEcoScore","adjustments","packaging","packagings","recyclable","recycling","material","ecoscore_material_score","innerWidth","displayCO2Repartition","pourcentage","nbKg","percentage","strokeWidth","fontSize","primaryColor","displayRepartitionAllItems","html_agriculture","html_transport","html_consommation","html_distribution","html_packaging","html_processing","html_total","agribalyse","co2_agriculture","co2_total","co2_transportation","co2_consumption","co2_distribution","co2_packaging","co2_processing","handleShowTransport","displayTransportImpact","agribalyse_CO2","transportation_score","transport_final_indicator","n","origins_of_ingredients","value_fr","co2_impact_html","transportation_score_html","displayTranportImpact","displayPackagingDetailImpact","filter","pos","indexOf","separator","displayPackagingImpact","alternativesloop","alternativesList","alternatives","href","image_url","product_name","hmtl_suggestion","alternatives_title","ecoScore","Product","match","params","productImageUrl","genericName","connected","productData","cart","isFlipping","component","bottomComponent","loadHistory","loadFromOpenFoodFacts","loadProductInformations","handleBarCodeUpdate","traceability","impact","transportCO2Impact","loadAlternatives","code","score","generic_name","ecoscore_grade","ecoscore_data","status","saveHistory","scoreSearch","categories_properties","Authorization","success","quantity","body","bcProductAddress","exist","find","element","brands","setItem","addToCart","co2","ecoscore","flip","quantityDelta","carbonImpact","removeFromCart","event","imageFlip","transform","displayImage","scoreClass","handleChange","newValue","displayNavbar","retour","sort","b","depth","ms","Promise","setTimeout","Profil","disconnect","clear","displayConnectedProfil","displayUnconnectedProfil","ButtonSignup","validEmail","RegExp","Signup","userName","email","password","confirmPassword","errors","redirect","submit","signUser","username","_id","handleSubmit","e","preventDefault","validate","displayErrors","test","onChange","evt","target","passwordConfirm","ButtonSignin","Signin","Connect","loginSuccessful","err","onPasswordChange","passwordInput","emailInput","ButtonChangePassword","USERS","ProfileConfiguration","currentPassword","newPassword","user","changeUserInfo","loadUserInfo","placeholder","DoughnutChartEcoScore","selectedSegment","displayChart","chart","ecoScoreData","cartedProduct","title","c","d","unknown","lineWidth","paddingAngle","radius","PieChart","defaultProps","animationDuration","dataEntry","labelStyle","fontFamily","labelPosition","segmentsStyle","cursor","segmentsShift","monthNames","BarChartCarbonImpact","toolbar","show","dropShadow","enabled","blur","plotOptions","bar","borderRadius","horizontal","xaxis","categories","labels","fontColor","text","yaxis","dataLabels","noData","colors","grid","lines","carbonImpactData","now","dataSize","unit","setHours","setDate","getDate","getDay","yearStart","getFullYear","ceil","getMonth","year","monthNum","toString","series","sortedData","offset","finalValue","nbProducts","Statistics","scannedProduct","loadUserData","loadEcoScoreData","loadCarbonImpactData","typeAggregate","statistics","displayStats","Scanner","_onDetected","result","onDetected","Quagga","init","inputStream","constraints","facingMode","locator","patchSize","halfSample","numOfWorkers","decoder","readers","debug","drawBoundingBox","showFrequency","drawScanline","showPattern","multiple","locate","start","offDetected","Scan_home","scanning","results","_scan","codeResult","format","App","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.89c14101.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/fruits-vegetables-basket-by-oblik-studio.7d5e1c64.svg\";","import \"./ButtonNavBar.css\";\n\nfunction ButtonHistory() {\n\treturn (\n\t\t<div>\n\t\t\t<div className=\"button-logo\">\n\t\t\t\t<span class=\"material-icons\">history</span>\n\t\t\t</div>\n\t\t\t<div>Historique</div>\n\t\t</div>\n\t);\n}\n\nexport default ButtonHistory;\n","function ButtonProfil() {\n\treturn (\n\t\t<div>\n\t\t\t<div>\n\t\t\t\t<span class=\"material-icons\">person</span>\n\t\t\t</div>\n\t\t\t<div>Profil</div>\n\t\t</div>\n\t);\n}\n\nexport default ButtonProfil;\n","import { React } from \"react\";\n\nfunction ButtonScan() {\n\treturn (\n\t\t<div>\n\t\t\t<div className=\"navbar-scan-icon\">\n\t\t\t\t<span class=\"material-icons\">qr_code_scanner</span>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nexport default ButtonScan;\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport {\n\tconfigure,\n\tBarcodePicker as ScanditSDKBarcodePicker,\n} from \"scandit-sdk\";\nimport \"./Scan.css\";\nimport { motion, AnimatePresence } from \"framer-motion\";\n\n// Configure the library and activate it with a license key\nconst configurationPromise = configure(\n\t\"ASHf6Cx7DGz5BbkR5RWee94Ezm55DtkCAFB5HoNVQLhPf8gUhk8ypmZ72tbfAdIo33/I2gZR9pcXcdBwQGyYu69PkahqLA0dEEN5WFtpVEjMfQMiBhwmRWIJQgn+E54DiwJm/5CjsV1+Uy7AJWXnvrLiuwxG2D/b7b1QoPFJfkKp2OSreWJXnV/kJ+rtqFyNOu2wQb5Rq5IFXOU/tnjlTvJp8Kxl4jezOVoWlQZreaLKfxfBforPArJErC16cldrqFULYUdsPqb4Vn27hWUmPQTfaX/SbeDCl1h++IPmcvRpzwM9hY0ti7zzfhBKg3TgEYTMiPUipakmM21mU92xYjA9kmKO6bOjzY4XqyrWBUzv/C1TwJfK1aZDDLH8BOmqqJILi2Ty9fN84y09vBgv0dfXhQa3Q0/UW0Hnv0Xge2am3RY5dmE6pfWaxYyA3fDj920DpnlUNcAsfdErnvpZz8H1eftw6D2w3ps6q3jNFc/CTkALFZOk9Sy2u+lOfzvjKrcz5d1yoSo1sVhFsLWNUoaoHTP6NPnQaawC1YwPRp90T+2yNfx+iESAhn3qfn2pOEpBG0rHdZNLLj1yeNJU9Pjt7dznNeCJwG2SzSQvPZU5HzLuIu+siWjUPStB9WWMfVluWN3opv+ReRWBjBsaRFPBmit6LNbRk3QLT6To50yVZg8Zy1NuDFUoE+Ms2ytVn9fs30n1DeNYJLCWjQJ4ktQaz2mIFTOFvRVrJqPkTBwzOaAjWoPxOr097hga8bRhPAqV6ir7ojSffUeCjL/jmp1x1uSE4OaQe3Y32oC0XOVJqA==\",\n\t{\n\t\tengineLocation: \"https://cdn.jsdelivr.net/npm/scandit-sdk@5.x/build/\",\n\t}\n).catch((error) => {\n\talert(error);\n});\n\nconst style = {\n\tposition: \"absolute\",\n\ttop: \"0\",\n\tbottom: \"0\",\n\tleft: \"0\",\n\tright: \"0\",\n\tmargin: \"auto\",\n\tmaxWidth: \"1280px\",\n\tmaxHeight: \"80%\",\n};\n\nclass Scan extends Component {\n\tstatic propTypes = {\n\t\tvisible: PropTypes.bool,\n\t\tplaySoundOnScan: PropTypes.bool,\n\t\tvibrateOnScan: PropTypes.bool,\n\t\tscanningPaused: PropTypes.bool,\n\t\tguiStyle: PropTypes.string,\n\t\tvideoFit: PropTypes.string,\n\t\tscanSettings: PropTypes.object,\n\t\tenableCameraSwitcher: PropTypes.bool,\n\t\tenableTorchToggle: PropTypes.bool,\n\t\tenableTapToFocus: PropTypes.bool,\n\t\tenablePinchToZoom: PropTypes.bool,\n\t\taccessCamera: PropTypes.bool,\n\t\tcamera: PropTypes.object,\n\t\tcameraSettings: PropTypes.object,\n\t\ttargetScanningFPS: PropTypes.number,\n\t\tonScan: PropTypes.func,\n\t\tonError: PropTypes.func,\n\t};\n\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.ref = React.createRef();\n\t}\n\n\tcomponentDidMount() {\n\t\tconfigurationPromise.then(() => {\n\t\t\tScanditSDKBarcodePicker.create(this.ref.current, this.props).then(\n\t\t\t\t(barcodePicker) => {\n\t\t\t\t\tthis.barcodePicker = barcodePicker;\n\n\t\t\t\t\tif (this.props.onScan != null) {\n\t\t\t\t\t\tbarcodePicker.on(\"scan\", this.props.onScan);\n\t\t\t\t\t}\n\t\t\t\t\tif (this.props.onError != null) {\n\t\t\t\t\t\tbarcodePicker.on(\"scanError\", this.props.onError);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t);\n\t\t});\n\t}\n\n\tcomponentWillUnmount() {\n\t\tif (this.barcodePicker != null) {\n\t\t\tthis.barcodePicker.destroy();\n\t\t}\n\t}\n\n\tcomponentDidUpdate(prevProps) {\n\t\t// These are just some examples of how to react to some possible property changes\n\n\t\tif (\n\t\t\tJSON.stringify(prevProps.scanSettings) !==\n\t\t\tJSON.stringify(this.props.scanSettings)\n\t\t) {\n\t\t\tthis.barcodePicker.applyScanSettings(this.props.scanSettings);\n\t\t}\n\n\t\tif (prevProps.visible !== this.props.visible) {\n\t\t\tthis.barcodePicker.setVisible(this.props.visible);\n\t\t}\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<AnimatePresence exitBeforeEnter={true}>\n\t\t\t\t<motion.div\n\t\t\t\t\tid=\"background-scan\"\n\t\t\t\t\tinitial={{ bottom: \"-1000px\" }}\n\t\t\t\t\tanimate={{ bottom: \"0px\" }}\n\t\t\t\t\ttransition={{ duration: 0.5 }}\n\t\t\t\t\texit={{ bottom: \"-1000px\" }}\n\t\t\t\t>\n\t\t\t\t\t<div ref={this.ref} style={style} />\n\t\t\t\t\t<span\n\t\t\t\t\t\tclass=\"close\"\n\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\tthis.props.onCrossClicked(false);\n\t\t\t\t\t\t}}\n\t\t\t\t\t>\n\t\t\t\t\t\t&times;\n\t\t\t\t\t</span>\n\t\t\t\t\t<div id=\"scandit-barcode-picker\"></div>\n\t\t\t\t</motion.div>\n\t\t\t</AnimatePresence>\n\t\t);\n\t}\n}\n\nexport default Scan;\n","import \"./Navbar.css\";\nimport React from \"react\";\nimport ButtonHistory from \"../Button/ButtonHistory\";\nimport ButtonProfil from \"../Button/ButtonProfil\";\nimport ButtonScan from \"../Button/ButtonScan\";\nimport Scan from \"../Scan/Scan\";\nimport { ScanSettings } from \"scandit-sdk\";\nimport { Redirect, Link } from \"react-router-dom\";\n\nclass Navbar extends React.Component {\n\tstate = {\n\t\tshowScanner: false,\n\t\tbarcode: undefined,\n\t\tbcProductId: undefined,\n\t\theight: 0,\n\t};\n\n\tcomponentDidMount() {\n\t\tthis.updateWindowDimensions();\n\t\twindow.addEventListener(\"resize\", this.updateWindowDimensions);\n\t}\n\n\tcomponentWillUnmount() {\n\t\twindow.removeEventListener(\"resize\", this.updateWindowDimensions);\n\t}\n\n\tupdateWindowDimensions = () => {\n\t\tthis.setState({ height: window.innerHeight });\n\t};\n\n\thandleScannerButton = (bool) => {\n\t\tthis.setState({ showScanner: bool });\n\t};\n\n\thandleBarcode = (res) => {\n\t\tif (res) {\n\t\t\t//détecté par barcode scanner\n\t\t\tlet arr = res.split(\"/\");\n\t\t\tif (arr.length > 1) {\n\t\t\t\tthis.setState({\n\t\t\t\t\tbarcode: arr[4],\n\t\t\t\t\tbcProductId: arr[5],\n\t\t\t\t\tshowScanner: false,\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tthis.setState({\n\t\t\t\t\tbarcode: arr[0],\n\t\t\t\t\tshowScanner: false,\n\t\t\t\t\tbcProductId: undefined,\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t};\n\n\trender = () => {\n\t\tif (this.state.height < 550) {\n\t\t\treturn <React.Fragment />;\n\t\t}\n\t\tif (\n\t\t\tthis.state.barcode &&\n\t\t\tthis.state.bcProductId &&\n\t\t\t(this.props.barcode !== this.state.barcode ||\n\t\t\t\tthis.props.bcProductId !== this.state.bcProductId)\n\t\t) {\n\t\t\treturn (\n\t\t\t\t<Redirect\n\t\t\t\t\tto={\n\t\t\t\t\t\t\"/products/\" +\n\t\t\t\t\t\tthis.state.barcode +\n\t\t\t\t\t\t\"/\" +\n\t\t\t\t\t\tthis.state.bcProductId\n\t\t\t\t\t}\n\t\t\t\t/>\n\t\t\t);\n\t\t}\n\n\t\tif (this.state.barcode && this.props.barcode !== this.state.barcode) {\n\t\t\treturn <Redirect to={\"/products/\" + this.state.barcode} />;\n\t\t}\n\n\t\tif (!this.state.showScanner) {\n\t\t\treturn (\n\t\t\t\t<React.Fragment>\n\t\t\t\t\t<div className=\"navbar-container\">\n\t\t\t\t\t\t<Link\n\t\t\t\t\t\t\tto=\"/history\"\n\t\t\t\t\t\t\tclassName={\n\t\t\t\t\t\t\t\twindow.location.pathname == \"/history\"\n\t\t\t\t\t\t\t\t\t? \"navbar-link navbar-text-left navbar-selected\"\n\t\t\t\t\t\t\t\t\t: \"navbar-link navbar-text-left \"\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<ButtonHistory />\n\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t<div onClick={() => this.handleScannerButton(true)}>\n\t\t\t\t\t\t\t<div className=\"navbar-circle\">\n\t\t\t\t\t\t\t\t<ButtonScan />\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<span className=\"navbar-scan-text\">Scan</span>\n\t\t\t\t\t\t<Link\n\t\t\t\t\t\t\tto=\"/profil\"\n\t\t\t\t\t\t\tclassName={\n\t\t\t\t\t\t\t\twindow.location.pathname == \"/profil\"\n\t\t\t\t\t\t\t\t\t? \"navbar-link navbar-text-right navbar-selected\"\n\t\t\t\t\t\t\t\t\t: \"navbar-link navbar-text-right \"\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<ButtonProfil />\n\t\t\t\t\t\t</Link>\n\t\t\t\t\t</div>\n\t\t\t\t</React.Fragment>\n\t\t\t);\n\t\t} else {\n\t\t\treturn (\n\t\t\t\t<Scan\n\t\t\t\t\tonCrossClicked={this.handleScannerButton}\n\t\t\t\t\t// playSoundOnScan={true}\n\t\t\t\t\tvibrateOnScan={true}\n\t\t\t\t\tenableTorchToggle={true}\n\t\t\t\t\tenablePinchToZoom={true}\n\t\t\t\t\tenableCameraSwitcher={true}\n\t\t\t\t\tguiStyle={\"viewfinder\"}\n\t\t\t\t\tscanSettings={\n\t\t\t\t\t\tnew ScanSettings({\n\t\t\t\t\t\t\tenabledSymbologies: [\n\t\t\t\t\t\t\t\t\"qr\",\n\t\t\t\t\t\t\t\t\"ean8\",\n\t\t\t\t\t\t\t\t\"ean13\",\n\t\t\t\t\t\t\t\t\"upca\",\n\t\t\t\t\t\t\t\t\"upce\",\n\t\t\t\t\t\t\t\t\"code128\",\n\t\t\t\t\t\t\t\t\"code39\",\n\t\t\t\t\t\t\t\t\"code93\",\n\t\t\t\t\t\t\t\t\"itf\",\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\tcodeDuplicateFilter: 1000,\n\t\t\t\t\t\t})\n\t\t\t\t\t}\n\t\t\t\t\tonScan={(scanResult) => {\n\t\t\t\t\t\tconsole.log(scanResult.barcodes[0].data);\n\t\t\t\t\t\tthis.handleBarcode(scanResult.barcodes[0].data);\n\t\t\t\t\t}}\n\t\t\t\t\tonError={(error) => {\n\t\t\t\t\t\tconsole.error(error.message);\n\t\t\t\t\t}}\n\t\t\t\t/>\n\t\t\t);\n\t\t}\n\t};\n}\n\nexport default Navbar;\n","export default __webpack_public_path__ + \"static/media/logo.b235ef42.svg\";","export default __webpack_public_path__ + \"static/media/bitmap.6f490d5b.png\";","import './Header.css';\nimport logo from '../../assets/images/logo.svg';\nimport blob from \"../../assets/images/bitmap.png\";\n\nfunction Header() {\n  return (\n    <div>\n      <div>\n\t\t\t\t\t\t<img src={blob} className=\"blob-top\" alt=\"Blob\" />\n\t\t\t\t</div>\n        <div>\n          <img src={blob} className=\"blob-left\" alt=\"Blob\" />\n        </div>\n        <div>\n          <img src={blob} className=\"blob-right\" alt=\"Blob\" />\n        </div>\n      <div className=\"header-container\">\n        <img src={logo} className=\"header-logo\" alt=\"Logo\"/>\n        <span>Lowympact</span>\n      </div>\n    </div>\n  );\n}\n\nexport default Header;","import { React, Component, Fragment } from \"react\";\nimport fruits from \"../assets/images/fruits-vegetables-basket-by-oblik-studio.svg\";\nimport Navbar from \"../components/Navbar/Navbar\";\nimport Header from \"../components/Header/Header\";\nimport \"./History.css\";\n// import { ITEMS } from \"../assets/scanned/items\";\nimport { Link } from \"react-router-dom\";\nimport { motion } from \"framer-motion\";\n\nfunction RenderHistoryItem({ item }) {\n    var labelColor;\n    if (item.label === \"d\" || item.label === \"e\") {\n        labelColor = \"red\";\n    } else if (item.label === \"c\") {\n        labelColor = \"yellow\";\n    } else if (item.label === \"a\" || item.label === \"b\") {\n        labelColor = \"green\";\n    }\n\n    var pathProduct = \"/products/\" + item.barcode;\n    if (item.bcProductId) {\n        pathProduct += \"/\" + item.bcProductId;\n    }\n\n    // Mock Soutenance\n    if (item.barcode === \"80135463\") {\n        item.name = \"Nutella 200g\";\n    }\n\n    return (\n        <motion.div initial={{ opacity: 0 }} animate={{ opacity: 1 }} exit={{ opacity: 0 }}>\n            <Link className=\"history-item\" to={pathProduct}>\n                <div className=\"history-img-container\">\n                    <img src={item.image} alt=\"\" />\n                </div>\n                <div className=\"history-name-container\">\n                    <div className=\"history-name\">{item.name}</div>\n                    <div className=\"history-brand\">{item.brand}</div>\n                </div>\n                <div className=\"history-label-container\">\n                    <div style={{ color: labelColor }}>●</div>\n                    <div className=\"history-label\">\n                        {item.label == \"not-applicable\" ? \"\" : item.label}\n                    </div>\n                </div>\n                <div style={{ marginRight: \"10px\", color: \"rgb(41,72,102)\" }}>{\">\"}</div>\n            </Link>\n        </motion.div>\n    );\n}\n\nclass History extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            items: undefined,\n            loading: true,\n            userId: undefined,\n        };\n    }\n\n    componentDidMount = () => {\n        let userId = localStorage.getItem(\"userId\");\n        let token = localStorage.getItem(\"token\");\n        if (userId && token) {\n            this.setState({ userId: userId });\n            this.loadHistoryInformations(userId);\n        } else {\n            this.loadLocalStorageHistory(userId);\n        }\n    };\n\n    loadHistoryInformations = (userId) => {\n        fetch(\n            `https://api.lowympact.fr/api/v1/users/${userId}/history`,\n            // `http://localhost:8080/api/v1/users/${userId}/history`,\n\n            {\n                method: \"get\",\n                credentials: \"include\",\n                headers: new Headers({\n                    authorization: localStorage.getItem(\"token\"),\n                    \"Content-Type\": \"application/json\",\n                    \"api-key\": \"99d8fb95-abdd-4885-bf6c-3a81d8874043\",\n                }),\n            }\n        )\n            .then((response) => response.json())\n            .then((res) => {\n                console.log(res);\n\n                this.setState({\n                    items: res?.data,\n                    loading: false,\n                });\n            });\n    };\n\n    loadLocalStorageHistory = () => {\n        let history = JSON.parse(localStorage.getItem(\"local_history\"));\n        this.setState({\n            items: history,\n            loading: false,\n        });\n    };\n\n    render() {\n        if (this.state.items) {\n            let itemList = <Fragment />;\n            if (!this.loading) {\n                itemList = this.state.items.map((item) => {\n                    return (\n                        <div key={item.id}>\n                            <RenderHistoryItem item={item} />\n                        </div>\n                    );\n                });\n            } else {\n                itemList = (\n                    <div className=\"loader\">\n                        <img src=\"/images/utils/loading.gif\" alt=\"\" />\n                    </div>\n                );\n            }\n\n            if (Object.keys(this.state.items).length === 0)\n                return (\n                    <div>\n                        <Header />\n                        <Navbar />\n                        <motion.div\n                            className=\"App\"\n                            initial={{ opacity: 0 }}\n                            animate={{ opacity: 1 }}\n                            exit={{ opacity: 0 }}\n                        >\n                            <div>\n                                <img src={fruits} className=\"logo\" alt=\"Fruits\" />\n                                <p className=\"logo-text\">Commence à scanner des produits !</p>\n                            </div>\n                        </motion.div>\n                    </div>\n                );\n            else\n                return (\n                    <div>\n                        <div className=\"screen\">\n                            <div className=\"screen-title\"></div>\n                            {itemList}\n                        </div>\n                        <Header />\n                        <Navbar />\n                    </div>\n                );\n        } else {\n            let image = (\n                <div>\n                    <img src={fruits} className=\"logo\" alt=\"Fruits\" />\n                    <p className=\"logo-text\">Commence à scanner des produits !</p>\n                </div>\n            );\n            if (this.state.loading) {\n                image = (\n                    <div className=\"loader\">\n                        <img src=\"/images/utils/loading.gif\" alt=\"\" />\n                    </div>\n                );\n            }\n            return (\n                <div>\n                    <Header />\n                    <Navbar />\n                    <motion.div\n                        className=\"App\"\n                        initial={{ opacity: 0 }}\n                        animate={{ opacity: 1 }}\n                        exit={{ opacity: 0 }}\n                    >\n                        {image}\n                    </motion.div>\n                </div>\n            );\n        }\n    }\n}\n\nexport default History;\n","import logo from \"../assets/images/logo.svg\";\nimport { Link } from \"react-router-dom\";\n\nfunction Error404() {\n\treturn (\n\t\t<div className=\"App\">\n\t\t\t<header className=\"App-header\">\n\t\t\t\t<img src={logo} className=\"logo\" alt=\"logo\" />\n\t\t\t\t<h1>Erreur 404</h1>\n\t\t\t\t<Link to=\"/\">Retourner à l'accueil</Link>\n\t\t\t</header>\n\t\t</div>\n\t);\n}\n\nexport default Error404;\n","import '../../pages/Login.css';\nfunction ButtonCreateAccount() {\n    return (\n      <div>\n        Créer un compte\n      </div>\n    );\n  }\n  export default ButtonCreateAccount;\n","\nfunction ButtonLogin() {\n    return (\n      <div>\n        Me connecter\n      </div>\n    );\n  }\n  export default ButtonLogin;","function ButtonNoAccount() {\n\treturn <div>Continuer sans compte {\">\"}</div>;\n}\nexport default ButtonNoAccount;\n","import React from \"react\";\nimport logo from \"../assets/images/logo.svg\";\nimport fruits from \"../assets/images/fruits-vegetables-basket-by-oblik-studio.svg\";\nimport \"./Login.css\";\nimport ButtonCreateAccount from \"../components/Button/ButtonCreateAccount\";\nimport ButtonLogin from \"../components/Button/ButtonLogin\";\nimport { Link } from \"react-router-dom\";\nimport ButtonNoAccount from \"../components/Button/ButtonNoAccount\";\nimport jwt from \"jsonwebtoken\";\nimport { motion } from \"framer-motion\";\n\nclass Login extends React.Component {\n\tcomponentDidMount = () => {\n\t\tthis.Verify();\n\t};\n\n\tVerify = () => {\n\t\tlet isExpired = true;\n\t\tconst token = localStorage.getItem(\"token\");\n\t\tif (token) {\n\t\t\tvar decodedToken = jwt.decode(token, { complete: true });\n\t\t\tvar dateNow = new Date();\n\t\t\tconsole.log(decodedToken, dateNow.getTime() / 1000);\n\t\t\tif (decodedToken.payload.exp >= dateNow.getTime() / 1000) {\n\t\t\t\tisExpired = false;\n\t\t\t}\n\t\t}\n\t\tif (isExpired === false) {\n\t\t\tconsole.log(\"here\");\n\t\t\tthis.props.history.push(`/history`); // redirection vers la page login\n\t\t}\n\t};\n\trender = () => {\n\t\treturn (\n\t\t\t<motion.div exit={{ opacity: 0 }}>\n\t\t\t\t<div className=\"login-logo\">\n\t\t\t\t\t<img src={logo} className=\"logo\" alt=\"Logo\" />\n\t\t\t\t</div>\n\t\t\t\t<div className=\"login-lowympact\">Lowympact</div>\n\t\t\t\t<Link to=\"/signup\" className=\"button-account\">\n\t\t\t\t\t<ButtonCreateAccount />\n\t\t\t\t</Link>\n\t\t\t\t<Link to=\"/signin\" className=\"button-connect\">\n\t\t\t\t\t<ButtonLogin />\n\t\t\t\t</Link>\n\t\t\t\t<Link to=\"/history\" className=\"button-no-account\">\n\t\t\t\t\t<ButtonNoAccount />\n\t\t\t\t</Link>\n\t\t\t\t<div className=\"logo-fruits\">\n\t\t\t\t\t<img src={fruits} className=\"logo\" alt=\"Fruits\" />\n\t\t\t\t</div>\n\t\t\t</motion.div>\n\t\t);\n\t};\n}\nexport default Login;\n","import L from \"leaflet\";\n\nL.Curve = L.Path.extend({\n\toptions: {},\n\n\tinitialize: function (path, options) {\n\t\t//1\n\t\tL.setOptions(this, options);\n\t\tthis._initialUpdate = true;\n\t\tthis._setPath(path);\n\t},\n\n\tgetPath: function () {\n\t\treturn this._coords;\n\t},\n\n\tsetPath: function (path, options) {\n\t\tthis._initialUpdate = true;\n\t\tthis._setPath(path);\n\t\treturn this.redraw();\n\t},\n\n\tgetBounds: function () {\n\t\treturn this._bounds;\n\t},\n\n\t_setPath: function (path) {\n\t\t//2\n\t\tthis._coords = path;\n\t\tthis._bounds = this._computeBounds();\n\t},\n\n\t_computeBounds: function () {\n\t\t//3\n\t\tvar bound = new L.LatLngBounds();\n\t\tvar lastPoint;\n\t\tvar lastCommand;\n\t\tvar coord;\n\t\tfor (var i = 0; i < this._coords.length; i++) {\n\t\t\tcoord = this._coords[i];\n\t\t\tif (typeof coord == \"string\" || coord instanceof String) {\n\t\t\t\tlastCommand = coord;\n\t\t\t} else if (lastCommand == \"H\") {\n\t\t\t\tbound.extend([lastPoint.lat, coord[0]]);\n\t\t\t\tlastPoint = new L.latLng(lastPoint.lat, coord[0]);\n\t\t\t} else if (lastCommand == \"V\") {\n\t\t\t\tbound.extend([coord[0], lastPoint.lng]);\n\t\t\t\tlastPoint = new L.latLng(coord[0], lastPoint.lng);\n\t\t\t} else if (lastCommand == \"C\") {\n\t\t\t\tvar controlPoint1 = new L.latLng(coord[0], coord[1]);\n\t\t\t\tcoord = this._coords[++i];\n\t\t\t\tvar controlPoint2 = new L.latLng(coord[0], coord[1]);\n\t\t\t\tcoord = this._coords[++i];\n\t\t\t\tvar endPoint = new L.latLng(coord[0], coord[1]);\n\n\t\t\t\tbound.extend(controlPoint1);\n\t\t\t\tbound.extend(controlPoint2);\n\t\t\t\tbound.extend(endPoint);\n\n\t\t\t\tendPoint.controlPoint1 = controlPoint1;\n\t\t\t\tendPoint.controlPoint2 = controlPoint2;\n\t\t\t\tlastPoint = endPoint;\n\t\t\t} else if (lastCommand == \"S\") {\n\t\t\t\tvar controlPoint2 = new L.latLng(coord[0], coord[1]);\n\t\t\t\tcoord = this._coords[++i];\n\t\t\t\tvar endPoint = new L.latLng(coord[0], coord[1]);\n\n\t\t\t\tvar controlPoint1 = lastPoint;\n\t\t\t\tif (lastPoint.controlPoint2) {\n\t\t\t\t\tvar diffLat = lastPoint.lat - lastPoint.controlPoint2.lat;\n\t\t\t\t\tvar diffLng = lastPoint.lng - lastPoint.controlPoint2.lng;\n\t\t\t\t\tcontrolPoint1 = new L.latLng(\n\t\t\t\t\t\tlastPoint.lat + diffLat,\n\t\t\t\t\t\tlastPoint.lng + diffLng\n\t\t\t\t\t);\n\t\t\t\t}\n\n\t\t\t\tbound.extend(controlPoint1);\n\t\t\t\tbound.extend(controlPoint2);\n\t\t\t\tbound.extend(endPoint);\n\n\t\t\t\tendPoint.controlPoint1 = controlPoint1;\n\t\t\t\tendPoint.controlPoint2 = controlPoint2;\n\t\t\t\tlastPoint = endPoint;\n\t\t\t} else if (lastCommand == \"Q\") {\n\t\t\t\tvar controlPoint = new L.latLng(coord[0], coord[1]);\n\t\t\t\tcoord = this._coords[++i];\n\t\t\t\tvar endPoint = new L.latLng(coord[0], coord[1]);\n\n\t\t\t\tbound.extend(controlPoint);\n\t\t\t\tbound.extend(endPoint);\n\n\t\t\t\tendPoint.controlPoint = controlPoint;\n\t\t\t\tlastPoint = endPoint;\n\t\t\t} else if (lastCommand == \"T\") {\n\t\t\t\tvar endPoint = new L.latLng(coord[0], coord[1]);\n\n\t\t\t\tvar controlPoint = lastPoint;\n\t\t\t\tif (lastPoint.controlPoint) {\n\t\t\t\t\tvar diffLat = lastPoint.lat - lastPoint.controlPoint.lat;\n\t\t\t\t\tvar diffLng = lastPoint.lng - lastPoint.controlPoint.lng;\n\t\t\t\t\tcontrolPoint = new L.latLng(\n\t\t\t\t\t\tlastPoint.lat + diffLat,\n\t\t\t\t\t\tlastPoint.lng + diffLng\n\t\t\t\t\t);\n\t\t\t\t}\n\n\t\t\t\tbound.extend(controlPoint);\n\t\t\t\tbound.extend(endPoint);\n\n\t\t\t\tendPoint.controlPoint = controlPoint;\n\t\t\t\tlastPoint = endPoint;\n\t\t\t} else {\n\t\t\t\tbound.extend(coord);\n\t\t\t\tlastPoint = new L.latLng(coord[0], coord[1]);\n\t\t\t}\n\t\t}\n\t\treturn bound;\n\t},\n\n\t//TODO: use a centroid algorithm instead\n\tgetCenter: function () {\n\t\treturn this._bounds.getCenter();\n\t},\n\n\t_update: function () {\n\t\t//5\n\t\tif (!this._map) {\n\t\t\treturn;\n\t\t}\n\t\tthis._updatePath();\n\t},\n\n\t_updatePath: function () {\n\t\t//6\n\t\tthis._renderer._updatecurve(this);\n\t},\n\n\t_project: function () {\n\t\t//4\n\t\tvar coord, lastCoord, curCommand, curPoint;\n\n\t\tthis._points = [];\n\n\t\tfor (var i = 0; i < this._coords.length; i++) {\n\t\t\tcoord = this._coords[i];\n\t\t\tif (typeof coord == \"string\" || coord instanceof String) {\n\t\t\t\tthis._points.push(coord);\n\t\t\t\tcurCommand = coord;\n\t\t\t} else {\n\t\t\t\tswitch (coord.length) {\n\t\t\t\t\tcase 2:\n\t\t\t\t\t\tcurPoint = this._map.latLngToLayerPoint(coord);\n\t\t\t\t\t\tlastCoord = coord;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 1:\n\t\t\t\t\t\tif (curCommand == \"H\") {\n\t\t\t\t\t\t\tcurPoint = this._map.latLngToLayerPoint([\n\t\t\t\t\t\t\t\tlastCoord[0],\n\t\t\t\t\t\t\t\tcoord[0],\n\t\t\t\t\t\t\t]);\n\t\t\t\t\t\t\tlastCoord = [lastCoord[0], coord[0]];\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tcurPoint = this._map.latLngToLayerPoint([\n\t\t\t\t\t\t\t\tcoord[0],\n\t\t\t\t\t\t\t\tlastCoord[1],\n\t\t\t\t\t\t\t]);\n\t\t\t\t\t\t\tlastCoord = [coord[0], lastCoord[1]];\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tthis._points.push(curPoint);\n\t\t\t}\n\t\t}\n\t},\n});\n\nL.curve = function (path, options) {\n\treturn new L.Curve(path, options);\n};\n\nL.SVG.include({\n\t//7\n\t_updatecurve: function (layer) {\n\t\tthis._setPath(layer, this._curvePointsToPath(layer._points));\n\t\tif (layer.options.animate) {\n\t\t\tvar path = layer._path;\n\t\t\tvar length = path.getTotalLength();\n\n\t\t\tif (!layer.options.dashArray) {\n\t\t\t\tpath.style.strokeDasharray = length + \" \" + length;\n\t\t\t}\n\n\t\t\tif (layer._initialUpdate) {\n\t\t\t\tpath.animate(\n\t\t\t\t\t[{ strokeDashoffset: length }, { strokeDashoffset: 0 }],\n\t\t\t\t\tlayer.options.animate\n\t\t\t\t);\n\t\t\t\tlayer._initialUpdate = false;\n\t\t\t}\n\t\t}\n\t},\n\n\t_curvePointsToPath: function (points) {\n\t\tvar point,\n\t\t\tcurCommand,\n\t\t\tstr = \"\";\n\t\tfor (var i = 0; i < points.length; i++) {\n\t\t\tpoint = points[i];\n\t\t\tif (typeof point == \"string\" || point instanceof String) {\n\t\t\t\tcurCommand = point;\n\t\t\t\tstr += curCommand;\n\t\t\t} else {\n\t\t\t\tswitch (curCommand) {\n\t\t\t\t\tcase \"H\":\n\t\t\t\t\t\tstr += point.x + \" \";\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"V\":\n\t\t\t\t\t\tstr += point.y + \" \";\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tstr += point.x + \",\" + point.y + \" \";\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn str || \"M0 0\";\n\t},\n});\n","// import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Path, withLeaflet } from \"react-leaflet\";\nimport { curve } from \"./leaflet.curve\";\nimport L from \"leaflet\";\n\nclass Curve extends Path {\n\tcreateLeafletElement(props) {\n\t\tconst { positions, option, ...options } = props;\n\t\treturn L.curve(positions, option, this.getOptions(options));\n\t}\n\n\tupdateLeafletElement(fromProps, toProps) {\n\t\tif (toProps.positions !== fromProps.positions) {\n\t\t\tthis.leafletElement.setPath(toProps.positions);\n\t\t}\n\t\tthis.setStyleIfChanged(fromProps, toProps);\n\t}\n}\n\nCurve.propTypes = {\n\tchildren: PropTypes.oneOfType([\n\t\tPropTypes.arrayOf(PropTypes.node),\n\t\tPropTypes.node,\n\t]),\n\toption: PropTypes.object,\n\tpositions: PropTypes.array.isRequired,\n};\n\nexport default withLeaflet(Curve);\n\n/*\n  componentWillMount() {\n    super.componentWillMount();\n    const { positions, ...options } = this.props\n    this.leafletElement = L.curve(positions, this.getOptions(options))\n  }*/\n","import React from \"react\";\nimport { Map, TileLayer, Marker } from \"react-leaflet\";\nimport \"./Traceability.css\";\nimport { Swiper, SwiperSlide } from \"swiper/react\";\nimport { Curve } from \"./leaflet-curve\";\nimport L from \"leaflet\";\n// Import Swiper styles\nimport \"swiper/swiper-bundle.css\";\n\nclass Traceability extends React.Component {\n    map = undefined;\n    state = {\n        zoom: 12,\n        swiper: undefined,\n        currentIndex: 0,\n        map: undefined,\n    };\n\n    getMaterialIcon = (mode) => {\n        switch (mode) {\n            case \"Charette\":\n                return \"directions_bike\";\n            case \"Plane\":\n                return \"flight_takeoff\";\n            case \"Train\":\n                return \"train\";\n            case \"Boat\":\n                return \"directions_boat_filled\";\n            case \"Truck\":\n                return \"local_shipping\";\n            default:\n                return \"nature_people\";\n        }\n    };\n\n    getTransportMode = (mode) => {\n        switch (mode) {\n            case \"Charette\":\n                return \"vélo\";\n            case \"Plane\":\n                return \"avion\";\n            case \"Train\":\n                return \"train\";\n            case \"Boat\":\n                return \"bateau\";\n            case \"Truck\":\n                return \"camion\";\n            default:\n                return mode;\n        }\n    };\n    getTranslation = (mode) => {\n        switch (mode) {\n            case \"maker\":\n                return \"Fabricant\";\n            case \"productor\":\n                return \"Producteur\";\n            case \"shop\":\n                return \"Revendeur\";\n            default:\n                return mode;\n        }\n    };\n\n    displaySlides = () => {\n        let slides = <React.Fragment />;\n        if (this.props.products) {\n            slides = this.props.products.map((product) => {\n                let pastille = \"product-slide-pastille past-green\";\n                if (product.TransportCO2Impact?.value > 10) {\n                    pastille = \"product-slide-pastille past-orange\";\n                }\n                if (product.TransportCO2Impact?.value > 100) {\n                    pastille = \"product-slide-pastille past-red\";\n                }\n\n                return (\n                    <SwiperSlide>\n                        <div className=\"product-slide-container\">\n                            <div className=\"product-slide-icon\">\n                                <span class=\"material-icons\">\n                                    {this.getMaterialIcon(product.transport)}\n                                </span>\n\n                                <div className=\"product-slide-name\">\n                                    <span className=\"product-slide-name-product\">\n                                        {product.productsOutput[0].productName}\n                                    </span>\n                                    <span className=\"product-slide-name-transport\">\n                                        Transport en {this.getTransportMode(product.transport)}\n                                    </span>\n                                </div>\n                            </div>\n                            <div className=\"product-slide-origin-wrapper\">\n                                <div className=\"product-transport-ui\">\n                                    <div className=\"transport-ui-circle\"></div>\n                                    <div className=\"transport-ui-tiret\"></div>\n                                    <div className=\"transport-ui-circle circle-bis\"></div>\n                                </div>\n                                <div className=\"product-slide-transport-container\">\n                                    <div className=\"product-slide-bigname\">\n                                        <span>\n                                            {product.seller.localisation.city},{\" \"}\n                                            {product.seller.localisation.country}\n                                        </span>\n                                    </div>\n                                    <div className=\"product-slide-lowername2\">\n                                        {this.getTranslation(product.seller?.type)}\n                                        {\": \"}\n                                        {product.seller?.name}\n                                    </div>\n\n                                    <div className=\"product-slide-bigname bigname-lower\">\n                                        <span>\n                                            {product.buyer.localisation.city},{\" \"}\n                                            {product.buyer.localisation.country}\n                                        </span>\n                                    </div>\n                                    <div className=\"product-slide-lowername2\">\n                                        {this.getTranslation(product.buyer?.type)}\n                                        {\": \"}\n                                        {product.buyer?.name}\n                                    </div>\n                                </div>\n                            </div>\n                            <div className=\"product-slide-arrow\">{\">\"}</div>\n                            <div className=\"product-slide-consumption\">\n                                <div className={pastille}></div>\n                                <div>{Math.round(product.dist.value)} km </div>\n                                <div>\n                                    {product.TransportCO2Impact?.value > 1\n                                        ? Math.round(product.TransportCO2Impact?.value)\n                                        : \"< 1\"}{\" \"}\n                                    kg CO2{\" \"}\n                                </div>\n                            </div>\n                        </div>\n                    </SwiperSlide>\n                );\n            });\n        }\n        return slides;\n    };\n\n    handleMarkerClick = (latlng, index) => {\n        // window.scrollTo({ top: \"8000px\", behavior: \"smooth\" });\n        let elem = document.getElementsByClassName(\"swiper-container\");\n        if (elem[0]) {\n            elem[0].scrollIntoView({ behavior: \"smooth\" });\n        }\n        console.log(index);\n        if (index >= this.props.products?.length) {\n            this.state.swiper.slideTo(index - 1, 500);\n        } else {\n            this.state.swiper.slideTo(index, 500);\n        }\n        let zoom = 5;\n        if (this.props.products && this.props.products[index]) {\n            let p = this.props.products[index];\n            console.log(\n                [p.buyer.localisation.latitude, p.buyer.localisation.longitude],\n                [p.seller.localisation.latitude, p.seller.localisation.longitude]\n            );\n            zoom = getZoomRatio(\n                [p.buyer.localisation.latitude, p.buyer.localisation.longitude],\n                [p.seller.localisation.latitude, p.seller.localisation.longitude]\n            );\n        }\n        console.log(zoom);\n        this.map.leafletElement.flyTo(latlng, zoom, { duration: 0.5 });\n    };\n\n    onSlideChange = (index) => {\n        this.setState({ currentIndex: index });\n        let zoom = 5;\n        if (this.props.products && this.props.products[index]) {\n            let p = this.props.products[index];\n\n            zoom = getZoomRatio(\n                [p.buyer.localisation.latitude, p.buyer.localisation.longitude],\n                [p.seller.localisation.latitude, p.seller.localisation.longitude]\n            );\n\n            let lat =\n                (parseFloat(p.seller.localisation.latitude) +\n                    parseFloat(p.buyer.localisation.latitude)) /\n                2;\n            let long =\n                (parseFloat(p.seller.localisation.longitude) +\n                    parseFloat(p.buyer.localisation.longitude)) /\n                2;\n            console.log(zoom);\n            this.map.leafletElement.flyTo([lat, long], zoom, { duration: 0.5 });\n        }\n    };\n\n    displayMarker = () => {\n        let markers = <React.Fragment />;\n        if (this.props.products) {\n            markers = this.props.products.map((product, i) => {\n                let marker1 = <React.Fragment />;\n                let lat1 = parseFloat(product?.buyer?.localisation?.latitude);\n                let long1 = parseFloat(product?.buyer?.localisation?.longitude);\n                let marker2 = <React.Fragment />;\n                let lat2 = parseFloat(product?.seller?.localisation?.latitude);\n                let long2 = parseFloat(product?.seller?.localisation?.longitude);\n                let icon;\n                let icon2;\n                let zIndex = 0;\n                if (i === this.state.currentIndex) {\n                    icon = new L.Icon({\n                        iconUrl: \"/images/utils/map.png\", //require('../../images/logo/logo.svg'),\n                        iconRetinaUrl: \"/images/utils/map.png\", //\"/images/images_volume/1-l.png\", //require('../../images/logo/logo.svg'),\n                        iconSize: new L.Point(32, 32),\n                        className: \"leaflet-mark-icon\",\n                    });\n                    icon2 = new L.Icon({\n                        iconUrl: \"/images/utils/map.png\", //require('../../images/logo/logo.svg'),\n                        iconRetinaUrl: \"/images/utils/map3.png\", //\"/images/images_volume/1-l.png\", //require('../../images/logo/logo.svg'),\n                        iconSize: new L.Point(32, 32),\n                        className: \"leaflet-mark-icon\",\n                    });\n                    zIndex = 5;\n                } else {\n                    icon = new L.Icon({\n                        iconUrl: \"/images/utils/map2.png\", //require('../../images/logo/logo.svg'),\n                        iconRetinaUrl: \"/images/utils/map2.png\", //\"/images/images_volume/1-l.png\", //require('../../images/logo/logo.svg'),\n                        iconSize: new L.Point(25, 25),\n                        className: \"leaflet-mark-icon\",\n                    });\n                    icon2 = new L.Icon({\n                        iconUrl: \"/images/utils/map2.png\", //require('../../images/logo/logo.svg'),\n                        iconRetinaUrl: \"/images/utils/map2.png\", //\"/images/images_volume/1-l.png\", //require('../../images/logo/logo.svg'),\n                        iconSize: new L.Point(25, 25),\n                        className: \"leaflet-mark-icon\",\n                    });\n                }\n\n                if (lat1 && long1) {\n                    marker1 = (\n                        <Marker\n                            zIndexOffset={zIndex}\n                            icon={icon}\n                            position={[lat1, long1]}\n                            onClick={() =>\n                                this.handleMarkerClick(\n                                    [\n                                        parseFloat(product.buyer.localisation.latitude),\n                                        parseFloat(product.buyer.localisation.longitude),\n                                    ],\n                                    i + 1\n                                )\n                            }\n                        >\n                            {/* <Popup>{product.buyer.name}</Popup> */}\n                        </Marker>\n                    );\n                }\n                if (lat2 && long2) {\n                    marker2 = (\n                        <Marker\n                            zIndexOffset={zIndex}\n                            icon={icon2}\n                            position={[lat2, long2]}\n                            onClick={() =>\n                                this.handleMarkerClick(\n                                    [\n                                        parseFloat(product.seller.localisation.latitude),\n                                        parseFloat(product.seller.localisation.longitude),\n                                    ],\n                                    i\n                                )\n                            }\n                        >\n                            {/* <Popup>{product.seller.name}</Popup> */}\n                        </Marker>\n                    );\n                }\n\n                let color = \"#1b3044\";\n                let curves = document.getElementsByClassName(\"leaflet-interactive\");\n\n                if (curves && curves[i] && i === this.state.currentIndex) {\n                    curves[i].setAttribute(\"stroke\", \"#78be95\");\n                } else if (curves && curves[i]) {\n                    curves[i].setAttribute(\"stroke\", \"#1b3044\");\n                }\n\n                return (\n                    <React.Fragment>\n                        <div className=\"test\">\n                            <Curve\n                                positions={getCurveOptions(lat2, long2, lat1, long1)}\n                                option={{\n                                    color: color,\n                                    fill: false,\n                                    // animate: animate,\n                                    delay: 5000,\n                                }}\n                            />\n                        </div>\n                        {marker1}\n                        {marker2}\n                    </React.Fragment>\n                );\n            });\n        }\n        return markers;\n    };\n\n    render = () => {\n        return (\n            <div className=\"tracability-container\">\n                <div className=\"product-CO2-total-tracability-container\">\n                    <span className=\"product-CO2-total-tracability\">\n                        Impact total carbone :&nbsp;\n                        <span className=\"carbon-total-number\">\n                            {parseFloat(this.props.totalCO2Traceability).toFixed(1)}\n                        </span>\n                        kg CO2 soit &nbsp;\n                        <span className=\"carbon-total-number\">\n                            {parseFloat(\n                                ((this.props.totalCO2Traceability * 0.05) / 11.0) * 1000.0\n                            ).toFixed(1)}\n                        </span>\n                        kms parcourus en voiture\n                    </span>\n                </div>\n\n                <Map\n                    center={[51.505, -0.09]}\n                    zoom={1}\n                    minZoom={1}\n                    scrollWheelZoom={true}\n                    maxBounds={[\n                        [-90, -180],\n                        [90, 180],\n                    ]}\n                    maxBoundsViscosity={1}\n                    ref={(ref) => {\n                        this.map = ref;\n                        this.props.getBottomRef(ref);\n                    }}\n                    whenCreated={(map) => this.setState({ map })}\n                >\n                    <TileLayer\n                        attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a>'\n                        url=\"https://stamen-tiles-{s}.a.ssl.fastly.net/toner-background/{z}/{x}/{y}{r}.png\" //'https://maps.wikimedia.org/osm-intl/{z}/{x}/{y}{r}.png' //'https://{s}.tile.osm.org/{z}/{x}/{y}.png'\n                    />\n\n                    {this.displayMarker()}\n                </Map>\n                <Swiper\n                    spaceBetween={10}\n                    slidesPerView={1.2}\n                    centeredSlides={true}\n                    onSlideChange={(i) => this.onSlideChange(i.activeIndex)}\n                    onSwiper={(swiper) => this.setState({ swiper: swiper })}\n                >\n                    {this.displaySlides()}\n                </Swiper>\n            </div>\n        );\n    };\n}\n\nexport default Traceability;\n\nfunction getDistance(origin, destination) {\n    // return distance in meters\n    var lon1 = toRadian(origin[1]),\n        lat1 = toRadian(origin[0]),\n        lon2 = toRadian(destination[1]),\n        lat2 = toRadian(destination[0]);\n\n    var deltaLat = lat2 - lat1;\n    var deltaLon = lon2 - lon1;\n\n    var a =\n        Math.pow(Math.sin(deltaLat / 2), 2) +\n        Math.cos(lat1) * Math.cos(lat2) * Math.pow(Math.sin(deltaLon / 2), 2);\n    var c = 2 * Math.asin(Math.sqrt(a));\n    var EARTH_RADIUS = 6371;\n    return c; //* EARTH_RADIUS * 1000;\n}\n\nfunction toRadian(degree) {\n    return (degree * Math.PI) / 180;\n}\n\nfunction getZoomRatio(origin, destination) {\n    var distance = getDistance(origin, destination);\n    console.log(distance);\n    return 9 - Math.sqrt(distance * 150);\n}\n\nfunction getCurveOptions(lat1, long1, lat2, long2) {\n    var latlng1 = [lat1, long1],\n        latlng2 = [lat2, long2];\n\n    var offsetX = latlng2[1] - latlng1[1],\n        offsetY = latlng2[0] - latlng1[0];\n\n    var r = Math.sqrt(Math.pow(offsetX, 2) + Math.pow(offsetY, 2)),\n        theta = Math.atan2(offsetY, offsetX);\n\n    var thetaOffset = 3.14 / 10;\n\n    var r2 = r / 2 / Math.cos(thetaOffset),\n        theta2 = theta + thetaOffset;\n\n    var midpointX = r2 * Math.cos(theta2) + latlng1[1],\n        midpointY = r2 * Math.sin(theta2) + latlng1[0];\n\n    var midpointLatLng = [midpointY, midpointX];\n\n    return [\"M\", latlng1, \"Q\", midpointLatLng, latlng2];\n}\n\nfunction getChildElementIndex(node) {\n    return Array.prototype.indexOf.call(node.parentNode.children, node);\n}\n","export default __webpack_public_path__ + \"static/media/nutella.14ecd263.png\";","import React from \"react\";\nimport \"./Environnement.css\";\nimport { Swiper, SwiperSlide } from \"swiper/react\";\n// Import Swiper styles\nimport \"swiper/swiper-bundle.css\";\nimport { CircleProgress } from \"react-gradient-progress\";\n//import { PRODUCTS } from \"../../assets/alternatives/alternatives\";\nimport nutella from \"../../assets/images/nutella.png\";\nimport { Link } from \"react-router-dom\";\n\nfunction RenderColor({ item }) {\n    var labelColor;\n    var labelLevel;\n    if (item.ecoscore_score <= 33) {\n        labelColor = \"red\";\n        labelLevel = \"Mauvais\";\n    } else if (item.ecoscore_score > 33 && item.ecoscore_score < 67) {\n        labelColor = \"yellow\";\n        labelLevel = \"Moyen\";\n    } else {\n        labelColor = \"green\";\n        labelLevel = \"Bonne\";\n    }\n    return (\n        <div className=\"product-alternative-label-position\">\n            <div className=\"product-alternative-label\">\n                <div style={{ color: labelColor }}>●</div>\n                <div className=\"product-alternative-label-text\">{item.ecoscore_score}/100</div>\n            </div>\n            <div className=\"product-alternative-label-level \">{labelLevel}</div>\n        </div>\n    );\n}\n\nclass Environnement extends React.Component {\n    state = {\n        swiper: undefined,\n        currentIndex: 0,\n        width: undefined,\n        showTransport: false,\n        materials: [],\n    };\n\n    getMaterialIcon = (mode) => {\n        switch (mode) {\n            case \"Transformation\":\n                return \"transform\";\n            case \"Arrow\":\n                if (this.state.showTransport) return \"arrow_drop_up\";\n                else return \"arrow_drop_down\";\n            case \"Consommation\":\n                return \"microwave\";\n            case \"Distribution\":\n                return \"store\";\n            case \"Recyclable\":\n                return \"check_circle_outline\";\n            case \"Non recyclable\":\n                return \"highlight_off\";\n            case \"Truck\":\n                return \"local_shipping\";\n            case \"Packaging\":\n                return \"inventory_2\";\n            case \"Agriculture\":\n                return \"agriculture\";\n            case \"Transport\":\n                return \"local_shipping\";\n            default:\n                return \"view_in_ar\";\n        }\n    };\n\n    getColor = (note) => {\n        if (note > 67) {\n            return \"green\";\n        }\n        if (note <= 33) {\n            return \"red\";\n        }\n        return \"yellow\";\n    };\n\n    getColorImpact = (note) => {\n        if (note > 70) {\n            return \"green\";\n        }\n        if (note <= 40) {\n            return \"red\";\n        }\n        return \"yellow\";\n    };\n\n    getLabel = (note) => {\n        if (note > 67) {\n            return \"Bon\";\n        }\n        if (note <= 33) {\n            return \"Mauvais\";\n        }\n        return \"Moyen\";\n    };\n\n    getLabelImpact = (note) => {\n        if (note > 60) {\n            return \"Impact fort\";\n        }\n        if (note <= 30) {\n            return \"Impact faible\";\n        }\n        return \"Impact moyen\";\n    };\n\n    getLabelImpactPackaging = (note) => {\n        if (note > 2) {\n            return \"Impact faible\";\n        }\n        if (note < -2) {\n            return \"Impact fort\";\n        }\n        return \"Impact moyen\";\n    };\n\n    getColorImpactPackaging = (note) => {\n        if (note > 2) {\n            return \"green\";\n        }\n        if (note < -2) {\n            return \"red\";\n        }\n        return \"yellow\";\n    };\n\n    displaySlides = () => {\n        let slides = <React.Fragment></React.Fragment>;\n\n        if (\n            this.props.dataEcoScore &&\n            this.props.dataEcoScore?.adjustments?.packaging?.packagings.length >= 1\n        ) {\n            slides = this.props.dataEcoScore?.adjustments?.packaging?.packagings.map((data) => {\n                var recyclable = \"\";\n                if (data.recycling) {\n                    recyclable = data.recycling.split(\":\")[1];\n                }\n                if (recyclable && recyclable == \"recycle\") {\n                    recyclable = \"Recyclable\";\n                } else if (recyclable && recyclable == \"discard\") {\n                    recyclable = \"Non recyclable\";\n                } else {\n                    recyclable = \"\";\n                }\n\n                return (\n                    <div>\n                        <SwiperSlide>\n                            <div className=\"env-product-slide-container \">\n                                <div className=\"env-product-slide-icon\">\n                                    <span class=\"material-icons env-icon-label\">\n                                        {this.getMaterialIcon(\"\")}\n                                    </span>\n                                </div>\n                                <div className=\"env-product-slide-wrapper\">\n                                    <div className=\"product-slide-name\">\n                                        {data?.material.split(\":\")[1]}\n                                    </div>\n                                    <div className=\"product-ecoscore\">\n                                        Ecoscore : {data?.ecoscore_material_score}\n                                    </div>\n\n                                    <div className=\"env-history-label-container\">\n                                        <span\n                                            className=\"packaging-label-color\"\n                                            style={{\n                                                color: this.getColor(data?.ecoscore_material_score),\n                                            }}\n                                        >\n                                            ●\n                                        </span>\n                                        <div className=\"env-history-label\">\n                                            {this.getLabel(data?.ecoscore_material_score)}\n                                        </div>\n                                    </div>\n                                    <div className=\"product-slide-recyclable\">\n                                        {recyclable}\n                                        <div className=\"material-icons icon-label-recyclable\">\n                                            {this.getMaterialIcon(recyclable)}\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </SwiperSlide>\n                    </div>\n                );\n            });\n        }\n        return slides;\n\n        // return slides;\n    };\n\n    componentDidMount() {\n        this.updateWindowDimensions();\n        window.addEventListener(\"resize\", this.updateWindowDimensions);\n    }\n\n    componentWillUnmount() {\n        window.removeEventListener(\"resize\", this.updateWindowDimensions);\n    }\n\n    updateWindowDimensions = () => {\n        this.setState({ width: window.innerWidth });\n    };\n\n    displayCO2Repartition = (pourcentage, nbKg, type) => {\n        return (\n            <div className=\"product-co2-impact-container\">\n                <div className=\"product-co2-impact-header\">\n                    <div className=\"product-co2-impact-logo\">\n                        <div className=\"material-icons icon-label-co2-impact\">\n                            {this.getMaterialIcon(type)}\n                        </div>\n                    </div>\n                    <div className=\"product-co2-impact-title\">\n                        <div className=\"product-co2-impact-title-text\">CO2 {type}</div>\n                        <div className=\"product-co2-impact-title-label\">Répartition</div>\n                    </div>\n                </div>\n                <div className=\"product-co2-impact-content\">\n                    <div className=\"product-transport-impact-content-details-text\">\n                        {parseFloat(nbKg).toFixed(3)}kg C02 eq/kg produit\n                    </div>\n                    <div className=\"product-co2-impact-content-progress\">\n                        <CircleProgress\n                            percentage={parseFloat(pourcentage * 100).toFixed(1)}\n                            strokeWidth={window.innerWidth * (1.0 / 60.0)}\n                            width={window.innerWidth * (1.0 / 5.0)}\n                            fontSize={window.innerWidth * (1.0 / 25.0)}\n                            primaryColor={[\"#FF3333\", \"#33FF63\"]}\n                        />\n                    </div>\n                </div>\n            </div>\n        );\n    };\n\n    displayRepartitionAllItems = () => {\n        var html_agriculture = <React.Fragment></React.Fragment>;\n        var html_transport = <React.Fragment></React.Fragment>;\n        var html_consommation = <React.Fragment></React.Fragment>;\n        var html_distribution = <React.Fragment></React.Fragment>;\n        var html_packaging = <React.Fragment></React.Fragment>;\n        var html_processing = <React.Fragment></React.Fragment>;\n        var html_total = <React.Fragment></React.Fragment>;\n\n        if (this.props.dataEcoScore?.agribalyse?.co2_agriculture) {\n            html_agriculture = this.displayCO2Repartition(\n                this.props.dataEcoScore?.agribalyse?.co2_agriculture /\n                    this.props.dataEcoScore?.agribalyse?.co2_total,\n                this.props.dataEcoScore?.agribalyse?.co2_agriculture,\n                \"Agriculture\"\n            );\n        }\n        if (this.props.dataEcoScore?.agribalyse?.co2_transportation) {\n            html_transport = this.displayCO2Repartition(\n                this.props.dataEcoScore?.agribalyse?.co2_transportation /\n                    this.props.dataEcoScore?.agribalyse?.co2_total,\n                this.props.dataEcoScore?.agribalyse?.co2_transportation,\n                \"Transport\"\n            );\n        }\n\n        if (this.props.dataEcoScore?.agribalyse?.co2_consumption) {\n            html_consommation = this.displayCO2Repartition(\n                this.props.dataEcoScore?.agribalyse?.co2_consumption /\n                    this.props.dataEcoScore?.agribalyse?.co2_total,\n                this.props.dataEcoScore?.agribalyse?.co2_consumption,\n                \"Consommation\"\n            );\n        }\n\n        if (this.props.dataEcoScore?.agribalyse?.co2_distribution) {\n            html_distribution = this.displayCO2Repartition(\n                this.props.dataEcoScore?.agribalyse?.co2_distribution /\n                    this.props.dataEcoScore?.agribalyse?.co2_total,\n                this.props.dataEcoScore?.agribalyse?.co2_distribution,\n                \"Distribution\"\n            );\n        }\n\n        if (this.props.dataEcoScore?.agribalyse?.co2_packaging) {\n            html_packaging = this.displayCO2Repartition(\n                this.props.dataEcoScore?.agribalyse?.co2_packaging /\n                    this.props.dataEcoScore?.agribalyse?.co2_total,\n                this.props.dataEcoScore?.agribalyse?.co2_packaging,\n                \"Emballage\"\n            );\n        }\n\n        if (this.props.dataEcoScore?.agribalyse?.co2_processing) {\n            html_processing = this.displayCO2Repartition(\n                this.props.dataEcoScore?.agribalyse?.co2_processing /\n                    this.props.dataEcoScore?.agribalyse?.co2_total,\n                this.props.dataEcoScore?.agribalyse?.co2_processing,\n                \"Transformation\"\n            );\n        }\n\n        if (this.props.dataEcoScore?.agribalyse?.co2_total) {\n            html_total = (\n                <span className=\"product-CO2-total\">\n                    Impact carbone générique :&nbsp;\n                    <span className=\"carbon-total-number\">\n                        {parseFloat(this.props.dataEcoScore?.agribalyse?.co2_total).toFixed(3)}\n                    </span>\n                    kg C02 eq/kg produit\n                </span>\n            );\n        }\n\n        let res = (\n            <React.Fragment>\n                {html_total}\n                {html_agriculture}\n                {html_transport}\n                {html_consommation}\n                {html_distribution}\n                {html_packaging}\n                {html_processing}\n            </React.Fragment>\n        );\n\n        return res;\n    };\n\n    handleShowTransport = () => {\n        this.setState({ showTransport: !this.state.showTransport });\n    };\n\n    displayTransportImpact = () => {\n        let res = <React.Fragment></React.Fragment>;\n\n        var agribalyse_CO2 = undefined;\n        var transportation_score = undefined;\n        var transport_final_indicator = undefined;\n        var n = 0;\n\n        if (this.props.dataEcoScore?.agribalyse?.co2_transportation) {\n            agribalyse_CO2 = 0.5 * this.props.dataEcoScore?.agribalyse?.co2_transportation;\n            n += 1;\n        }\n\n        if (this.props.dataEcoScore?.adjustments?.origins_of_ingredients?.value_fr) {\n            transportation_score =\n                0.5 +\n                this.props.dataEcoScore?.adjustments?.origins_of_ingredients?.value_fr *\n                    (-1.0 / 40.0);\n            n += 1;\n        }\n        if (n > 0) {\n            if (!agribalyse_CO2) {\n                agribalyse_CO2 = 0;\n            }\n            if (!transportation_score) {\n                transportation_score = 0;\n            }\n            transport_final_indicator = (agribalyse_CO2 + transportation_score) / n;\n            if (transport_final_indicator > 1) {\n                transport_final_indicator = 1;\n            }\n            if (transport_final_indicator < 0) {\n                transport_final_indicator = 0;\n            }\n        }\n\n        let co2_impact_html = <React.Fragment></React.Fragment>;\n        let transportation_score_html = <React.Fragment></React.Fragment>;\n\n        if (agribalyse_CO2 > 0) {\n            co2_impact_html = (\n                <div className=\"product-transport-impact-content-details-text\">\n                    {parseFloat(this.props.dataEcoScore?.agribalyse?.co2_transportation).toFixed(3)}\n                    kg C02 eq/kg produit\n                </div>\n            );\n        }\n\n        if (transportation_score > 0) {\n            transportation_score_html = (\n                <div className=\"product-transport-impact-content-details-score\">\n                    Score environnemental du transport vers la France :\n                    <span\n                        style={{\n                            color: this.getColorImpact(100 - transportation_score * 100),\n                        }}\n                    >\n                        {Math.round(99 - transportation_score * 100)}\n                    </span>\n                    /100\n                </div>\n            );\n        }\n\n        if (!this.props.displayTranportImpact && transport_final_indicator) {\n            transport_final_indicator = Math.round(transport_final_indicator * 100);\n            return (\n                <div\n                    className=\"product-transport-impact-container\"\n                    onClick={this.handleShowTransport}\n                >\n                    <div className=\"product-transport-impact-header\">\n                        <div className=\"product-transport-impact-logo\">\n                            <div className=\"material-icons icon-label-transport-impact\">\n                                {this.getMaterialIcon(\"Truck\")}\n                            </div>\n                        </div>\n                        <div className=\"product-transport-impact-title\">\n                            <div className=\"product-transport-impact-title-text\">\n                                Impact du transport\n                            </div>\n                            <div className=\"product-transport-impact-title-label\">\n                                {this.getLabelImpact(transport_final_indicator)}\n                            </div>\n                        </div>\n                        <div\n                            className=\"product-transport-impact-color-label\"\n                            style={{\n                                color: this.getColorImpact(100 - transport_final_indicator),\n                            }}\n                        >\n                            ●\n                        </div>\n                    </div>\n                    <div className=\"arrow-container\">\n                        <div className=\"material-icons icon-label-arrow\">\n                            {this.getMaterialIcon(\"Arrow\")}\n                        </div>\n                    </div>\n\n                    <div\n                        className={\n                            this.state.showTransport ? \"animation-appear\" : \"animation-disappear\"\n                        }\n                    >\n                        <div className=\"product-transport-impact-content\">\n                            <div className=\"product-transport-impact-content-text\">\n                                Score total :\n                            </div>\n                            <div className=\"product-transport-impact-content-progress\">\n                                <CircleProgress\n                                    percentage={100 - transport_final_indicator}\n                                    strokeWidth={window.innerWidth * (1.0 / 50.0)}\n                                    width={window.innerWidth * (1.0 / 4.0)}\n                                    fontSize={0}\n                                    primaryColor={[\"#33FF63\", \"#FF3333\"]}\n                                />\n                                <span className=\"impact-percentage-progressBar\">\n                                    {100 - transport_final_indicator}/100\n                                </span>\n                            </div>\n                        </div>\n                        <div className=\"product-transport-impact-content-details\">\n                            {co2_impact_html}\n                            {transportation_score_html}\n                        </div>\n                    </div>\n                </div>\n            );\n        }\n\n        return res;\n    };\n\n    displayPackagingDetailImpact = () => {\n        let res = <React.Fragment></React.Fragment>;\n\n        if (this.props.dataEcoScore?.adjustments?.packaging?.packagings) {\n            var materials = [];\n            let slides = <React.Fragment></React.Fragment>;\n\n            this.props.dataEcoScore?.adjustments?.packaging?.packagings.map((data) => {\n                if (data?.material.split(\":\")[1] != \"unknown\") {\n                    materials.push(data?.material.split(\":\")[1]);\n                }\n            });\n\n            slides = materials\n                .filter(function (item, pos) {\n                    return materials.indexOf(item) == pos;\n                })\n                .map((data) => {\n                    var separator = \"\";\n                    if (materials.indexOf(data) < materials.length - 1) {\n                        separator = \" ; \";\n                    }\n                    return (\n                        <React.Fragment>\n                            <span>\n                                {data} {separator}\n                            </span>\n                        </React.Fragment>\n                    );\n                });\n\n            if (materials.length > 0) {\n                res = (\n                    <React.Fragment>\n                        <div className=\"product-co2-impact-content\">\n                            <div className=\"product-packaging-impact-content-details-text\">\n                                Matériaux utilisés : &nbsp;{slides}\n                            </div>\n                        </div>\n                    </React.Fragment>\n                );\n            } else {\n                res = (\n                    <React.Fragment>\n                        <div className=\"product-co2-impact-content\">\n                            <div className=\"product-packaging-impact-content-details-text\">\n                                Matériaux utilisés : &nbsp; Inconnu\n                            </div>\n                        </div>\n                    </React.Fragment>\n                );\n            }\n        }\n\n        return res;\n    };\n\n    displayPackagingImpact = () => {\n        let res = <React.Fragment></React.Fragment>;\n\n        if (this.props.dataEcoScore?.adjustments?.packaging?.value) {\n            return (\n                <div className=\"product-co2-impact-container\">\n                    <div className=\"product-co2-impact-header\">\n                        <div className=\"product-co2-impact-logo\">\n                            <div className=\"material-icons icon-label-co2-impact\">\n                                {this.getMaterialIcon(\"\")}\n                            </div>\n                        </div>\n                        <div className=\"product-co2-impact-title\">\n                            <div className=\"product-co2-impact-title-text\">\n                                Impact de l'emballage\n                            </div>\n                            <div className=\"product-co2-impact-title-label\">\n                                {this.getLabelImpactPackaging(\n                                    this.props.dataEcoScore?.adjustments?.packaging?.value\n                                )}\n                            </div>\n                        </div>\n                        <div\n                            className=\"product-transport-impact-color-label\"\n                            style={{\n                                color: this.getColorImpactPackaging(\n                                    this.props.dataEcoScore?.adjustments?.packaging?.value\n                                ),\n                            }}\n                        >\n                            ●\n                        </div>\n                    </div>\n                    {this.displayPackagingDetailImpact()}\n                </div>\n            );\n        } else {\n            return res;\n        }\n    };\n\n    onSlideChange = (index) => {\n        this.setState({ currentIndex: index });\n    };\n\n    alternativesloop = () => {\n        var alternativesList = <React.Fragment></React.Fragment>;\n\n        if (\n            this.props.alternatives &&\n            this.props.alternatives != \"loading\" &&\n            this.props.alternatives != \"\"\n        ) {\n            alternativesList = this.props.alternatives.products.map((item) => {\n                var pathProduct = \"/products/\" + item.id;\n                // Mock Front\n                if (item.id === \"8001505005707\") {\n                    pathProduct += \"/24\";\n                }\n\n                if (item.id !== this.props.barcode) {\n                    return (\n                        <SwiperSlide>\n                            <a href={pathProduct} className=\"product-alternative\">\n                                <div>\n                                    <img\n                                        src={item.image_url}\n                                        className=\"product-alternative-image\"\n                                        alt=\"\"\n                                    />\n                                </div>\n                                <div className=\"product-alternative-text\">\n                                    <label className=\"product-alternative-title\">\n                                        {item.product_name}\n                                    </label>\n                                    <label className=\"product-alternative-brand\">{}</label>\n                                    <RenderColor item={item} />\n                                </div>\n                                <div className=\"product-alternative-fleche\">{\">\"}</div>\n                            </a>\n                        </SwiperSlide>\n                    );\n                } else {\n                    return <React.Fragment></React.Fragment>;\n                }\n            });\n        }\n\n        return alternativesList;\n    };\n\n    render = () => {\n        let displaySugg = true;\n        let arraySuggestion = [\n            \"8001505005707\",\n            \"3560070472888\",\n            \"3760020500658\",\n            \"3256226384296\",\n            \"8001505000061\",\n            \"3017620424403\",\n            \"3017620425035\",\n            \"80135463\",\n        ];\n\n        var hmtl_suggestion = <React.Fragment></React.Fragment>;\n\n        hmtl_suggestion = this.alternativesloop();\n        var alternatives_title = \"\";\n\n        if (this.props.alternatives === \"\") {\n            alternatives_title = \"Pas d'alternatives disponible\";\n        } else {\n            if (this.props.alternatives === \"loading\") {\n                alternatives_title = \"Chargement des alternatives ...\";\n            } else {\n                alternatives_title = \"Alternatives\";\n            }\n        }\n\n        if (this.props.barcode) {\n            return (\n                <React.Fragment>\n                    {this.displayTransportImpact()}\n                    {this.displayPackagingImpact()}\n                    {this.displayRepartitionAllItems()}\n\n                    {this.props.ecoScore ? (\n                        <React.Fragment>\n                            <span className=\"title-part-environnement\">{alternatives_title}</span>\n                            <Swiper\n                                spaceBetween={0}\n                                slidesPerView={1}\n                                centeredSlides={true}\n                                onSlideChange={(i) => this.onSlideChange(i.activeIndex)}\n                                onSwiper={(swiper) => this.setState({ swiper: swiper })}\n                            >\n                                {hmtl_suggestion}\n                            </Swiper>{\" \"}\n                        </React.Fragment>\n                    ) : (\n                        <p>Pas encore de données pour ce produit</p>\n                    )}\n                    {/* <span className=\"title-part-environnement\">\n                    Impact de l'emballage\n                </span>\n                <Swiper\n                    spaceBetween={10}\n                    slidesPerView={1}\n                    centeredSlides={true}\n                    onSlideChange={(i) => this.onSlideChange(i.activeIndex)}\n                    onSwiper={(swiper) => this.setState({ swiper: swiper })}\n                >\n                    {this.displaySlides()}\n                </Swiper> */}\n                </React.Fragment>\n            );\n        } else {\n            return <React.Fragment></React.Fragment>;\n        }\n    };\n}\n\nexport default Environnement;\n","import React from \"react\";\nimport Navbar from \"../components/Navbar/Navbar\";\nimport Traceability from \"../components/Traceability/Traceability\";\nimport Environnement from \"../components/Environnement/Environnement\";\nimport Labels from \"../components/Labels/Labels\";\nimport \"./Product.css\";\nimport { Link } from \"react-router-dom\";\nimport jwt from \"jsonwebtoken\";\n\nclass Product extends React.Component {\n    state = {\n        barcode: this.props.match.params.barcode,\n        bcProductId: this.props.match.params.bcProductId,\n        product: undefined,\n        productImageUrl: undefined,\n        productName: undefined,\n        genericName: undefined,\n        ecoScore: undefined,\n        dataEcoScore: undefined,\n        value: 0,\n        connected: false,\n        productData: undefined,\n        userId: undefined,\n        cart: 0,\n        totalCO2Traceability: undefined,\n        alternatives: undefined,\n    };\n\n    isFlipping = false;\n\n    //for scrolling\n    getBottomRef = (component) => {\n        this.bottomComponent = component;\n    };\n\n    componentDidMount = () => {\n        this.Verify();\n        let userId = localStorage.getItem(\"userId\");\n        if (userId) {\n            this.setState({ userId: userId });\n            this.loadHistory(userId);\n        }\n        this.loadFromOpenFoodFacts(this.props.match.params.barcode);\n        if (this.props.match.params.bcProductId) {\n            this.loadProductInformations(\n                this.props.match.params.barcode,\n                this.props.match.params.bcProductId\n            );\n        }\n    };\n\n    handleBarCodeUpdate = () => {\n        if (this.state.barcode !== this.props.match.params.barcode) {\n            this.setState({\n                barcode: this.props.match.params.barcode,\n                bcProductId: this.props.match.params.bcProductId,\n            });\n            this.loadFromOpenFoodFacts(this.props.match.params.barcode);\n            if (this.props.match.params.bcProductId) {\n                this.loadProductInformations(\n                    this.props.match.params.barcode,\n                    this.props.match.params.bcProductId\n                );\n            }\n        }\n    };\n\n    Verify = () => {\n        let isExpired = true;\n        const token = localStorage.getItem(\"token\");\n        if (token) {\n            var decodedToken = jwt.decode(token, { complete: true });\n            var dateNow = new Date();\n            if (decodedToken.payload.exp >= dateNow.getTime() / 1000) {\n                isExpired = false;\n            }\n        }\n        if (isExpired === false) {\n            this.setState({ connected: true });\n        }\n    };\n\n    loadProductInformations = (barcode, bcProductId) => {\n        fetch(\n            `https://api.lowympact.fr/api/v1/products/${barcode}?bcProductId=${bcProductId}`,\n            // `http://localhost:8080/api/v1/products/${barcode}?bcProductId=${bcProductId}`,\n            {\n                method: \"get\",\n                credentials: \"include\",\n                headers: new Headers({\n                    \"api-key\": \"99d8fb95-abdd-4885-bf6c-3a81d8874043\",\n                    \"Content-Type\": \"application/json\",\n                }),\n            }\n        )\n            .then((response) => response.json())\n            .then((res) => {\n                this.setState({\n                    products: res?.data?.traceability,\n                    impact: res?.data?.impact,\n                    totalCO2Traceability: res?.data?.transportCO2Impact,\n                });\n            });\n    };\n\n    loadAlternatives = (code, score) => {\n        this.setState({ alternatives: \"loading\" });\n        fetch(\n            `https://fr.openfoodfacts.org/cgi/search.pl?action=process&tagtype_0=categories_properties.ciqual_food_code:en&tag_contains_0=contains&tag_0=${code}&tagtype_1=ecoscore_grade&tag_contains_1=contains&tag_1=${score}&json=true`\n        )\n            .then((response) => response.json())\n            .then((res) => {\n                if (res.products[0] == undefined) {\n                    this.setState({ alternatives: \"\" });\n                    return;\n\n                    /*console.log(\"TAILLENULLE\");\n                    switch (score) {\n                        case \"a\":\n                            return this.loadAlternatives(code, \"b\");\n                        case \"b\":\n                            return this.loadAlternatives(code, \"c\");\n                        case \"c\":\n                            return this.loadAlternatives(code, \"d\");\n                        default:\n                            break;\n                    }\n                    */\n                }\n                this.setState({ alternatives: res });\n            });\n    };\n\n    loadFromOpenFoodFacts = (barcode) => {\n        let dataEcoScore;\n\n        fetch(`https://world.openfoodfacts.org/api/v0/product/${barcode}.json/`)\n            .then((response) => response.json())\n            .then((res) => {\n                let productImageUrl = res?.product?.image_url;\n                let productName = res?.product?.product_name;\n                let genericName = res?.product?.generic_name;\n                let ecoScore = res?.product?.ecoscore_grade;\n\n                dataEcoScore = res?.product?.ecoscore_data;\n\n                if (res?.product) {\n                    this.setState({ productData: res.product });\n                }\n\n                if (productImageUrl) {\n                    this.setState({ productImageUrl: productImageUrl });\n                }\n                if (productName) {\n                    this.setState({ productName: productName });\n                }\n                if (genericName) {\n                    this.setState({ genericName: genericName });\n                }\n                if (\n                    ecoScore &&\n                    (ecoScore === \"a\" ||\n                        ecoScore === \"b\" ||\n                        ecoScore === \"c\" ||\n                        ecoScore === \"d\" ||\n                        ecoScore === \"e\")\n                ) {\n                    this.setState({ ecoScore: ecoScore });\n                }\n                if (dataEcoScore) {\n                    this.setState({ dataEcoScore: dataEcoScore });\n                }\n                if (res.status === 1) {\n                    this.saveHistory();\n                }\n\n                // Mock Soutenance\n                if (barcode === \"80135463\") {\n                    this.setState({ productName: \"Nutella 200g\" });\n                }\n\n                var scoreSearch = \"a\";\n\n                switch (res.product?.ecoscore_grade) {\n                    case \"b\":\n                        scoreSearch = \"a\";\n                        break;\n                    case \"c\":\n                        scoreSearch = \"b\";\n                        break;\n                    case \"d\":\n                        scoreSearch = \"c\";\n                        break;\n                    case \"e\":\n                        scoreSearch = \"c\";\n                        break;\n\n                    default:\n                        break;\n                }\n\n                if (res.product?.ecoscore_grade != \"a\") {\n                    this.loadAlternatives(\n                        res.product.categories_properties[\"ciqual_food_code:en\"],\n                        scoreSearch\n                    );\n                } else {\n                    this.setState({ alternatives: \"\" });\n                }\n            });\n    };\n\n    loadHistory = (userId) => {\n        if (userId && this.state.barcode && this.state.bcProductId) {\n            fetch(\n                `https://api.lowympact.fr/api/v1/users/${userId}/cart/${this.state.barcode}?bcProductAddress=${this.state.bcProductId}`,\n                // `http://localhost:8080/api/v1/users/${this.state.userId}/history`,\n                {\n                    method: \"get\",\n                    credentials: \"include\",\n                    headers: new Headers({\n                        Authorization: localStorage.getItem(\"token\"),\n                        \"api-key\": \"99d8fb95-abdd-4885-bf6c-3a81d8874043\",\n                        \"Content-Type\": \"application/json\",\n                    }),\n                }\n            )\n                .then((response) => response.json())\n                .then((res) => {\n                    if (res.success) {\n                        this.setState({ cart: res.data?.quantity });\n                    }\n                });\n        }\n    };\n\n    saveHistory = async () => {\n        await delay(2000);\n\n        if (!this.state.connected) {\n            let history = JSON.parse(localStorage.getItem(\"local_history\"));\n            let exist = null;\n            if (history) {\n                exist = history?.find(\n                    (element) =>\n                        element.barcode === this.state.barcode &&\n                        element.bcProductId == this.state.bcProductId\n                );\n            } else {\n                history = [];\n            }\n\n            if (!exist || exist?.length === 0) {\n                history.push({\n                    barcode: this.state.barcode,\n                    bcProductId: this.state.bcProductId,\n                    brand: this.state.productData.brands,\n                    image: this.state.productImageUrl,\n                    label: this.state.ecoScore,\n                    name: this.state.productName,\n                });\n                localStorage.setItem(\"local_history\", JSON.stringify(history));\n            }\n        } else if (this.state.userId) {\n            fetch(\n                `https://api.lowympact.fr/api/v1/users/${this.state.userId}/history`,\n                // `http://localhost:8080/api/v1/users/${this.state.userId}/history`,\n                {\n                    method: \"put\",\n                    credentials: \"include\",\n                    headers: new Headers({\n                        Authorization: localStorage.getItem(\"token\"),\n                        \"api-key\": \"99d8fb95-abdd-4885-bf6c-3a81d8874043\",\n                        \"Content-Type\": \"application/json\",\n                    }),\n                    body: JSON.stringify({\n                        barcode: this.state.barcode,\n                        bcProductAddress: this.state.bcProductId,\n                    }),\n                }\n            )\n                .then((response) => response.json())\n                .then((res) => {\n                    console.log(res);\n                });\n        }\n    };\n\n    addToCart = () => {\n        if (this.state.barcode && this.state.cart >= 0) {\n            let co2 = -1;\n            if (this.state.dataEcoScore?.agribalyse?.co2_total) {\n                co2 = parseFloat(this.state.dataEcoScore?.agribalyse?.co2_total);\n            }\n\n            let ecoscore = \"unkown\";\n            if (this.state.ecoScore) {\n                ecoscore = this.state.ecoScore;\n            }\n            this.flip();\n            fetch(\n                `https://api.lowympact.fr/api/v1/users/${this.state.userId}/cart`,\n                // `http://localhost:8080/api/v1/users/${this.state.userId}/cart`,\n                {\n                    method: \"put\",\n                    credentials: \"include\",\n                    headers: new Headers({\n                        Authorization: localStorage.getItem(\"token\"),\n                        \"api-key\": \"99d8fb95-abdd-4885-bf6c-3a81d8874043\",\n                        \"Content-Type\": \"application/json\",\n                    }),\n                    body: JSON.stringify({\n                        barcode: this.state.barcode,\n                        bcProductAddress: this.state.bcProductId,\n                        quantityDelta: 1,\n                        ecoscore: ecoscore,\n                        carbonImpact: co2,\n                    }),\n                }\n            )\n                .then((response) => response.json())\n                .then((res) => {\n                    console.log(res);\n                    if (res.success) {\n                        this.setState({ cart: this.state.cart + 1 });\n                    }\n                });\n        }\n    };\n\n    removeFromCart = () => {\n        if (this.state.barcode && this.state.cart > 0) {\n            this.flip();\n            let co2 = -1;\n            if (this.state.dataEcoScore?.agribalyse?.co2_total) {\n                co2 = parseFloat(this.state.dataEcoScore?.agribalyse?.co2_total);\n            }\n            let ecoscore = \"unkown\";\n            if (this.state.ecoScore) {\n                ecoscore = this.state.ecoScore;\n            }\n            fetch(\n                `https://api.lowympact.fr/api/v1/users/${this.state.userId}/cart`,\n                // `http://localhost:8080/api/v1/users/${this.state.userId}/cart`,\n                {\n                    method: \"put\",\n                    credentials: \"include\",\n                    headers: new Headers({\n                        Authorization: localStorage.getItem(\"token\"),\n                        \"api-key\": \"99d8fb95-abdd-4885-bf6c-3a81d8874043\",\n                        \"Content-Type\": \"application/json\",\n                    }),\n                    body: JSON.stringify({\n                        barcode: this.state.barcode,\n                        bcProductAddress: this.state.bcProductId,\n                        quantityDelta: -1,\n                        ecoscore: ecoscore,\n                        carbonImpact: co2,\n                    }),\n                }\n            )\n                .then((response) => response.json())\n                .then((res) => {\n                    console.log(res);\n                    if (res.success) {\n                        this.setState({ cart: this.state.cart - 1 });\n                    }\n                });\n        }\n    };\n\n    flip = async (event) => {\n        // if (!this.isFlipping) {\n        // \tthis.isFlipping = true;\n        // \tawait delay(500);\n        console.log(this.imageFlip.style.transform);\n        if (this.imageFlip && !this.state.isFlipping) {\n            if (this.imageFlip.style.transform === \"rotateY(360deg)\") {\n                this.imageFlip.style.transform = \"rotateY(0deg)\";\n            } else {\n                this.imageFlip.style.transform = \"rotateY(360deg)\";\n            }\n        }\n        // await delay(1000);\n        // this.isFlipping = false;\n        // }\n    };\n\n    displayImage = () => {\n        this.handleBarCodeUpdate();\n\n        let image = <React.Fragment />;\n        let productName = <React.Fragment />;\n        let genericName = <React.Fragment />;\n        let ecoScore = <React.Fragment />;\n        if (this.state.productImageUrl) {\n            image = (\n                <img src={this.state.productImageUrl} className=\"product-image\" alt=\"produit\" />\n            );\n        }\n\n        if (this.state.productName) {\n            productName = <div className=\"product-name\">{this.state.productName}</div>;\n        }\n        if (this.state.ecoScore) {\n            let scoreClass = \"color_score_\" + this.state.ecoScore;\n            ecoScore = (\n                <div className=\"product-ecoscore-image\">\n                    <span className={\"circle-score \" + scoreClass}>⬤ </span>\n                    EcoScore :<span className=\"uppercase \">{\" \" + this.state.ecoScore}</span>\n                </div>\n            );\n        } else if (this.state.genericName) {\n            genericName = <div className=\"product-generic-name\">{this.state.genericName}</div>;\n        }\n        return (\n            <React.Fragment>\n                {this.state.userId ? (\n                    <div\n                        className={this.state.cart > 0 ? \"add-to-cart green\" : \"add-to-cart\"}\n                        onClick={this.addToCart}\n                    >\n                        <span className=\"cart-count\">\n                            {this.state.cart > 0 ? this.state.cart : \"\"}\n                        </span>\n                        <span class=\"material-icons\">add_shopping_cart</span>\n                    </div>\n                ) : (\n                    <React.Fragment />\n                )}\n                {this.state.cart > 0 ? (\n                    <div className=\"remove-from-cart\" onClick={this.removeFromCart}>\n                        <span class=\"material-icons\">remove_shopping_cart</span>\n                    </div>\n                ) : (\n                    <React.Fragment />\n                )}\n                {image}\n                {productName}\n                <div className=\"product-bottom-image-div\">\n                    {genericName}\n                    {ecoScore}\n                </div>\n            </React.Fragment>\n        );\n    };\n\n    handleChange = (event, newValue) => {\n        this.setState({ value: newValue });\n        if (newValue === 1) {\n            let elem = document.getElementsByClassName(\"swiper-container\");\n            if (elem[0]) {\n                elem[0].scrollIntoView({ behavior: \"smooth\" });\n            }\n        }\n    };\n\n    displayNavbar = () => {\n        let retour = <React.Fragment />;\n        if (this.state.bcProductId) {\n            retour = (\n                <div className=\"product-navbar-container\">\n                    <button\n                        className={\n                            this.state.value === 0\n                                ? \"product-navbar-button selected\"\n                                : \"product-navbar-button\"\n                        }\n                        onClick={() => this.handleChange(\"\", 0)}\n                    >\n                        Environnement\n                    </button>\n                    <button\n                        className={\n                            this.state.value === 1\n                                ? \"product-navbar-button selected\"\n                                : \"product-navbar-button\"\n                        }\n                        onClick={() => this.handleChange(\"\", 1)}\n                    >\n                        Traçabilité\n                    </button>\n                    <div\n                        className={\n                            this.state.value === 0\n                                ? \"navbar-under nav-left\"\n                                : \"navbar-under nav-right\"\n                        }\n                    ></div>\n                </div>\n            );\n        }\n        return retour;\n    };\n\n    render = () => {\n        //tri des produits\n        let products = this.state.products?.sort((a, b) => {\n            if (a.depth > b.depth) return -1;\n            else return 1;\n        });\n        return (\n            <React.Fragment>\n                <div className=\"product-page-container\">\n                    <div className=\"product-header-container\">\n                        <div className=\"product-history-link\">\n                            <Link to=\"/history\"> {\"<\"} Historique</Link>\n                        </div>\n                        <img\n                            className=\"product-bitmap-image\"\n                            src=\"/images/utils/bitmap.png\"\n                            alt=\"\"\n                        />\n                    </div>\n                    <div\n                        className=\"product-image-container\"\n                        // onClick={this.flip}\n                        ref={(ref) => (this.imageFlip = ref)}\n                    >\n                        {this.displayImage()}\n                    </div>\n\n                    {this.displayNavbar()}\n\n                    {/* <AppBar position=\"static\">\n\t\t\t\t\t\t<Tabs\n\t\t\t\t\t\t\tvalue={this.state.value}\n\t\t\t\t\t\t\tonChange={this.handleChange}\n\t\t\t\t\t\t\taria-label=\"simple tabs example\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<Tab label=\"Traçabilité\" />\n\t\t\t\t\t\t\t<Tab label=\"Environnement\" />\n\t\t\t\t\t\t</Tabs>\n\t\t\t\t\t</AppBar>\n\t\t\t\t\t<TabPanel value={this.state.value} index={0}></TabPanel>\n\t\t\t\t\t<TabPanel value={this.state.value} index={1}>\n\t\t\t\t</TabPanel> */}\n                    {this.state.value === 0 ? (\n                        <Environnement\n                            dataEcoScore={this.state.dataEcoScore}\n                            ecoScore={this.state.ecoScore}\n                            displayTranportImpact={\n                                this.props.match.params.bcProductId !== null &&\n                                this.props.match.params.bcProductId !== undefined\n                            }\n                            barcode={this.props.match.params.barcode}\n                            alternatives={this.state.alternatives}\n                        ></Environnement>\n                    ) : (\n                        <div className=\"product-bottom-container\">\n                            <Traceability\n                                products={products}\n                                getBottomRef={this.getBottomRef}\n                                totalCO2Traceability={this.state.totalCO2Traceability}\n                            />\n                        </div>\n                    )}\n                    <Navbar\n                        barcode={this.props.match.params.barcode}\n                        bcProductId={this.props.match.params.bcProductId}\n                    />\n                </div>\n            </React.Fragment>\n        );\n    };\n}\n\nexport default Product;\n\nconst delay = (ms) => new Promise((res) => setTimeout(res, ms));\n","import React from \"react\";\nimport { Swiper, SwiperSlide } from \"swiper/react\";\n// Import Swiper styles\nimport \"swiper/swiper-bundle.css\";\nimport \"./Labels.css\";\n\nclass Labels extends React.Component {\n\tdisplaySpecies = () => {\n\t\tif (\n\t\t\tthis.props.dataEcoScore?.adjustments?.threatened_species?.length ===\n\t\t\t0\n\t\t) {\n\t\t\treturn <div></div>;\n\t\t} else {\n\t\t\tif (\n\t\t\t\tthis.props.dataEcoScore?.adjustments?.threatened_species\n\t\t\t\t\t?.value < 0\n\t\t\t) {\n\t\t\t\treturn (\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<div className=\"labels-container-bad\">\n\t\t\t\t\t\t\t<span class=\"material-icons\">warning_amber</span>\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tthis.props.dataEcoScore?.adjustments\n\t\t\t\t\t\t\t\t\t?.threatened_species?.ingredient\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\treturn (\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<div className=\"labels-container-good\">\n\t\t\t\t\t\t\t<span class=\"material-icons\">task_alt</span>\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tthis.props.dataEcoScore?.adjustments\n\t\t\t\t\t\t\t\t\t?.threatened_species?.ingredient\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t};\n\n\tdisplaySpecies = () => {\n\t\tif (\n\t\t\t!this.props.dataEcoScore?.adjustments?.threatened_species\n\t\t\t\t?.ingredient\n\t\t) {\n\t\t\treturn <div></div>;\n\t\t} else {\n\t\t\tif (\n\t\t\t\tthis.props.dataEcoScore?.adjustments?.threatened_species\n\t\t\t\t\t?.value < 0\n\t\t\t) {\n\t\t\t\treturn (\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<div className=\"labels-container-bad\">\n\t\t\t\t\t\t\t<span class=\"material-icons\">warning_amber</span>\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tthis.props.dataEcoScore?.adjustments\n\t\t\t\t\t\t\t\t\t?.threatened_species?.ingredient\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\treturn (\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<div className=\"labels-container-good\">\n\t\t\t\t\t\t\t<span class=\"material-icons\">task_alt</span>\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tthis.props.dataEcoScore?.adjustments\n\t\t\t\t\t\t\t\t\t?.threatened_species?.ingredient\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t};\n\n\tdisplayProduction = () => {\n\t\tif (!this.props.dataEcoScore?.adjustments?.production_system?.label) {\n\t\t\treturn <div></div>;\n\t\t} else {\n\t\t\tif (\n\t\t\t\tthis.props.dataEcoScore?.adjustments?.production_system?.value <\n\t\t\t\t0\n\t\t\t) {\n\t\t\t\treturn (\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<div className=\"labels-container-bad\">\n\t\t\t\t\t\t\t<span class=\"material-icons\">warning_amber</span>\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tthis.props.dataEcoScore?.adjustments\n\t\t\t\t\t\t\t\t\t?.production_system?.label\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\treturn (\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<div className=\"labels-container-good\">\n\t\t\t\t\t\t\t<span class=\"material-icons\">task_alt</span>\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tthis.props.dataEcoScore?.adjustments\n\t\t\t\t\t\t\t\t\t?.production_system?.label\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t};\n\n\trender() {\n\t\tif (\n\t\t\tthis.props.dataEcoScore?.adjustments?.threatened_species?.length !=\n\t\t\t\t0 &&\n\t\t\tthis.props.dataEcoScore?.adjustments?.production_system?.label\n\t\t) {\n\t\t\treturn (\n\t\t\t\t<div>\n\t\t\t\t\t<h1>Labels</h1>\n\n\t\t\t\t\t<div className=\"labels-container\">\n\t\t\t\t\t\t{this.displaySpecies()}\n\t\t\t\t\t\t{this.displayProduction()}\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t);\n\t\t} else {\n\t\t\treturn <React.Fragment />;\n\t\t}\n\t}\n}\n\nexport default Labels;\n","import React from \"react\";\nimport Navbar from \"../components/Navbar/Navbar\";\nimport Header from \"../components/Header/Header\";\nimport \"./Profil.css\";\nimport { Link } from \"react-router-dom\";\nimport jwt from \"jsonwebtoken\";\nimport { motion } from \"framer-motion\";\n\nclass Profil extends React.Component {\n    state = {\n        connected: false,\n    };\n\n    disconnect = () => {\n        localStorage.clear();\n        this.props.history.push(\"/login\");\n    };\n\n    componentDidMount = () => {\n        this.Verify();\n    };\n\n    Verify = () => {\n        let isExpired = true;\n        const token = localStorage.getItem(\"token\");\n        if (token) {\n            var decodedToken = jwt.decode(token, { complete: true });\n            var dateNow = new Date();\n            if (decodedToken.payload.exp >= dateNow.getTime() / 1000) {\n                isExpired = false;\n            }\n        }\n        if (isExpired === false) {\n            this.setState({ connected: true }); // redirection vers la page login\n        }\n    };\n\n    displayConnectedProfil = () => {\n        return (\n            <React.Fragment>\n                <h2 className=\"profil-title\">Bienvenue sur ton profil!</h2>\n                <Link to=\"/stats\" className=\"profil-button\">\n                    Statistiques\n                </Link>\n                <Link to=\"/configuration\" className=\"profil-button\">\n                    Configuration\n                </Link>\n                <div onClick={this.disconnect} className=\"profil-button\">\n                    Déconnecter\n                </div>\n            </React.Fragment>\n        );\n    };\n\n    displayUnconnectedProfil = () => {\n        return (\n            <React.Fragment>\n                <h2 className=\"profil-title\">Non connecté</h2>\n                <p>Connecte toi pour que ton historique soit sauvegardé !</p>\n                <Link to=\"/login\" className=\"profil-button\">\n                    Me Connecter\n                </Link>\n            </React.Fragment>\n        );\n    };\n\n    render() {\n        return (\n            <div>\n                <Link to=\"/\">\n                    <Header />\n                </Link>\n                <motion.div\n                    initial={{ opacity: 0 }}\n                    animate={{ opacity: 1 }}\n                    exit={{ opacity: 0 }}\n                    className=\"profil-screen\"\n                >\n                    <div className=\"profil-picture\">\n                        <div class=\"material-icons\">person</div>\n                    </div>\n                    {this.state.connected\n                        ? this.displayConnectedProfil()\n                        : this.displayUnconnectedProfil()}\n                </motion.div>\n                <Navbar />\n            </div>\n        );\n    }\n}\n\nexport default Profil;\n","import React from \"react\";\n\nfunction ButtonSignup() {\n  return (\n  <div>\n    Créer mon compte\n  </div>\n  );\n}\n\nexport default ButtonSignup;","import React, { Component } from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport ButtonSignup from \"../components/Button/ButtonSignup\";\nimport fruits from \"../assets/images/fruits-vegetables-basket-by-oblik-studio.svg\";\nimport Header from \"../components/Header/Header\";\nimport \"./Login.css\";\nimport { Link } from \"react-router-dom\";\n\nexport const validEmail = new RegExp(\"^[a-zA-Z0-9._:$!%-]+@[a-zA-Z0-9.-]+.[a-zA-Z]$\");\n\nclass Signup extends Component {\n    state = {\n        userName: \"\",\n        email: \"\",\n        password: \"\",\n        confirmPassword: \"\",\n        errors: [],\n        redirect: false,\n        submit: false,\n    };\n\n    validate() {\n        var errors = [];\n        if (this.state.userName.length === 0) {\n            errors.push(\"Saissez votre nom\");\n        }\n        if (this.state.email.length === 0) {\n            errors.push(\"Saissez votre adresse e-mail\");\n        }\n        if (validEmail.test(this.state.email) === false) {\n            errors.push(\"Saissez une adresse e-mail valide\");\n        }\n        if (this.state.password.length < 6) {\n            errors.push(\"Entre un mot de passe. 6 caràcteres minimum requis\");\n        }\n        if (this.state.password !== this.state.confirmPassword) {\n            errors.push(\"Les mots de passe ne correspondent pas\");\n        }\n        this.setState({ errors: errors });\n        return errors;\n    }\n\n    signUser = async () => {\n        let errors = await fetch(`https://api.lowympact.fr/api/v1/users/`, {\n            method: \"post\",\n            credentials: \"include\",\n            headers: new Headers({\n                \"api-key\": \"99d8fb95-abdd-4885-bf6c-3a81d8874043\",\n                \"Content-Type\": \"application/json\",\n            }),\n            body: JSON.stringify({\n                username: this.state.userName,\n                email: this.state.email,\n                password: this.state.password,\n            }),\n        })\n            .then((response) => response.json())\n            .then((res) => {\n                console.log(res);\n                let errors = [];\n\n                if (!res.success) {\n                    errors.push(\"Il y a déjà un compte avec ce mail ou une erreur réseau.\");\n                } else {\n                    localStorage.setItem(\"token\", res.token);\n                    localStorage.setItem(\"userId\", res._id);\n                    this.props.history.push(\"/history\");\n                }\n                this.setState({ errors: errors });\n                return errors;\n            });\n        return errors;\n    };\n\n    handleSubmit = async (e) => {\n        e.preventDefault();\n        let errors = this.validate();\n        //console.log(\"errors: \" + errors);\n        if (errors.length === 0) {\n            errors = await this.signUser();\n        }\n        if (errors.length === 0) {\n            this.setState({ redirect: true });\n        }\n    };\n\n    displayErrors = () => {\n        let errors = <React.Fragment></React.Fragment>;\n        errors = this.state.errors.map((error) => {\n            return <p>{error}</p>;\n        });\n        return errors;\n    };\n\n    render() {\n        if (this.state.redirect) {\n            return <Redirect to=\"/history\" />;\n        }\n        //console.log(\"render\");\n        return (\n            <React.Fragment>\n                <Link to=\"/login\">\n                    <Header />\n                </Link>\n                <div className=\"logo-fruits\">\n                    <img src={fruits} className=\"logo\" alt=\"Fruits\" />\n                </div>\n                <Link className=\"back-button\" to=\"/login\">\n                    {\"< Retour\"}\n                </Link>\n                <div className=\"signup-container\">\n                    <form className=\"forms\">\n                        <label>\n                            nom\n                            <input\n                                className=\"input-forms\"\n                                value={this.state.userName}\n                                onChange={(evt) =>\n                                    this.setState({\n                                        userName: evt.target.value,\n                                    })\n                                }\n                                type=\"text\"\n                            />\n                        </label>\n                        <label>\n                            email\n                            <input\n                                className=\"input-forms\"\n                                value={this.state.email}\n                                onChange={(evt) => this.setState({ email: evt.target.value })}\n                                type=\"email\"\n                            />\n                        </label>\n                        <label>\n                            mot de passe\n                            <input\n                                className=\"input-forms\"\n                                value={this.state.password}\n                                onChange={(evt) =>\n                                    this.setState({\n                                        password: evt.target.value,\n                                    })\n                                }\n                                type=\"password\"\n                            />\n                        </label>\n                        <label>\n                            confirmer mot de passe\n                            <input\n                                className=\"input-forms\"\n                                value={this.state.passwordConfirm}\n                                onChange={(evt) =>\n                                    this.setState({\n                                        confirmPassword: evt.target.value,\n                                    })\n                                }\n                                type=\"password\"\n                            />\n                        </label>\n                    </form>\n                    <label className=\"errors-signup\">{this.displayErrors()}</label>\n                    <div className=\"button-signup\" onClick={this.handleSubmit}>\n                        <ButtonSignup />\n                    </div>\n                </div>\n            </React.Fragment>\n        );\n    }\n}\nexport default Signup;\n","import React from \"react\";\n\nfunction ButtonSignin() {\n  return (\n  <div>\n    Me connecter\n  </div>\n  );\n}\n\nexport default ButtonSignin;","import React, { Component } from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport ButtonSignin from \"../components/Button/ButtonSignin\";\nimport fruits from \"../assets/images/fruits-vegetables-basket-by-oblik-studio.svg\";\nimport Header from \"../components/Header/Header\";\nimport blob from \"../assets/images/bitmap.png\";\nimport \"./Login.css\";\nimport { Link } from \"react-router-dom\";\nimport jwt from \"jsonwebtoken\";\n\nfunction validate(email, password) {\n    const errors = [];\n\n    if (email.length === 0) {\n        errors.push(<p>Saissez votre adresse e-mail</p>);\n    }\n    if (password.length === 0) {\n        errors.push(<p>Saissez votre mot de passe</p>);\n    }\n    return errors;\n}\n\nclass Signin extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            email: \"\",\n            password: \"\",\n            errors: [],\n            redirect: false,\n            loginSuccessful: null,\n        };\n    }\n\n    handleSubmit = (e) => {\n        e.preventDefault();\n        const { email, password } = this.state;\n        const errors = validate(email, password);\n        //console.log(email, password, errors);\n        this.setState({ errors });\n        if (errors.length === 0) {\n            this.Connect();\n        }\n    };\n\n    componentDidMount = () => {\n        this.Verify();\n    };\n\n    Verify = () => {\n        let isExpired = true;\n        const token = localStorage.getItem(\"token\");\n        if (token) {\n            var decodedToken = jwt.decode(token, { complete: true });\n            var dateNow = new Date();\n            if (decodedToken.payload.exp >= dateNow.getTime() / 1000) {\n                isExpired = false;\n            }\n        }\n        if (isExpired === false) {\n            this.setState({ redirect: true }); // redirection vers la page login\n        }\n    };\n\n    Connect = () => {\n        fetch(`https://api.lowympact.fr/api/v1/users/login`, {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n                \"api-key\": \"99d8fb95-abdd-4885-bf6c-3a81d8874043\",\n\n                //'x-access-token': localStorage.getItem('token'),\n            },\n            body: JSON.stringify({\n                email: this.state.email,\n                password: this.state.password,\n            }),\n        })\n            .then((response) => response.json())\n            .then((data) => {\n                //console.log(data);\n                if (data.error === \"No user found\") {\n                    this.setState({ loginSuccessful: false });\n                    let err = this.state.errors;\n                    err.push(<p>Utilisateur Inconnu</p>);\n                    this.setState({ errors: err });\n                } else if (data.error === \"Incorrect password\" || !data.success) {\n                    this.setState({ loginSuccessful: false });\n                    let err = this.state.errors;\n                    err.push(<p>Mot de passe Incorrect</p>);\n                    this.setState({ errors: err });\n                } else {\n                    // console.log(data);\n                    localStorage.setItem(\"token\", data.token);\n                    localStorage.setItem(\"userId\", data._id);\n                    this.setState({ loginSuccessful: true, redirect: true });\n                    //this.props.history.goBack();\t// a ajouter pour être redirigé vers la page initialement\n                    // demandée. On doit cependant rediriger si la page demandée\n                    // était la page de login\n                }\n            });\n    };\n\n    onPasswordChange = () => {\n        this.setState({\n            password: this.passwordInput.value,\n            email: this.emailInput.value,\n        });\n    };\n\n    render() {\n        if (this.state.redirect) {\n            return <Redirect to=\"/history\" />;\n        }\n        return (\n            <React.Fragment>\n                <Link to=\"/login\">\n                    <Header />\n                </Link>\n                <div className=\"logo-fruits\">\n                    <img src={fruits} className=\"logo\" alt=\"Fruits\" />\n                </div>\n\n                <Link className=\"back-button\" to=\"/login\">\n                    {\"< Retour\"}\n                </Link>\n                <div className=\"signin-container\">\n                    <form className=\"forms\">\n                        <label>\n                            email\n                            <input\n                                className=\"input-forms\"\n                                value={this.state.email}\n                                onChange={this.onPasswordChange}\n                                ref={(ref) => (this.emailInput = ref)}\n                                type=\"email\"\n                            />\n                        </label>\n                        <label>\n                            mot de passe\n                            <input\n                                className=\"input-forms\"\n                                value={this.state.password}\n                                onChange={this.onPasswordChange}\n                                ref={(ref) => (this.passwordInput = ref)}\n                                type=\"password\"\n                            />\n                        </label>\n                    </form>\n                    <label className=\"errors-signin\">{this.state.errors}</label>\n                    <div className=\"button-signin\" onClick={this.handleSubmit}>\n                        <ButtonSignin />\n                    </div>\n                </div>\n            </React.Fragment>\n        );\n    }\n}\nexport default Signin;\n","import React from \"react\";\n\nfunction ButtonChangePassword() {\n  return (\n  <div>\n    Changer mot de passe\n  </div>\n  );\n}\n\nexport default ButtonChangePassword;","export const USERS =\n    {\n        id: 0,\n        email: \"bububu@bababa.com\",\n        password: \"123456\"\n    };","import React, { Component } from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport ButtonChangePassword from \"../components/Button/ButtonChangePassword\";\nimport fruits from \"../assets/images/fruits-vegetables-basket-by-oblik-studio.svg\";\nimport Header from \"../components/Header/Header\";\nimport Navbar from \"../components/Navbar/Navbar\";\nimport \"./ProfileConfiguration.css\";\nimport { USERS } from \"../assets/users/users\";\nimport jwt from \"jsonwebtoken\";\nimport { Link } from \"react-router-dom\";\n\nfunction validate(newPassword, confirmPassword) {\n    const errors = [];\n    if (newPassword.length < 6) {\n        errors.push(<p>Entre un mot de passe. 6 caractères minimum requis</p>);\n    }\n    if (newPassword !== confirmPassword) {\n        errors.push(<p>Les mots de passe ne correspondent pas</p>);\n    }\n    return errors;\n}\n\nclass ProfileConfiguration extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            user: USERS,\n            currentPassword: \"\",\n            newPassword: \"\",\n            confirmPassword: \"\",\n            errors: [],\n            redirect: false,\n        };\n    }\n\n    handleChange = (e) => {\n        e.preventDefault();\n        const { currentPassword, newPassword, confirmPassword } = this.state;\n        const errors = validate(newPassword, confirmPassword);\n        console.log(this.state.user.email, currentPassword, newPassword, confirmPassword, errors);\n        this.setState({ errors });\n        if (errors.length === 0) {\n            this.changeUserInfo(this.state.user._id, currentPassword, newPassword);\n        }\n    };\n\n    changeUserInfo = (userId, currentPassword, newPassword) => {\n        console.log(\"hey\");\n        fetch(\n            `https://api.lowympact.fr/api/v1/users/${userId}`,\n            // `http://localhost:8080/api/v1/users/login`,\n            {\n                method: \"PUT\",\n                headers: {\n                    \"Content-Type\": \"application/json\",\n                    \"api-key\": \"99d8fb95-abdd-4885-bf6c-3a81d8874043\",\n                    authorization: localStorage.getItem(\"token\"),\n                },\n                body: JSON.stringify({\n                    currentPassword: currentPassword,\n                    newPassword: newPassword,\n                }),\n            }\n        )\n            .then((response) => response.json())\n            .then((res) => {\n                console.log(res);\n                if (res.success === false) {\n                    this.setState({\n                        errors: [...this.state.errors, res.error],\n                    });\n                } else {\n                    this.setState({ redirect: true });\n                }\n            });\n    };\n\n    Verify = () => {\n        let isExpired = true;\n        const token = localStorage.getItem(\"token\");\n        if (token) {\n            var decodedToken = jwt.decode(token, { complete: true });\n            var dateNow = new Date();\n            if (decodedToken.payload.exp >= dateNow.getTime() / 1000) {\n                isExpired = false;\n            }\n        }\n        if (isExpired === true) {\n            this.setState({ redirect: true }); // redirection vers la page login\n        }\n    };\n\n    componentDidMount = () => {\n        this.Verify();\n        let userId = localStorage.getItem(\"userId\");\n        if (userId) {\n            this.loadUserInfo(userId);\n        }\n    };\n\n    loadUserInfo = (userId) => {\n        fetch(\n            `https://api.lowympact.fr/api/v1/users/${userId}`,\n            // `http://localhost:8080/api/v1/users/login`,\n            {\n                method: \"GET\",\n                headers: {\n                    \"Content-Type\": \"application/json\",\n                    \"api-key\": \"99d8fb95-abdd-4885-bf6c-3a81d8874043\",\n                    authorization: localStorage.getItem(\"token\"),\n                },\n            }\n        )\n            .then((response) => response.json())\n            .then((res) => {\n                console.log(res);\n\n                this.setState({ user: res.data });\n            });\n    };\n\n    render() {\n        if (this.state.redirect) {\n            return <Redirect to=\"/profil\" />;\n        }\n        console.log(this.state.redirect);\n        return (\n            <div className=\"screen\">\n                <Link to=\"/\">\n                    <Header />\n                </Link>\n                <Navbar />\n                <div className=\"logo-fruits\">\n                    <img src={fruits} className=\"logo\" alt=\"Fruits\" />\n                </div>\n                <Link className=\"back-button\" to=\"/profil\">\n                    {\"< Retour\"}\n                </Link>\n                <div className=\"configuration-screen-title\"></div>\n                <div className=\"errors-change-password\">{this.state.errors}</div>\n                <div className=\"configuration-container\">\n                    <div className=\"configuration-email-block\">\n                        <div>email</div>\n                        <div>{this.state.user.email}</div>\n                    </div>\n                    <form className=\"configuration-form\">\n                        <label>\n                            {/* Mot de passe actuel */}\n                            <input\n                                placeholder=\"mot de passe actuel\"\n                                className=\"input-forms\"\n                                value={this.state.currentPassword}\n                                onChange={(evt) =>\n                                    this.setState({\n                                        currentPassword: evt.target.value,\n                                    })\n                                }\n                                type=\"password\"\n                            />\n                        </label>\n                        <label>\n                            {/* Nouveau mot de passe */}\n                            <input\n                                value={this.state.newPassword}\n                                className=\"input-forms\"\n                                onChange={(evt) =>\n                                    this.setState({\n                                        newPassword: evt.target.value,\n                                    })\n                                }\n                                type=\"password\"\n                                placeholder=\"nouveau mot de passe\"\n                            />\n                        </label>\n                        <label>\n                            {/* Confirmation de mot de passe */}\n                            <input\n                                placeholder=\"confirmation de mdp\"\n                                className=\"input-forms\"\n                                value={this.state.confirmPassword}\n                                onChange={(evt) =>\n                                    this.setState({\n                                        confirmPassword: evt.target.value,\n                                    })\n                                }\n                                type=\"password\"\n                            />\n                        </label>\n                        <Link className=\"button-change-password\" onClick={this.handleChange} to=\"\">\n                            <ButtonChangePassword />\n                        </Link>\n                    </form>\n                </div>\n            </div>\n        );\n    }\n}\nexport default ProfileConfiguration;\n","import React from \"react\";\nimport { Swiper, SwiperSlide } from \"swiper/react\";\n// Import Swiper styles\nimport \"swiper/swiper-bundle.css\";\n\n//Import Pie Chart\nimport { PieChart } from \"react-minimal-pie-chart\";\n\nimport fruits from \"../../assets/images/fruits-vegetables-basket-by-oblik-studio.svg\";\nimport { motion } from \"framer-motion\";\n\nclass DoughnutChartEcoScore extends React.Component {\n    state = {\n        swiper: undefined,\n        selectedSegment: undefined,\n    };\n\n    displayChart = () => {\n        let chart = <React.Fragment></React.Fragment>;\n        if (this.props.ecoScoreData && this.props.cartedProduct > 0) {\n            let data = [\n                {\n                    title: \"EcoScore A\",\n                    value: this.props.ecoScoreData.a,\n                    color: \"#1e8f4f\",\n                },\n                {\n                    title: \"EcoScore B\",\n                    value: this.props.ecoScoreData.b,\n                    color: \"#5fad0c\",\n                },\n                {\n                    title: \"EcoScore C\",\n                    value: this.props.ecoScoreData.c,\n                    color: \"#ecb10f\",\n                },\n                {\n                    title: \"EcoScore D\",\n                    value: this.props.ecoScoreData.d,\n                    color: \"#ff6f1e\",\n                },\n                {\n                    title: \"EcoScore E\",\n                    value: this.props.ecoScoreData.e,\n                    color: \"#df1e1f\",\n                },\n                {\n                    title: \"EcoScore Inconnu\",\n                    value: this.props.ecoScoreData.unknown,\n                    color: \"#000000\",\n                },\n            ];\n            chart = (\n                <PieChart\n                    data={data}\n                    lineWidth={30}\n                    paddingAngle={1}\n                    radius={PieChart.defaultProps.radius - 3}\n                    animate\n                    animationDuration={700}\n                    label={({ dataEntry }) => `${Math.round(dataEntry.percentage)}%`}\n                    labelStyle={(index) =>\n                        index === this.state.selectedSegment\n                            ? {\n                                  fontSize: \"6px\",\n                                  fontFamily: \"comfortaa\",\n                                  fill: data[index].color,\n                              }\n                            : {\n                                  fontSize: \"0px\",\n                                  fontFamily: \"comfortaa\",\n                                  fill: data[index].color,\n                              }\n                    }\n                    labelPosition={60}\n                    segmentsStyle={{\n                        transition: \"stroke .3s ease-out\",\n                        cursor: \"pointer\",\n                    }}\n                    segmentsShift={(index) => (index === this.state.selectedSegment ? 3 : 0)}\n                    onClick={(event, index) => {\n                        if (index === this.state.selectedSegment) {\n                            this.setState({ selectedSegment: undefined });\n                            this.state.swiper.slideTo(0, 500);\n                        } else {\n                            this.setState({ selectedSegment: index });\n                            this.state.swiper.slideTo(index + 1, 500);\n                        }\n                    }}\n                />\n            );\n        } else {\n            chart = (\n                <motion.div\n                    className=\"stats-no-product\"\n                    initial={{ opacity: 0 }}\n                    animate={{ opacity: 1 }}\n                    exit={{ opacity: 0 }}\n                >\n                    <div>\n                        <img src={fruits} className=\"logo\" alt=\"Fruits\" />\n                        <p className=\"logo-text\">Commence à scanner des produits !</p>\n                    </div>\n                </motion.div>\n            );\n        }\n        return chart;\n    };\n\n    onSlideChange = (index) => {\n        if (index === 0) {\n            this.setState({ selectedSegment: undefined });\n        } else {\n            this.setState({ selectedSegment: index - 1 });\n        }\n    };\n\n    displaySlides = () => {\n        let slides = <React.Fragment></React.Fragment>;\n        if (this.props.ecoScoreData && this.props.cartedProduct > 0) {\n            slides = (\n                <React.Fragment>\n                    <SwiperSlide>\n                        <div className=\"stats-slider\">\n                            <img\n                                className=\"stats-ecoscore-full\"\n                                src=\"/images/utils/ecoScoreFull.png\"\n                                alt=\"\"\n                            />\n                        </div>\n                    </SwiperSlide>\n                    <SwiperSlide>\n                        <div className=\"stats-slider\">\n                            <span className=\"stats-slider-text\">\n                                {\">\"} EcoScore A : {this.props.ecoScoreData.a}{\" \"}\n                                {this.props.ecoScoreData.a > 1 ? \" produits\" : \" produit\"}\n                            </span>\n                            <img\n                                className=\"stats-ecoscore-image\"\n                                src=\"/images/utils/ecoScoreA.png\"\n                                alt=\"\"\n                            />\n                        </div>\n                    </SwiperSlide>\n                    <SwiperSlide>\n                        <div className=\"stats-slider\">\n                            <span className=\"stats-slider-text\">\n                                {\">\"} EcoScore B : {this.props.ecoScoreData.b}{\" \"}\n                                {this.props.ecoScoreData.b > 1 ? \" produits\" : \" produit\"}\n                            </span>\n                            <img\n                                className=\"stats-ecoscore-image\"\n                                src=\"/images/utils/ecoScoreB.png\"\n                                alt=\"\"\n                            />\n                        </div>\n                    </SwiperSlide>\n                    <SwiperSlide>\n                        <div className=\"stats-slider\">\n                            <span className=\"stats-slider-text\">\n                                {\">\"} EcoScore C : {this.props.ecoScoreData.c}{\" \"}\n                                {this.props.ecoScoreData.c > 1 ? \" produits\" : \" produit\"}\n                            </span>\n                            <img\n                                className=\"stats-ecoscore-image\"\n                                src=\"/images/utils/ecoScoreC.png\"\n                                alt=\"\"\n                            />\n                        </div>\n                    </SwiperSlide>\n                    <SwiperSlide>\n                        <div className=\"stats-slider\">\n                            <span className=\"stats-slider-text\">\n                                {\">\"} EcoScore D : {this.props.ecoScoreData.d}{\" \"}\n                                {this.props.ecoScoreData.d > 1 ? \" produits\" : \" produit\"}\n                            </span>\n                            <img\n                                className=\"stats-ecoscore-image\"\n                                src=\"/images/utils/ecoScoreD.png\"\n                                alt=\"\"\n                            />\n                        </div>\n                    </SwiperSlide>\n                    <SwiperSlide>\n                        <div className=\"stats-slider\">\n                            <span className=\"stats-slider-text\">\n                                {\">\"} EcoScore E : {this.props.ecoScoreData.e}{\" \"}\n                                {this.props.ecoScoreData.e > 1 ? \" produits\" : \" produit\"}\n                            </span>\n                            <img\n                                className=\"stats-ecoscore-image\"\n                                src=\"/images/utils/ecoScoreE.png\"\n                                alt=\"\"\n                            />\n                        </div>\n                    </SwiperSlide>\n                    <SwiperSlide>\n                        <div className=\"stats-slider\">\n                            <span className=\"stats-slider-text\">\n                                {\">\"} EcoScore Inconnu : {this.props.ecoScoreData.unknown}{\" \"}\n                                {this.props.ecoScoreData.unknown > 1 ? \" produits\" : \" produit\"}\n                            </span>\n                        </div>\n                    </SwiperSlide>\n                </React.Fragment>\n            );\n        }\n        return slides;\n    };\n\n    render = () => {\n        return (\n            <React.Fragment>\n                <div className=\"stats-chart-pie\">{this.displayChart()}</div>\n                <div className=\"stats-chart-slider\">\n                    <Swiper\n                        spaceBetween={0}\n                        slidesPerView={1}\n                        centeredSlides={true}\n                        onSlideChange={(i) => this.onSlideChange(i.activeIndex)}\n                        onSwiper={(swiper) => this.setState({ swiper: swiper })}\n                    >\n                        {this.displaySlides()}\n                    </Swiper>\n                </div>\n            </React.Fragment>\n        );\n    };\n}\n\nexport default DoughnutChartEcoScore;\n","import React from \"react\";\nimport { Swiper, SwiperSlide } from \"swiper/react\";\n// Import Swiper styles\nimport \"swiper/swiper-bundle.css\";\n\n//Import Bar Chart\nimport Chart from \"react-apexcharts\";\n\nimport fruits from \"../../assets/images/fruits-vegetables-basket-by-oblik-studio.svg\";\nimport { motion } from \"framer-motion\";\n\nconst monthNames = [\n    \"Janvier\",\n    \"Février\",\n    \"Mars\",\n    \"Avril\",\n    \"Mai\",\n    \"Juin\",\n    \"Juillet\",\n    \"Août\",\n    \"Septembre\",\n    \"Octobre\",\n    \"Novembre\",\n    \"Décembre\",\n];\n\nclass BarChartCarbonImpact extends React.Component {\n    state = {\n        selectedSegment: 0,\n        options: {\n            chart: {\n                toolbar: {\n                    show: false,\n                },\n                dropShadow: {\n                    enabled: true,\n                    top: 0,\n                    left: 0,\n                    blur: 2,\n                    opacity: 0.5,\n                },\n            },\n            plotOptions: {\n                bar: {\n                    borderRadius: 5,\n                    horizontal: true,\n                },\n            },\n            xaxis: {\n                categories: [\"Janvier\", \"Février\", \"Mars\", \"Avril\", \"Mai\"],\n                labels: {\n                    style: {\n                        fontSize: \"12px\",\n                        fontFamily: \"Comfortaa\",\n                        fontColor: \"#1b3044\",\n                    },\n                },\n                title: {\n                    text: \"CO₂ équivalent (kg)\",\n                    style: {\n                        fontSize: \"12px\",\n                        fontFamily: \"Comfortaa\",\n                        fontColor: \"#1b3044\",\n                    },\n                },\n            },\n            yaxis: {\n                labels: {\n                    style: {\n                        fontSize: \"12px\",\n                        fontFamily: \"Comfortaa\",\n                        fontColor: \"#1b3044\",\n                    },\n                },\n            },\n            dataLabels: {\n                enabled: true,\n                style: {\n                    fontSize: \"10px\",\n                    fontFamily: \"Comfortaa\",\n                },\n            },\n            noData: {\n                text: \"Chargement...\",\n            },\n            fill: {\n                colors: [\"#ff914d\"],\n            },\n            grid: {\n                xaxis: {\n                    lines: {\n                        show: true,\n                    },\n                },\n                yaxis: {\n                    lines: {\n                        show: false,\n                    },\n                },\n            },\n        },\n    };\n\n    displayChart = () => {\n        let chart = <React.Fragment></React.Fragment>;\n        if (this.props.carbonImpactData && this.props.cartedProduct > 0) {\n            let dataSize = this.props.carbonImpactData.data.length;\n            let xaxis = [];\n            let now;\n\n            switch (this.props.carbonImpactData.unit) {\n                case \"weekly\":\n                    let d = new Date();\n                    d.setHours(0, 0, 0, 0);\n                    d.setDate(d.getDate() + 4 - (d.getDay() || 7));\n                    let yearStart = new Date(d.getFullYear(), 0, 1);\n                    now = Math.ceil(((d - yearStart) / 86400000 + 1) / 7);\n                    for (let i = dataSize - 1; i >= 0; i--) {\n                        xaxis.push(\"Semaine \" + (now - i));\n                    }\n                    break;\n                case \"monthly\":\n                    now = new Date().getMonth();\n                    let year = new Date().getFullYear();\n                    for (let i = dataSize - 1; i >= 0; i--) {\n                        let monthNum = now - i;\n                        if (monthNum < 0) {\n                            xaxis.push(monthNames[monthNum + 12] + \" \" + (year - 1));\n                        } else {\n                            xaxis.push(monthNames[monthNum] + \" \" + year);\n                        }\n                    }\n                    break;\n                case \"yearly\":\n                    now = new Date().getFullYear();\n                    for (let i = dataSize - 1; i >= 0; i--) {\n                        xaxis.push((now - i).toString());\n                    }\n                    break;\n            }\n\n            this.state.options.xaxis.categories = xaxis;\n\n            let series = [\n                {\n                    name: \"CO₂ équivalent (kg)\",\n                    data: [],\n                },\n            ];\n\n            let sortedData = this.props.carbonImpactData.data;\n            console.log(sortedData);\n            sortedData.sort((a, b) => (a.offset > b.offset ? 1 : -1));\n            console.log(sortedData);\n\n            for (let i = 0; i < sortedData.length; i++) {\n                let finalValue =\n                    this.state.selectedSegment === 0\n                        ? sortedData[i].impact.toFixed(2)\n                        : (sortedData[i].impact / sortedData[i].nbProducts).toFixed(2);\n                series[0].data.push(finalValue);\n            }\n\n            chart = (\n                <React.Fragment>\n                    <div className=\"stats-chart-bar\">\n                        <Chart\n                            options={this.state.options}\n                            series={series}\n                            type=\"bar\"\n                            height={350}\n                        ></Chart>\n                    </div>\n                </React.Fragment>\n            );\n        } else {\n            chart = (\n                <motion.div\n                    className=\"stats-no-product\"\n                    initial={{ opacity: 0 }}\n                    animate={{ opacity: 1 }}\n                    exit={{ opacity: 0 }}\n                >\n                    <div>\n                        <img src={fruits} className=\"logo\" alt=\"Fruits\" />\n                        <p className=\"logo-text\">Commence à scanner des produits !</p>\n                    </div>\n                </motion.div>\n            );\n        }\n        return chart;\n    };\n\n    onSlideChange = (index) => {\n        this.setState({ selectedSegment: this.state.selectedSegment === 0 ? 1 : 0 });\n    };\n\n    displaySlides = () => {\n        let slides = <React.Fragment></React.Fragment>;\n        if (this.props.carbonImpactData && this.props.cartedProduct > 0) {\n            slides = (\n                <React.Fragment>\n                    <SwiperSlide>\n                        <div className=\"stats-slider\">\n                            <span className=\"stats-slider-text\">{\">\"} Impact Carbone total</span>\n                        </div>\n                    </SwiperSlide>\n                    <SwiperSlide>\n                        <div className=\"stats-slider\">\n                            <span className=\"stats-slider-text\">\n                                {\">\"} Impact Carbone par produit\n                            </span>\n                        </div>\n                    </SwiperSlide>\n                </React.Fragment>\n            );\n        }\n        return slides;\n    };\n\n    render = () => {\n        return (\n            <React.Fragment>\n                {this.displayChart()}\n                <div className=\"stats-chart-slider\">\n                    <Swiper\n                        spaceBetween={0}\n                        slidesPerView={1}\n                        centeredSlides={true}\n                        onSlideChange={(i) => this.onSlideChange(i.activeIndex)}\n                        onSwiper={(swiper) => this.setState({ swiper: swiper })}\n                    >\n                        {this.displaySlides()}\n                    </Swiper>\n                </div>\n            </React.Fragment>\n        );\n    };\n}\n\nexport default BarChartCarbonImpact;\n","import React from \"react\";\nimport Navbar from \"../components/Navbar/Navbar\";\nimport DoughnutChartEcoScore from \"../components/Charts/DoughnutChartEcoScore\";\nimport BarChartCarbonImpact from \"../components/Charts/BarChartCarbonImpact\";\nimport \"./Product.css\";\nimport { Link } from \"react-router-dom\";\nimport jwt from \"jsonwebtoken\";\n\nclass Statistics extends React.Component {\n    state = {\n        ecoScoreData: undefined,\n        carbonImpactData: undefined,\n        username: undefined,\n        scannedProduct: undefined,\n        cartedProduct: undefined,\n        userId: undefined,\n        value: 0,\n    };\n\n    Verify = () => {\n        let isExpired = true;\n        const token = localStorage.getItem(\"token\");\n        if (token) {\n            var decodedToken = jwt.decode(token, { complete: true });\n            var dateNow = new Date();\n            if (decodedToken.payload.exp >= dateNow.getTime() / 1000) {\n                isExpired = false;\n            }\n        }\n        if (isExpired === false) {\n            this.setState({ connected: true });\n        }\n    };\n\n    componentDidMount = () => {\n        this.Verify();\n        let userId = localStorage.getItem(\"userId\");\n        if (userId) {\n            this.setState({ userId: userId });\n        }\n        this.loadUserData(userId);\n        this.loadEcoScoreData(userId, \"fromBeginning\");\n        this.loadCarbonImpactData(userId, \"fromBeginning\");\n    };\n\n    loadUserData = (userId) => {\n        fetch(\n            `https://api.lowympact.fr/api/v1/users/${userId}`,\n            // `http://localhost:8080/api/v1/users/${userId}`,\n            {\n                method: \"get\",\n                credentials: \"include\",\n                headers: new Headers({\n                    authorization: localStorage.getItem(\"token\"),\n                    \"api-key\": \"99d8fb95-abdd-4885-bf6c-3a81d8874043\",\n                    \"Content-Type\": \"application/json\",\n                }),\n            }\n        )\n            .then((response) => response.json())\n            .then((res) => {\n                console.log(res);\n                this.setState({\n                    username: res?.data?.username,\n                    scannedProduct: res?.scannedProduct,\n                    cartedProduct: res?.cartedProduct,\n                });\n            });\n    };\n\n    loadEcoScoreData = (userId, typeAggregate) => {\n        fetch(\n            `https://api.lowympact.fr/api/v1/users/${userId}/statistics?typeStatistic=ecoscore&typeAggregate=${typeAggregate}`,\n            // `http://localhost:8080/api/v1/users/${userId}/statistics?typeStatistic=ecoscore&typeAggregate=${typeAggregate}`,\n            {\n                method: \"get\",\n                credentials: \"include\",\n                headers: new Headers({\n                    authorization: localStorage.getItem(\"token\"),\n                    \"api-key\": \"99d8fb95-abdd-4885-bf6c-3a81d8874043\",\n                    \"Content-Type\": \"application/json\",\n                }),\n            }\n        )\n            .then((response) => response.json())\n            .then((res) => {\n                console.log(res);\n                this.setState({\n                    ecoScoreData: res?.statistics?.ecoscore,\n                });\n            });\n    };\n\n    loadCarbonImpactData = (userId, typeAggregate) => {\n        fetch(\n            `https://api.lowympact.fr/api/v1/users/${userId}/statistics?typeStatistic=carbonImpact&typeAggregate=${typeAggregate}`,\n            // `http://localhost:8080/api/v1/users/${userId}/statistics?typeStatistic=carbonImpact&typeAggregate=${typeAggregate}`,\n            {\n                method: \"get\",\n                credentials: \"include\",\n                headers: new Headers({\n                    authorization: localStorage.getItem(\"token\"),\n                    \"api-key\": \"99d8fb95-abdd-4885-bf6c-3a81d8874043\",\n                    \"Content-Type\": \"application/json\",\n                }),\n            }\n        )\n            .then((response) => response.json())\n            .then((res) => {\n                console.log(res);\n                this.setState({\n                    carbonImpactData: res?.statistics?.carbonImpact,\n                });\n            });\n    };\n\n    displayStats = () => {\n        let scannedProduct = <React.Fragment />;\n        let cartedProduct = <React.Fragment />;\n\n        if (this.state.scannedProduct !== undefined) {\n            scannedProduct = (\n                <div className=\"stats-header-text\">\n                    <span className={\"circle-stats color_score_stats\"}>⬤ </span>\n                    {this.state.scannedProduct > 1 ? \"Produits scannés :\" : \"Produit scanné :\"}\n                    <span className=\"uppercase \"> {this.state.scannedProduct}</span>\n                </div>\n            );\n        }\n\n        if (this.state.cartedProduct !== undefined) {\n            cartedProduct = (\n                <div className=\"stats-header-text\">\n                    <span className={\"circle-stats color_score_stats\"}>⬤ </span>\n                    {this.state.cartedProduct > 1 ? \"Produits achetés :\" : \"Produit acheté :\"}\n                    <span className=\"uppercase \"> {this.state.cartedProduct}</span>\n                </div>\n            );\n        }\n\n        return (\n            <React.Fragment>\n                {scannedProduct}\n                {cartedProduct}\n            </React.Fragment>\n        );\n    };\n\n    handleChange = (event, newValue) => {\n        this.setState({ value: newValue });\n    };\n\n    displayNavbar = () => {\n        let retour = (\n            <div className=\"stats-navbar-container\">\n                <button\n                    className={\n                        this.state.value === 0\n                            ? \"stats-navbar-button selected\"\n                            : \"stats-navbar-button\"\n                    }\n                    onClick={() => this.handleChange(\"\", 0)}\n                >\n                    EcoScore\n                </button>\n                <button\n                    className={\n                        this.state.value === 1\n                            ? \"stats-navbar-button selected\"\n                            : \"stats-navbar-button\"\n                    }\n                    onClick={() => this.handleChange(\"\", 1)}\n                >\n                    Impact Carbone\n                </button>\n                <div\n                    className={\n                        this.state.value === 0 ? \"navbar-under nav-left\" : \"navbar-under nav-right\"\n                    }\n                ></div>\n            </div>\n        );\n        return retour;\n    };\n\n    render = () => {\n        return (\n            <React.Fragment>\n                <div className=\"stats-page-container\">\n                    <div className=\"stats-header-container\">\n                        <div className=\"stats-profil-link\">\n                            <Link to=\"/profil\"> {\"<\"} Profil</Link>\n                        </div>\n                        <img className=\"stats-bitmap-image\" src=\"/images/utils/bitmap.png\" alt=\"\" />\n                    </div>\n\n                    <div className=\"stats-welcome\">\n                        <span className=\"stats-welcome-text\">\n                            {this.state.username\n                                ? this.state.username + \", voici ton récapitulatif Lowympact...\"\n                                : \"\"}\n                        </span>\n                    </div>\n\n                    <div className=\"stats-text-container\">{this.displayStats()}</div>\n\n                    {this.displayNavbar()}\n\n                    {this.state.value === 0 ? (\n                        <DoughnutChartEcoScore\n                            ecoScoreData={this.state.ecoScoreData}\n                            scannedProduct={this.state.scannedProduct}\n                            cartedProduct={this.state.cartedProduct}\n                        ></DoughnutChartEcoScore>\n                    ) : (\n                        <BarChartCarbonImpact\n                            carbonImpactData={this.state.carbonImpactData}\n                            scannedProduct={this.state.scannedProduct}\n                            cartedProduct={this.state.cartedProduct}\n                        ></BarChartCarbonImpact>\n                    )}\n\n                    <Navbar />\n                </div>\n            </React.Fragment>\n        );\n    };\n}\n\nexport default Statistics;\n\nconst delay = (ms) => new Promise((res) => setTimeout(res, ms));\n","import React, { Component } from \"react\";\nimport Quagga from \"quagga\";\n\nclass Scanner extends Component {\n    componentDidMount() {\n        Quagga.init(\n            {\n                inputStream: {\n                    type: \"LiveStream\",\n                    constraints: {\n                        width: 640,\n                        height: 480,\n                        facingMode: \"environment\", // or user\n                    },\n                },\n                locator: {\n                    patchSize: \"medium\",\n                    halfSample: true,\n                },\n                numOfWorkers: 4,\n                decoder: {\n                    readers: [\"ean_reader\"],\n                },\n                debug: {\n                    drawBoundingBox: true,\n                    showFrequency: true,\n                    drawScanline: true,\n                    showPattern: true,\n                },\n                multiple: false,\n                locate: true,\n            },\n            function (err) {\n                if (err) {\n                    return console.log(err);\n                }\n                Quagga.start();\n            }\n        );\n        Quagga.onDetected(this._onDetected);\n    }\n\n    componentWillUnmount() {\n        Quagga.offDetected(this._onDetected);\n    }\n\n    _onDetected = (result) => {\n        this.props.onDetected(result);\n    };\n\n    render() {\n        return <div id=\"interactive\" className=\"viewport\" />;\n    }\n}\n\nexport default Scanner;\n","import React, { Component } from \"react\";\nimport Scanner from \"./Scanner\";\n\nclass Scan_home extends Component {\n    state = {\n        scanning: false,\n        status: \"\",\n        results: [],\n    };\n\n    _scan = () => {\n        console.log(\"hey\");\n        this.setState({ scanning: !this.state.scanning, status: \"\" });\n    };\n\n    _onDetected = (result) => {\n        console.log(result);\n        this.setState(\n            {\n                results: [result],\n                scanning: false,\n                status: \"waiting\",\n            },\n            () => {\n                setTimeout(() => {\n                    this.setState({\n                        scanning: true,\n                        status: \"scanning\",\n                        results: [],\n                    });\n                }, 1000);\n            }\n        );\n    };\n\n    render() {\n        console.log(\"Results: \", this.state.results);\n        return (\n            <div>\n                <div className=\"header\">\n                    <div>Status: {this.state.status}</div>\n                    <div onClick={this._scan}>{this.state.scanning ? \"Stop\" : \"Start\"}</div>\n                    <ul className=\"results\">\n                        {this.state.results.map((result, i) => (\n                            <div key={result.codeResult.code + i}>\n                                {result?.codeResult?.code} [{result?.codeResult?.format}]\n                            </div>\n                        ))}\n                    </ul>\n                </div>\n                {this.state.scanning ? <Scanner onDetected={this._onDetected} /> : null}\n            </div>\n        );\n    }\n}\n\nexport default Scan_home;\n","import React, { Component } from \"react\";\nimport { BrowserRouter as Router, Route, Redirect, Switch } from \"react-router-dom\";\nimport { AnimatePresence } from \"framer-motion\";\n\nimport \"./App.css\";\nimport History from \"./pages/History\";\nimport Error404 from \"./pages/Error404\";\nimport Login from \"./pages/Login\";\nimport Product from \"./pages/Product\";\nimport Profil from \"./pages/Profil\";\nimport Signup from \"./pages/Signup\";\nimport Signin from \"./pages/Signin\";\nimport ProfileConfiguration from \"./pages/ProfileConfiguration\";\nimport Statistics from \"./pages/Statistics\";\nimport Scan_home from \"./components/Test/Scan_home\";\n\nclass App extends Component {\n    render() {\n        return (\n            <Router>\n                <AnimatePresence exitBeforeEnter={true}>\n                    <Switch>\n                        {/* Front Pages */}\n                        <Route path=\"/history\" component={History} exact key={1} />\n                        <Route path=\"/profil\" component={Profil} exact key={2} />\n                        <Route path=\"/login\" component={Login} exact />\n                        <Route path=\"/\" component={Login} exact key={1} />\n                        <Route path=\"/products/:barcode/:bcProductId\" component={Product} exact />\n                        <Route path=\"/products/:barcode\" component={Product} exact />\n                        <Route path=\"/signup\" component={Signup} exact />\n                        <Route path=\"/signin\" component={Signin} exact />\n                        <Route path=\"/configuration\" component={ProfileConfiguration} exact />\n                        <Route path=\"/stats\" component={Statistics} exact />\n                        <Route path=\"/test\" component={Scan_home} exact />\n                        {/* Errors Pages */}\n                        <Route path=\"/error404\" component={Error404} />\n                        <Redirect to=\"/error404\" />\n                        {/* <Route path=\"/MAINTENANCE\" component={ Maintenance } /> */}\n                    </Switch>\n                </AnimatePresence>\n                {/* </Suspense> */}\n            </Router>\n        );\n    }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}