{"version":3,"sources":["assets/images/fruits-vegetables-basket-by-oblik-studio.svg","components/Button/ButtonHistory.js","components/Button/ButtonProfil.js","components/Button/ButtonScan.js","components/Scan/Scanner.js","components/Scan/Scan.js","components/Navbar/Navbar.js","assets/images/logo.svg","assets/images/bitmap.png","components/Header/Header.js","pages/History.js","pages/Error404.js","components/Button/ButtonCreateAccount.js","components/Button/ButtonLogin.js","components/Button/ButtonNoAccount.js","pages/Login.js","components/Traceability/leaflet-curve/leaflet.curve.js","components/Traceability/leaflet-curve/Curve.js","components/Traceability/Traceability.js","components/Environnement/Alternatives.js","components/Environnement/Origins.js","components/Environnement/EmpreinteCarbone.js","components/Environnement/Environnement.js","pages/Product.js","components/Labels/Labels.js","pages/Profil.js","components/Button/ButtonSignup.js","pages/Signup.js","components/Button/ButtonSignin.js","pages/Signin.js","components/Button/ButtonChangePassword.js","assets/users/users.js","pages/ProfileConfiguration.js","components/Charts/DoughnutChartEcoScore.js","components/Charts/BarChartCarbonImpact.js","pages/Statistics.js","App.js","reportWebVitals.js","index.js"],"names":["ButtonHistory","className","ButtonProfil","ButtonScan","Scanner","state","error","componentDidMount","a","navigator","mediaDevices","enumerateDevices","devices","videoDevices","forEach","device","kind","label","match","push","console","log","maxResolution","i","getUserMedia","video","deviceId","exact","then","stream","getVideoTracks","track","capabilities","getCapabilities","height","max","usedCameraId","getTracks","stop","err","Quagga","init","inputStream","type","constraints","focusMode","width","min","aspectRatio","locator","patchSize","halfSample","locate","area","top","right","left","bottom","numOfWorkers","window","hardwareConcurrency","decoder","readers","debug","drawBoundingBox","showFrequency","drawScanline","showPattern","multiple","singleChannel","setState","start","props","setQuagga","onDetected","_onDetected","result","offDetected","this","Fragment","id","href","Component","Scan","scanning","status","results","reading","barcode","undefined","bcProductId","quagga","_scan","res","codeResult","code","fetch","response","json","showScanner","handleScan","data","arr","split","length","handleError","displayQrCode","delay","onError","onScan","style","showViewFinder","displayBarCode","map","switchReader","redirect","to","onClick","onChange","uncheckedIcon","checkedIcon","checked","onColor","offColor","Navbar","updateWindowDimensions","innerHeight","handleScannerButton","bool","render","history","location","pathname","addEventListener","removeEventListener","React","Header","src","blob","alt","logo","RenderHistoryItem","labelColor","item","pathProduct","name","motion","div","initial","opacity","animate","exit","image","brand","color","marginRight","History","userId","localStorage","getItem","token","loadHistoryInformations","loadLocalStorageHistory","method","credentials","headers","Headers","authorization","items","loading","JSON","parse","itemList","Object","keys","fruits","Error404","ButtonCreateAccount","ButtonLogin","ButtonNoAccount","Login","Verify","queryString","search","urlParams","URLSearchParams","innerWidth","get","assign","isExpired","decodedToken","jwt","decode","complete","dateNow","Date","getTime","payload","exp","L","Curve","Path","extend","options","initialize","path","setOptions","_initialUpdate","_setPath","getPath","_coords","setPath","redraw","getBounds","_bounds","_computeBounds","lastPoint","lastCommand","coord","bound","LatLngBounds","String","lat","latLng","lng","controlPoint1","controlPoint2","endPoint","diffLat","diffLng","controlPoint","getCenter","_update","_map","_updatePath","_renderer","_updatecurve","_project","lastCoord","curCommand","curPoint","_points","latLngToLayerPoint","curve","SVG","include","layer","_curvePointsToPath","_path","getTotalLength","dashArray","strokeDasharray","strokeDashoffset","points","point","str","x","y","positions","option","getOptions","fromProps","toProps","leafletElement","setStyleIfChanged","propTypes","children","PropTypes","oneOfType","arrayOf","node","object","array","isRequired","withLeaflet","Traceability","zoom","swiper","currentIndex","getMaterialIcon","mode","getTransportMode","getTranslation","displaySlides","slides","products","product","pastille","TransportCO2Impact","value","transport","productsOutput","productName","seller","localisation","city","country","buyer","Math","round","dist","handleMarkerClick","latlng","index","elem","document","getElementsByClassName","scrollIntoView","behavior","slideTo","p","getZoomRatio","latitude","longitude","flyTo","duration","onSlideChange","parseFloat","long","displayMarker","markers","icon","icon2","marker1","lat1","long1","marker2","lat2","long2","zIndex","Icon","iconUrl","iconRetinaUrl","iconSize","Point","Marker","zIndexOffset","position","curves","setAttribute","getCurveOptions","fill","totalCO2Traceability","toFixed","Map","center","minZoom","scrollWheelZoom","dragging","maxBounds","maxBoundsViscosity","ref","getBottomRef","whenCreated","TileLayer","attribution","url","spaceBetween","slidesPerView","centeredSlides","activeIndex","onSwiper","toRadian","degree","PI","origin","destination","distance","lon1","lon2","deltaLat","deltaLon","pow","sin","cos","asin","sqrt","getDistance","latlng1","latlng2","offsetX","offsetY","r","theta","atan2","r2","theta2","midpointX","Alternatives","no_alternative","renderListAlternatives","listItems","img_url","RenderColor","alternativesloop","alternativesList","alternatives","alternatives_a","alternatives_b","alternatives_c","alternatives_d","sort","b","eco_score","c","d","ecoScore","alternatives_title","labelLevel","Origins","polygon","activeCountry","getCountries","setActiveCountry","origins","success","geo","coordinates","poly","Polygon","fillColor","EmpreinteCarbone","alea","setAlea","nb","dataEcoScore","agribalyse","co2_total","repartition","percent","co2_agriculture","co2_transportation","co2_packaging","co2_processing","co2_distribution","co2_consumption","equivalent","getEquivalent","circle","co2","Environnement","materials","getColor","note","getColorImpact","getLabel","getLabelImpact","getLabelImpactPackaging","getColorImpactPackaging","displayPackagingDetailImpact","adjustments","packaging","packagings","material","filter","pos","indexOf","separator","displayPackagingImpact","Product","params","productImageUrl","genericName","connected","productData","cart","countries","isFlipping","component","bottomComponent","loadHistory","loadFromOpenFoodFacts","loadProductInformations","handleBarCodeUpdate","traceability","impact","transportCO2Impact","loadAlternatives","score","alternativesInfos","image_url","product_name","generic_name","ecoscore_grade","ecoscore_data","origins_hierarchy","saveHistory","scoreSearch","categories_properties","Authorization","quantity","body","stringify","bcProductAddress","exist","find","element","brands","setItem","addToCart","ecoscore","flip","quantityDelta","carbonImpact","removeFromCart","event","imageFlip","transform","displayImage","scoreClass","handleChange","newValue","displayNavbar","retour","depth","displayTranportImpact","ms","Promise","setTimeout","Profil","disconnect","clear","displayConnectedProfil","displayUnconnectedProfil","ButtonSignup","validEmail","RegExp","Signup","userName","email","password","confirmPassword","errors","submit","signUser","username","_id","handleSubmit","e","preventDefault","validate","displayErrors","test","evt","target","passwordConfirm","ButtonSignin","Signin","Connect","loginSuccessful","onPasswordChange","passwordInput","emailInput","ButtonChangePassword","USERS","ProfileConfiguration","currentPassword","newPassword","user","changeUserInfo","loadUserInfo","placeholder","DoughnutChartEcoScore","selectedSegment","displayChart","chart","ecoScoreData","cartedProduct","title","unknown","lineWidth","paddingAngle","radius","PieChart","defaultProps","animationDuration","dataEntry","percentage","labelStyle","fontSize","fontFamily","labelPosition","segmentsStyle","transition","cursor","segmentsShift","monthNames","BarChartCarbonImpact","toolbar","show","dropShadow","enabled","blur","plotOptions","bar","borderRadius","horizontal","xaxis","categories","labels","fontColor","text","yaxis","dataLabels","noData","colors","grid","lines","carbonImpactData","now","dataSize","unit","setHours","setDate","getDate","getDay","yearStart","getFullYear","ceil","getMonth","year","monthNum","toString","series","sortedData","offset","finalValue","nbProducts","Statistics","scannedProduct","loadUserData","loadEcoScoreData","loadCarbonImpactData","typeAggregate","statistics","displayStats","App","AnimatePresence","exitBeforeEnter","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.ef3ecff4.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/fruits-vegetables-basket-by-oblik-studio.7d5e1c64.svg\";","import \"./ButtonNavBar.css\";\n\nfunction ButtonHistory() {\n    return (\n        <div>\n            <div className=\"button-logo\">\n                <span className=\"material-icons\">history</span>\n            </div>\n            <div>Historique</div>\n        </div>\n    );\n}\n\nexport default ButtonHistory;\n","function ButtonProfil() {\n    return (\n        <div>\n            <div>\n                <span className=\"material-icons\">person</span>\n            </div>\n            <div>Profil</div>\n        </div>\n    );\n}\n\nexport default ButtonProfil;\n","import { React } from \"react\";\n\nfunction ButtonScan() {\n    return (\n        <div>\n            <div className=\"navbar-scan-icon\">\n                <span className=\"material-icons\">qr_code_scanner</span>\n            </div>\n        </div>\n    );\n}\n\nexport default ButtonScan;\n","import React, { Component } from \"react\";\nimport Quagga from \"quagga\";\n\nclass Scanner extends Component {\n    state = {\n        error: false,\n    };\n    componentDidMount = async () => {\n        let usedCameraId;\n        const devices = await navigator.mediaDevices.enumerateDevices();\n        let videoDevices = [];\n        devices.forEach((device) => {\n            if (device.kind === \"videoinput\") {\n                if (device.label.match(/back/) != null) {\n                    //console.log(\"Found video device: \" + JSON.stringify(device));\n                    videoDevices.push(device);\n                }\n            }\n        });\n\n        console.log(videoDevices);\n\n        // open every video device and dump its characteristics\n\n        let maxResolution = -1;\n        for (let i in videoDevices) {\n            const device = videoDevices[i];\n            // console.log(\"Opening video device \" + device.deviceId + \" (\" + device.label + \")\");\n\n            await navigator.mediaDevices\n                .getUserMedia({\n                    video: { deviceId: { exact: device.deviceId } },\n                })\n                .then(\n                    (stream) => {\n                        stream.getVideoTracks().forEach((track) => {\n                            const capabilities = track.getCapabilities();\n\n                            if (capabilities.height.max >= maxResolution) {\n                                maxResolution = capabilities.height.max;\n                                usedCameraId = device.deviceId;\n                            }\n\n                            //console.log(\"Track capabilities: \" + JSON.stringify(capabilities));\n                        });\n\n                        stream.getTracks().forEach((track) => track.stop());\n                    },\n                    (err) => console.log(err)\n                );\n        }\n\n        Quagga.init(\n            {\n                inputStream: {\n                    type: \"LiveStream\",\n                    constraints: {\n                        deviceId: usedCameraId,\n                        focusMode: \"continuous\",\n                        width: { min: 1920 },\n                        height: { min: 1080 },\n                        aspectRatio: {\n                            min: 1,\n                            max: 2,\n                        },\n                    },\n                },\n                locator: {\n                    patchSize: \"normal\",\n                    halfSample: false,\n                },\n                locate: false,\n                area: {\n                    top: \"25%\",\n                    right: \"25%\",\n                    left: \"25%\",\n                    bottom: \"25%\",\n                },\n                numOfWorkers: window.navigator.hardwareConcurrency || 2,\n                decoder: {\n                    readers: [\"ean_reader\"],\n                },\n                debug: {\n                    drawBoundingBox: true,\n                    showFrequency: true,\n                    drawScanline: true,\n                    showPattern: true,\n                },\n                multiple: false,\n                singleChannel: false,\n            },\n            (err) => {\n                if (err) {\n                    Quagga.init(\n                        {\n                            inputStream: {\n                                type: \"LiveStream\",\n                                constraints: {\n                                    deviceId: usedCameraId,\n                                    focusMode: \"continuous\",\n                                    width: { min: 960 },\n                                    height: { min: 540 },\n                                    aspectRatio: {\n                                        min: 1,\n                                        max: 2,\n                                    },\n                                },\n                            },\n                            locator: {\n                                patchSize: \"normal\",\n                                halfSample: false,\n                            },\n                            locate: false,\n                            area: {\n                                top: \"25%\",\n                                right: \"25%\",\n                                left: \"25%\",\n                                bottom: \"25%\",\n                            },\n                            numOfWorkers: window.navigator.hardwareConcurrency || 2,\n                            decoder: {\n                                readers: [\"ean_reader\"],\n                            },\n                            debug: {\n                                drawBoundingBox: true,\n                                showFrequency: true,\n                                drawScanline: true,\n                                showPattern: true,\n                            },\n                            multiple: false,\n                            singleChannel: false,\n                        },\n                        (err) => {\n                            if (err) {\n                                this.setState({ error: true });\n                                console.log(err);\n                                return false;\n                            }\n                            Quagga.start();\n                        }\n                    );\n                    return false;\n                }\n                Quagga.start();\n            }\n        );\n        this.props.setQuagga(Quagga);\n        Quagga.onDetected(this._onDetected);\n    };\n\n    componentWillUnmount() {\n        Quagga.offDetected(this._onDetected);\n    }\n\n    _onDetected = async (result) => {\n        let stop = await this.props.onDetected(result);\n        console.log(stop);\n        if (stop) {\n            Quagga.stop();\n        }\n    };\n\n    render() {\n        return (\n            <React.Fragment>\n                <div id=\"interactive\" className=\"viewport\" />\n                {this.state.error ? (\n                    <div className=\"scan-error\">\n                        Il semblerait que votre caméra ne soit pas détectée. Essayez de changer de\n                        navigateur. Si le problème persiste, contactez-nous{\" \"}\n                        <a href=\"mailto:corentin.branchereau@insa-lyon.fr?Subject=Lowympact-camera not working\">\n                            via ce lien\n                        </a>\n                    </div>\n                ) : (\n                    <React.Fragment />\n                )}\n            </React.Fragment>\n        );\n    }\n}\n\nexport default Scanner;\n","import React, { Component } from \"react\";\nimport Scanner from \"./Scanner\";\nimport QrReader from \"react-qr-reader\";\nimport Switch from \"react-switch\";\nimport { Redirect } from \"react-router-dom\";\n\nclass Scan extends Component {\n    state = {\n        scanning: true,\n        status: \"\",\n        results: [],\n        usedCameraId: \"3f6fc4177028f25c3e8215f4444838450630b8d656c627ef511346545d37f302\",\n        devices: [],\n        reading: 0, //false : barcode - true: qrcode\n        barcode: undefined,\n        bcProductId: undefined,\n        Quagga: undefined,\n    };\n\n    setQuagga = (quagga) => {\n        console.log(quagga);\n        if (this.state.Quagga) {\n            this.state.Quagga.stop();\n        }\n        this.setState({ Quagga: quagga });\n    };\n\n    _scan = () => {\n        this.setState({ scanning: !this.state.scanning, status: \"\" });\n    };\n\n    _onDetected = async (res) => {\n        console.log(res);\n        if (res) {\n            if (res.codeResult && res.codeResult.code) {\n                this.setState({\n                    results: [res],\n                    scanning: true,\n                    status: \"waiting\",\n                });\n                let response = await fetch(\n                    `https://world.openfoodfacts.org/api/v0/product/${res.codeResult.code}.json/`\n                );\n                let result = await response.json();\n                console.log(result);\n                if (result.status !== 0) {\n                    this.setState({\n                        scanning: false,\n                        status: \"found\",\n                        barcode: res.codeResult.code,\n                    });\n                    this.props.showScanner(false);\n                    if (this.state.Quagga) this.state.Quagga.stop();\n                    return true;\n                } else {\n                    this.setState({\n                        scanning: true,\n                        status: \"not found\",\n                    });\n                    return false;\n                }\n            }\n        }\n    };\n\n    handleScan = (data) => {\n        if (data) {\n            let arr = data.split(\"/\");\n            if (arr.length > 1) {\n                this.setState({\n                    scanning: false,\n                    barcode: arr[4],\n                    bcProductId: arr[5],\n                    status: \"found\",\n                });\n            }\n            if (this.state.Quagga) this.state.Quagga.stop();\n        }\n    };\n    handleError = (err) => {\n        console.error(err);\n    };\n\n    displayQrCode = () => {\n        if (this.state.status !== \"found\") {\n            return (\n                <QrReader\n                    delay={300}\n                    onError={this.handleError}\n                    onScan={this.handleScan}\n                    style={{ width: \"100%\" }}\n                    showViewFinder={false}\n                />\n            );\n        } else {\n            return <React.Fragment />;\n        }\n    };\n\n    displayBarCode = () => {\n        if (this.state.status !== \"found\") {\n            return (\n                <React.Fragment>\n                    <div className=\"header\">\n                        <ul className=\"results\">\n                            {this.state.results.map((result, i) => (\n                                <div key={result.codeResult.code + i}>\n                                    {this.state.status === \"waiting\"\n                                        ? \"Vérification du code\" + result?.codeResult?.code\n                                        : \"\"}\n                                    {this.state.status === \"not found\"\n                                        ? \"code non trouvé, merci de réessayer\"\n                                        : \"\"}\n                                </div>\n                            ))}\n                        </ul>\n                    </div>\n                    {this.state.scanning ? (\n                        <Scanner\n                            onDetected={this._onDetected}\n                            setQuagga={this.setQuagga}\n                            usedCameraId={this.usedCameraId}\n                        />\n                    ) : null}\n                </React.Fragment>\n            );\n        } else {\n            return <React.Fragment />;\n        }\n    };\n\n    switchReader = () => {\n        if (this.state.reading) this.setState({ reading: false });\n        else {\n            if (this.state.Quagga) this.state.Quagga.stop();\n            this.setState({ reading: true });\n        }\n    };\n\n    render() {\n        console.log(\"Results: \", this.state.results, this.state.redirect);\n        if (\n            this.state.barcode &&\n            this.state.bcProductId &&\n            (this.props.barcode !== this.state.barcode ||\n                this.props.bcProductId !== this.state.bcProductId)\n        ) {\n            return (\n                <Redirect to={\"/products/\" + this.state.barcode + \"/\" + this.state.bcProductId} />\n            );\n        }\n        if (this.state.barcode && this.props.barcode !== this.state.barcode) {\n            return <Redirect to={\"/products/\" + this.state.barcode} />;\n        } else {\n            return (\n                <div className=\"code-reader-container\">\n                    <span\n                        className=\"close\"\n                        onClick={() => {\n                            if (this.state.Quagga) this.state.Quagga.stop();\n\n                            this.props.showScanner(false);\n                        }}\n                    >\n                        &times;\n                    </span>\n                    <div className=\"code-switch\" onClick={this.switchReader}>\n                        <div className=\"span-code-switch\">\n                            <span\n                                className={\n                                    this.state.reading ? \"material-icons\" : \"material-icons green\"\n                                }\n                            >\n                                view_week\n                            </span>\n                            <span>Barcode</span>\n                        </div>\n                        <Switch\n                            onChange={this.switchReader}\n                            uncheckedIcon={false}\n                            checkedIcon={false}\n                            checked={this.state.reading}\n                            onColor={\"#888\"}\n                            offColor={\"#888\"}\n                        />\n                        <div className=\"span-code-switch\">\n                            <span\n                                className={\n                                    !this.state.reading ? \"material-icons\" : \"material-icons green\"\n                                }\n                            >\n                                qr_code_scanner\n                            </span>\n                            <span>QR Code</span>\n                        </div>\n                    </div>\n                    {this.state.reading ? this.displayQrCode() : this.displayBarCode()}\n                </div>\n            );\n        }\n    }\n}\n\nexport default Scan;\n","import \"./Navbar.css\";\nimport React from \"react\";\nimport ButtonHistory from \"../Button/ButtonHistory\";\nimport ButtonProfil from \"../Button/ButtonProfil\";\nimport ButtonScan from \"../Button/ButtonScan\";\n// import Scan from \"../Scan/Scan\";\nimport Scan from \"../Scan/Scan\";\n// import { ScanSettings } from \"scandit-sdk\";\nimport { Link } from \"react-router-dom\";\n\nclass Navbar extends React.Component {\n    state = {\n        showScanner: false,\n        barcode: undefined,\n        bcProductId: undefined,\n        height: 0,\n    };\n\n    componentDidMount() {\n        this.updateWindowDimensions();\n        window.addEventListener(\"resize\", this.updateWindowDimensions);\n    }\n\n    componentWillUnmount() {\n        window.removeEventListener(\"resize\", this.updateWindowDimensions);\n    }\n\n    updateWindowDimensions = () => {\n        this.setState({ height: window.innerHeight });\n    };\n\n    handleScannerButton = (bool) => {\n        this.setState({ showScanner: bool });\n    };\n\n    // handleBarcode = (res) => {\n    //     if (res) {\n    //         //détecté par barcode scanner\n    //         let arr = res.split(\"/\");\n    //         if (arr.length > 1) {\n    //             this.setState({\n    //                 barcode: arr[4],\n    //                 bcProductId: arr[5],\n    //                 showScanner: false,\n    //             });\n    //         } else {\n    //             this.setState({\n    //                 barcode: arr[0],\n    //                 showScanner: false,\n    //                 bcProductId: undefined,\n    //             });\n    //         }\n    //     }\n    // };\n\n    render = () => {\n        if (this.state.height < 550) {\n            return <React.Fragment />;\n        }\n        // if (\n        //     this.state.barcode &&\n        //     this.state.bcProductId &&\n        //     (this.props.barcode !== this.state.barcode ||\n        //         this.props.bcProductId !== this.state.bcProductId)\n        // ) {\n        //     return (\n        //         <Redirect to={\"/products/\" + this.state.barcode + \"/\" + this.state.bcProductId} />\n        //     );\n        // }\n\n        // if (this.state.barcode && this.props.barcode !== this.state.barcode) {\n        //     return <Redirect to={\"/products/\" + this.state.barcode} />;\n        // }\n\n        if (!this.state.showScanner) {\n            return (\n                <React.Fragment>\n                    <div className=\"navbar-container\">\n                        <Link\n                            to=\"/history\"\n                            className={\n                                window.location.pathname === \"/history\"\n                                    ? \"navbar-link navbar-text-left navbar-selected\"\n                                    : \"navbar-link navbar-text-left \"\n                            }\n                        >\n                            <ButtonHistory />\n                        </Link>\n                        <div onClick={() => this.handleScannerButton(true)}>\n                            <div className=\"navbar-circle\">\n                                <ButtonScan />\n                            </div>\n                        </div>\n                        <span className=\"navbar-scan-text\">Scan</span>\n                        <Link\n                            to=\"/profil\"\n                            className={\n                                window.location.pathname === \"/profil\"\n                                    ? \"navbar-link navbar-text-right navbar-selected\"\n                                    : \"navbar-link navbar-text-right \"\n                            }\n                        >\n                            <ButtonProfil />\n                        </Link>\n                    </div>\n                </React.Fragment>\n            );\n        } else {\n            return (\n                // <Scan\n                //     onCrossClicked={this.handleScannerButton}\n                //     // playSoundOnScan={true}\n                //     vibrateOnScan={true}\n                //     enableTorchToggle={true}\n                //     enablePinchToZoom={true}\n                //     enableCameraSwitcher={true}\n                //     guiStyle={\"viewfinder\"}\n                //     scanSettings={\n                //         new ScanSettings({\n                //             enabledSymbologies: [\n                //                 \"qr\",\n                //                 \"ean8\",\n                //                 \"ean13\",\n                //                 \"upca\",\n                //                 \"upce\",\n                //                 \"code128\",\n                //                 \"code39\",\n                //                 \"code93\",\n                //                 \"itf\",\n                //             ],\n                //             codeDuplicateFilter: 1000,\n                //         })\n                //     }\n                //     onScan={(scanResult) => {\n                //         console.log(scanResult.barcodes[0].data);\n                //         this.handleBarcode(scanResult.barcodes[0].data);\n                //     }}\n                //     onError={(error) => {\n                //         console.error(error.message);\n                //     }}\n                // />\n                <Scan showScanner={this.handleScannerButton} history={this.props.history} />\n            );\n        }\n    };\n}\n\nexport default Navbar;\n","export default __webpack_public_path__ + \"static/media/logo.b235ef42.svg\";","export default __webpack_public_path__ + \"static/media/bitmap.6f490d5b.png\";","import './Header.css';\nimport logo from '../../assets/images/logo.svg';\nimport blob from \"../../assets/images/bitmap.png\";\n\nfunction Header() {\n  return (\n    <div>\n      <div>\n\t\t\t\t\t\t<img src={blob} className=\"blob-top\" alt=\"Blob\" />\n\t\t\t\t</div>\n        <div>\n          <img src={blob} className=\"blob-left\" alt=\"Blob\" />\n        </div>\n        <div>\n          <img src={blob} className=\"blob-right\" alt=\"Blob\" />\n        </div>\n      <div className=\"header-container\">\n        <img src={logo} className=\"header-logo\" alt=\"Logo\"/>\n        <span>Lowympact</span>\n      </div>\n    </div>\n  );\n}\n\nexport default Header;","import { React, Component, Fragment } from \"react\";\nimport fruits from \"../assets/images/fruits-vegetables-basket-by-oblik-studio.svg\";\nimport Navbar from \"../components/Navbar/Navbar\";\nimport Header from \"../components/Header/Header\";\nimport \"./History.css\";\n// import { ITEMS } from \"../assets/scanned/items\";\nimport { Link } from \"react-router-dom\";\nimport { motion } from \"framer-motion\";\n\nfunction RenderHistoryItem({ item }) {\n    var labelColor;\n    if (item.label === \"d\" || item.label === \"e\") {\n        labelColor = \"red\";\n    } else if (item.label === \"c\") {\n        labelColor = \"yellow\";\n    } else if (item.label === \"a\" || item.label === \"b\") {\n        labelColor = \"green\";\n    }\n\n    var pathProduct = \"/products/\" + item.barcode;\n    if (item.bcProductId) {\n        pathProduct += \"/\" + item.bcProductId;\n    }\n\n    // Mock Soutenance\n    if (item.barcode === \"80135463\") {\n        item.name = \"Nutella 200g\";\n    }\n\n    return (\n        <motion.div initial={{ opacity: 0 }} animate={{ opacity: 1 }} exit={{ opacity: 0 }}>\n            <Link className=\"history-item\" to={pathProduct}>\n                <div className=\"history-img-container\">\n                    <img src={item.image} alt=\"\" />\n                </div>\n                <div className=\"history-name-container\">\n                    <div className=\"history-name\">{item.name}</div>\n                    <div className=\"history-brand\">{item.brand}</div>\n                </div>\n                <div className=\"history-label-container\">\n                    <div style={{ color: labelColor }}>●</div>\n                    <div className=\"history-label\">\n                        {item.label == \"not-applicable\" ? \"\" : item.label}\n                    </div>\n                </div>\n                <div style={{ marginRight: \"10px\", color: \"rgb(41,72,102)\" }}>{\">\"}</div>\n            </Link>\n        </motion.div>\n    );\n}\n\nclass History extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            items: undefined,\n            loading: true,\n            userId: undefined,\n        };\n    }\n\n    componentDidMount = () => {\n        let userId = localStorage.getItem(\"userId\");\n        let token = localStorage.getItem(\"token\");\n        if (userId && token) {\n            this.setState({ userId: userId });\n            this.loadHistoryInformations(userId);\n        } else {\n            this.loadLocalStorageHistory(userId);\n        }\n    };\n\n    loadHistoryInformations = (userId) => {\n        fetch(\n            `https://api.lowympact.fr/api/v1/users/${userId}/history`,\n            // `http://localhost:8080/api/v1/users/${userId}/history`,\n\n            {\n                method: \"get\",\n                credentials: \"include\",\n                headers: new Headers({\n                    authorization: localStorage.getItem(\"token\"),\n                    \"Content-Type\": \"application/json\",\n                    \"api-key\": \"99d8fb95-abdd-4885-bf6c-3a81d8874043\",\n                }),\n            }\n        )\n            .then((response) => response.json())\n            .then((res) => {\n                console.log(res);\n\n                this.setState({\n                    items: res?.data,\n                    loading: false,\n                });\n            });\n    };\n\n    loadLocalStorageHistory = () => {\n        let history = JSON.parse(localStorage.getItem(\"local_history\"));\n        this.setState({\n            items: history,\n            loading: false,\n        });\n    };\n\n    render() {\n        if (this.state.items) {\n            let itemList = <Fragment />;\n            if (!this.loading) {\n                itemList = this.state.items.map((item) => {\n                    return (\n                        <div key={item.id}>\n                            <RenderHistoryItem item={item} />\n                        </div>\n                    );\n                });\n            } else {\n                itemList = (\n                    <div className=\"loader\">\n                        <img src=\"/images/utils/loading.gif\" alt=\"\" />\n                    </div>\n                );\n            }\n\n            if (Object.keys(this.state.items).length === 0)\n                return (\n                    <div>\n                        <Header />\n                        <Navbar />\n                        <motion.div\n                            className=\"App\"\n                            initial={{ opacity: 0 }}\n                            animate={{ opacity: 1 }}\n                            exit={{ opacity: 0 }}\n                        >\n                            <div>\n                                <img src={fruits} className=\"logo\" alt=\"Fruits\" />\n                                <p className=\"logo-text\">Commence à scanner des produits !</p>\n                            </div>\n                        </motion.div>\n                    </div>\n                );\n            else\n                return (\n                    <div>\n                        <div className=\"screen\">\n                            <div className=\"screen-title\"></div>\n                            {itemList}\n                        </div>\n                        <Header />\n                        <Navbar />\n                    </div>\n                );\n        } else {\n            let image = (\n                <div>\n                    <img src={fruits} className=\"logo\" alt=\"Fruits\" />\n                    <p className=\"logo-text\">Commence à scanner des produits !</p>\n                </div>\n            );\n            if (this.state.loading) {\n                image = (\n                    <div className=\"loader\">\n                        <img src=\"/images/utils/loading.gif\" alt=\"\" />\n                    </div>\n                );\n            }\n            return (\n                <div>\n                    <Header />\n                    <Navbar />\n                    <motion.div\n                        className=\"App\"\n                        initial={{ opacity: 0 }}\n                        animate={{ opacity: 1 }}\n                        exit={{ opacity: 0 }}\n                    >\n                        {image}\n                    </motion.div>\n                </div>\n            );\n        }\n    }\n}\n\nexport default History;\n","import logo from \"../assets/images/logo.svg\";\nimport { Link } from \"react-router-dom\";\n\nfunction Error404() {\n\treturn (\n\t\t<div className=\"App\">\n\t\t\t<header className=\"App-header\">\n\t\t\t\t<img src={logo} className=\"logo\" alt=\"logo\" />\n\t\t\t\t<h1>Erreur 404</h1>\n\t\t\t\t<Link to=\"/\">Retourner à l'accueil</Link>\n\t\t\t</header>\n\t\t</div>\n\t);\n}\n\nexport default Error404;\n","import '../../pages/Login.css';\nfunction ButtonCreateAccount() {\n    return (\n      <div>\n        Créer un compte\n      </div>\n    );\n  }\n  export default ButtonCreateAccount;\n","\nfunction ButtonLogin() {\n    return (\n      <div>\n        Me connecter\n      </div>\n    );\n  }\n  export default ButtonLogin;","function ButtonNoAccount() {\n\treturn <div>Continuer sans compte {\">\"}</div>;\n}\nexport default ButtonNoAccount;\n","import React from \"react\";\nimport logo from \"../assets/images/logo.svg\";\nimport fruits from \"../assets/images/fruits-vegetables-basket-by-oblik-studio.svg\";\nimport \"./Login.css\";\nimport ButtonCreateAccount from \"../components/Button/ButtonCreateAccount\";\nimport ButtonLogin from \"../components/Button/ButtonLogin\";\nimport { Link } from \"react-router-dom\";\nimport ButtonNoAccount from \"../components/Button/ButtonNoAccount\";\nimport jwt from \"jsonwebtoken\";\nimport { motion } from \"framer-motion\";\n\nclass Login extends React.Component {\n    componentDidMount = () => {\n        this.Verify();\n        const queryString = window.location.search;\n        const urlParams = new URLSearchParams(queryString);\n\n        if (window.innerWidth > 1200 && urlParams.get(\"from\") != \"website\") {\n            window.location.assign(\"https://web.lowympact.fr\");\n        }\n    };\n\n    Verify = () => {\n        let isExpired = true;\n        const token = localStorage.getItem(\"token\");\n        if (token) {\n            var decodedToken = jwt.decode(token, { complete: true });\n            var dateNow = new Date();\n            console.log(decodedToken, dateNow.getTime() / 1000);\n            if (decodedToken.payload.exp >= dateNow.getTime() / 1000) {\n                isExpired = false;\n            }\n        }\n        if (isExpired === false) {\n            console.log(\"here\");\n            this.props.history.push(`/history`); // redirection vers la page login\n        }\n    };\n    render = () => {\n        return (\n            <motion.div exit={{ opacity: 0 }}>\n                <div className=\"login-logo\">\n                    <img src={logo} className=\"logo\" alt=\"Logo\" />\n                </div>\n                <div className=\"login-lowympact\">Lowympact</div>\n                <Link to=\"/signup\" className=\"button-account\">\n                    <ButtonCreateAccount />\n                </Link>\n                <Link to=\"/signin\" className=\"button-connect\">\n                    <ButtonLogin />\n                </Link>\n                <Link to=\"/history\" className=\"button-no-account\">\n                    <ButtonNoAccount />\n                </Link>\n                <div className=\"logo-fruits\">\n                    <img src={fruits} className=\"logo\" alt=\"Fruits\" />\n                </div>\n            </motion.div>\n        );\n    };\n}\nexport default Login;\n","import L from \"leaflet\";\n\nL.Curve = L.Path.extend({\n\toptions: {},\n\n\tinitialize: function (path, options) {\n\t\t//1\n\t\tL.setOptions(this, options);\n\t\tthis._initialUpdate = true;\n\t\tthis._setPath(path);\n\t},\n\n\tgetPath: function () {\n\t\treturn this._coords;\n\t},\n\n\tsetPath: function (path, options) {\n\t\tthis._initialUpdate = true;\n\t\tthis._setPath(path);\n\t\treturn this.redraw();\n\t},\n\n\tgetBounds: function () {\n\t\treturn this._bounds;\n\t},\n\n\t_setPath: function (path) {\n\t\t//2\n\t\tthis._coords = path;\n\t\tthis._bounds = this._computeBounds();\n\t},\n\n\t_computeBounds: function () {\n\t\t//3\n\t\tvar bound = new L.LatLngBounds();\n\t\tvar lastPoint;\n\t\tvar lastCommand;\n\t\tvar coord;\n\t\tfor (var i = 0; i < this._coords.length; i++) {\n\t\t\tcoord = this._coords[i];\n\t\t\tif (typeof coord == \"string\" || coord instanceof String) {\n\t\t\t\tlastCommand = coord;\n\t\t\t} else if (lastCommand == \"H\") {\n\t\t\t\tbound.extend([lastPoint.lat, coord[0]]);\n\t\t\t\tlastPoint = new L.latLng(lastPoint.lat, coord[0]);\n\t\t\t} else if (lastCommand == \"V\") {\n\t\t\t\tbound.extend([coord[0], lastPoint.lng]);\n\t\t\t\tlastPoint = new L.latLng(coord[0], lastPoint.lng);\n\t\t\t} else if (lastCommand == \"C\") {\n\t\t\t\tvar controlPoint1 = new L.latLng(coord[0], coord[1]);\n\t\t\t\tcoord = this._coords[++i];\n\t\t\t\tvar controlPoint2 = new L.latLng(coord[0], coord[1]);\n\t\t\t\tcoord = this._coords[++i];\n\t\t\t\tvar endPoint = new L.latLng(coord[0], coord[1]);\n\n\t\t\t\tbound.extend(controlPoint1);\n\t\t\t\tbound.extend(controlPoint2);\n\t\t\t\tbound.extend(endPoint);\n\n\t\t\t\tendPoint.controlPoint1 = controlPoint1;\n\t\t\t\tendPoint.controlPoint2 = controlPoint2;\n\t\t\t\tlastPoint = endPoint;\n\t\t\t} else if (lastCommand == \"S\") {\n\t\t\t\tvar controlPoint2 = new L.latLng(coord[0], coord[1]);\n\t\t\t\tcoord = this._coords[++i];\n\t\t\t\tvar endPoint = new L.latLng(coord[0], coord[1]);\n\n\t\t\t\tvar controlPoint1 = lastPoint;\n\t\t\t\tif (lastPoint.controlPoint2) {\n\t\t\t\t\tvar diffLat = lastPoint.lat - lastPoint.controlPoint2.lat;\n\t\t\t\t\tvar diffLng = lastPoint.lng - lastPoint.controlPoint2.lng;\n\t\t\t\t\tcontrolPoint1 = new L.latLng(\n\t\t\t\t\t\tlastPoint.lat + diffLat,\n\t\t\t\t\t\tlastPoint.lng + diffLng\n\t\t\t\t\t);\n\t\t\t\t}\n\n\t\t\t\tbound.extend(controlPoint1);\n\t\t\t\tbound.extend(controlPoint2);\n\t\t\t\tbound.extend(endPoint);\n\n\t\t\t\tendPoint.controlPoint1 = controlPoint1;\n\t\t\t\tendPoint.controlPoint2 = controlPoint2;\n\t\t\t\tlastPoint = endPoint;\n\t\t\t} else if (lastCommand == \"Q\") {\n\t\t\t\tvar controlPoint = new L.latLng(coord[0], coord[1]);\n\t\t\t\tcoord = this._coords[++i];\n\t\t\t\tvar endPoint = new L.latLng(coord[0], coord[1]);\n\n\t\t\t\tbound.extend(controlPoint);\n\t\t\t\tbound.extend(endPoint);\n\n\t\t\t\tendPoint.controlPoint = controlPoint;\n\t\t\t\tlastPoint = endPoint;\n\t\t\t} else if (lastCommand == \"T\") {\n\t\t\t\tvar endPoint = new L.latLng(coord[0], coord[1]);\n\n\t\t\t\tvar controlPoint = lastPoint;\n\t\t\t\tif (lastPoint.controlPoint) {\n\t\t\t\t\tvar diffLat = lastPoint.lat - lastPoint.controlPoint.lat;\n\t\t\t\t\tvar diffLng = lastPoint.lng - lastPoint.controlPoint.lng;\n\t\t\t\t\tcontrolPoint = new L.latLng(\n\t\t\t\t\t\tlastPoint.lat + diffLat,\n\t\t\t\t\t\tlastPoint.lng + diffLng\n\t\t\t\t\t);\n\t\t\t\t}\n\n\t\t\t\tbound.extend(controlPoint);\n\t\t\t\tbound.extend(endPoint);\n\n\t\t\t\tendPoint.controlPoint = controlPoint;\n\t\t\t\tlastPoint = endPoint;\n\t\t\t} else {\n\t\t\t\tbound.extend(coord);\n\t\t\t\tlastPoint = new L.latLng(coord[0], coord[1]);\n\t\t\t}\n\t\t}\n\t\treturn bound;\n\t},\n\n\t//TODO: use a centroid algorithm instead\n\tgetCenter: function () {\n\t\treturn this._bounds.getCenter();\n\t},\n\n\t_update: function () {\n\t\t//5\n\t\tif (!this._map) {\n\t\t\treturn;\n\t\t}\n\t\tthis._updatePath();\n\t},\n\n\t_updatePath: function () {\n\t\t//6\n\t\tthis._renderer._updatecurve(this);\n\t},\n\n\t_project: function () {\n\t\t//4\n\t\tvar coord, lastCoord, curCommand, curPoint;\n\n\t\tthis._points = [];\n\n\t\tfor (var i = 0; i < this._coords.length; i++) {\n\t\t\tcoord = this._coords[i];\n\t\t\tif (typeof coord == \"string\" || coord instanceof String) {\n\t\t\t\tthis._points.push(coord);\n\t\t\t\tcurCommand = coord;\n\t\t\t} else {\n\t\t\t\tswitch (coord.length) {\n\t\t\t\t\tcase 2:\n\t\t\t\t\t\tcurPoint = this._map.latLngToLayerPoint(coord);\n\t\t\t\t\t\tlastCoord = coord;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 1:\n\t\t\t\t\t\tif (curCommand == \"H\") {\n\t\t\t\t\t\t\tcurPoint = this._map.latLngToLayerPoint([\n\t\t\t\t\t\t\t\tlastCoord[0],\n\t\t\t\t\t\t\t\tcoord[0],\n\t\t\t\t\t\t\t]);\n\t\t\t\t\t\t\tlastCoord = [lastCoord[0], coord[0]];\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tcurPoint = this._map.latLngToLayerPoint([\n\t\t\t\t\t\t\t\tcoord[0],\n\t\t\t\t\t\t\t\tlastCoord[1],\n\t\t\t\t\t\t\t]);\n\t\t\t\t\t\t\tlastCoord = [coord[0], lastCoord[1]];\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tthis._points.push(curPoint);\n\t\t\t}\n\t\t}\n\t},\n});\n\nL.curve = function (path, options) {\n\treturn new L.Curve(path, options);\n};\n\nL.SVG.include({\n\t//7\n\t_updatecurve: function (layer) {\n\t\tthis._setPath(layer, this._curvePointsToPath(layer._points));\n\t\tif (layer.options.animate) {\n\t\t\tvar path = layer._path;\n\t\t\tvar length = path.getTotalLength();\n\n\t\t\tif (!layer.options.dashArray) {\n\t\t\t\tpath.style.strokeDasharray = length + \" \" + length;\n\t\t\t}\n\n\t\t\tif (layer._initialUpdate) {\n\t\t\t\tpath.animate(\n\t\t\t\t\t[{ strokeDashoffset: length }, { strokeDashoffset: 0 }],\n\t\t\t\t\tlayer.options.animate\n\t\t\t\t);\n\t\t\t\tlayer._initialUpdate = false;\n\t\t\t}\n\t\t}\n\t},\n\n\t_curvePointsToPath: function (points) {\n\t\tvar point,\n\t\t\tcurCommand,\n\t\t\tstr = \"\";\n\t\tfor (var i = 0; i < points.length; i++) {\n\t\t\tpoint = points[i];\n\t\t\tif (typeof point == \"string\" || point instanceof String) {\n\t\t\t\tcurCommand = point;\n\t\t\t\tstr += curCommand;\n\t\t\t} else {\n\t\t\t\tswitch (curCommand) {\n\t\t\t\t\tcase \"H\":\n\t\t\t\t\t\tstr += point.x + \" \";\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"V\":\n\t\t\t\t\t\tstr += point.y + \" \";\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tstr += point.x + \",\" + point.y + \" \";\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn str || \"M0 0\";\n\t},\n});\n","// import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Path, withLeaflet } from \"react-leaflet\";\nimport { curve } from \"./leaflet.curve\";\nimport L from \"leaflet\";\n\nclass Curve extends Path {\n\tcreateLeafletElement(props) {\n\t\tconst { positions, option, ...options } = props;\n\t\treturn L.curve(positions, option, this.getOptions(options));\n\t}\n\n\tupdateLeafletElement(fromProps, toProps) {\n\t\tif (toProps.positions !== fromProps.positions) {\n\t\t\tthis.leafletElement.setPath(toProps.positions);\n\t\t}\n\t\tthis.setStyleIfChanged(fromProps, toProps);\n\t}\n}\n\nCurve.propTypes = {\n\tchildren: PropTypes.oneOfType([\n\t\tPropTypes.arrayOf(PropTypes.node),\n\t\tPropTypes.node,\n\t]),\n\toption: PropTypes.object,\n\tpositions: PropTypes.array.isRequired,\n};\n\nexport default withLeaflet(Curve);\n\n/*\n  componentWillMount() {\n    super.componentWillMount();\n    const { positions, ...options } = this.props\n    this.leafletElement = L.curve(positions, this.getOptions(options))\n  }*/\n","import React from \"react\";\nimport { Map, TileLayer, Marker } from \"react-leaflet\";\nimport \"./Traceability.css\";\nimport { Swiper, SwiperSlide } from \"swiper/react\";\nimport { Curve } from \"./leaflet-curve\";\nimport L from \"leaflet\";\n// Import Swiper styles\nimport \"swiper/swiper-bundle.css\";\n\nclass Traceability extends React.Component {\n    map = undefined;\n    state = {\n        zoom: 12,\n        swiper: undefined,\n        currentIndex: 0,\n        map: undefined,\n    };\n\n    getMaterialIcon = (mode) => {\n        switch (mode) {\n            case \"Charette\":\n                return \"directions_bike\";\n            case \"Plane\":\n                return \"flight_takeoff\";\n            case \"Train\":\n                return \"train\";\n            case \"Boat\":\n                return \"directions_boat_filled\";\n            case \"Truck\":\n                return \"local_shipping\";\n            default:\n                return \"nature_people\";\n        }\n    };\n\n    getTransportMode = (mode) => {\n        switch (mode) {\n            case \"Charette\":\n                return \"vélo\";\n            case \"Plane\":\n                return \"avion\";\n            case \"Train\":\n                return \"train\";\n            case \"Boat\":\n                return \"bateau\";\n            case \"Truck\":\n                return \"camion\";\n            default:\n                return mode;\n        }\n    };\n    getTranslation = (mode) => {\n        switch (mode) {\n            case \"maker\":\n                return \"Fabricant\";\n            case \"productor\":\n                return \"Producteur\";\n            case \"shop\":\n                return \"Revendeur\";\n            default:\n                return mode;\n        }\n    };\n\n    displaySlides = () => {\n        let slides = <React.Fragment />;\n        if (this.props.products) {\n            slides = this.props.products.map((product) => {\n                let pastille = \"product-slide-pastille past-green\";\n                if (product.TransportCO2Impact?.value > 10) {\n                    pastille = \"product-slide-pastille past-orange\";\n                }\n                if (product.TransportCO2Impact?.value > 100) {\n                    pastille = \"product-slide-pastille past-red\";\n                }\n\n                return (\n                    <SwiperSlide>\n                        <div className=\"product-slide-container\">\n                            <div className=\"product-slide-icon\">\n                                <span className=\"material-icons\">\n                                    {this.getMaterialIcon(product.transport)}\n                                </span>\n\n                                <div className=\"product-slide-name\">\n                                    <span className=\"product-slide-name-product\">\n                                        {product.productsOutput[0].productName}\n                                    </span>\n                                    <span className=\"product-slide-name-transport\">\n                                        Transport en {this.getTransportMode(product.transport)}\n                                    </span>\n                                </div>\n                            </div>\n                            <div className=\"product-slide-origin-wrapper\">\n                                <div className=\"product-transport-ui\">\n                                    <div className=\"transport-ui-circle\"></div>\n                                    <div className=\"transport-ui-tiret\"></div>\n                                    <div className=\"transport-ui-circle circle-bis\"></div>\n                                </div>\n                                <div className=\"product-slide-transport-container\">\n                                    <div className=\"product-slide-bigname\">\n                                        <span>\n                                            {product.seller.localisation.city},{\" \"}\n                                            {product.seller.localisation.country}\n                                        </span>\n                                    </div>\n                                    <div className=\"product-slide-lowername2\">\n                                        {this.getTranslation(product.seller?.type)}\n                                        {\": \"}\n                                        {product.seller?.name}\n                                    </div>\n\n                                    <div className=\"product-slide-bigname bigname-lower\">\n                                        <span>\n                                            {product.buyer.localisation.city},{\" \"}\n                                            {product.buyer.localisation.country}\n                                        </span>\n                                    </div>\n                                    <div className=\"product-slide-lowername2\">\n                                        {this.getTranslation(product.buyer?.type)}\n                                        {\": \"}\n                                        {product.buyer?.name}\n                                    </div>\n                                </div>\n                            </div>\n                            <div className=\"product-slide-arrow\">{\">\"}</div>\n                            <div className=\"product-slide-consumption\">\n                                <div className={pastille}></div>\n                                <div>{Math.round(product.dist.value)} km </div>\n                                <div>\n                                    {product.TransportCO2Impact?.value > 1\n                                        ? Math.round(product.TransportCO2Impact?.value)\n                                        : \"< 1\"}{\" \"}\n                                    kg CO2{\" \"}\n                                </div>\n                            </div>\n                        </div>\n                    </SwiperSlide>\n                );\n            });\n        }\n        return slides;\n    };\n\n    handleMarkerClick = (latlng, index) => {\n        // window.scrollTo({ top: \"8000px\", behavior: \"smooth\" });\n        let elem = document.getElementsByClassName(\"swiper-container\");\n        if (elem[0]) {\n            elem[0].scrollIntoView({ behavior: \"smooth\" });\n        }\n\n        if (index >= this.props.products?.length) {\n            this.state.swiper.slideTo(index - 1, 500);\n        } else {\n            this.state.swiper.slideTo(index, 500);\n        }\n        let zoom = 5;\n        if (this.props.products && this.props.products[index]) {\n            let p = this.props.products[index];\n\n            zoom = getZoomRatio(\n                [p.buyer.localisation.latitude, p.buyer.localisation.longitude],\n                [p.seller.localisation.latitude, p.seller.localisation.longitude]\n            );\n        }\n\n        this.map.leafletElement.flyTo(latlng, zoom, { duration: 0.5 });\n    };\n\n    onSlideChange = (index) => {\n        this.setState({ currentIndex: index });\n        let zoom = 5;\n        if (this.props.products && this.props.products[index]) {\n            let p = this.props.products[index];\n\n            zoom = getZoomRatio(\n                [p.buyer.localisation.latitude, p.buyer.localisation.longitude],\n                [p.seller.localisation.latitude, p.seller.localisation.longitude]\n            );\n\n            let lat =\n                (parseFloat(p.seller.localisation.latitude) +\n                    parseFloat(p.buyer.localisation.latitude)) /\n                2;\n            let long =\n                (parseFloat(p.seller.localisation.longitude) +\n                    parseFloat(p.buyer.localisation.longitude)) /\n                2;\n\n            this.map.leafletElement.flyTo([lat, long], zoom, { duration: 0.5 });\n        }\n    };\n\n    displayMarker = () => {\n        let markers = <React.Fragment />;\n        if (this.props.products) {\n            markers = this.props.products.map((product, i) => {\n                let marker1 = <React.Fragment />;\n                let lat1 = parseFloat(product?.buyer?.localisation?.latitude);\n                let long1 = parseFloat(product?.buyer?.localisation?.longitude);\n                let marker2 = <React.Fragment />;\n                let lat2 = parseFloat(product?.seller?.localisation?.latitude);\n                let long2 = parseFloat(product?.seller?.localisation?.longitude);\n                let icon;\n                let icon2;\n                let zIndex = 0;\n                if (i === this.state.currentIndex) {\n                    icon = new L.Icon({\n                        iconUrl: \"/images/utils/map.png\", //require('../../images/logo/logo.svg'),\n                        iconRetinaUrl: \"/images/utils/map.png\", //\"/images/images_volume/1-l.png\", //require('../../images/logo/logo.svg'),\n                        iconSize: new L.Point(32, 32),\n                        className: \"leaflet-mark-icon\",\n                    });\n                    icon2 = new L.Icon({\n                        iconUrl: \"/images/utils/map.png\", //require('../../images/logo/logo.svg'),\n                        iconRetinaUrl: \"/images/utils/map3.png\", //\"/images/images_volume/1-l.png\", //require('../../images/logo/logo.svg'),\n                        iconSize: new L.Point(32, 32),\n                        className: \"leaflet-mark-icon\",\n                    });\n                    zIndex = 5;\n                } else {\n                    icon = new L.Icon({\n                        iconUrl: \"/images/utils/map2.png\", //require('../../images/logo/logo.svg'),\n                        iconRetinaUrl: \"/images/utils/map2.png\", //\"/images/images_volume/1-l.png\", //require('../../images/logo/logo.svg'),\n                        iconSize: new L.Point(25, 25),\n                        className: \"leaflet-mark-icon\",\n                    });\n                    icon2 = new L.Icon({\n                        iconUrl: \"/images/utils/map2.png\", //require('../../images/logo/logo.svg'),\n                        iconRetinaUrl: \"/images/utils/map2.png\", //\"/images/images_volume/1-l.png\", //require('../../images/logo/logo.svg'),\n                        iconSize: new L.Point(25, 25),\n                        className: \"leaflet-mark-icon\",\n                    });\n                }\n\n                if (lat1 && long1) {\n                    marker1 = (\n                        <Marker\n                            zIndexOffset={zIndex}\n                            icon={icon}\n                            position={[lat1, long1]}\n                            onClick={() =>\n                                this.handleMarkerClick(\n                                    [\n                                        parseFloat(product.buyer.localisation.latitude),\n                                        parseFloat(product.buyer.localisation.longitude),\n                                    ],\n                                    i + 1\n                                )\n                            }\n                        >\n                            {/* <Popup>{product.buyer.name}</Popup> */}\n                        </Marker>\n                    );\n                }\n                if (lat2 && long2) {\n                    marker2 = (\n                        <Marker\n                            zIndexOffset={zIndex}\n                            icon={icon2}\n                            position={[lat2, long2]}\n                            onClick={() =>\n                                this.handleMarkerClick(\n                                    [\n                                        parseFloat(product.seller.localisation.latitude),\n                                        parseFloat(product.seller.localisation.longitude),\n                                    ],\n                                    i\n                                )\n                            }\n                        >\n                            {/* <Popup>{product.seller.name}</Popup> */}\n                        </Marker>\n                    );\n                }\n\n                let color = \"#1b3044\";\n                let curves = document.getElementsByClassName(\"leaflet-interactive\");\n\n                if (curves && curves[i] && i === this.state.currentIndex) {\n                    curves[i].setAttribute(\"stroke\", \"#78be95\");\n                } else if (curves && curves[i]) {\n                    curves[i].setAttribute(\"stroke\", \"#1b3044\");\n                }\n\n                return (\n                    <React.Fragment>\n                        <div className=\"test\">\n                            <Curve\n                                positions={getCurveOptions(lat2, long2, lat1, long1)}\n                                option={{\n                                    color: color,\n                                    fill: false,\n                                    // animate: animate,\n                                    delay: 5000,\n                                }}\n                            />\n                        </div>\n                        {marker1}\n                        {marker2}\n                    </React.Fragment>\n                );\n            });\n        }\n        return markers;\n    };\n\n    render = () => {\n        return (\n            <div className=\"tracability-container\">\n                <div className=\"product-CO2-total-tracability-container\">\n                    <span className=\"product-CO2-total-tracability\">\n                        Impact total carbone :&nbsp;\n                        <span className=\"carbon-total-number\">\n                            {parseFloat(this.props.totalCO2Traceability).toFixed(1)}\n                        </span>\n                        kg CO2 soit &nbsp;\n                        <span className=\"carbon-total-number\">\n                            {parseFloat(\n                                ((this.props.totalCO2Traceability * 0.05) / 11.0) * 1000.0\n                            ).toFixed(1)}\n                        </span>\n                        kms parcourus en voiture\n                    </span>\n                </div>\n\n                <Map\n                    center={[51.505, -0.09]}\n                    zoom={1}\n                    minZoom={1}\n                    scrollWheelZoom={true}\n                    dragging={false}\n                    maxBounds={[\n                        [-90, -180],\n                        [90, 180],\n                    ]}\n                    maxBoundsViscosity={1}\n                    ref={(ref) => {\n                        this.map = ref;\n                        this.props.getBottomRef(ref);\n                    }}\n                    whenCreated={(map) => this.setState({ map })}\n                >\n                    <TileLayer\n                        attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a>'\n                        url=\"https://stamen-tiles-{s}.a.ssl.fastly.net/toner-background/{z}/{x}/{y}{r}.png\" //'https://maps.wikimedia.org/osm-intl/{z}/{x}/{y}{r}.png' //'https://{s}.tile.osm.org/{z}/{x}/{y}.png'\n                    />\n\n                    {this.displayMarker()}\n                </Map>\n                <Swiper\n                    spaceBetween={10}\n                    slidesPerView={1.2}\n                    centeredSlides={true}\n                    onSlideChange={(i) => this.onSlideChange(i.activeIndex)}\n                    onSwiper={(swiper) => this.setState({ swiper: swiper })}\n                >\n                    {this.displaySlides()}\n                </Swiper>\n            </div>\n        );\n    };\n}\n\nexport default Traceability;\n\nfunction getDistance(origin, destination) {\n    // return distance in meters\n    var lon1 = toRadian(origin[1]),\n        lat1 = toRadian(origin[0]),\n        lon2 = toRadian(destination[1]),\n        lat2 = toRadian(destination[0]);\n\n    var deltaLat = lat2 - lat1;\n    var deltaLon = lon2 - lon1;\n\n    var a =\n        Math.pow(Math.sin(deltaLat / 2), 2) +\n        Math.cos(lat1) * Math.cos(lat2) * Math.pow(Math.sin(deltaLon / 2), 2);\n    var c = 2 * Math.asin(Math.sqrt(a));\n    // var EARTH_RADIUS = 6371;\n    return c; //* EARTH_RADIUS * 1000;\n}\n\nfunction toRadian(degree) {\n    return (degree * Math.PI) / 180;\n}\n\nfunction getZoomRatio(origin, destination) {\n    var distance = getDistance(origin, destination);\n\n    return 9 - Math.sqrt(distance * 150);\n}\n\nfunction getCurveOptions(lat1, long1, lat2, long2) {\n    var latlng1 = [lat1, long1],\n        latlng2 = [lat2, long2];\n\n    var offsetX = latlng2[1] - latlng1[1],\n        offsetY = latlng2[0] - latlng1[0];\n\n    var r = Math.sqrt(Math.pow(offsetX, 2) + Math.pow(offsetY, 2)),\n        theta = Math.atan2(offsetY, offsetX);\n\n    var thetaOffset = 3.14 / 10;\n\n    var r2 = r / 2 / Math.cos(thetaOffset),\n        theta2 = theta + thetaOffset;\n\n    var midpointX = r2 * Math.cos(theta2) + latlng1[1],\n        midpointY = r2 * Math.sin(theta2) + latlng1[0];\n\n    var midpointLatLng = [midpointY, midpointX];\n\n    return [\"M\", latlng1, \"Q\", midpointLatLng, latlng2];\n}\n\n// function getChildElementIndex(node) {\n//     return Array.prototype.indexOf.call(node.parentNode.children, node);\n// }\n","import React from \"react\";\nimport { Swiper, SwiperSlide } from \"swiper/react\";\nimport \"swiper/swiper-bundle.css\";\n\nclass Alternatives extends React.Component {\n    state = {\n        swiper: undefined,\n        no_alternative: true,\n    };\n\n    renderListAlternatives = (listItems) => {\n        var res = <React.Fragment></React.Fragment>;\n        res = listItems.map((item) => {\n            var pathProduct = \"/products/\" + item.id;\n            // Mock Front\n            if (item.id === \"8001505005707\") {\n                pathProduct += \"/24\";\n            }\n\n            if (item.id !== this.props.barcode) {\n                this.setState({ no_alternative: false });\n                return (\n                    <SwiperSlide key={item.id}>\n                        <a href={pathProduct} className=\"product-alternative\">\n                            <div>\n                                <img\n                                    src={item.img_url}\n                                    className=\"product-alternative-image\"\n                                    alt=\"\"\n                                />\n                            </div>\n                            <div className=\"product-alternative-text\">\n                                <label className=\"product-alternative-title\">{item.name}</label>\n                                <label className=\"product-alternative-brand\">{}</label>\n                                <RenderColor item={item} />\n                            </div>\n                            <div className=\"product-alternative-fleche\">{\">\"}</div>\n                        </a>\n                    </SwiperSlide>\n                );\n            } else {\n                return <React.Fragment></React.Fragment>;\n            }\n        });\n\n        return res;\n    };\n\n    alternativesloop = () => {\n        var alternativesList = <React.Fragment></React.Fragment>;\n\n        if (\n            this.props.alternatives &&\n            this.props.alternatives !== \"loading\" &&\n            this.props.alternatives !== \"\"\n        ) {\n            var alternatives_a = <React.Fragment></React.Fragment>;\n            var alternatives_b = <React.Fragment></React.Fragment>;\n            var alternatives_c = <React.Fragment></React.Fragment>;\n            var alternatives_d = <React.Fragment></React.Fragment>;\n\n            this.props.alternatives.a.sort(function (a, b) {\n                return b.eco_score - a.eco_score;\n            });\n\n            this.props.alternatives.b.sort(function (a, b) {\n                return b.eco_score - a.eco_score;\n            });\n            this.props.alternatives.c.sort(function (a, b) {\n                return b.eco_score - a.eco_score;\n            });\n            this.props.alternatives.d.sort(function (a, b) {\n                return b.eco_score - a.eco_score;\n            });\n\n            switch (this.props.ecoScore) {\n                case \"a\":\n                    break;\n                case \"b\":\n                    alternatives_a = this.renderListAlternatives(this.props.alternatives.a);\n                    break;\n                case \"c\":\n                    alternatives_a = this.renderListAlternatives(this.props.alternatives.a);\n                    alternatives_b = this.renderListAlternatives(this.props.alternatives.b);\n                    break;\n                case \"d\":\n                    alternatives_a = this.renderListAlternatives(this.props.alternatives.a);\n                    alternatives_b = this.renderListAlternatives(this.props.alternatives.b);\n                    alternatives_c = this.renderListAlternatives(this.props.alternatives.c);\n                    break;\n                case \"e\":\n                    alternatives_a = this.renderListAlternatives(this.props.alternatives.a);\n                    alternatives_b = this.renderListAlternatives(this.props.alternatives.b);\n                    alternatives_c = this.renderListAlternatives(this.props.alternatives.c);\n                    alternatives_d = this.renderListAlternatives(this.props.alternatives.d);\n                    break;\n                default:\n                    this.setState({ no_alternative: true });\n            }\n\n            alternativesList = (\n                <React.Fragment>\n                    {alternatives_a} {alternatives_b} {alternatives_c} {alternatives_d}\n                </React.Fragment>\n            );\n        }\n\n        return alternativesList;\n    };\n\n    render = () => {\n        var alternatives_title = \"\";\n\n        if (this.props.alternatives === \"\") {\n            alternatives_title = \"Pas d'alternatives disponible\";\n        } else {\n            if (this.props.alternatives === \"loading\") {\n                alternatives_title = \"Chargement des alternatives ...\";\n            } else {\n                alternatives_title = \"Alternatives\";\n            }\n        }\n        return (\n            <React.Fragment>\n                <span className=\"title-part-environnement\">{alternatives_title}</span>\n                {this.props.alternatives &&\n                this.props.alternatives !== \"loading\" &&\n                this.props.alternatives !== \"\" &&\n                !this.state.no_alternative ? (\n                    <Swiper\n                        spaceBetween={0}\n                        slidesPerView={1}\n                        centeredSlides={true}\n                        onSwiper={(swiper) => this.setState({ swiper: swiper })}\n                    >\n                        {this.alternativesloop()}\n                    </Swiper>\n                ) : (\n                    <React.Fragment />\n                )}\n            </React.Fragment>\n        );\n    };\n}\n\nexport default Alternatives;\n\nfunction RenderColor({ item }) {\n    var labelColor;\n    var labelLevel;\n    if (item.eco_score <= 33) {\n        labelColor = \"red\";\n        labelLevel = \"Mauvais\";\n    } else if (item.eco_score > 33 && item.eco_score < 67) {\n        labelColor = \"yellow\";\n        labelLevel = \"Moyen\";\n    } else {\n        labelColor = \"green\";\n        labelLevel = \"Bonne\";\n    }\n    return (\n        <div className=\"product-alternative-label-position\">\n            <div className=\"product-alternative-label\">\n                <div style={{ color: labelColor }}>●</div>\n                <div className=\"product-alternative-label-text\">{item.eco_score}/100</div>\n            </div>\n            <div className=\"product-alternative-label-level \">{labelLevel}</div>\n        </div>\n    );\n}\n","import React from \"react\";\nimport { Map, TileLayer, Polygon } from \"react-leaflet\";\n\nclass Origins extends React.Component {\n    state = {\n        polygon: [],\n        activeCountry: \"\",\n    };\n\n    componentDidMount = () => {\n        this.getCountries();\n    };\n\n    setActiveCountry = (country) => {\n        console.log(country);\n        this.setState({ activeCountry: country });\n    };\n\n    getCountries = () => {\n        this.props.origins?.map((origin) => {\n            if (origin !== \"en:ghana\") {\n                fetch(`https://api.lowympact.fr/api/v1/countries/${origin}`)\n                    .then((res) => res.json())\n                    .then((res) => {\n                        let polygon = this.state.polygon;\n                        console.log(res);\n                        if (res.success && res.data?.country) {\n                            polygon.push({\n                                geo: res.data.country.coordinates,\n                                name: res.data.country.name,\n                            });\n                            this.setState({\n                                polygon: polygon,\n                                activeCountry:\n                                    this.state.activeCountry + res.data.country.name + \", \",\n                            });\n                        }\n                    });\n            }\n            return true;\n        });\n    };\n\n    render = () => {\n        if (this.state.polygon.length === 0) return <React.Fragment />;\n        else {\n            return (\n                <div className=\"environnement-map-container\">\n                    <div className=\"product-co2-impact-header\">\n                        <div className=\"product-co2-impact-logo\">\n                            <div className=\"material-icons icon-label-co2-impact\">place</div>\n                        </div>\n                        <div className=\"product-co2-impact-title\">\n                            <div className=\"product-co2-impact-title-text\">\n                                Provenance des ingrédients\n                            </div>\n                            <div className=\"product-co2-impact-title-label\">\n                                Pays d'origine : {this.state.activeCountry}\n                            </div>\n                        </div>\n                    </div>\n\n                    <Map\n                        center={[51.505, -0.09]}\n                        zoom={-1}\n                        minZoom={0}\n                        className=\"environnement-map\"\n                        scrollWheelZoom={true}\n                        dragging={false}\n                        maxBounds={[\n                            [-90, -180],\n                            [90, 180],\n                        ]}\n                        maxBoundsViscosity={1}\n                        whenCreated={(map) => this.setState({ map })}\n                    >\n                        <TileLayer\n                            attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a>'\n                            url=\"https://stamen-tiles-{s}.a.ssl.fastly.net/toner-background/{z}/{x}/{y}{r}.png\" //'https://maps.wikimedia.org/osm-intl/{z}/{x}/{y}{r}.png' //'https://{s}.tile.osm.org/{z}/{x}/{y}.png'\n                        />\n                        {this.state.polygon.map((poly, i) => {\n                            if (poly)\n                                return (\n                                    <Polygon\n                                        onClick={() => this.setActiveCountry(poly.name)}\n                                        color={\"color:white\"}\n                                        fillColor={\n                                            this.activeCountry === poly.name ? \"blue\" : \"green\"\n                                        }\n                                        opacity={\"1\"}\n                                        positions={poly.geo}\n                                        key={i}\n                                    />\n                                );\n                            else return <React.Fragment />;\n                        })}\n                    </Map>\n                </div>\n            );\n        }\n    };\n}\n\nexport default Origins;\n","import React from \"react\";\n\nclass EmpreinteCarbone extends React.Component {\n    state = {\n        alea: 3,\n    };\n\n    setAlea = (nb) => {\n        // this.setState({ alea: Math.floor(Math.random() * 11) });\n        let alea = this.state.alea + nb;\n        if (alea > 11) alea = 0;\n        if (alea < 0) alea = 11;\n        this.setState({ alea: alea });\n    };\n\n    render = () => {\n        if (this.props.dataEcoScore?.agribalyse?.co2_total) {\n            let repartition = [\n                {\n                    image: \"agriculture\",\n                    name: \"Agriculture\",\n                    percent: (\n                        (parseFloat(this.props.dataEcoScore?.agribalyse?.co2_agriculture) * 100) /\n                        parseFloat(this.props.dataEcoScore?.agribalyse?.co2_total)\n                    ).toFixed(0),\n                },\n                {\n                    image: \"local_shipping\",\n                    name: \"Transport\",\n                    percent: (\n                        (parseFloat(this.props.dataEcoScore?.agribalyse?.co2_transportation) *\n                            100) /\n                        parseFloat(this.props.dataEcoScore?.agribalyse?.co2_total)\n                    ).toFixed(0),\n                },\n                {\n                    image: \"view_in_ar\",\n                    name: \"Emballage\",\n                    percent: (\n                        (parseFloat(this.props.dataEcoScore?.agribalyse?.co2_packaging) * 100) /\n                        parseFloat(this.props.dataEcoScore?.agribalyse?.co2_total)\n                    ).toFixed(0),\n                },\n                {\n                    image: \"transform\",\n                    name: \"Transformation\",\n                    percent: (\n                        (parseFloat(this.props.dataEcoScore?.agribalyse?.co2_processing) * 100) /\n                        parseFloat(this.props.dataEcoScore?.agribalyse?.co2_total)\n                    ).toFixed(0),\n                },\n                {\n                    image: \"store\",\n                    name: \"Distribution\",\n                    percent: (\n                        (parseFloat(this.props.dataEcoScore?.agribalyse?.co2_distribution) * 100) /\n                        parseFloat(this.props.dataEcoScore?.agribalyse?.co2_total)\n                    ).toFixed(0),\n                },\n                {\n                    image: \"microwave\",\n                    name: \"Consommation\",\n                    percent: (\n                        (parseFloat(this.props.dataEcoScore?.agribalyse?.co2_consumption) * 100) /\n                        parseFloat(this.props.dataEcoScore?.agribalyse?.co2_total)\n                    ).toFixed(0),\n                },\n            ];\n            repartition = repartition.map((i) => {\n                return (\n                    <div className=\"empreinte-single\">\n                        <div className=\"material-icons\">{i.image}</div>\n                        <div className=\"name\">{i.name} : </div>\n                        <div className=\"pourcent\">{i.percent} %</div>\n                    </div>\n                );\n            });\n\n            let equivalent = getEquivalent(\n                parseFloat(this.props.dataEcoScore?.agribalyse?.co2_total),\n                this.state.alea\n            );\n\n            let circle = \"cmauve\";\n            if (this.props.dataEcoScore?.agribalyse?.co2_total < 15) circle = \"cred\";\n            if (this.props.dataEcoScore?.agribalyse?.co2_total < 7) circle = \"corange\";\n            if (this.props.dataEcoScore?.agribalyse?.co2_total < 3) circle = \"cgreen\";\n            if (this.props.dataEcoScore?.agribalyse?.co2_total < 1) circle = \"cdarkgreen\";\n            return (\n                <React.Fragment>\n                    <div className=\"empreinte-carbone-container\">\n                        <div className=\"empreinte-carbone-header\">\n                            <div className=\"header-text\">\n                                <div className=\"header-main\">Empreinte Carbone</div>\n                                <div className=\"header-small\">source : ADEME</div>\n                            </div>\n                            <div className=\"empreinte-carbone-number\">\n                                <span>\n                                    {parseFloat(\n                                        this.props.dataEcoScore?.agribalyse?.co2_total\n                                    ).toFixed(2)}\n                                    kg CO2e\n                                </span>\n                                <div className={\"circle \" + circle}></div>\n                            </div>\n                        </div>\n                        <div className=\"empreinte-carbone-equivalent\">\n                            <div className=\"icon-container\">\n                                <div className=\"material-icons\">\n                                    <img\n                                        src={`/images/alternatives/${equivalent[1]}`}\n                                        alt=\"alternative\"\n                                    />\n                                </div>\n                            </div>\n                            <div className=\"equivalent-container\">\n                                <div className=\"text-small\">Soit l'équivalent...</div>\n                                <div className=\"text-big\">{equivalent[0]}</div>\n                            </div>\n                        </div>\n                        <div className=\"arrow\">\n                            <div className=\"material-icons\" onClick={() => this.setAlea(1)}>\n                                arrow_back_ios\n                            </div>\n                            <div className=\"material-icons\" onClick={() => this.setAlea(-1)}>\n                                arrow_forward_ios\n                            </div>\n                        </div>\n                    </div>\n\n                    <div className=\"empreinte-carbone-container no-margin-container\">\n                        <div className=\"empreinte-carbone-header\">\n                            <div className=\"header-text\">\n                                <div className=\"header-main\">\n                                    Répartition de l'empreinte Carbone\n                                </div>\n                                <div className=\"header-small\">\n                                    selon les différentes étapes du cycle de vie\n                                </div>\n                            </div>\n                            {/* <div className=\"empreinte-carbone-number\">\n                                <span>\n                                    {parseFloat(\n                                        this.props.dataEcoScore?.agribalyse?.co2_total\n                                    ).toFixed(2)}\n                                    kg CO2e\n                                </span>\n                                <div className=\"circle\"></div>\n                            </div> */}\n                        </div>\n                        <div className=\"empreinte-carbone-repartition\">{repartition}</div>\n                    </div>\n                </React.Fragment>\n            );\n        } else {\n            return <React.Fragment />;\n        }\n    };\n}\n\nexport default EmpreinteCarbone;\n\nfunction getEquivalent(co2, alea) {\n    switch (alea) {\n        case 0:\n            return [\n                \"De la production de \" +\n                    (co2 / 0.0046).toFixed(0) +\n                    \" feuilles de papier blanc 80g\",\n                \"paper.png\",\n            ];\n        case 1:\n            return [\n                \"De la production de \" +\n                    (co2 / 0.6).toFixed(1) +\n                    \" kg de pommes de terre en France\",\n                \"potatoe.png\",\n            ];\n        case 2:\n            return [\n                \"De la production de \" + (co2 / 0.53).toFixed(1) + \" kg de fraises en France\",\n                \"strawberry.png\",\n            ];\n        case 3:\n            return [\n                \"De \" + (co2 / 0.193).toFixed(1) + \" km parcourus par une personne en voiture\",\n                \"car.svg\",\n            ];\n        case 4:\n            return [\n                \"De \" + (co2 / 0.137).toFixed(1) + \" km parcourus par une personne en Bus de ville\",\n                \"bus.svg\",\n            ];\n        case 5:\n            return [\n                \"De \" +\n                    (co2 / 0.019).toFixed(0) +\n                    \" e-mails envoyés contenant une pièce jointe d'1mo\",\n                \"mail.svg\",\n            ];\n        case 6:\n            return [\n                \"De \" +\n                    (co2 / 0.5).toFixed(1) +\n                    \" jour(s) d'éclairage d'une ampoule à incandescence\",\n                \"light.svg\",\n            ];\n        case 7:\n            return [\n                \"De \" +\n                    (co2 / 0.24).toFixed(1) +\n                    \" heures de chauffage au gaz d'un appartement moyen de 70m²\",\n                \"appartment.svg\",\n            ];\n        case 8:\n            return [\n                \"De la production de \" +\n                    ((co2 * 1000) / 33.8).toFixed(0) +\n                    \" grammes de steak haché de boeuf cru\",\n                \"steak.png\",\n            ];\n        case 9:\n            return [\n                \"De \" +\n                    (co2 / 0.083).toFixed(1) +\n                    \" jours d'éclairage d'une ampoule basse consommation\",\n                \"light.svg\",\n            ];\n        case 10:\n            return [\n                \"De \" +\n                    (co2 / 0.105).toFixed(1) +\n                    \" kilomètres parcourus en Trotinette électrique (en France)\",\n                \"trotinette.png\",\n            ];\n        case 11:\n            return [\n                \"D'une personne parcourant \" +\n                    (co2 / 0.3).toFixed(0) * 100 +\n                    \" kilomètres en TGV (en France)\",\n                \"train.png\",\n            ];\n        default:\n            return [\n                \"De \" +\n                    (co2 / 0.105).toFixed(1) +\n                    \" kilomètres parcourus en Trotinette électrique (en France)\",\n                \"trotinette.png\",\n            ];\n    }\n}\n","import React from \"react\";\nimport Alternatives from \"./Alternatives\";\nimport Origins from \"./Origins\";\nimport \"./Environnement.css\";\nimport EmpreinteCarbone from \"./EmpreinteCarbone\";\n\nclass Environnement extends React.Component {\n    state = {\n        width: undefined,\n        materials: [],\n    };\n\n    getColor = (note) => {\n        if (note > 67) {\n            return \"green\";\n        }\n        if (note <= 33) {\n            return \"red\";\n        }\n        return \"yellow\";\n    };\n\n    getColorImpact = (note) => {\n        if (note > 70) {\n            return \"green\";\n        }\n        if (note <= 40) {\n            return \"red\";\n        }\n        return \"yellow\";\n    };\n\n    getLabel = (note) => {\n        if (note > 67) {\n            return \"Bon\";\n        }\n        if (note <= 33) {\n            return \"Mauvais\";\n        }\n        return \"Moyen\";\n    };\n\n    getLabelImpact = (note) => {\n        if (note > 60) {\n            return \"Impact fort\";\n        }\n        if (note <= 30) {\n            return \"Impact faible\";\n        }\n        return \"Impact moyen\";\n    };\n\n    getLabelImpactPackaging = (note) => {\n        if (note > 2) {\n            return \"Impact faible\";\n        }\n        if (note < -2) {\n            return \"Impact fort\";\n        }\n        return \"Impact moyen\";\n    };\n\n    getColorImpactPackaging = (note) => {\n        if (note > 2) {\n            return \"green\";\n        }\n        if (note < -2) {\n            return \"red\";\n        }\n        return \"yellow\";\n    };\n\n    componentDidMount() {\n        this.updateWindowDimensions();\n        window.addEventListener(\"resize\", this.updateWindowDimensions);\n    }\n\n    componentWillUnmount() {\n        window.removeEventListener(\"resize\", this.updateWindowDimensions);\n    }\n\n    updateWindowDimensions = () => {\n        this.setState({ width: window.innerWidth });\n    };\n\n    displayPackagingDetailImpact = () => {\n        let res = <React.Fragment></React.Fragment>;\n\n        if (this.props.dataEcoScore?.adjustments?.packaging?.packagings) {\n            var materials = [];\n            let slides = <React.Fragment></React.Fragment>;\n\n            this.props.dataEcoScore?.adjustments?.packaging?.packagings.map((data) => {\n                if (data?.material.split(\":\")[1] !== \"unknown\") {\n                    materials.push(data?.material.split(\":\")[1]);\n                }\n                return true;\n            });\n\n            slides = materials\n                .filter(function (item, pos) {\n                    return materials.indexOf(item) === pos;\n                })\n                .map((data) => {\n                    var separator = \"\";\n                    if (materials.indexOf(data) < materials.length - 1) {\n                        separator = \" ; \";\n                    }\n                    return (\n                        <React.Fragment>\n                            <span>\n                                {data} {separator}\n                            </span>\n                        </React.Fragment>\n                    );\n                });\n\n            if (materials.length > 0) {\n                res = (\n                    <React.Fragment>\n                        <div className=\"product-co2-impact-content\">\n                            <div className=\"product-packaging-impact-content-details-text\">\n                                Matériaux utilisés : &nbsp;{slides}\n                            </div>\n                        </div>\n                    </React.Fragment>\n                );\n            } else {\n                res = (\n                    <React.Fragment>\n                        <div className=\"product-co2-impact-content\">\n                            <div className=\"product-packaging-impact-content-details-text\">\n                                Matériaux utilisés : &nbsp; Inconnu\n                            </div>\n                        </div>\n                    </React.Fragment>\n                );\n            }\n        }\n\n        return res;\n    };\n\n    displayPackagingImpact = () => {\n        let res = <React.Fragment></React.Fragment>;\n\n        if (this.props.dataEcoScore?.adjustments?.packaging?.value) {\n            return (\n                <div className=\"product-co2-impact-container\">\n                    <div className=\"product-co2-impact-header\">\n                        <div className=\"product-co2-impact-logo\">\n                            <div className=\"material-icons icon-label-co2-impact\">view_in_ar</div>\n                        </div>\n                        <div className=\"product-co2-impact-title\">\n                            <div className=\"product-co2-impact-title-text\">\n                                Impact de l'emballage\n                            </div>\n                            <div className=\"product-co2-impact-title-label\">\n                                {this.getLabelImpactPackaging(\n                                    this.props.dataEcoScore?.adjustments?.packaging?.value\n                                )}\n                            </div>\n                        </div>\n                        <div\n                            className=\"product-transport-impact-color-label\"\n                            style={{\n                                color: this.getColorImpactPackaging(\n                                    this.props.dataEcoScore?.adjustments?.packaging?.value\n                                ),\n                            }}\n                        >\n                            ●\n                        </div>\n                    </div>\n                    {this.displayPackagingDetailImpact()}\n                </div>\n            );\n        } else {\n            return res;\n        }\n    };\n\n    render = () => {\n        if (this.props.barcode) {\n            return (\n                <React.Fragment>\n                    <EmpreinteCarbone dataEcoScore={this.props.dataEcoScore} />\n\n                    {this.props.origins ? (\n                        <Origins origins={this.props.origins} />\n                    ) : (\n                        <React.Fragment />\n                    )}\n                    {this.displayPackagingImpact()}\n\n                    <Alternatives\n                        barcode={this.props.barcode}\n                        alternatives={this.props.alternatives}\n                        ecoScore={this.props.ecoScore}\n                    />\n                </React.Fragment>\n            );\n        } else {\n            return <React.Fragment></React.Fragment>;\n        }\n    };\n}\n\nexport default Environnement;\n","import React from \"react\";\nimport Navbar from \"../components/Navbar/Navbar\";\nimport Traceability from \"../components/Traceability/Traceability\";\nimport Environnement from \"../components/Environnement/Environnement\";\nimport Labels from \"../components/Labels/Labels\";\nimport \"./Product.css\";\nimport { Link } from \"react-router-dom\";\nimport jwt from \"jsonwebtoken\";\n\nclass Product extends React.Component {\n    state = {\n        barcode: this.props.match.params.barcode,\n        bcProductId: this.props.match.params.bcProductId,\n        product: undefined,\n        productImageUrl: undefined,\n        productName: undefined,\n        genericName: undefined,\n        ecoScore: undefined,\n        dataEcoScore: undefined,\n        value: 0,\n        connected: false,\n        productData: undefined,\n        userId: undefined,\n        cart: 0,\n        totalCO2Traceability: undefined,\n        alternatives: undefined,\n        countries: [],\n    };\n\n    isFlipping = false;\n\n    //for scrolling\n    getBottomRef = (component) => {\n        this.bottomComponent = component;\n    };\n\n    componentDidMount = () => {\n        this.Verify();\n        let userId = localStorage.getItem(\"userId\");\n        if (userId) {\n            this.setState({ userId: userId });\n            this.loadHistory(userId);\n        }\n        this.loadFromOpenFoodFacts(this.props.match.params.barcode);\n        if (this.props.match.params.bcProductId) {\n            this.loadProductInformations(\n                this.props.match.params.barcode,\n                this.props.match.params.bcProductId\n            );\n        }\n    };\n\n    handleBarCodeUpdate = () => {\n        if (this.state.barcode !== this.props.match.params.barcode) {\n            this.setState({\n                barcode: this.props.match.params.barcode,\n                bcProductId: this.props.match.params.bcProductId,\n            });\n            this.loadFromOpenFoodFacts(this.props.match.params.barcode);\n            if (this.props.match.params.bcProductId) {\n                this.loadProductInformations(\n                    this.props.match.params.barcode,\n                    this.props.match.params.bcProductId\n                );\n            }\n        }\n    };\n\n    Verify = () => {\n        let isExpired = true;\n        const token = localStorage.getItem(\"token\");\n        if (token) {\n            var decodedToken = jwt.decode(token, { complete: true });\n            var dateNow = new Date();\n            if (decodedToken.payload.exp >= dateNow.getTime() / 1000) {\n                isExpired = false;\n            }\n        }\n        if (isExpired === false) {\n            this.setState({ connected: true });\n        }\n    };\n\n    loadProductInformations = (barcode, bcProductId) => {\n        fetch(\n            `https://api.lowympact.fr/api/v1/products/${barcode}?bcProductId=${bcProductId}`,\n            // `http://localhost:8080/api/v1/products/${barcode}?bcProductId=${bcProductId}`,\n            {\n                method: \"get\",\n                credentials: \"include\",\n                headers: new Headers({\n                    \"api-key\": \"99d8fb95-abdd-4885-bf6c-3a81d8874043\",\n                    \"Content-Type\": \"application/json\",\n                }),\n            }\n        )\n            .then((response) => response.json())\n            .then((res) => {\n                this.setState({\n                    products: res?.data?.traceability,\n                    impact: res?.data?.impact,\n                    totalCO2Traceability: res?.data?.transportCO2Impact,\n                });\n            });\n    };\n\n    loadAlternatives = (code, score) => {\n        this.setState({ alternatives: \"loading\" });\n        fetch(`https://api.lowympact.fr/api/v1/alternatives/${code}`)\n            .then((response) => response.json())\n            .then((res) => {\n                if (res.success && res.data?.alternativesInfos) {\n                    if (\n                        res.data?.alternativesInfos?.a?.length == 0 &&\n                        res.data?.alternativesInfos?.b?.length == 0 &&\n                        res.data?.alternativesInfos?.c?.length == 0 &&\n                        res.data?.alternativesInfos?.d?.length == 0\n                    ) {\n                        this.setState({ alternatives: \"\" });\n                    } else {\n                        this.setState({ alternatives: res.data.alternativesInfos });\n                    }\n                } else {\n                    this.setState({ alternatives: \"\" });\n                }\n            });\n    };\n\n    loadFromOpenFoodFacts = (barcode) => {\n        let dataEcoScore;\n\n        fetch(`https://world.openfoodfacts.org/api/v0/product/${barcode}.json/`)\n            .then((response) => response.json())\n            .then((res) => {\n                let productImageUrl = res?.product?.image_url;\n                let productName = res?.product?.product_name;\n                let genericName = res?.product?.generic_name;\n                let ecoScore = res?.product?.ecoscore_grade;\n\n                dataEcoScore = res?.product?.ecoscore_data;\n\n                console.log(res);\n                let origins = res?.product?.origins_hierarchy;\n                if (origins && origins != \"\") {\n                    this.setState({ origins: origins });\n                }\n\n                if (res?.product) {\n                    this.setState({ productData: res.product });\n                }\n\n                if (productImageUrl) {\n                    this.setState({ productImageUrl: productImageUrl });\n                }\n                if (productName) {\n                    this.setState({ productName: productName });\n                }\n                if (genericName) {\n                    this.setState({ genericName: genericName });\n                }\n                if (\n                    ecoScore &&\n                    (ecoScore === \"a\" ||\n                        ecoScore === \"b\" ||\n                        ecoScore === \"c\" ||\n                        ecoScore === \"d\" ||\n                        ecoScore === \"e\")\n                ) {\n                    this.setState({ ecoScore: ecoScore });\n                }\n                if (dataEcoScore) {\n                    this.setState({ dataEcoScore: dataEcoScore });\n                }\n                if (res.status === 1) {\n                    this.saveHistory();\n                }\n\n                // Mock Soutenance\n                if (barcode === \"80135463\") {\n                    this.setState({ productName: \"Nutella 200g\" });\n                }\n\n                var scoreSearch = \"a\";\n\n                switch (res.product?.ecoscore_grade) {\n                    case \"b\":\n                        scoreSearch = \"a\";\n                        break;\n                    case \"c\":\n                        scoreSearch = \"b\";\n                        break;\n                    case \"d\":\n                        scoreSearch = \"c\";\n                        break;\n                    case \"e\":\n                        scoreSearch = \"c\";\n                        break;\n\n                    default:\n                        break;\n                }\n\n                if (res.product?.ecoscore_grade != \"a\") {\n                    this.loadAlternatives(\n                        res.product.categories_properties[\"ciqual_food_code:en\"],\n                        scoreSearch\n                    );\n                } else {\n                    this.setState({ alternatives: \"\" });\n                }\n            });\n    };\n\n    loadHistory = (userId) => {\n        if (userId && this.state.barcode && this.state.bcProductId) {\n            fetch(\n                `https://api.lowympact.fr/api/v1/users/${userId}/cart/${this.state.barcode}?bcProductAddress=${this.state.bcProductId}`,\n                // `http://localhost:8080/api/v1/users/${this.state.userId}/history`,\n                {\n                    method: \"get\",\n                    credentials: \"include\",\n                    headers: new Headers({\n                        Authorization: localStorage.getItem(\"token\"),\n                        \"api-key\": \"99d8fb95-abdd-4885-bf6c-3a81d8874043\",\n                        \"Content-Type\": \"application/json\",\n                    }),\n                }\n            )\n                .then((response) => response.json())\n                .then((res) => {\n                    if (res.success) {\n                        this.setState({ cart: res.data?.quantity });\n                    }\n                });\n        }\n    };\n\n    saveHistory = async () => {\n        await delay(2000);\n\n        if (!this.state.connected) {\n            let history = JSON.parse(localStorage.getItem(\"local_history\"));\n            let exist = null;\n            if (history) {\n                exist = history?.find(\n                    (element) =>\n                        element.barcode === this.state.barcode &&\n                        element.bcProductId == this.state.bcProductId\n                );\n            } else {\n                history = [];\n            }\n\n            if (!exist || exist?.length === 0) {\n                history.push({\n                    barcode: this.state.barcode,\n                    bcProductId: this.state.bcProductId,\n                    brand: this.state.productData.brands,\n                    image: this.state.productImageUrl,\n                    label: this.state.ecoScore,\n                    name: this.state.productName,\n                });\n                localStorage.setItem(\"local_history\", JSON.stringify(history));\n            }\n        } else if (this.state.userId) {\n            fetch(\n                `https://api.lowympact.fr/api/v1/users/${this.state.userId}/history`,\n                // `http://localhost:8080/api/v1/users/${this.state.userId}/history`,\n                {\n                    method: \"put\",\n                    credentials: \"include\",\n                    headers: new Headers({\n                        Authorization: localStorage.getItem(\"token\"),\n                        \"api-key\": \"99d8fb95-abdd-4885-bf6c-3a81d8874043\",\n                        \"Content-Type\": \"application/json\",\n                    }),\n                    body: JSON.stringify({\n                        barcode: this.state.barcode,\n                        bcProductAddress: this.state.bcProductId,\n                    }),\n                }\n            )\n                .then((response) => response.json())\n                .then((res) => {\n                    console.log(res);\n                });\n        }\n    };\n\n    addToCart = () => {\n        if (this.state.barcode && this.state.cart >= 0) {\n            let co2 = -1;\n            if (this.state.dataEcoScore?.agribalyse?.co2_total) {\n                co2 = parseFloat(this.state.dataEcoScore?.agribalyse?.co2_total);\n            }\n\n            let ecoscore = \"unkown\";\n            if (this.state.ecoScore) {\n                ecoscore = this.state.ecoScore;\n            }\n            this.flip();\n            fetch(\n                `https://api.lowympact.fr/api/v1/users/${this.state.userId}/cart`,\n                // `http://localhost:8080/api/v1/users/${this.state.userId}/cart`,\n                {\n                    method: \"put\",\n                    credentials: \"include\",\n                    headers: new Headers({\n                        Authorization: localStorage.getItem(\"token\"),\n                        \"api-key\": \"99d8fb95-abdd-4885-bf6c-3a81d8874043\",\n                        \"Content-Type\": \"application/json\",\n                    }),\n                    body: JSON.stringify({\n                        barcode: this.state.barcode,\n                        bcProductAddress: this.state.bcProductId,\n                        quantityDelta: 1,\n                        ecoscore: ecoscore,\n                        carbonImpact: co2,\n                    }),\n                }\n            )\n                .then((response) => response.json())\n                .then((res) => {\n                    console.log(res);\n                    if (res.success) {\n                        this.setState({ cart: this.state.cart + 1 });\n                    }\n                });\n        }\n    };\n\n    removeFromCart = () => {\n        if (this.state.barcode && this.state.cart > 0) {\n            this.flip();\n            let co2 = -1;\n            if (this.state.dataEcoScore?.agribalyse?.co2_total) {\n                co2 = parseFloat(this.state.dataEcoScore?.agribalyse?.co2_total);\n            }\n            let ecoscore = \"unkown\";\n            if (this.state.ecoScore) {\n                ecoscore = this.state.ecoScore;\n            }\n            fetch(\n                `https://api.lowympact.fr/api/v1/users/${this.state.userId}/cart`,\n                // `http://localhost:8080/api/v1/users/${this.state.userId}/cart`,\n                {\n                    method: \"put\",\n                    credentials: \"include\",\n                    headers: new Headers({\n                        Authorization: localStorage.getItem(\"token\"),\n                        \"api-key\": \"99d8fb95-abdd-4885-bf6c-3a81d8874043\",\n                        \"Content-Type\": \"application/json\",\n                    }),\n                    body: JSON.stringify({\n                        barcode: this.state.barcode,\n                        bcProductAddress: this.state.bcProductId,\n                        quantityDelta: -1,\n                        ecoscore: ecoscore,\n                        carbonImpact: co2,\n                    }),\n                }\n            )\n                .then((response) => response.json())\n                .then((res) => {\n                    console.log(res);\n                    if (res.success) {\n                        this.setState({ cart: this.state.cart - 1 });\n                    }\n                });\n        }\n    };\n\n    flip = async (event) => {\n        // if (!this.isFlipping) {\n        // \tthis.isFlipping = true;\n        // \tawait delay(500);\n        console.log(this.imageFlip.style.transform);\n        if (this.imageFlip && !this.state.isFlipping) {\n            if (this.imageFlip.style.transform === \"rotateY(360deg)\") {\n                this.imageFlip.style.transform = \"rotateY(0deg)\";\n            } else {\n                this.imageFlip.style.transform = \"rotateY(360deg)\";\n            }\n        }\n        // await delay(1000);\n        // this.isFlipping = false;\n        // }\n    };\n\n    displayImage = () => {\n        this.handleBarCodeUpdate();\n\n        let image = <React.Fragment />;\n        let productName = <React.Fragment />;\n        let genericName = <React.Fragment />;\n        let ecoScore = <React.Fragment />;\n        if (this.state.productImageUrl) {\n            image = (\n                <img src={this.state.productImageUrl} className=\"product-image\" alt=\"produit\" />\n            );\n        }\n\n        if (this.state.productName) {\n            productName = <div className=\"product-name\">{this.state.productName}</div>;\n        }\n        if (this.state.ecoScore) {\n            let scoreClass = \"color_score_\" + this.state.ecoScore;\n            ecoScore = (\n                <div className=\"product-ecoscore-image\">\n                    <span className={\"circle-score \" + scoreClass}>⬤ </span>\n                    EcoScore :<span className=\"uppercase \">{\" \" + this.state.ecoScore}</span>\n                </div>\n            );\n        } else if (this.state.genericName) {\n            genericName = <div className=\"product-generic-name\">{this.state.genericName}</div>;\n        }\n        return (\n            <React.Fragment>\n                {this.state.userId ? (\n                    <div\n                        className={this.state.cart > 0 ? \"add-to-cart green\" : \"add-to-cart\"}\n                        onClick={this.addToCart}\n                    >\n                        <span className=\"cart-count\">\n                            {this.state.cart > 0 ? this.state.cart : \"\"}\n                        </span>\n                        <span className=\"material-icons\">add_shopping_cart</span>\n                    </div>\n                ) : (\n                    <React.Fragment />\n                )}\n                {this.state.cart > 0 ? (\n                    <div className=\"remove-from-cart\" onClick={this.removeFromCart}>\n                        <span className=\"material-icons\">remove_shopping_cart</span>\n                    </div>\n                ) : (\n                    <React.Fragment />\n                )}\n                {image}\n                {productName}\n                <div className=\"product-bottom-image-div\">\n                    {genericName}\n                    {ecoScore}\n                </div>\n            </React.Fragment>\n        );\n    };\n\n    handleChange = (event, newValue) => {\n        this.setState({ value: newValue });\n        if (newValue === 1) {\n            let elem = document.getElementsByClassName(\"swiper-container\");\n            if (elem[0]) {\n                elem[0].scrollIntoView({ behavior: \"smooth\" });\n            }\n        }\n    };\n\n    displayNavbar = () => {\n        let retour = <React.Fragment />;\n        if (this.state.bcProductId) {\n            retour = (\n                <div className=\"product-navbar-container\">\n                    <button\n                        className={\n                            this.state.value === 0\n                                ? \"product-navbar-button selected\"\n                                : \"product-navbar-button\"\n                        }\n                        onClick={() => this.handleChange(\"\", 0)}\n                    >\n                        Environnement\n                    </button>\n                    <button\n                        className={\n                            this.state.value === 1\n                                ? \"product-navbar-button selected\"\n                                : \"product-navbar-button\"\n                        }\n                        onClick={() => this.handleChange(\"\", 1)}\n                    >\n                        Traçabilité\n                    </button>\n                    <div\n                        className={\n                            this.state.value === 0\n                                ? \"navbar-under nav-left\"\n                                : \"navbar-under nav-right\"\n                        }\n                    ></div>\n                </div>\n            );\n        }\n        return retour;\n    };\n\n    render = () => {\n        //tri des produits\n        let products = this.state.products?.sort((a, b) => {\n            if (a.depth > b.depth) return -1;\n            else return 1;\n        });\n        return (\n            <React.Fragment>\n                <div className=\"product-page-container\">\n                    <div className=\"product-header-container\">\n                        <div className=\"product-history-link\">\n                            <Link to=\"/history\"> {\"<\"} Historique</Link>\n                        </div>\n                        <img\n                            className=\"product-bitmap-image\"\n                            src=\"/images/utils/bitmap.png\"\n                            alt=\"\"\n                        />\n                    </div>\n                    <div\n                        className=\"product-image-container\"\n                        // onClick={this.flip}\n                        ref={(ref) => (this.imageFlip = ref)}\n                    >\n                        {this.displayImage()}\n                    </div>\n\n                    {this.displayNavbar()}\n\n                    {/* <AppBar position=\"static\">\n\t\t\t\t\t\t<Tabs\n\t\t\t\t\t\t\tvalue={this.state.value}\n\t\t\t\t\t\t\tonChange={this.handleChange}\n\t\t\t\t\t\t\taria-label=\"simple tabs example\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<Tab label=\"Traçabilité\" />\n\t\t\t\t\t\t\t<Tab label=\"Environnement\" />\n\t\t\t\t\t\t</Tabs>\n\t\t\t\t\t</AppBar>\n\t\t\t\t\t<TabPanel value={this.state.value} index={0}></TabPanel>\n\t\t\t\t\t<TabPanel value={this.state.value} index={1}>\n\t\t\t\t</TabPanel> */}\n                    {this.state.value === 0 ? (\n                        <Environnement\n                            dataEcoScore={this.state.dataEcoScore}\n                            ecoScore={this.state.ecoScore}\n                            origins={this.state.origins}\n                            displayTranportImpact={\n                                this.props.match.params.bcProductId !== null &&\n                                this.props.match.params.bcProductId !== undefined\n                            }\n                            barcode={this.props.match.params.barcode}\n                            alternatives={this.state.alternatives}\n                        ></Environnement>\n                    ) : (\n                        <div className=\"product-bottom-container\">\n                            <Traceability\n                                products={products}\n                                getBottomRef={this.getBottomRef}\n                                totalCO2Traceability={this.state.totalCO2Traceability}\n                            />\n                        </div>\n                    )}\n                    <Navbar\n                        barcode={this.props.match.params.barcode}\n                        bcProductId={this.props.match.params.bcProductId}\n                    />\n                </div>\n            </React.Fragment>\n        );\n    };\n}\n\nexport default Product;\n\nconst delay = (ms) => new Promise((res) => setTimeout(res, ms));\n","import React from \"react\";\n\nimport \"swiper/swiper-bundle.css\";\nimport \"./Labels.css\";\n\nclass Labels extends React.Component {\n    displaySpecies = () => {\n        if (this.props.dataEcoScore?.adjustments?.threatened_species?.length === 0) {\n            return <div></div>;\n        } else {\n            if (this.props.dataEcoScore?.adjustments?.threatened_species?.value < 0) {\n                return (\n                    <div>\n                        <div className=\"labels-container-bad\">\n                            <span className=\"material-icons\">warning_amber</span>\n                            {this.props.dataEcoScore?.adjustments?.threatened_species?.ingredient}\n                        </div>\n                    </div>\n                );\n            } else {\n                return (\n                    <div>\n                        <div className=\"labels-container-good\">\n                            <span className=\"material-icons\">task_alt</span>\n                            {this.props.dataEcoScore?.adjustments?.threatened_species?.ingredient}\n                        </div>\n                    </div>\n                );\n            }\n        }\n    };\n\n    displaySpecies = () => {\n        if (!this.props.dataEcoScore?.adjustments?.threatened_species?.ingredient) {\n            return <div></div>;\n        } else {\n            if (this.props.dataEcoScore?.adjustments?.threatened_species?.value < 0) {\n                return (\n                    <div>\n                        <div className=\"labels-container-bad\">\n                            <span className=\"material-icons\">warning_amber</span>\n                            {this.props.dataEcoScore?.adjustments?.threatened_species?.ingredient}\n                        </div>\n                    </div>\n                );\n            } else {\n                return (\n                    <div>\n                        <div className=\"labels-container-good\">\n                            <span className=\"material-icons\">task_alt</span>\n                            {this.props.dataEcoScore?.adjustments?.threatened_species?.ingredient}\n                        </div>\n                    </div>\n                );\n            }\n        }\n    };\n\n    displayProduction = () => {\n        if (!this.props.dataEcoScore?.adjustments?.production_system?.label) {\n            return <div></div>;\n        } else {\n            if (this.props.dataEcoScore?.adjustments?.production_system?.value < 0) {\n                return (\n                    <div>\n                        <div className=\"labels-container-bad\">\n                            <span className=\"material-icons\">warning_amber</span>\n                            {this.props.dataEcoScore?.adjustments?.production_system?.label}\n                        </div>\n                    </div>\n                );\n            } else {\n                return (\n                    <div>\n                        <div className=\"labels-container-good\">\n                            <span className=\"material-icons\">task_alt</span>\n                            {this.props.dataEcoScore?.adjustments?.production_system?.label}\n                        </div>\n                    </div>\n                );\n            }\n        }\n    };\n\n    render() {\n        if (\n            this.props.dataEcoScore?.adjustments?.threatened_species?.length !== 0 &&\n            this.props.dataEcoScore?.adjustments?.production_system?.label\n        ) {\n            return (\n                <div>\n                    <h1>Labels</h1>\n\n                    <div className=\"labels-container\">\n                        {this.displaySpecies()}\n                        {this.displayProduction()}\n                    </div>\n                </div>\n            );\n        } else {\n            return <React.Fragment />;\n        }\n    }\n}\n\nexport default Labels;\n","import React from \"react\";\nimport Navbar from \"../components/Navbar/Navbar\";\nimport Header from \"../components/Header/Header\";\nimport \"./Profil.css\";\nimport { Link } from \"react-router-dom\";\nimport jwt from \"jsonwebtoken\";\nimport { motion } from \"framer-motion\";\n\nclass Profil extends React.Component {\n    state = {\n        connected: false,\n    };\n\n    disconnect = () => {\n        localStorage.clear();\n        this.props.history.push(\"/login\");\n    };\n\n    componentDidMount = () => {\n        this.Verify();\n    };\n\n    Verify = () => {\n        let isExpired = true;\n        const token = localStorage.getItem(\"token\");\n        if (token) {\n            var decodedToken = jwt.decode(token, { complete: true });\n            var dateNow = new Date();\n            if (decodedToken.payload.exp >= dateNow.getTime() / 1000) {\n                isExpired = false;\n            }\n        }\n        if (isExpired === false) {\n            this.setState({ connected: true }); // redirection vers la page login\n        }\n    };\n\n    displayConnectedProfil = () => {\n        return (\n            <React.Fragment>\n                <h2 className=\"profil-title\">Bienvenue sur ton profil!</h2>\n                <Link to=\"/stats\" className=\"profil-button\">\n                    Statistiques\n                </Link>\n                <Link to=\"/configuration\" className=\"profil-button\">\n                    Configuration\n                </Link>\n                <div onClick={this.disconnect} className=\"profil-button\">\n                    Déconnecter\n                </div>\n            </React.Fragment>\n        );\n    };\n\n    displayUnconnectedProfil = () => {\n        return (\n            <React.Fragment>\n                <h2 className=\"profil-title\">Non connecté</h2>\n                <p>Connecte toi pour que ton historique soit sauvegardé !</p>\n                <Link to=\"/login\" className=\"profil-button\">\n                    Me Connecter\n                </Link>\n            </React.Fragment>\n        );\n    };\n\n    render() {\n        return (\n            <div>\n                <Link to=\"/\">\n                    <Header />\n                </Link>\n                <motion.div\n                    initial={{ opacity: 0 }}\n                    animate={{ opacity: 1 }}\n                    exit={{ opacity: 0 }}\n                    className=\"profil-screen\"\n                >\n                    <div className=\"profil-picture\">\n                        <div className=\"material-icons\">person</div>\n                    </div>\n                    {this.state.connected\n                        ? this.displayConnectedProfil()\n                        : this.displayUnconnectedProfil()}\n                </motion.div>\n                <Navbar />\n            </div>\n        );\n    }\n}\n\nexport default Profil;\n","import React from \"react\";\n\nfunction ButtonSignup() {\n  return (\n  <div>\n    Créer mon compte\n  </div>\n  );\n}\n\nexport default ButtonSignup;","import React, { Component } from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport ButtonSignup from \"../components/Button/ButtonSignup\";\nimport fruits from \"../assets/images/fruits-vegetables-basket-by-oblik-studio.svg\";\nimport Header from \"../components/Header/Header\";\nimport \"./Login.css\";\nimport { Link } from \"react-router-dom\";\n\nexport const validEmail = new RegExp(\"^[a-zA-Z0-9._:$!%-]+@[a-zA-Z0-9.-]+.[a-zA-Z]$\");\n\nclass Signup extends Component {\n    state = {\n        userName: \"\",\n        email: \"\",\n        password: \"\",\n        confirmPassword: \"\",\n        errors: [],\n        redirect: false,\n        submit: false,\n    };\n\n    validate() {\n        var errors = [];\n        if (this.state.userName.length === 0) {\n            errors.push(\"Saissez votre nom\");\n        }\n        if (this.state.email.length === 0) {\n            errors.push(\"Saissez votre adresse e-mail\");\n        }\n        if (validEmail.test(this.state.email) === false) {\n            errors.push(\"Saissez une adresse e-mail valide\");\n        }\n        if (this.state.password.length < 6) {\n            errors.push(\"Entre un mot de passe. 6 caràcteres minimum requis\");\n        }\n        if (this.state.password !== this.state.confirmPassword) {\n            errors.push(\"Les mots de passe ne correspondent pas\");\n        }\n        this.setState({ errors: errors });\n        return errors;\n    }\n\n    signUser = async () => {\n        let errors = await fetch(`https://api.lowympact.fr/api/v1/users/`, {\n            method: \"post\",\n            credentials: \"include\",\n            headers: new Headers({\n                \"api-key\": \"99d8fb95-abdd-4885-bf6c-3a81d8874043\",\n                \"Content-Type\": \"application/json\",\n            }),\n            body: JSON.stringify({\n                username: this.state.userName,\n                email: this.state.email,\n                password: this.state.password,\n            }),\n        })\n            .then((response) => response.json())\n            .then((res) => {\n                console.log(res);\n                let errors = [];\n\n                if (!res.success) {\n                    errors.push(\"Il y a déjà un compte avec ce mail ou une erreur réseau.\");\n                } else {\n                    localStorage.setItem(\"token\", res.token);\n                    localStorage.setItem(\"userId\", res._id);\n                    this.props.history.push(\"/history\");\n                }\n                this.setState({ errors: errors });\n                return errors;\n            });\n        return errors;\n    };\n\n    handleSubmit = async (e) => {\n        e.preventDefault();\n        let errors = this.validate();\n        //console.log(\"errors: \" + errors);\n        if (errors.length === 0) {\n            errors = await this.signUser();\n        }\n        if (errors.length === 0) {\n            this.setState({ redirect: true });\n        }\n    };\n\n    displayErrors = () => {\n        let errors = <React.Fragment></React.Fragment>;\n        errors = this.state.errors.map((error) => {\n            return <p>{error}</p>;\n        });\n        return errors;\n    };\n\n    render() {\n        if (this.state.redirect) {\n            return <Redirect to=\"/history\" />;\n        }\n        //console.log(\"render\");\n        return (\n            <React.Fragment>\n                <Link to=\"/login\">\n                    <Header />\n                </Link>\n                <div className=\"logo-fruits\">\n                    <img src={fruits} className=\"logo\" alt=\"Fruits\" />\n                </div>\n                <Link className=\"back-button\" to=\"/login\">\n                    {\"< Retour\"}\n                </Link>\n                <div className=\"signup-container\">\n                    <form className=\"forms\">\n                        <label>\n                            nom\n                            <input\n                                className=\"input-forms\"\n                                value={this.state.userName}\n                                onChange={(evt) =>\n                                    this.setState({\n                                        userName: evt.target.value,\n                                    })\n                                }\n                                type=\"text\"\n                            />\n                        </label>\n                        <label>\n                            email\n                            <input\n                                className=\"input-forms\"\n                                value={this.state.email}\n                                onChange={(evt) => this.setState({ email: evt.target.value })}\n                                type=\"email\"\n                            />\n                        </label>\n                        <label>\n                            mot de passe\n                            <input\n                                className=\"input-forms\"\n                                value={this.state.password}\n                                onChange={(evt) =>\n                                    this.setState({\n                                        password: evt.target.value,\n                                    })\n                                }\n                                type=\"password\"\n                            />\n                        </label>\n                        <label>\n                            confirmer mot de passe\n                            <input\n                                className=\"input-forms\"\n                                value={this.state.passwordConfirm}\n                                onChange={(evt) =>\n                                    this.setState({\n                                        confirmPassword: evt.target.value,\n                                    })\n                                }\n                                type=\"password\"\n                            />\n                        </label>\n                    </form>\n                    <label className=\"errors-signup\">{this.displayErrors()}</label>\n                    <div className=\"button-signup\" onClick={this.handleSubmit}>\n                        <ButtonSignup />\n                    </div>\n                </div>\n            </React.Fragment>\n        );\n    }\n}\nexport default Signup;\n","import React from \"react\";\n\nfunction ButtonSignin() {\n  return (\n  <div>\n    Me connecter\n  </div>\n  );\n}\n\nexport default ButtonSignin;","import React, { Component } from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport ButtonSignin from \"../components/Button/ButtonSignin\";\nimport fruits from \"../assets/images/fruits-vegetables-basket-by-oblik-studio.svg\";\nimport Header from \"../components/Header/Header\";\nimport blob from \"../assets/images/bitmap.png\";\nimport \"./Login.css\";\nimport { Link } from \"react-router-dom\";\nimport jwt from \"jsonwebtoken\";\n\nfunction validate(email, password) {\n    const errors = [];\n\n    if (email.length === 0) {\n        errors.push(<p>Saissez votre adresse e-mail</p>);\n    }\n    if (password.length === 0) {\n        errors.push(<p>Saissez votre mot de passe</p>);\n    }\n    return errors;\n}\n\nclass Signin extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            email: \"\",\n            password: \"\",\n            errors: [],\n            redirect: false,\n            loginSuccessful: null,\n        };\n    }\n\n    handleSubmit = (e) => {\n        e.preventDefault();\n        const { email, password } = this.state;\n        const errors = validate(email, password);\n        //console.log(email, password, errors);\n        this.setState({ errors });\n        if (errors.length === 0) {\n            this.Connect();\n        }\n    };\n\n    componentDidMount = () => {\n        this.Verify();\n    };\n\n    Verify = () => {\n        let isExpired = true;\n        const token = localStorage.getItem(\"token\");\n        if (token) {\n            var decodedToken = jwt.decode(token, { complete: true });\n            var dateNow = new Date();\n            if (decodedToken.payload.exp >= dateNow.getTime() / 1000) {\n                isExpired = false;\n            }\n        }\n        if (isExpired === false) {\n            this.setState({ redirect: true }); // redirection vers la page login\n        }\n    };\n\n    Connect = () => {\n        fetch(`https://api.lowympact.fr/api/v1/users/login`, {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n                \"api-key\": \"99d8fb95-abdd-4885-bf6c-3a81d8874043\",\n\n                //'x-access-token': localStorage.getItem('token'),\n            },\n            body: JSON.stringify({\n                email: this.state.email,\n                password: this.state.password,\n            }),\n        })\n            .then((response) => response.json())\n            .then((data) => {\n                //console.log(data);\n                if (data.error === \"No user found\") {\n                    this.setState({ loginSuccessful: false });\n                    let err = this.state.errors;\n                    err.push(<p>Utilisateur Inconnu</p>);\n                    this.setState({ errors: err });\n                } else if (data.error === \"Incorrect password\" || !data.success) {\n                    this.setState({ loginSuccessful: false });\n                    let err = this.state.errors;\n                    err.push(<p>Mot de passe Incorrect</p>);\n                    this.setState({ errors: err });\n                } else {\n                    // console.log(data);\n                    localStorage.setItem(\"token\", data.token);\n                    localStorage.setItem(\"userId\", data._id);\n                    this.setState({ loginSuccessful: true, redirect: true });\n                    //this.props.history.goBack();\t// a ajouter pour être redirigé vers la page initialement\n                    // demandée. On doit cependant rediriger si la page demandée\n                    // était la page de login\n                }\n            });\n    };\n\n    onPasswordChange = () => {\n        this.setState({\n            password: this.passwordInput.value,\n            email: this.emailInput.value,\n        });\n    };\n\n    render() {\n        if (this.state.redirect) {\n            return <Redirect to=\"/history\" />;\n        }\n        return (\n            <React.Fragment>\n                <Link to=\"/login\">\n                    <Header />\n                </Link>\n                <div className=\"logo-fruits\">\n                    <img src={fruits} className=\"logo\" alt=\"Fruits\" />\n                </div>\n\n                <Link className=\"back-button\" to=\"/login\">\n                    {\"< Retour\"}\n                </Link>\n                <div className=\"signin-container\">\n                    <form className=\"forms\">\n                        <label>\n                            email\n                            <input\n                                className=\"input-forms\"\n                                value={this.state.email}\n                                onChange={this.onPasswordChange}\n                                ref={(ref) => (this.emailInput = ref)}\n                                type=\"email\"\n                            />\n                        </label>\n                        <label>\n                            mot de passe\n                            <input\n                                className=\"input-forms\"\n                                value={this.state.password}\n                                onChange={this.onPasswordChange}\n                                ref={(ref) => (this.passwordInput = ref)}\n                                type=\"password\"\n                            />\n                        </label>\n                    </form>\n                    <label className=\"errors-signin\">{this.state.errors}</label>\n                    <div className=\"button-signin\" onClick={this.handleSubmit}>\n                        <ButtonSignin />\n                    </div>\n                </div>\n            </React.Fragment>\n        );\n    }\n}\nexport default Signin;\n","import React from \"react\";\n\nfunction ButtonChangePassword() {\n  return (\n  <div>\n    Changer mot de passe\n  </div>\n  );\n}\n\nexport default ButtonChangePassword;","export const USERS =\n    {\n        id: 0,\n        email: \"bububu@bababa.com\",\n        password: \"123456\"\n    };","import React, { Component } from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport ButtonChangePassword from \"../components/Button/ButtonChangePassword\";\nimport fruits from \"../assets/images/fruits-vegetables-basket-by-oblik-studio.svg\";\nimport Header from \"../components/Header/Header\";\nimport Navbar from \"../components/Navbar/Navbar\";\nimport \"./ProfileConfiguration.css\";\nimport { USERS } from \"../assets/users/users\";\nimport jwt from \"jsonwebtoken\";\nimport { Link } from \"react-router-dom\";\n\nfunction validate(newPassword, confirmPassword) {\n    const errors = [];\n    if (newPassword.length < 6) {\n        errors.push(<p>Entre un mot de passe. 6 caractères minimum requis</p>);\n    }\n    if (newPassword !== confirmPassword) {\n        errors.push(<p>Les mots de passe ne correspondent pas</p>);\n    }\n    return errors;\n}\n\nclass ProfileConfiguration extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            user: USERS,\n            currentPassword: \"\",\n            newPassword: \"\",\n            confirmPassword: \"\",\n            errors: [],\n            redirect: false,\n        };\n    }\n\n    handleChange = (e) => {\n        e.preventDefault();\n        const { currentPassword, newPassword, confirmPassword } = this.state;\n        const errors = validate(newPassword, confirmPassword);\n        console.log(this.state.user.email, currentPassword, newPassword, confirmPassword, errors);\n        this.setState({ errors });\n        if (errors.length === 0) {\n            this.changeUserInfo(this.state.user._id, currentPassword, newPassword);\n        }\n    };\n\n    changeUserInfo = (userId, currentPassword, newPassword) => {\n        console.log(\"hey\");\n        fetch(\n            `https://api.lowympact.fr/api/v1/users/${userId}`,\n            // `http://localhost:8080/api/v1/users/login`,\n            {\n                method: \"PUT\",\n                headers: {\n                    \"Content-Type\": \"application/json\",\n                    \"api-key\": \"99d8fb95-abdd-4885-bf6c-3a81d8874043\",\n                    authorization: localStorage.getItem(\"token\"),\n                },\n                body: JSON.stringify({\n                    currentPassword: currentPassword,\n                    newPassword: newPassword,\n                }),\n            }\n        )\n            .then((response) => response.json())\n            .then((res) => {\n                console.log(res);\n                if (res.success === false) {\n                    this.setState({\n                        errors: [...this.state.errors, res.error],\n                    });\n                } else {\n                    this.setState({ redirect: true });\n                }\n            });\n    };\n\n    Verify = () => {\n        let isExpired = true;\n        const token = localStorage.getItem(\"token\");\n        if (token) {\n            var decodedToken = jwt.decode(token, { complete: true });\n            var dateNow = new Date();\n            if (decodedToken.payload.exp >= dateNow.getTime() / 1000) {\n                isExpired = false;\n            }\n        }\n        if (isExpired === true) {\n            this.setState({ redirect: true }); // redirection vers la page login\n        }\n    };\n\n    componentDidMount = () => {\n        this.Verify();\n        let userId = localStorage.getItem(\"userId\");\n        if (userId) {\n            this.loadUserInfo(userId);\n        }\n    };\n\n    loadUserInfo = (userId) => {\n        fetch(\n            `https://api.lowympact.fr/api/v1/users/${userId}`,\n            // `http://localhost:8080/api/v1/users/login`,\n            {\n                method: \"GET\",\n                headers: {\n                    \"Content-Type\": \"application/json\",\n                    \"api-key\": \"99d8fb95-abdd-4885-bf6c-3a81d8874043\",\n                    authorization: localStorage.getItem(\"token\"),\n                },\n            }\n        )\n            .then((response) => response.json())\n            .then((res) => {\n                console.log(res);\n\n                this.setState({ user: res.data });\n            });\n    };\n\n    render() {\n        if (this.state.redirect) {\n            return <Redirect to=\"/profil\" />;\n        }\n        console.log(this.state.redirect);\n        return (\n            <div className=\"screen\">\n                <Link to=\"/\">\n                    <Header />\n                </Link>\n                <Navbar />\n                <div className=\"logo-fruits\">\n                    <img src={fruits} className=\"logo\" alt=\"Fruits\" />\n                </div>\n                <Link className=\"back-button\" to=\"/profil\">\n                    {\"< Retour\"}\n                </Link>\n                <div className=\"configuration-screen-title\"></div>\n                <div className=\"errors-change-password\">{this.state.errors}</div>\n                <div className=\"configuration-container\">\n                    <div className=\"configuration-email-block\">\n                        <div>email</div>\n                        <div>{this.state.user.email}</div>\n                    </div>\n                    <form className=\"configuration-form\">\n                        <label>\n                            {/* Mot de passe actuel */}\n                            <input\n                                placeholder=\"mot de passe actuel\"\n                                className=\"input-forms\"\n                                value={this.state.currentPassword}\n                                onChange={(evt) =>\n                                    this.setState({\n                                        currentPassword: evt.target.value,\n                                    })\n                                }\n                                type=\"password\"\n                            />\n                        </label>\n                        <label>\n                            {/* Nouveau mot de passe */}\n                            <input\n                                value={this.state.newPassword}\n                                className=\"input-forms\"\n                                onChange={(evt) =>\n                                    this.setState({\n                                        newPassword: evt.target.value,\n                                    })\n                                }\n                                type=\"password\"\n                                placeholder=\"nouveau mot de passe\"\n                            />\n                        </label>\n                        <label>\n                            {/* Confirmation de mot de passe */}\n                            <input\n                                placeholder=\"confirmation de mdp\"\n                                className=\"input-forms\"\n                                value={this.state.confirmPassword}\n                                onChange={(evt) =>\n                                    this.setState({\n                                        confirmPassword: evt.target.value,\n                                    })\n                                }\n                                type=\"password\"\n                            />\n                        </label>\n                        <Link className=\"button-change-password\" onClick={this.handleChange} to=\"\">\n                            <ButtonChangePassword />\n                        </Link>\n                    </form>\n                </div>\n            </div>\n        );\n    }\n}\nexport default ProfileConfiguration;\n","import React from \"react\";\nimport { Swiper, SwiperSlide } from \"swiper/react\";\n// Import Swiper styles\nimport \"swiper/swiper-bundle.css\";\n\n//Import Pie Chart\nimport { PieChart } from \"react-minimal-pie-chart\";\n\nimport fruits from \"../../assets/images/fruits-vegetables-basket-by-oblik-studio.svg\";\nimport { motion } from \"framer-motion\";\n\nclass DoughnutChartEcoScore extends React.Component {\n    state = {\n        swiper: undefined,\n        selectedSegment: undefined,\n    };\n\n    displayChart = () => {\n        let chart = <React.Fragment></React.Fragment>;\n        if (this.props.ecoScoreData && this.props.cartedProduct > 0) {\n            let data = [\n                {\n                    title: \"EcoScore A\",\n                    value: this.props.ecoScoreData.a,\n                    color: \"#1e8f4f\",\n                },\n                {\n                    title: \"EcoScore B\",\n                    value: this.props.ecoScoreData.b,\n                    color: \"#5fad0c\",\n                },\n                {\n                    title: \"EcoScore C\",\n                    value: this.props.ecoScoreData.c,\n                    color: \"#ecb10f\",\n                },\n                {\n                    title: \"EcoScore D\",\n                    value: this.props.ecoScoreData.d,\n                    color: \"#ff6f1e\",\n                },\n                {\n                    title: \"EcoScore E\",\n                    value: this.props.ecoScoreData.e,\n                    color: \"#df1e1f\",\n                },\n                {\n                    title: \"EcoScore Inconnu\",\n                    value: this.props.ecoScoreData.unknown,\n                    color: \"#000000\",\n                },\n            ];\n            chart = (\n                <PieChart\n                    data={data}\n                    lineWidth={30}\n                    paddingAngle={1}\n                    radius={PieChart.defaultProps.radius - 3}\n                    animate\n                    animationDuration={700}\n                    label={({ dataEntry }) => `${Math.round(dataEntry.percentage)}%`}\n                    labelStyle={(index) =>\n                        index === this.state.selectedSegment\n                            ? {\n                                  fontSize: \"6px\",\n                                  fontFamily: \"comfortaa\",\n                                  fill: data[index].color,\n                              }\n                            : {\n                                  fontSize: \"0px\",\n                                  fontFamily: \"comfortaa\",\n                                  fill: data[index].color,\n                              }\n                    }\n                    labelPosition={60}\n                    segmentsStyle={{\n                        transition: \"stroke .3s ease-out\",\n                        cursor: \"pointer\",\n                    }}\n                    segmentsShift={(index) => (index === this.state.selectedSegment ? 3 : 0)}\n                    onClick={(event, index) => {\n                        if (index === this.state.selectedSegment) {\n                            this.setState({ selectedSegment: undefined });\n                            this.state.swiper.slideTo(0, 500);\n                        } else {\n                            this.setState({ selectedSegment: index });\n                            this.state.swiper.slideTo(index + 1, 500);\n                        }\n                    }}\n                />\n            );\n        } else {\n            chart = (\n                <motion.div\n                    className=\"stats-no-product\"\n                    initial={{ opacity: 0 }}\n                    animate={{ opacity: 1 }}\n                    exit={{ opacity: 0 }}\n                >\n                    <div>\n                        <img src={fruits} className=\"logo\" alt=\"Fruits\" />\n                        <p className=\"logo-text\">Commence à scanner des produits !</p>\n                    </div>\n                </motion.div>\n            );\n        }\n        return chart;\n    };\n\n    onSlideChange = (index) => {\n        if (index === 0) {\n            this.setState({ selectedSegment: undefined });\n        } else {\n            this.setState({ selectedSegment: index - 1 });\n        }\n    };\n\n    displaySlides = () => {\n        let slides = <React.Fragment></React.Fragment>;\n        if (this.props.ecoScoreData && this.props.cartedProduct > 0) {\n            slides = (\n                <React.Fragment>\n                    <SwiperSlide>\n                        <div className=\"stats-slider\">\n                            <img\n                                className=\"stats-ecoscore-full\"\n                                src=\"/images/utils/ecoScoreFull.png\"\n                                alt=\"\"\n                            />\n                        </div>\n                    </SwiperSlide>\n                    <SwiperSlide>\n                        <div className=\"stats-slider\">\n                            <span className=\"stats-slider-text\">\n                                {\">\"} EcoScore A : {this.props.ecoScoreData.a}{\" \"}\n                                {this.props.ecoScoreData.a > 1 ? \" produits\" : \" produit\"}\n                            </span>\n                            <img\n                                className=\"stats-ecoscore-image\"\n                                src=\"/images/utils/ecoScoreA.png\"\n                                alt=\"\"\n                            />\n                        </div>\n                    </SwiperSlide>\n                    <SwiperSlide>\n                        <div className=\"stats-slider\">\n                            <span className=\"stats-slider-text\">\n                                {\">\"} EcoScore B : {this.props.ecoScoreData.b}{\" \"}\n                                {this.props.ecoScoreData.b > 1 ? \" produits\" : \" produit\"}\n                            </span>\n                            <img\n                                className=\"stats-ecoscore-image\"\n                                src=\"/images/utils/ecoScoreB.png\"\n                                alt=\"\"\n                            />\n                        </div>\n                    </SwiperSlide>\n                    <SwiperSlide>\n                        <div className=\"stats-slider\">\n                            <span className=\"stats-slider-text\">\n                                {\">\"} EcoScore C : {this.props.ecoScoreData.c}{\" \"}\n                                {this.props.ecoScoreData.c > 1 ? \" produits\" : \" produit\"}\n                            </span>\n                            <img\n                                className=\"stats-ecoscore-image\"\n                                src=\"/images/utils/ecoScoreC.png\"\n                                alt=\"\"\n                            />\n                        </div>\n                    </SwiperSlide>\n                    <SwiperSlide>\n                        <div className=\"stats-slider\">\n                            <span className=\"stats-slider-text\">\n                                {\">\"} EcoScore D : {this.props.ecoScoreData.d}{\" \"}\n                                {this.props.ecoScoreData.d > 1 ? \" produits\" : \" produit\"}\n                            </span>\n                            <img\n                                className=\"stats-ecoscore-image\"\n                                src=\"/images/utils/ecoScoreD.png\"\n                                alt=\"\"\n                            />\n                        </div>\n                    </SwiperSlide>\n                    <SwiperSlide>\n                        <div className=\"stats-slider\">\n                            <span className=\"stats-slider-text\">\n                                {\">\"} EcoScore E : {this.props.ecoScoreData.e}{\" \"}\n                                {this.props.ecoScoreData.e > 1 ? \" produits\" : \" produit\"}\n                            </span>\n                            <img\n                                className=\"stats-ecoscore-image\"\n                                src=\"/images/utils/ecoScoreE.png\"\n                                alt=\"\"\n                            />\n                        </div>\n                    </SwiperSlide>\n                    <SwiperSlide>\n                        <div className=\"stats-slider\">\n                            <span className=\"stats-slider-text\">\n                                {\">\"} EcoScore Inconnu : {this.props.ecoScoreData.unknown}{\" \"}\n                                {this.props.ecoScoreData.unknown > 1 ? \" produits\" : \" produit\"}\n                            </span>\n                        </div>\n                    </SwiperSlide>\n                </React.Fragment>\n            );\n        }\n        return slides;\n    };\n\n    render = () => {\n        return (\n            <React.Fragment>\n                <div className=\"stats-chart-pie\">{this.displayChart()}</div>\n                <div className=\"stats-chart-slider\">\n                    <Swiper\n                        spaceBetween={0}\n                        slidesPerView={1}\n                        centeredSlides={true}\n                        onSlideChange={(i) => this.onSlideChange(i.activeIndex)}\n                        onSwiper={(swiper) => this.setState({ swiper: swiper })}\n                    >\n                        {this.displaySlides()}\n                    </Swiper>\n                </div>\n            </React.Fragment>\n        );\n    };\n}\n\nexport default DoughnutChartEcoScore;\n","import React from \"react\";\nimport { Swiper, SwiperSlide } from \"swiper/react\";\n// Import Swiper styles\nimport \"swiper/swiper-bundle.css\";\n\n//Import Bar Chart\nimport Chart from \"react-apexcharts\";\n\nimport fruits from \"../../assets/images/fruits-vegetables-basket-by-oblik-studio.svg\";\nimport { motion } from \"framer-motion\";\n\nconst monthNames = [\n    \"Janvier\",\n    \"Février\",\n    \"Mars\",\n    \"Avril\",\n    \"Mai\",\n    \"Juin\",\n    \"Juillet\",\n    \"Août\",\n    \"Septembre\",\n    \"Octobre\",\n    \"Novembre\",\n    \"Décembre\",\n];\n\nclass BarChartCarbonImpact extends React.Component {\n    state = {\n        selectedSegment: 0,\n        options: {\n            chart: {\n                toolbar: {\n                    show: false,\n                },\n                dropShadow: {\n                    enabled: true,\n                    top: 0,\n                    left: 0,\n                    blur: 2,\n                    opacity: 0.5,\n                },\n            },\n            plotOptions: {\n                bar: {\n                    borderRadius: 5,\n                    horizontal: true,\n                },\n            },\n            xaxis: {\n                categories: [\"Janvier\", \"Février\", \"Mars\", \"Avril\", \"Mai\"],\n                labels: {\n                    style: {\n                        fontSize: \"12px\",\n                        fontFamily: \"Comfortaa\",\n                        fontColor: \"#1b3044\",\n                    },\n                },\n                title: {\n                    text: \"CO₂ équivalent (kg)\",\n                    style: {\n                        fontSize: \"12px\",\n                        fontFamily: \"Comfortaa\",\n                        fontColor: \"#1b3044\",\n                    },\n                },\n            },\n            yaxis: {\n                labels: {\n                    style: {\n                        fontSize: \"12px\",\n                        fontFamily: \"Comfortaa\",\n                        fontColor: \"#1b3044\",\n                    },\n                },\n            },\n            dataLabels: {\n                enabled: true,\n                style: {\n                    fontSize: \"10px\",\n                    fontFamily: \"Comfortaa\",\n                },\n            },\n            noData: {\n                text: \"Chargement...\",\n            },\n            fill: {\n                colors: [\"#ff914d\"],\n            },\n            grid: {\n                xaxis: {\n                    lines: {\n                        show: true,\n                    },\n                },\n                yaxis: {\n                    lines: {\n                        show: false,\n                    },\n                },\n            },\n        },\n    };\n\n    displayChart = () => {\n        let chart = <React.Fragment></React.Fragment>;\n        if (this.props.carbonImpactData && this.props.cartedProduct > 0) {\n            let dataSize = this.props.carbonImpactData.data.length;\n            let xaxis = [];\n            let now;\n\n            switch (this.props.carbonImpactData.unit) {\n                case \"weekly\":\n                    let d = new Date();\n                    d.setHours(0, 0, 0, 0);\n                    d.setDate(d.getDate() + 4 - (d.getDay() || 7));\n                    let yearStart = new Date(d.getFullYear(), 0, 1);\n                    now = Math.ceil(((d - yearStart) / 86400000 + 1) / 7);\n                    for (let i = dataSize - 1; i >= 0; i--) {\n                        xaxis.push(\"Semaine \" + (now - i));\n                    }\n                    break;\n                case \"monthly\":\n                    now = new Date().getMonth();\n                    let year = new Date().getFullYear();\n                    for (let i = dataSize - 1; i >= 0; i--) {\n                        let monthNum = now - i;\n                        if (monthNum < 0) {\n                            xaxis.push(monthNames[monthNum + 12] + \" \" + (year - 1));\n                        } else {\n                            xaxis.push(monthNames[monthNum] + \" \" + year);\n                        }\n                    }\n                    break;\n                case \"yearly\":\n                    now = new Date().getFullYear();\n                    for (let i = dataSize - 1; i >= 0; i--) {\n                        xaxis.push((now - i).toString());\n                    }\n                    break;\n                default:\n                    now = new Date().getFullYear();\n                    for (let i = dataSize - 1; i >= 0; i--) {\n                        xaxis.push((now - i).toString());\n                    }\n                    break;\n            }\n            let options = this.state.options;\n            if (options.xaxis) options.xaxis.categories = xaxis;\n            this.setState({ options: options });\n\n            let series = [\n                {\n                    name: \"CO₂ équivalent (kg)\",\n                    data: [],\n                },\n            ];\n\n            let sortedData = this.props.carbonImpactData.data;\n            console.log(sortedData);\n            sortedData.sort((a, b) => (a.offset > b.offset ? 1 : -1));\n            console.log(sortedData);\n\n            for (let i = 0; i < sortedData.length; i++) {\n                let finalValue =\n                    this.state.selectedSegment === 0\n                        ? sortedData[i].impact.toFixed(2)\n                        : (sortedData[i].impact / sortedData[i].nbProducts).toFixed(2);\n                series[0].data.push(finalValue);\n            }\n\n            chart = (\n                <React.Fragment>\n                    <div className=\"stats-chart-bar\">\n                        <Chart\n                            options={this.state.options}\n                            series={series}\n                            type=\"bar\"\n                            height={350}\n                        ></Chart>\n                    </div>\n                </React.Fragment>\n            );\n        } else {\n            chart = (\n                <motion.div\n                    className=\"stats-no-product\"\n                    initial={{ opacity: 0 }}\n                    animate={{ opacity: 1 }}\n                    exit={{ opacity: 0 }}\n                >\n                    <div>\n                        <img src={fruits} className=\"logo\" alt=\"Fruits\" />\n                        <p className=\"logo-text\">Commence à scanner des produits !</p>\n                    </div>\n                </motion.div>\n            );\n        }\n        return chart;\n    };\n\n    onSlideChange = (index) => {\n        this.setState({ selectedSegment: this.state.selectedSegment === 0 ? 1 : 0 });\n    };\n\n    displaySlides = () => {\n        let slides = <React.Fragment></React.Fragment>;\n        if (this.props.carbonImpactData && this.props.cartedProduct > 0) {\n            slides = (\n                <React.Fragment>\n                    <SwiperSlide>\n                        <div className=\"stats-slider\">\n                            <span className=\"stats-slider-text\">{\">\"} Impact Carbone total</span>\n                        </div>\n                    </SwiperSlide>\n                    <SwiperSlide>\n                        <div className=\"stats-slider\">\n                            <span className=\"stats-slider-text\">\n                                {\">\"} Impact Carbone par produit\n                            </span>\n                        </div>\n                    </SwiperSlide>\n                </React.Fragment>\n            );\n        }\n        return slides;\n    };\n\n    render = () => {\n        return (\n            <React.Fragment>\n                {this.displayChart()}\n                <div className=\"stats-chart-slider\">\n                    <Swiper\n                        spaceBetween={0}\n                        slidesPerView={1}\n                        centeredSlides={true}\n                        onSlideChange={(i) => this.onSlideChange(i.activeIndex)}\n                        onSwiper={(swiper) => this.setState({ swiper: swiper })}\n                    >\n                        {this.displaySlides()}\n                    </Swiper>\n                </div>\n            </React.Fragment>\n        );\n    };\n}\n\nexport default BarChartCarbonImpact;\n","import React from \"react\";\nimport Navbar from \"../components/Navbar/Navbar\";\nimport DoughnutChartEcoScore from \"../components/Charts/DoughnutChartEcoScore\";\nimport BarChartCarbonImpact from \"../components/Charts/BarChartCarbonImpact\";\nimport \"./Product.css\";\nimport { Link } from \"react-router-dom\";\nimport jwt from \"jsonwebtoken\";\n\nclass Statistics extends React.Component {\n    state = {\n        ecoScoreData: undefined,\n        carbonImpactData: undefined,\n        username: undefined,\n        scannedProduct: undefined,\n        cartedProduct: undefined,\n        userId: undefined,\n        value: 0,\n    };\n\n    Verify = () => {\n        let isExpired = true;\n        const token = localStorage.getItem(\"token\");\n        if (token) {\n            var decodedToken = jwt.decode(token, { complete: true });\n            var dateNow = new Date();\n            if (decodedToken.payload.exp >= dateNow.getTime() / 1000) {\n                isExpired = false;\n            }\n        }\n        if (isExpired === false) {\n            this.setState({ connected: true });\n        }\n    };\n\n    componentDidMount = () => {\n        this.Verify();\n        let userId = localStorage.getItem(\"userId\");\n        if (userId) {\n            this.setState({ userId: userId });\n        }\n        this.loadUserData(userId);\n        this.loadEcoScoreData(userId, \"fromBeginning\");\n        this.loadCarbonImpactData(userId, \"fromBeginning\");\n    };\n\n    loadUserData = (userId) => {\n        fetch(\n            `https://api.lowympact.fr/api/v1/users/${userId}`,\n            // `http://localhost:8080/api/v1/users/${userId}`,\n            {\n                method: \"get\",\n                credentials: \"include\",\n                headers: new Headers({\n                    authorization: localStorage.getItem(\"token\"),\n                    \"api-key\": \"99d8fb95-abdd-4885-bf6c-3a81d8874043\",\n                    \"Content-Type\": \"application/json\",\n                }),\n            }\n        )\n            .then((response) => response.json())\n            .then((res) => {\n                console.log(res);\n                this.setState({\n                    username: res?.data?.username,\n                    scannedProduct: res?.scannedProduct,\n                    cartedProduct: res?.cartedProduct,\n                });\n            });\n    };\n\n    loadEcoScoreData = (userId, typeAggregate) => {\n        fetch(\n            `https://api.lowympact.fr/api/v1/users/${userId}/statistics?typeStatistic=ecoscore&typeAggregate=${typeAggregate}`,\n            // `http://localhost:8080/api/v1/users/${userId}/statistics?typeStatistic=ecoscore&typeAggregate=${typeAggregate}`,\n            {\n                method: \"get\",\n                credentials: \"include\",\n                headers: new Headers({\n                    authorization: localStorage.getItem(\"token\"),\n                    \"api-key\": \"99d8fb95-abdd-4885-bf6c-3a81d8874043\",\n                    \"Content-Type\": \"application/json\",\n                }),\n            }\n        )\n            .then((response) => response.json())\n            .then((res) => {\n                console.log(res);\n                this.setState({\n                    ecoScoreData: res?.statistics?.ecoscore,\n                });\n            });\n    };\n\n    loadCarbonImpactData = (userId, typeAggregate) => {\n        fetch(\n            `https://api.lowympact.fr/api/v1/users/${userId}/statistics?typeStatistic=carbonImpact&typeAggregate=${typeAggregate}`,\n            // `http://localhost:8080/api/v1/users/${userId}/statistics?typeStatistic=carbonImpact&typeAggregate=${typeAggregate}`,\n            {\n                method: \"get\",\n                credentials: \"include\",\n                headers: new Headers({\n                    authorization: localStorage.getItem(\"token\"),\n                    \"api-key\": \"99d8fb95-abdd-4885-bf6c-3a81d8874043\",\n                    \"Content-Type\": \"application/json\",\n                }),\n            }\n        )\n            .then((response) => response.json())\n            .then((res) => {\n                console.log(res);\n                this.setState({\n                    carbonImpactData: res?.statistics?.carbonImpact,\n                });\n            });\n    };\n\n    displayStats = () => {\n        let scannedProduct = <React.Fragment />;\n        let cartedProduct = <React.Fragment />;\n\n        if (this.state.scannedProduct !== undefined) {\n            scannedProduct = (\n                <div className=\"stats-header-text\">\n                    <span className={\"circle-stats color_score_stats\"}>⬤ </span>\n                    {this.state.scannedProduct > 1 ? \"Produits scannés :\" : \"Produit scanné :\"}\n                    <span className=\"uppercase \"> {this.state.scannedProduct}</span>\n                </div>\n            );\n        }\n\n        if (this.state.cartedProduct !== undefined) {\n            cartedProduct = (\n                <div className=\"stats-header-text\">\n                    <span className={\"circle-stats color_score_stats\"}>⬤ </span>\n                    {this.state.cartedProduct > 1 ? \"Produits achetés :\" : \"Produit acheté :\"}\n                    <span className=\"uppercase \"> {this.state.cartedProduct}</span>\n                </div>\n            );\n        }\n\n        return (\n            <React.Fragment>\n                {scannedProduct}\n                {cartedProduct}\n            </React.Fragment>\n        );\n    };\n\n    handleChange = (event, newValue) => {\n        this.setState({ value: newValue });\n    };\n\n    displayNavbar = () => {\n        let retour = (\n            <div className=\"stats-navbar-container\">\n                <button\n                    className={\n                        this.state.value === 0\n                            ? \"stats-navbar-button selected\"\n                            : \"stats-navbar-button\"\n                    }\n                    onClick={() => this.handleChange(\"\", 0)}\n                >\n                    EcoScore\n                </button>\n                <button\n                    className={\n                        this.state.value === 1\n                            ? \"stats-navbar-button selected\"\n                            : \"stats-navbar-button\"\n                    }\n                    onClick={() => this.handleChange(\"\", 1)}\n                >\n                    Impact Carbone\n                </button>\n                <div\n                    className={\n                        this.state.value === 0 ? \"navbar-under nav-left\" : \"navbar-under nav-right\"\n                    }\n                ></div>\n            </div>\n        );\n        return retour;\n    };\n\n    render = () => {\n        return (\n            <React.Fragment>\n                <div className=\"stats-page-container\">\n                    <div className=\"stats-header-container\">\n                        <div className=\"stats-profil-link\">\n                            <Link to=\"/profil\"> {\"<\"} Profil</Link>\n                        </div>\n                        <img className=\"stats-bitmap-image\" src=\"/images/utils/bitmap.png\" alt=\"\" />\n                    </div>\n\n                    <div className=\"stats-welcome\">\n                        <span className=\"stats-welcome-text\">\n                            {this.state.username\n                                ? this.state.username + \", voici ton récapitulatif Lowympact...\"\n                                : \"\"}\n                        </span>\n                    </div>\n\n                    <div className=\"stats-text-container\">{this.displayStats()}</div>\n\n                    {this.displayNavbar()}\n\n                    {this.state.value === 0 ? (\n                        <DoughnutChartEcoScore\n                            ecoScoreData={this.state.ecoScoreData}\n                            scannedProduct={this.state.scannedProduct}\n                            cartedProduct={this.state.cartedProduct}\n                        ></DoughnutChartEcoScore>\n                    ) : (\n                        <BarChartCarbonImpact\n                            carbonImpactData={this.state.carbonImpactData}\n                            scannedProduct={this.state.scannedProduct}\n                            cartedProduct={this.state.cartedProduct}\n                        ></BarChartCarbonImpact>\n                    )}\n\n                    <Navbar />\n                </div>\n            </React.Fragment>\n        );\n    };\n}\n\nexport default Statistics;\n\nconst delay = (ms) => new Promise((res) => setTimeout(res, ms));\n","import React, { Component } from \"react\";\nimport { BrowserRouter as Router, Route, Redirect, Switch } from \"react-router-dom\";\nimport { AnimatePresence } from \"framer-motion\";\n\nimport \"./App.css\";\nimport History from \"./pages/History\";\nimport Error404 from \"./pages/Error404\";\nimport Login from \"./pages/Login\";\nimport Product from \"./pages/Product\";\nimport Profil from \"./pages/Profil\";\nimport Signup from \"./pages/Signup\";\nimport Signin from \"./pages/Signin\";\nimport ProfileConfiguration from \"./pages/ProfileConfiguration\";\nimport Statistics from \"./pages/Statistics\";\n\nclass App extends Component {\n    render() {\n        return (\n            <Router>\n                <AnimatePresence exitBeforeEnter={true}>\n                    <Switch>\n                        {/* Front Pages */}\n                        <Route path=\"/history\" component={History} exact key={1} />\n                        <Route path=\"/profil\" component={Profil} exact key={2} />\n                        <Route path=\"/login\" component={Login} exact />\n                        <Route path=\"/\" component={Login} exact key={1} />\n                        <Route path=\"/products/:barcode/:bcProductId\" component={Product} exact />\n                        <Route path=\"/products/:barcode\" component={Product} exact />\n                        <Route path=\"/signup\" component={Signup} exact />\n                        <Route path=\"/signin\" component={Signin} exact />\n                        <Route path=\"/configuration\" component={ProfileConfiguration} exact />\n                        <Route path=\"/stats\" component={Statistics} exact />\n                        {/* Errors Pages */}\n                        <Route path=\"/error404\" component={Error404} />\n                        <Redirect to=\"/error404\" />\n                        {/* <Route path=\"/MAINTENANCE\" component={ Maintenance } /> */}\n                    </Switch>\n                </AnimatePresence>\n                {/* </Suspense> */}\n            </Router>\n        );\n    }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}