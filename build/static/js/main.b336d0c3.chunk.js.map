{"version":3,"sources":["assets/images/fruits-vegetables-basket-by-oblik-studio.svg","components/Button/ButtonHistory.js","components/Button/ButtonProfil.js","components/Button/ButtonScan.js","components/Scan/Scan.js","components/Test/Scanner.js","components/Test/Scan_home.js","components/Navbar/Navbar.js","assets/images/logo.svg","assets/images/bitmap.png","components/Header/Header.js","pages/History.js","pages/Error404.js","components/Button/ButtonCreateAccount.js","components/Button/ButtonLogin.js","components/Button/ButtonNoAccount.js","pages/Login.js","components/Traceability/leaflet-curve/leaflet.curve.js","components/Traceability/leaflet-curve/Curve.js","components/Traceability/Traceability.js","assets/images/nutella.png","components/Environnement/Environnement.js","pages/Product.js","components/Labels/Labels.js","pages/Profil.js","components/Button/ButtonSignup.js","pages/Signup.js","components/Button/ButtonSignin.js","pages/Signin.js","components/Button/ButtonChangePassword.js","assets/users/users.js","pages/ProfileConfiguration.js","components/Charts/DoughnutChartEcoScore.js","components/Charts/BarChartCarbonImpact.js","pages/Statistics.js","App.js","reportWebVitals.js","index.js"],"names":["ButtonHistory","className","class","ButtonProfil","ButtonScan","configurationPromise","configure","engineLocation","catch","error","alert","style","position","top","bottom","left","right","margin","maxWidth","maxHeight","Scan","props","ref","React","createRef","then","ScanditSDKBarcodePicker","create","current","barcodePicker","onScan","on","onError","this","destroy","prevProps","JSON","stringify","scanSettings","applyScanSettings","visible","setVisible","AnimatePresence","exitBeforeEnter","motion","div","id","initial","animate","transition","duration","exit","onClick","onCrossClicked","Component","Scanner","componentDidMount","Quagga","init","inputStream","type","constraints","width","ideal","height","deviceId","aspectRatio","min","max","focusMode","locator","patchSize","halfSample","locate","area","numOfWorkers","window","navigator","hardwareConcurrency","decoder","readers","debug","drawBoundingBox","showFrequency","drawScanline","showPattern","multiple","singleChannel","err","console","log","start","setQuagga","onDetected","_onDetected","result","a","stop","offDetected","Fragment","Scan_home","state","scanning","status","results","usedCamera","devices","reading","barcode","undefined","bcProductId","mediaDevices","enumerateDevices","cameras","i","forEach","device","kind","push","label","match","setState","quagga","switchCamera","num","length","_scan","res","codeResult","code","fetch","response","json","handleScan","data","arr","split","handleError","displayQrCode","delay","showViewFinder","displayBarCode","map","switchReader","redirect","to","onChange","uncheckedIcon","checkedIcon","checked","onColor","offColor","Navbar","showScanner","updateWindowDimensions","innerHeight","handleScannerButton","bool","handleBarcode","render","vibrateOnScan","enableTorchToggle","enablePinchToZoom","enableCameraSwitcher","guiStyle","ScanSettings","enabledSymbologies","codeDuplicateFilter","scanResult","barcodes","message","location","pathname","addEventListener","removeEventListener","Header","src","blob","alt","logo","RenderHistoryItem","labelColor","item","pathProduct","name","opacity","image","brand","color","marginRight","History","userId","localStorage","getItem","token","loadHistoryInformations","loadLocalStorageHistory","method","credentials","headers","Headers","authorization","items","loading","history","parse","itemList","Object","keys","fruits","Error404","ButtonCreateAccount","ButtonLogin","ButtonNoAccount","Login","Verify","isExpired","decodedToken","jwt","decode","complete","dateNow","Date","getTime","payload","exp","L","Curve","Path","extend","options","initialize","path","setOptions","_initialUpdate","_setPath","getPath","_coords","setPath","redraw","getBounds","_bounds","_computeBounds","lastPoint","lastCommand","coord","bound","LatLngBounds","String","lat","latLng","lng","controlPoint1","controlPoint2","endPoint","diffLat","diffLng","controlPoint","getCenter","_update","_map","_updatePath","_renderer","_updatecurve","_project","lastCoord","curCommand","curPoint","_points","latLngToLayerPoint","curve","SVG","include","layer","_curvePointsToPath","_path","getTotalLength","dashArray","strokeDasharray","strokeDashoffset","points","point","str","x","y","positions","option","getOptions","fromProps","toProps","leafletElement","setStyleIfChanged","propTypes","children","PropTypes","oneOfType","arrayOf","node","object","array","isRequired","withLeaflet","Traceability","zoom","swiper","currentIndex","getMaterialIcon","mode","getTransportMode","getTranslation","displaySlides","slides","products","product","pastille","TransportCO2Impact","value","transport","productsOutput","productName","seller","localisation","city","country","buyer","Math","round","dist","handleMarkerClick","latlng","index","elem","document","getElementsByClassName","scrollIntoView","behavior","slideTo","p","latitude","longitude","getZoomRatio","flyTo","onSlideChange","parseFloat","long","displayMarker","markers","icon","icon2","marker1","lat1","long1","marker2","lat2","long2","zIndex","Icon","iconUrl","iconRetinaUrl","iconSize","Point","Marker","zIndexOffset","curves","setAttribute","getCurveOptions","fill","totalCO2Traceability","toFixed","Map","center","minZoom","scrollWheelZoom","maxBounds","maxBoundsViscosity","getBottomRef","whenCreated","TileLayer","attribution","url","spaceBetween","slidesPerView","centeredSlides","activeIndex","onSwiper","toRadian","degree","PI","origin","destination","distance","lon1","lon2","deltaLat","deltaLon","pow","sin","cos","asin","sqrt","getDistance","latlng1","latlng2","offsetX","offsetY","r","theta","atan2","r2","theta2","midpointX","RenderColor","labelLevel","ecoscore_score","Environnement","showTransport","materials","getColor","note","getColorImpact","getLabel","getLabelImpact","getLabelImpactPackaging","getColorImpactPackaging","dataEcoScore","adjustments","packaging","packagings","recyclable","recycling","material","ecoscore_material_score","innerWidth","displayCO2Repartition","pourcentage","nbKg","percentage","strokeWidth","fontSize","primaryColor","displayRepartitionAllItems","html_agriculture","html_transport","html_consommation","html_distribution","html_packaging","html_processing","html_total","agribalyse","co2_agriculture","co2_total","co2_transportation","co2_consumption","co2_distribution","co2_packaging","co2_processing","handleShowTransport","displayTransportImpact","agribalyse_CO2","transportation_score","transport_final_indicator","n","origins_of_ingredients","value_fr","co2_impact_html","transportation_score_html","displayTranportImpact","displayPackagingDetailImpact","filter","pos","indexOf","separator","displayPackagingImpact","alternativesloop","alternativesList","alternatives","href","image_url","product_name","hmtl_suggestion","alternatives_title","ecoScore","Product","params","productImageUrl","genericName","connected","productData","cart","isFlipping","component","bottomComponent","loadHistory","loadFromOpenFoodFacts","loadProductInformations","handleBarCodeUpdate","traceability","impact","transportCO2Impact","loadAlternatives","score","generic_name","ecoscore_grade","ecoscore_data","saveHistory","scoreSearch","categories_properties","Authorization","success","quantity","body","bcProductAddress","exist","find","element","brands","setItem","addToCart","co2","ecoscore","flip","quantityDelta","carbonImpact","removeFromCart","event","imageFlip","transform","displayImage","scoreClass","handleChange","newValue","displayNavbar","retour","sort","b","depth","ms","Promise","setTimeout","Profil","disconnect","clear","displayConnectedProfil","displayUnconnectedProfil","ButtonSignup","validEmail","RegExp","Signup","userName","email","password","confirmPassword","errors","submit","signUser","username","_id","handleSubmit","e","preventDefault","validate","displayErrors","test","evt","target","passwordConfirm","ButtonSignin","Signin","Connect","loginSuccessful","onPasswordChange","passwordInput","emailInput","ButtonChangePassword","USERS","ProfileConfiguration","currentPassword","newPassword","user","changeUserInfo","loadUserInfo","placeholder","DoughnutChartEcoScore","selectedSegment","displayChart","chart","ecoScoreData","cartedProduct","title","c","d","unknown","lineWidth","paddingAngle","radius","PieChart","defaultProps","animationDuration","dataEntry","labelStyle","fontFamily","labelPosition","segmentsStyle","cursor","segmentsShift","monthNames","BarChartCarbonImpact","toolbar","show","dropShadow","enabled","blur","plotOptions","bar","borderRadius","horizontal","xaxis","categories","labels","fontColor","text","yaxis","dataLabels","noData","colors","grid","lines","carbonImpactData","now","dataSize","unit","setHours","setDate","getDate","getDay","yearStart","getFullYear","ceil","getMonth","year","monthNum","toString","series","sortedData","offset","finalValue","nbProducts","Statistics","scannedProduct","loadUserData","loadEcoScoreData","loadCarbonImpactData","typeAggregate","statistics","displayStats","App","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.b336d0c3.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/fruits-vegetables-basket-by-oblik-studio.7d5e1c64.svg\";","import \"./ButtonNavBar.css\";\n\nfunction ButtonHistory() {\n\treturn (\n\t\t<div>\n\t\t\t<div className=\"button-logo\">\n\t\t\t\t<span class=\"material-icons\">history</span>\n\t\t\t</div>\n\t\t\t<div>Historique</div>\n\t\t</div>\n\t);\n}\n\nexport default ButtonHistory;\n","function ButtonProfil() {\n\treturn (\n\t\t<div>\n\t\t\t<div>\n\t\t\t\t<span class=\"material-icons\">person</span>\n\t\t\t</div>\n\t\t\t<div>Profil</div>\n\t\t</div>\n\t);\n}\n\nexport default ButtonProfil;\n","import { React } from \"react\";\n\nfunction ButtonScan() {\n\treturn (\n\t\t<div>\n\t\t\t<div className=\"navbar-scan-icon\">\n\t\t\t\t<span class=\"material-icons\">qr_code_scanner</span>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nexport default ButtonScan;\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport {\n\tconfigure,\n\tBarcodePicker as ScanditSDKBarcodePicker,\n} from \"scandit-sdk\";\nimport \"./Scan.css\";\nimport { motion, AnimatePresence } from \"framer-motion\";\n\n// Configure the library and activate it with a license key\nconst configurationPromise = configure(\n\t\"ASHf6Cx7DGz5BbkR5RWee94Ezm55DtkCAFB5HoNVQLhPf8gUhk8ypmZ72tbfAdIo33/I2gZR9pcXcdBwQGyYu69PkahqLA0dEEN5WFtpVEjMfQMiBhwmRWIJQgn+E54DiwJm/5CjsV1+Uy7AJWXnvrLiuwxG2D/b7b1QoPFJfkKp2OSreWJXnV/kJ+rtqFyNOu2wQb5Rq5IFXOU/tnjlTvJp8Kxl4jezOVoWlQZreaLKfxfBforPArJErC16cldrqFULYUdsPqb4Vn27hWUmPQTfaX/SbeDCl1h++IPmcvRpzwM9hY0ti7zzfhBKg3TgEYTMiPUipakmM21mU92xYjA9kmKO6bOjzY4XqyrWBUzv/C1TwJfK1aZDDLH8BOmqqJILi2Ty9fN84y09vBgv0dfXhQa3Q0/UW0Hnv0Xge2am3RY5dmE6pfWaxYyA3fDj920DpnlUNcAsfdErnvpZz8H1eftw6D2w3ps6q3jNFc/CTkALFZOk9Sy2u+lOfzvjKrcz5d1yoSo1sVhFsLWNUoaoHTP6NPnQaawC1YwPRp90T+2yNfx+iESAhn3qfn2pOEpBG0rHdZNLLj1yeNJU9Pjt7dznNeCJwG2SzSQvPZU5HzLuIu+siWjUPStB9WWMfVluWN3opv+ReRWBjBsaRFPBmit6LNbRk3QLT6To50yVZg8Zy1NuDFUoE+Ms2ytVn9fs30n1DeNYJLCWjQJ4ktQaz2mIFTOFvRVrJqPkTBwzOaAjWoPxOr097hga8bRhPAqV6ir7ojSffUeCjL/jmp1x1uSE4OaQe3Y32oC0XOVJqA==\",\n\t{\n\t\tengineLocation: \"https://cdn.jsdelivr.net/npm/scandit-sdk@5.x/build/\",\n\t}\n).catch((error) => {\n\talert(error);\n});\n\nconst style = {\n\tposition: \"absolute\",\n\ttop: \"0\",\n\tbottom: \"0\",\n\tleft: \"0\",\n\tright: \"0\",\n\tmargin: \"auto\",\n\tmaxWidth: \"1280px\",\n\tmaxHeight: \"80%\",\n};\n\nclass Scan extends Component {\n\tstatic propTypes = {\n\t\tvisible: PropTypes.bool,\n\t\tplaySoundOnScan: PropTypes.bool,\n\t\tvibrateOnScan: PropTypes.bool,\n\t\tscanningPaused: PropTypes.bool,\n\t\tguiStyle: PropTypes.string,\n\t\tvideoFit: PropTypes.string,\n\t\tscanSettings: PropTypes.object,\n\t\tenableCameraSwitcher: PropTypes.bool,\n\t\tenableTorchToggle: PropTypes.bool,\n\t\tenableTapToFocus: PropTypes.bool,\n\t\tenablePinchToZoom: PropTypes.bool,\n\t\taccessCamera: PropTypes.bool,\n\t\tcamera: PropTypes.object,\n\t\tcameraSettings: PropTypes.object,\n\t\ttargetScanningFPS: PropTypes.number,\n\t\tonScan: PropTypes.func,\n\t\tonError: PropTypes.func,\n\t};\n\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.ref = React.createRef();\n\t}\n\n\tcomponentDidMount() {\n\t\tconfigurationPromise.then(() => {\n\t\t\tScanditSDKBarcodePicker.create(this.ref.current, this.props).then(\n\t\t\t\t(barcodePicker) => {\n\t\t\t\t\tthis.barcodePicker = barcodePicker;\n\n\t\t\t\t\tif (this.props.onScan != null) {\n\t\t\t\t\t\tbarcodePicker.on(\"scan\", this.props.onScan);\n\t\t\t\t\t}\n\t\t\t\t\tif (this.props.onError != null) {\n\t\t\t\t\t\tbarcodePicker.on(\"scanError\", this.props.onError);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t);\n\t\t});\n\t}\n\n\tcomponentWillUnmount() {\n\t\tif (this.barcodePicker != null) {\n\t\t\tthis.barcodePicker.destroy();\n\t\t}\n\t}\n\n\tcomponentDidUpdate(prevProps) {\n\t\t// These are just some examples of how to react to some possible property changes\n\n\t\tif (\n\t\t\tJSON.stringify(prevProps.scanSettings) !==\n\t\t\tJSON.stringify(this.props.scanSettings)\n\t\t) {\n\t\t\tthis.barcodePicker.applyScanSettings(this.props.scanSettings);\n\t\t}\n\n\t\tif (prevProps.visible !== this.props.visible) {\n\t\t\tthis.barcodePicker.setVisible(this.props.visible);\n\t\t}\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<AnimatePresence exitBeforeEnter={true}>\n\t\t\t\t<motion.div\n\t\t\t\t\tid=\"background-scan\"\n\t\t\t\t\tinitial={{ bottom: \"-1000px\" }}\n\t\t\t\t\tanimate={{ bottom: \"0px\" }}\n\t\t\t\t\ttransition={{ duration: 0.5 }}\n\t\t\t\t\texit={{ bottom: \"-1000px\" }}\n\t\t\t\t>\n\t\t\t\t\t<div ref={this.ref} style={style} />\n\t\t\t\t\t<span\n\t\t\t\t\t\tclass=\"close\"\n\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\tthis.props.onCrossClicked(false);\n\t\t\t\t\t\t}}\n\t\t\t\t\t>\n\t\t\t\t\t\t&times;\n\t\t\t\t\t</span>\n\t\t\t\t\t<div id=\"scandit-barcode-picker\"></div>\n\t\t\t\t</motion.div>\n\t\t\t</AnimatePresence>\n\t\t);\n\t}\n}\n\nexport default Scan;\n","import React, { Component } from \"react\";\nimport Quagga from \"quagga\";\n\nclass Scanner extends Component {\n    componentDidMount = () => {\n        Quagga.init(\n            {\n                inputStream: {\n                    type: \"LiveStream\",\n                    constraints: {\n                        width: { ideal: 1280 },\n                        height: { ideal: 960 },\n                        // facingMode: \"environment\", // or user\n                        deviceId: this.props.deviceId,\n                        aspectRatio: {\n                            min: 1,\n                            max: 2,\n                        },\n                        focusMode: \"continuous\",\n                    },\n                },\n                locator: {\n                    patchSize: \"normal\",\n                    halfSample: false,\n                },\n                locate: false,\n                area: {\n                    top: \"25%\",\n                    right: \"25%\",\n                    left: \"25%\",\n                    bottom: \"25%\",\n                },\n                numOfWorkers: window.navigator.hardwareConcurrency || 2,\n                decoder: {\n                    readers: [\"ean_reader\"],\n                },\n                debug: {\n                    drawBoundingBox: true,\n                    showFrequency: true,\n                    drawScanline: true,\n                    showPattern: true,\n                },\n                multiple: false,\n                singleChannel: false,\n            },\n            function (err) {\n                if (err) {\n                    return console.log(err);\n                }\n                Quagga.start();\n            }\n        );\n        this.props.setQuagga(Quagga);\n        Quagga.onDetected(this._onDetected);\n    };\n\n    componentWillUnmount() {\n        Quagga.offDetected(this._onDetected);\n    }\n\n    _onDetected = async (result) => {\n        let stop = await this.props.onDetected(result);\n        console.log(stop);\n        if (stop) {\n            Quagga.stop();\n        }\n    };\n\n    render() {\n        return (\n            <React.Fragment>\n                <div id=\"interactive\" className=\"viewport\" />\n            </React.Fragment>\n        );\n    }\n}\n\nexport default Scanner;\n","import React, { Component } from \"react\";\nimport Scanner from \"./Scanner\";\nimport QrReader from \"react-qr-reader\";\nimport Switch from \"react-switch\";\nimport { Redirect } from \"react-router-dom\";\n\nclass Scan_home extends Component {\n    state = {\n        scanning: true,\n        status: \"\",\n        results: [],\n        usedCamera: 0,\n        devices: [],\n        reading: 0,\n        barcode: undefined,\n        bcProductId: undefined,\n        Quagga: undefined,\n    };\n\n    componentDidMount = async () => {\n        let a = await navigator.mediaDevices.enumerateDevices().then(function (devices) {\n            return devices;\n        });\n        let cameras = [];\n        let i = 0;\n        a.forEach(function (device) {\n            if (device.kind == \"videoinput\") {\n                cameras.push(device);\n                if (device.label.match(/back/) != null) {\n                    this.setState({ usedCamera: i });\n                }\n                i++;\n            }\n        });\n        this.setState({ devices: cameras });\n    };\n\n    setQuagga = (quagga) => {\n        console.log(quagga);\n        if (this.state.Quagga) {\n            this.state.Quagga.stop();\n        }\n        this.setState({ Quagga: quagga });\n    };\n\n    switchCamera = () => {\n        let num = this.state.usedCamera + 1;\n        if (num >= this.state.devices.length) {\n            num = 0;\n        }\n\n        this.setState({ usedCamera: num, scanning: false }, () =>\n            this.setState({ scanning: true })\n        );\n    };\n\n    _scan = () => {\n        this.setState({ scanning: !this.state.scanning, status: \"\" });\n    };\n\n    _onDetected = async (res) => {\n        console.log(res);\n        if (res) {\n            if (res.codeResult && res.codeResult.code) {\n                this.setState({\n                    results: [res],\n                    scanning: true,\n                    status: \"waiting\",\n                });\n                let response = await fetch(\n                    `https://world.openfoodfacts.org/api/v0/product/${res.codeResult.code}.json/`\n                );\n                let result = await response.json();\n                console.log(result);\n                if (result.status !== 0) {\n                    this.setState({\n                        scanning: false,\n                        status: \"found\",\n                        barcode: res.codeResult.code,\n                    });\n                    return true;\n                } else {\n                    this.setState({\n                        scanning: true,\n                        status: \"not found\",\n                    });\n                    return false;\n                }\n                // .then((response) => response.json())\n                //     .then((result) => {\n                //         console.log(result);\n                //         if (result.status !== 0) {\n                //             this.setState({\n                //                 scanning: false,\n                //                 status: \"found\",\n                //                 barcode: res.codeResult.code,\n                //             });\n                //         } else {\n                //             this.setState({\n                //                 scanning: true,\n                //                 status: \"not found\",\n                //             });\n                //         }\n                //     });\n            }\n        }\n    };\n\n    handleScan = (data) => {\n        if (data) {\n            let arr = data.split(\"/\");\n            if (arr.length > 1) {\n                this.setState({\n                    scanning: false,\n                    barcode: arr[4],\n                    bcProductId: arr[5],\n                    status: \"found\",\n                });\n            }\n            this.state.Quagga.stop();\n        }\n    };\n    handleError = (err) => {\n        console.error(err);\n    };\n\n    displayQrCode = () => {\n        if (this.state.status !== \"found\") {\n            return (\n                <QrReader\n                    delay={300}\n                    onError={this.handleError}\n                    onScan={this.handleScan}\n                    style={{ width: \"100%\" }}\n                    showViewFinder={false}\n                />\n            );\n        } else {\n            return <React.Fragment />;\n        }\n    };\n\n    displayBarCode = () => {\n        if (this.state.devices.length > 0 && this.state.status !== \"found\") {\n            return (\n                <React.Fragment>\n                    <div className=\"header\">\n                        {this.state.devices?.length > 1 ? (\n                            <button className=\"code-switch-camera\" onClick={this.switchCamera}>\n                                <span className=\"material-icons\">cameraswitch</span>\n                                {this.state.usedCamera}\n                            </button>\n                        ) : (\n                            <React.Fragment />\n                        )}\n                        <ul className=\"results\">\n                            {this.state.results.map((result, i) => (\n                                <div key={result.codeResult.code + i}>\n                                    {this.state.status === \"waiting\"\n                                        ? \"Vérification du code\" + result?.codeResult?.code\n                                        : \"\"}\n                                    {this.state.status === \"not found\"\n                                        ? \"code non trouvé, merci de réessayer\"\n                                        : \"\"}\n                                </div>\n                            ))}\n                        </ul>\n                    </div>\n                    {this.state.scanning ? (\n                        <Scanner\n                            onDetected={this._onDetected}\n                            deviceId={this.state.devices[this.state.usedCamera].deviceId}\n                            setQuagga={this.setQuagga}\n                        />\n                    ) : null}\n                </React.Fragment>\n            );\n        } else {\n            return <React.Fragment />;\n        }\n    };\n\n    switchReader = () => {\n        if (this.state.reading) this.setState({ reading: false });\n        else this.setState({ reading: true });\n    };\n\n    render() {\n        console.log(\"Results: \", this.state.results, this.state.redirect);\n        if (\n            this.state.barcode &&\n            this.state.bcProductId &&\n            (this.props.barcode !== this.state.barcode ||\n                this.props.bcProductId !== this.state.bcProductId)\n        ) {\n            return (\n                <Redirect to={\"/products/\" + this.state.barcode + \"/\" + this.state.bcProductId} />\n            );\n        }\n        if (this.state.barcode && this.props.barcode !== this.state.barcode) {\n            return <Redirect to={\"/products/\" + this.state.barcode} />;\n        } else {\n            return (\n                <div className=\"code-reader-container\">\n                    <span\n                        class=\"close\"\n                        onClick={() => {\n                            this.props?.onCrossClicked(false);\n                        }}\n                    >\n                        &times;\n                    </span>\n                    <div className=\"code-switch\" onClick={this.switchReader}>\n                        <div className=\"span-code-switch\">\n                            <span\n                                className={\n                                    this.state.reading ? \"material-icons\" : \"material-icons green\"\n                                }\n                            >\n                                view_week\n                            </span>\n                            <span>Barcode</span>\n                        </div>\n                        <Switch\n                            onChange={this.switchReader}\n                            uncheckedIcon={false}\n                            checkedIcon={false}\n                            checked={this.state.reading}\n                            onColor={\"#888\"}\n                            offColor={\"#888\"}\n                        />\n                        <div className=\"span-code-switch\">\n                            <span\n                                className={\n                                    !this.state.reading ? \"material-icons\" : \"material-icons green\"\n                                }\n                            >\n                                qr_code_scanner\n                            </span>\n                            <span>QR Code</span>\n                        </div>\n                    </div>\n                    {this.state.reading ? this.displayQrCode() : this.displayBarCode()}\n                </div>\n            );\n        }\n    }\n}\n\nexport default Scan_home;\n","import \"./Navbar.css\";\nimport React from \"react\";\nimport ButtonHistory from \"../Button/ButtonHistory\";\nimport ButtonProfil from \"../Button/ButtonProfil\";\nimport ButtonScan from \"../Button/ButtonScan\";\nimport Scan from \"../Scan/Scan\";\nimport Scan_home from \"../Test/Scan_home\";\nimport { ScanSettings } from \"scandit-sdk\";\nimport { Redirect, Link } from \"react-router-dom\";\n\nclass Navbar extends React.Component {\n    state = {\n        showScanner: false,\n        barcode: undefined,\n        bcProductId: undefined,\n        height: 0,\n    };\n\n    componentDidMount() {\n        this.updateWindowDimensions();\n        window.addEventListener(\"resize\", this.updateWindowDimensions);\n    }\n\n    componentWillUnmount() {\n        window.removeEventListener(\"resize\", this.updateWindowDimensions);\n    }\n\n    updateWindowDimensions = () => {\n        this.setState({ height: window.innerHeight });\n    };\n\n    handleScannerButton = (bool) => {\n        this.setState({ showScanner: bool });\n    };\n\n    handleBarcode = (res) => {\n        if (res) {\n            //détecté par barcode scanner\n            let arr = res.split(\"/\");\n            if (arr.length > 1) {\n                this.setState({\n                    barcode: arr[4],\n                    bcProductId: arr[5],\n                    showScanner: false,\n                });\n            } else {\n                this.setState({\n                    barcode: arr[0],\n                    showScanner: false,\n                    bcProductId: undefined,\n                });\n            }\n        }\n    };\n\n    render = () => {\n        if (this.state.height < 550) {\n            return <React.Fragment />;\n        }\n        if (\n            this.state.barcode &&\n            this.state.bcProductId &&\n            (this.props.barcode !== this.state.barcode ||\n                this.props.bcProductId !== this.state.bcProductId)\n        ) {\n            return (\n                <Redirect to={\"/products/\" + this.state.barcode + \"/\" + this.state.bcProductId} />\n            );\n        }\n\n        if (this.state.barcode && this.props.barcode !== this.state.barcode) {\n            return <Redirect to={\"/products/\" + this.state.barcode} />;\n        }\n\n        if (!this.state.showScanner) {\n            return (\n                <React.Fragment>\n                    <div className=\"navbar-container\">\n                        <Link\n                            to=\"/history\"\n                            className={\n                                window.location.pathname == \"/history\"\n                                    ? \"navbar-link navbar-text-left navbar-selected\"\n                                    : \"navbar-link navbar-text-left \"\n                            }\n                        >\n                            <ButtonHistory />\n                        </Link>\n                        <div onClick={() => this.handleScannerButton(true)}>\n                            <div className=\"navbar-circle\">\n                                <ButtonScan />\n                            </div>\n                        </div>\n                        <span className=\"navbar-scan-text\">Scan</span>\n                        <Link\n                            to=\"/profil\"\n                            className={\n                                window.location.pathname == \"/profil\"\n                                    ? \"navbar-link navbar-text-right navbar-selected\"\n                                    : \"navbar-link navbar-text-right \"\n                            }\n                        >\n                            <ButtonProfil />\n                        </Link>\n                    </div>\n                </React.Fragment>\n            );\n        } else {\n            return (\n                <Scan\n                    onCrossClicked={this.handleScannerButton}\n                    // playSoundOnScan={true}\n                    vibrateOnScan={true}\n                    enableTorchToggle={true}\n                    enablePinchToZoom={true}\n                    enableCameraSwitcher={true}\n                    guiStyle={\"viewfinder\"}\n                    scanSettings={\n                        new ScanSettings({\n                            enabledSymbologies: [\n                                \"qr\",\n                                \"ean8\",\n                                \"ean13\",\n                                \"upca\",\n                                \"upce\",\n                                \"code128\",\n                                \"code39\",\n                                \"code93\",\n                                \"itf\",\n                            ],\n                            codeDuplicateFilter: 1000,\n                        })\n                    }\n                    onScan={(scanResult) => {\n                        console.log(scanResult.barcodes[0].data);\n                        this.handleBarcode(scanResult.barcodes[0].data);\n                    }}\n                    onError={(error) => {\n                        console.error(error.message);\n                    }}\n                />\n                // <Scan_home onCrossClicked={this.handleScannerButton} history={this.props.history} />\n            );\n        }\n    };\n}\n\nexport default Navbar;\n","export default __webpack_public_path__ + \"static/media/logo.b235ef42.svg\";","export default __webpack_public_path__ + \"static/media/bitmap.6f490d5b.png\";","import './Header.css';\nimport logo from '../../assets/images/logo.svg';\nimport blob from \"../../assets/images/bitmap.png\";\n\nfunction Header() {\n  return (\n    <div>\n      <div>\n\t\t\t\t\t\t<img src={blob} className=\"blob-top\" alt=\"Blob\" />\n\t\t\t\t</div>\n        <div>\n          <img src={blob} className=\"blob-left\" alt=\"Blob\" />\n        </div>\n        <div>\n          <img src={blob} className=\"blob-right\" alt=\"Blob\" />\n        </div>\n      <div className=\"header-container\">\n        <img src={logo} className=\"header-logo\" alt=\"Logo\"/>\n        <span>Lowympact</span>\n      </div>\n    </div>\n  );\n}\n\nexport default Header;","import { React, Component, Fragment } from \"react\";\nimport fruits from \"../assets/images/fruits-vegetables-basket-by-oblik-studio.svg\";\nimport Navbar from \"../components/Navbar/Navbar\";\nimport Header from \"../components/Header/Header\";\nimport \"./History.css\";\n// import { ITEMS } from \"../assets/scanned/items\";\nimport { Link } from \"react-router-dom\";\nimport { motion } from \"framer-motion\";\n\nfunction RenderHistoryItem({ item }) {\n    var labelColor;\n    if (item.label === \"d\" || item.label === \"e\") {\n        labelColor = \"red\";\n    } else if (item.label === \"c\") {\n        labelColor = \"yellow\";\n    } else if (item.label === \"a\" || item.label === \"b\") {\n        labelColor = \"green\";\n    }\n\n    var pathProduct = \"/products/\" + item.barcode;\n    if (item.bcProductId) {\n        pathProduct += \"/\" + item.bcProductId;\n    }\n\n    // Mock Soutenance\n    if (item.barcode === \"80135463\") {\n        item.name = \"Nutella 200g\";\n    }\n\n    return (\n        <motion.div initial={{ opacity: 0 }} animate={{ opacity: 1 }} exit={{ opacity: 0 }}>\n            <Link className=\"history-item\" to={pathProduct}>\n                <div className=\"history-img-container\">\n                    <img src={item.image} alt=\"\" />\n                </div>\n                <div className=\"history-name-container\">\n                    <div className=\"history-name\">{item.name}</div>\n                    <div className=\"history-brand\">{item.brand}</div>\n                </div>\n                <div className=\"history-label-container\">\n                    <div style={{ color: labelColor }}>●</div>\n                    <div className=\"history-label\">\n                        {item.label == \"not-applicable\" ? \"\" : item.label}\n                    </div>\n                </div>\n                <div style={{ marginRight: \"10px\", color: \"rgb(41,72,102)\" }}>{\">\"}</div>\n            </Link>\n        </motion.div>\n    );\n}\n\nclass History extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            items: undefined,\n            loading: true,\n            userId: undefined,\n        };\n    }\n\n    componentDidMount = () => {\n        let userId = localStorage.getItem(\"userId\");\n        let token = localStorage.getItem(\"token\");\n        if (userId && token) {\n            this.setState({ userId: userId });\n            this.loadHistoryInformations(userId);\n        } else {\n            this.loadLocalStorageHistory(userId);\n        }\n    };\n\n    loadHistoryInformations = (userId) => {\n        fetch(\n            `https://api.lowympact.fr/api/v1/users/${userId}/history`,\n            // `http://localhost:8080/api/v1/users/${userId}/history`,\n\n            {\n                method: \"get\",\n                credentials: \"include\",\n                headers: new Headers({\n                    authorization: localStorage.getItem(\"token\"),\n                    \"Content-Type\": \"application/json\",\n                    \"api-key\": \"99d8fb95-abdd-4885-bf6c-3a81d8874043\",\n                }),\n            }\n        )\n            .then((response) => response.json())\n            .then((res) => {\n                console.log(res);\n\n                this.setState({\n                    items: res?.data,\n                    loading: false,\n                });\n            });\n    };\n\n    loadLocalStorageHistory = () => {\n        let history = JSON.parse(localStorage.getItem(\"local_history\"));\n        this.setState({\n            items: history,\n            loading: false,\n        });\n    };\n\n    render() {\n        if (this.state.items) {\n            let itemList = <Fragment />;\n            if (!this.loading) {\n                itemList = this.state.items.map((item) => {\n                    return (\n                        <div key={item.id}>\n                            <RenderHistoryItem item={item} />\n                        </div>\n                    );\n                });\n            } else {\n                itemList = (\n                    <div className=\"loader\">\n                        <img src=\"/images/utils/loading.gif\" alt=\"\" />\n                    </div>\n                );\n            }\n\n            if (Object.keys(this.state.items).length === 0)\n                return (\n                    <div>\n                        <Header />\n                        <Navbar />\n                        <motion.div\n                            className=\"App\"\n                            initial={{ opacity: 0 }}\n                            animate={{ opacity: 1 }}\n                            exit={{ opacity: 0 }}\n                        >\n                            <div>\n                                <img src={fruits} className=\"logo\" alt=\"Fruits\" />\n                                <p className=\"logo-text\">Commence à scanner des produits !</p>\n                            </div>\n                        </motion.div>\n                    </div>\n                );\n            else\n                return (\n                    <div>\n                        <div className=\"screen\">\n                            <div className=\"screen-title\"></div>\n                            {itemList}\n                        </div>\n                        <Header />\n                        <Navbar />\n                    </div>\n                );\n        } else {\n            let image = (\n                <div>\n                    <img src={fruits} className=\"logo\" alt=\"Fruits\" />\n                    <p className=\"logo-text\">Commence à scanner des produits !</p>\n                </div>\n            );\n            if (this.state.loading) {\n                image = (\n                    <div className=\"loader\">\n                        <img src=\"/images/utils/loading.gif\" alt=\"\" />\n                    </div>\n                );\n            }\n            return (\n                <div>\n                    <Header />\n                    <Navbar />\n                    <motion.div\n                        className=\"App\"\n                        initial={{ opacity: 0 }}\n                        animate={{ opacity: 1 }}\n                        exit={{ opacity: 0 }}\n                    >\n                        {image}\n                    </motion.div>\n                </div>\n            );\n        }\n    }\n}\n\nexport default History;\n","import logo from \"../assets/images/logo.svg\";\nimport { Link } from \"react-router-dom\";\n\nfunction Error404() {\n\treturn (\n\t\t<div className=\"App\">\n\t\t\t<header className=\"App-header\">\n\t\t\t\t<img src={logo} className=\"logo\" alt=\"logo\" />\n\t\t\t\t<h1>Erreur 404</h1>\n\t\t\t\t<Link to=\"/\">Retourner à l'accueil</Link>\n\t\t\t</header>\n\t\t</div>\n\t);\n}\n\nexport default Error404;\n","import '../../pages/Login.css';\nfunction ButtonCreateAccount() {\n    return (\n      <div>\n        Créer un compte\n      </div>\n    );\n  }\n  export default ButtonCreateAccount;\n","\nfunction ButtonLogin() {\n    return (\n      <div>\n        Me connecter\n      </div>\n    );\n  }\n  export default ButtonLogin;","function ButtonNoAccount() {\n\treturn <div>Continuer sans compte {\">\"}</div>;\n}\nexport default ButtonNoAccount;\n","import React from \"react\";\nimport logo from \"../assets/images/logo.svg\";\nimport fruits from \"../assets/images/fruits-vegetables-basket-by-oblik-studio.svg\";\nimport \"./Login.css\";\nimport ButtonCreateAccount from \"../components/Button/ButtonCreateAccount\";\nimport ButtonLogin from \"../components/Button/ButtonLogin\";\nimport { Link } from \"react-router-dom\";\nimport ButtonNoAccount from \"../components/Button/ButtonNoAccount\";\nimport jwt from \"jsonwebtoken\";\nimport { motion } from \"framer-motion\";\n\nclass Login extends React.Component {\n\tcomponentDidMount = () => {\n\t\tthis.Verify();\n\t};\n\n\tVerify = () => {\n\t\tlet isExpired = true;\n\t\tconst token = localStorage.getItem(\"token\");\n\t\tif (token) {\n\t\t\tvar decodedToken = jwt.decode(token, { complete: true });\n\t\t\tvar dateNow = new Date();\n\t\t\tconsole.log(decodedToken, dateNow.getTime() / 1000);\n\t\t\tif (decodedToken.payload.exp >= dateNow.getTime() / 1000) {\n\t\t\t\tisExpired = false;\n\t\t\t}\n\t\t}\n\t\tif (isExpired === false) {\n\t\t\tconsole.log(\"here\");\n\t\t\tthis.props.history.push(`/history`); // redirection vers la page login\n\t\t}\n\t};\n\trender = () => {\n\t\treturn (\n\t\t\t<motion.div exit={{ opacity: 0 }}>\n\t\t\t\t<div className=\"login-logo\">\n\t\t\t\t\t<img src={logo} className=\"logo\" alt=\"Logo\" />\n\t\t\t\t</div>\n\t\t\t\t<div className=\"login-lowympact\">Lowympact</div>\n\t\t\t\t<Link to=\"/signup\" className=\"button-account\">\n\t\t\t\t\t<ButtonCreateAccount />\n\t\t\t\t</Link>\n\t\t\t\t<Link to=\"/signin\" className=\"button-connect\">\n\t\t\t\t\t<ButtonLogin />\n\t\t\t\t</Link>\n\t\t\t\t<Link to=\"/history\" className=\"button-no-account\">\n\t\t\t\t\t<ButtonNoAccount />\n\t\t\t\t</Link>\n\t\t\t\t<div className=\"logo-fruits\">\n\t\t\t\t\t<img src={fruits} className=\"logo\" alt=\"Fruits\" />\n\t\t\t\t</div>\n\t\t\t</motion.div>\n\t\t);\n\t};\n}\nexport default Login;\n","import L from \"leaflet\";\n\nL.Curve = L.Path.extend({\n\toptions: {},\n\n\tinitialize: function (path, options) {\n\t\t//1\n\t\tL.setOptions(this, options);\n\t\tthis._initialUpdate = true;\n\t\tthis._setPath(path);\n\t},\n\n\tgetPath: function () {\n\t\treturn this._coords;\n\t},\n\n\tsetPath: function (path, options) {\n\t\tthis._initialUpdate = true;\n\t\tthis._setPath(path);\n\t\treturn this.redraw();\n\t},\n\n\tgetBounds: function () {\n\t\treturn this._bounds;\n\t},\n\n\t_setPath: function (path) {\n\t\t//2\n\t\tthis._coords = path;\n\t\tthis._bounds = this._computeBounds();\n\t},\n\n\t_computeBounds: function () {\n\t\t//3\n\t\tvar bound = new L.LatLngBounds();\n\t\tvar lastPoint;\n\t\tvar lastCommand;\n\t\tvar coord;\n\t\tfor (var i = 0; i < this._coords.length; i++) {\n\t\t\tcoord = this._coords[i];\n\t\t\tif (typeof coord == \"string\" || coord instanceof String) {\n\t\t\t\tlastCommand = coord;\n\t\t\t} else if (lastCommand == \"H\") {\n\t\t\t\tbound.extend([lastPoint.lat, coord[0]]);\n\t\t\t\tlastPoint = new L.latLng(lastPoint.lat, coord[0]);\n\t\t\t} else if (lastCommand == \"V\") {\n\t\t\t\tbound.extend([coord[0], lastPoint.lng]);\n\t\t\t\tlastPoint = new L.latLng(coord[0], lastPoint.lng);\n\t\t\t} else if (lastCommand == \"C\") {\n\t\t\t\tvar controlPoint1 = new L.latLng(coord[0], coord[1]);\n\t\t\t\tcoord = this._coords[++i];\n\t\t\t\tvar controlPoint2 = new L.latLng(coord[0], coord[1]);\n\t\t\t\tcoord = this._coords[++i];\n\t\t\t\tvar endPoint = new L.latLng(coord[0], coord[1]);\n\n\t\t\t\tbound.extend(controlPoint1);\n\t\t\t\tbound.extend(controlPoint2);\n\t\t\t\tbound.extend(endPoint);\n\n\t\t\t\tendPoint.controlPoint1 = controlPoint1;\n\t\t\t\tendPoint.controlPoint2 = controlPoint2;\n\t\t\t\tlastPoint = endPoint;\n\t\t\t} else if (lastCommand == \"S\") {\n\t\t\t\tvar controlPoint2 = new L.latLng(coord[0], coord[1]);\n\t\t\t\tcoord = this._coords[++i];\n\t\t\t\tvar endPoint = new L.latLng(coord[0], coord[1]);\n\n\t\t\t\tvar controlPoint1 = lastPoint;\n\t\t\t\tif (lastPoint.controlPoint2) {\n\t\t\t\t\tvar diffLat = lastPoint.lat - lastPoint.controlPoint2.lat;\n\t\t\t\t\tvar diffLng = lastPoint.lng - lastPoint.controlPoint2.lng;\n\t\t\t\t\tcontrolPoint1 = new L.latLng(\n\t\t\t\t\t\tlastPoint.lat + diffLat,\n\t\t\t\t\t\tlastPoint.lng + diffLng\n\t\t\t\t\t);\n\t\t\t\t}\n\n\t\t\t\tbound.extend(controlPoint1);\n\t\t\t\tbound.extend(controlPoint2);\n\t\t\t\tbound.extend(endPoint);\n\n\t\t\t\tendPoint.controlPoint1 = controlPoint1;\n\t\t\t\tendPoint.controlPoint2 = controlPoint2;\n\t\t\t\tlastPoint = endPoint;\n\t\t\t} else if (lastCommand == \"Q\") {\n\t\t\t\tvar controlPoint = new L.latLng(coord[0], coord[1]);\n\t\t\t\tcoord = this._coords[++i];\n\t\t\t\tvar endPoint = new L.latLng(coord[0], coord[1]);\n\n\t\t\t\tbound.extend(controlPoint);\n\t\t\t\tbound.extend(endPoint);\n\n\t\t\t\tendPoint.controlPoint = controlPoint;\n\t\t\t\tlastPoint = endPoint;\n\t\t\t} else if (lastCommand == \"T\") {\n\t\t\t\tvar endPoint = new L.latLng(coord[0], coord[1]);\n\n\t\t\t\tvar controlPoint = lastPoint;\n\t\t\t\tif (lastPoint.controlPoint) {\n\t\t\t\t\tvar diffLat = lastPoint.lat - lastPoint.controlPoint.lat;\n\t\t\t\t\tvar diffLng = lastPoint.lng - lastPoint.controlPoint.lng;\n\t\t\t\t\tcontrolPoint = new L.latLng(\n\t\t\t\t\t\tlastPoint.lat + diffLat,\n\t\t\t\t\t\tlastPoint.lng + diffLng\n\t\t\t\t\t);\n\t\t\t\t}\n\n\t\t\t\tbound.extend(controlPoint);\n\t\t\t\tbound.extend(endPoint);\n\n\t\t\t\tendPoint.controlPoint = controlPoint;\n\t\t\t\tlastPoint = endPoint;\n\t\t\t} else {\n\t\t\t\tbound.extend(coord);\n\t\t\t\tlastPoint = new L.latLng(coord[0], coord[1]);\n\t\t\t}\n\t\t}\n\t\treturn bound;\n\t},\n\n\t//TODO: use a centroid algorithm instead\n\tgetCenter: function () {\n\t\treturn this._bounds.getCenter();\n\t},\n\n\t_update: function () {\n\t\t//5\n\t\tif (!this._map) {\n\t\t\treturn;\n\t\t}\n\t\tthis._updatePath();\n\t},\n\n\t_updatePath: function () {\n\t\t//6\n\t\tthis._renderer._updatecurve(this);\n\t},\n\n\t_project: function () {\n\t\t//4\n\t\tvar coord, lastCoord, curCommand, curPoint;\n\n\t\tthis._points = [];\n\n\t\tfor (var i = 0; i < this._coords.length; i++) {\n\t\t\tcoord = this._coords[i];\n\t\t\tif (typeof coord == \"string\" || coord instanceof String) {\n\t\t\t\tthis._points.push(coord);\n\t\t\t\tcurCommand = coord;\n\t\t\t} else {\n\t\t\t\tswitch (coord.length) {\n\t\t\t\t\tcase 2:\n\t\t\t\t\t\tcurPoint = this._map.latLngToLayerPoint(coord);\n\t\t\t\t\t\tlastCoord = coord;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 1:\n\t\t\t\t\t\tif (curCommand == \"H\") {\n\t\t\t\t\t\t\tcurPoint = this._map.latLngToLayerPoint([\n\t\t\t\t\t\t\t\tlastCoord[0],\n\t\t\t\t\t\t\t\tcoord[0],\n\t\t\t\t\t\t\t]);\n\t\t\t\t\t\t\tlastCoord = [lastCoord[0], coord[0]];\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tcurPoint = this._map.latLngToLayerPoint([\n\t\t\t\t\t\t\t\tcoord[0],\n\t\t\t\t\t\t\t\tlastCoord[1],\n\t\t\t\t\t\t\t]);\n\t\t\t\t\t\t\tlastCoord = [coord[0], lastCoord[1]];\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tthis._points.push(curPoint);\n\t\t\t}\n\t\t}\n\t},\n});\n\nL.curve = function (path, options) {\n\treturn new L.Curve(path, options);\n};\n\nL.SVG.include({\n\t//7\n\t_updatecurve: function (layer) {\n\t\tthis._setPath(layer, this._curvePointsToPath(layer._points));\n\t\tif (layer.options.animate) {\n\t\t\tvar path = layer._path;\n\t\t\tvar length = path.getTotalLength();\n\n\t\t\tif (!layer.options.dashArray) {\n\t\t\t\tpath.style.strokeDasharray = length + \" \" + length;\n\t\t\t}\n\n\t\t\tif (layer._initialUpdate) {\n\t\t\t\tpath.animate(\n\t\t\t\t\t[{ strokeDashoffset: length }, { strokeDashoffset: 0 }],\n\t\t\t\t\tlayer.options.animate\n\t\t\t\t);\n\t\t\t\tlayer._initialUpdate = false;\n\t\t\t}\n\t\t}\n\t},\n\n\t_curvePointsToPath: function (points) {\n\t\tvar point,\n\t\t\tcurCommand,\n\t\t\tstr = \"\";\n\t\tfor (var i = 0; i < points.length; i++) {\n\t\t\tpoint = points[i];\n\t\t\tif (typeof point == \"string\" || point instanceof String) {\n\t\t\t\tcurCommand = point;\n\t\t\t\tstr += curCommand;\n\t\t\t} else {\n\t\t\t\tswitch (curCommand) {\n\t\t\t\t\tcase \"H\":\n\t\t\t\t\t\tstr += point.x + \" \";\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"V\":\n\t\t\t\t\t\tstr += point.y + \" \";\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tstr += point.x + \",\" + point.y + \" \";\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn str || \"M0 0\";\n\t},\n});\n","// import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Path, withLeaflet } from \"react-leaflet\";\nimport { curve } from \"./leaflet.curve\";\nimport L from \"leaflet\";\n\nclass Curve extends Path {\n\tcreateLeafletElement(props) {\n\t\tconst { positions, option, ...options } = props;\n\t\treturn L.curve(positions, option, this.getOptions(options));\n\t}\n\n\tupdateLeafletElement(fromProps, toProps) {\n\t\tif (toProps.positions !== fromProps.positions) {\n\t\t\tthis.leafletElement.setPath(toProps.positions);\n\t\t}\n\t\tthis.setStyleIfChanged(fromProps, toProps);\n\t}\n}\n\nCurve.propTypes = {\n\tchildren: PropTypes.oneOfType([\n\t\tPropTypes.arrayOf(PropTypes.node),\n\t\tPropTypes.node,\n\t]),\n\toption: PropTypes.object,\n\tpositions: PropTypes.array.isRequired,\n};\n\nexport default withLeaflet(Curve);\n\n/*\n  componentWillMount() {\n    super.componentWillMount();\n    const { positions, ...options } = this.props\n    this.leafletElement = L.curve(positions, this.getOptions(options))\n  }*/\n","import React from \"react\";\nimport { Map, TileLayer, Marker } from \"react-leaflet\";\nimport \"./Traceability.css\";\nimport { Swiper, SwiperSlide } from \"swiper/react\";\nimport { Curve } from \"./leaflet-curve\";\nimport L from \"leaflet\";\n// Import Swiper styles\nimport \"swiper/swiper-bundle.css\";\n\nclass Traceability extends React.Component {\n    map = undefined;\n    state = {\n        zoom: 12,\n        swiper: undefined,\n        currentIndex: 0,\n        map: undefined,\n    };\n\n    getMaterialIcon = (mode) => {\n        switch (mode) {\n            case \"Charette\":\n                return \"directions_bike\";\n            case \"Plane\":\n                return \"flight_takeoff\";\n            case \"Train\":\n                return \"train\";\n            case \"Boat\":\n                return \"directions_boat_filled\";\n            case \"Truck\":\n                return \"local_shipping\";\n            default:\n                return \"nature_people\";\n        }\n    };\n\n    getTransportMode = (mode) => {\n        switch (mode) {\n            case \"Charette\":\n                return \"vélo\";\n            case \"Plane\":\n                return \"avion\";\n            case \"Train\":\n                return \"train\";\n            case \"Boat\":\n                return \"bateau\";\n            case \"Truck\":\n                return \"camion\";\n            default:\n                return mode;\n        }\n    };\n    getTranslation = (mode) => {\n        switch (mode) {\n            case \"maker\":\n                return \"Fabricant\";\n            case \"productor\":\n                return \"Producteur\";\n            case \"shop\":\n                return \"Revendeur\";\n            default:\n                return mode;\n        }\n    };\n\n    displaySlides = () => {\n        let slides = <React.Fragment />;\n        if (this.props.products) {\n            slides = this.props.products.map((product) => {\n                let pastille = \"product-slide-pastille past-green\";\n                if (product.TransportCO2Impact?.value > 10) {\n                    pastille = \"product-slide-pastille past-orange\";\n                }\n                if (product.TransportCO2Impact?.value > 100) {\n                    pastille = \"product-slide-pastille past-red\";\n                }\n\n                return (\n                    <SwiperSlide>\n                        <div className=\"product-slide-container\">\n                            <div className=\"product-slide-icon\">\n                                <span class=\"material-icons\">\n                                    {this.getMaterialIcon(product.transport)}\n                                </span>\n\n                                <div className=\"product-slide-name\">\n                                    <span className=\"product-slide-name-product\">\n                                        {product.productsOutput[0].productName}\n                                    </span>\n                                    <span className=\"product-slide-name-transport\">\n                                        Transport en {this.getTransportMode(product.transport)}\n                                    </span>\n                                </div>\n                            </div>\n                            <div className=\"product-slide-origin-wrapper\">\n                                <div className=\"product-transport-ui\">\n                                    <div className=\"transport-ui-circle\"></div>\n                                    <div className=\"transport-ui-tiret\"></div>\n                                    <div className=\"transport-ui-circle circle-bis\"></div>\n                                </div>\n                                <div className=\"product-slide-transport-container\">\n                                    <div className=\"product-slide-bigname\">\n                                        <span>\n                                            {product.seller.localisation.city},{\" \"}\n                                            {product.seller.localisation.country}\n                                        </span>\n                                    </div>\n                                    <div className=\"product-slide-lowername2\">\n                                        {this.getTranslation(product.seller?.type)}\n                                        {\": \"}\n                                        {product.seller?.name}\n                                    </div>\n\n                                    <div className=\"product-slide-bigname bigname-lower\">\n                                        <span>\n                                            {product.buyer.localisation.city},{\" \"}\n                                            {product.buyer.localisation.country}\n                                        </span>\n                                    </div>\n                                    <div className=\"product-slide-lowername2\">\n                                        {this.getTranslation(product.buyer?.type)}\n                                        {\": \"}\n                                        {product.buyer?.name}\n                                    </div>\n                                </div>\n                            </div>\n                            <div className=\"product-slide-arrow\">{\">\"}</div>\n                            <div className=\"product-slide-consumption\">\n                                <div className={pastille}></div>\n                                <div>{Math.round(product.dist.value)} km </div>\n                                <div>\n                                    {product.TransportCO2Impact?.value > 1\n                                        ? Math.round(product.TransportCO2Impact?.value)\n                                        : \"< 1\"}{\" \"}\n                                    kg CO2{\" \"}\n                                </div>\n                            </div>\n                        </div>\n                    </SwiperSlide>\n                );\n            });\n        }\n        return slides;\n    };\n\n    handleMarkerClick = (latlng, index) => {\n        // window.scrollTo({ top: \"8000px\", behavior: \"smooth\" });\n        let elem = document.getElementsByClassName(\"swiper-container\");\n        if (elem[0]) {\n            elem[0].scrollIntoView({ behavior: \"smooth\" });\n        }\n        console.log(index);\n        if (index >= this.props.products?.length) {\n            this.state.swiper.slideTo(index - 1, 500);\n        } else {\n            this.state.swiper.slideTo(index, 500);\n        }\n        let zoom = 5;\n        if (this.props.products && this.props.products[index]) {\n            let p = this.props.products[index];\n            console.log(\n                [p.buyer.localisation.latitude, p.buyer.localisation.longitude],\n                [p.seller.localisation.latitude, p.seller.localisation.longitude]\n            );\n            zoom = getZoomRatio(\n                [p.buyer.localisation.latitude, p.buyer.localisation.longitude],\n                [p.seller.localisation.latitude, p.seller.localisation.longitude]\n            );\n        }\n        console.log(zoom);\n        this.map.leafletElement.flyTo(latlng, zoom, { duration: 0.5 });\n    };\n\n    onSlideChange = (index) => {\n        this.setState({ currentIndex: index });\n        let zoom = 5;\n        if (this.props.products && this.props.products[index]) {\n            let p = this.props.products[index];\n\n            zoom = getZoomRatio(\n                [p.buyer.localisation.latitude, p.buyer.localisation.longitude],\n                [p.seller.localisation.latitude, p.seller.localisation.longitude]\n            );\n\n            let lat =\n                (parseFloat(p.seller.localisation.latitude) +\n                    parseFloat(p.buyer.localisation.latitude)) /\n                2;\n            let long =\n                (parseFloat(p.seller.localisation.longitude) +\n                    parseFloat(p.buyer.localisation.longitude)) /\n                2;\n            console.log(zoom);\n            this.map.leafletElement.flyTo([lat, long], zoom, { duration: 0.5 });\n        }\n    };\n\n    displayMarker = () => {\n        let markers = <React.Fragment />;\n        if (this.props.products) {\n            markers = this.props.products.map((product, i) => {\n                let marker1 = <React.Fragment />;\n                let lat1 = parseFloat(product?.buyer?.localisation?.latitude);\n                let long1 = parseFloat(product?.buyer?.localisation?.longitude);\n                let marker2 = <React.Fragment />;\n                let lat2 = parseFloat(product?.seller?.localisation?.latitude);\n                let long2 = parseFloat(product?.seller?.localisation?.longitude);\n                let icon;\n                let icon2;\n                let zIndex = 0;\n                if (i === this.state.currentIndex) {\n                    icon = new L.Icon({\n                        iconUrl: \"/images/utils/map.png\", //require('../../images/logo/logo.svg'),\n                        iconRetinaUrl: \"/images/utils/map.png\", //\"/images/images_volume/1-l.png\", //require('../../images/logo/logo.svg'),\n                        iconSize: new L.Point(32, 32),\n                        className: \"leaflet-mark-icon\",\n                    });\n                    icon2 = new L.Icon({\n                        iconUrl: \"/images/utils/map.png\", //require('../../images/logo/logo.svg'),\n                        iconRetinaUrl: \"/images/utils/map3.png\", //\"/images/images_volume/1-l.png\", //require('../../images/logo/logo.svg'),\n                        iconSize: new L.Point(32, 32),\n                        className: \"leaflet-mark-icon\",\n                    });\n                    zIndex = 5;\n                } else {\n                    icon = new L.Icon({\n                        iconUrl: \"/images/utils/map2.png\", //require('../../images/logo/logo.svg'),\n                        iconRetinaUrl: \"/images/utils/map2.png\", //\"/images/images_volume/1-l.png\", //require('../../images/logo/logo.svg'),\n                        iconSize: new L.Point(25, 25),\n                        className: \"leaflet-mark-icon\",\n                    });\n                    icon2 = new L.Icon({\n                        iconUrl: \"/images/utils/map2.png\", //require('../../images/logo/logo.svg'),\n                        iconRetinaUrl: \"/images/utils/map2.png\", //\"/images/images_volume/1-l.png\", //require('../../images/logo/logo.svg'),\n                        iconSize: new L.Point(25, 25),\n                        className: \"leaflet-mark-icon\",\n                    });\n                }\n\n                if (lat1 && long1) {\n                    marker1 = (\n                        <Marker\n                            zIndexOffset={zIndex}\n                            icon={icon}\n                            position={[lat1, long1]}\n                            onClick={() =>\n                                this.handleMarkerClick(\n                                    [\n                                        parseFloat(product.buyer.localisation.latitude),\n                                        parseFloat(product.buyer.localisation.longitude),\n                                    ],\n                                    i + 1\n                                )\n                            }\n                        >\n                            {/* <Popup>{product.buyer.name}</Popup> */}\n                        </Marker>\n                    );\n                }\n                if (lat2 && long2) {\n                    marker2 = (\n                        <Marker\n                            zIndexOffset={zIndex}\n                            icon={icon2}\n                            position={[lat2, long2]}\n                            onClick={() =>\n                                this.handleMarkerClick(\n                                    [\n                                        parseFloat(product.seller.localisation.latitude),\n                                        parseFloat(product.seller.localisation.longitude),\n                                    ],\n                                    i\n                                )\n                            }\n                        >\n                            {/* <Popup>{product.seller.name}</Popup> */}\n                        </Marker>\n                    );\n                }\n\n                let color = \"#1b3044\";\n                let curves = document.getElementsByClassName(\"leaflet-interactive\");\n\n                if (curves && curves[i] && i === this.state.currentIndex) {\n                    curves[i].setAttribute(\"stroke\", \"#78be95\");\n                } else if (curves && curves[i]) {\n                    curves[i].setAttribute(\"stroke\", \"#1b3044\");\n                }\n\n                return (\n                    <React.Fragment>\n                        <div className=\"test\">\n                            <Curve\n                                positions={getCurveOptions(lat2, long2, lat1, long1)}\n                                option={{\n                                    color: color,\n                                    fill: false,\n                                    // animate: animate,\n                                    delay: 5000,\n                                }}\n                            />\n                        </div>\n                        {marker1}\n                        {marker2}\n                    </React.Fragment>\n                );\n            });\n        }\n        return markers;\n    };\n\n    render = () => {\n        return (\n            <div className=\"tracability-container\">\n                <div className=\"product-CO2-total-tracability-container\">\n                    <span className=\"product-CO2-total-tracability\">\n                        Impact total carbone :&nbsp;\n                        <span className=\"carbon-total-number\">\n                            {parseFloat(this.props.totalCO2Traceability).toFixed(1)}\n                        </span>\n                        kg CO2 soit &nbsp;\n                        <span className=\"carbon-total-number\">\n                            {parseFloat(\n                                ((this.props.totalCO2Traceability * 0.05) / 11.0) * 1000.0\n                            ).toFixed(1)}\n                        </span>\n                        kms parcourus en voiture\n                    </span>\n                </div>\n\n                <Map\n                    center={[51.505, -0.09]}\n                    zoom={1}\n                    minZoom={1}\n                    scrollWheelZoom={true}\n                    maxBounds={[\n                        [-90, -180],\n                        [90, 180],\n                    ]}\n                    maxBoundsViscosity={1}\n                    ref={(ref) => {\n                        this.map = ref;\n                        this.props.getBottomRef(ref);\n                    }}\n                    whenCreated={(map) => this.setState({ map })}\n                >\n                    <TileLayer\n                        attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a>'\n                        url=\"https://stamen-tiles-{s}.a.ssl.fastly.net/toner-background/{z}/{x}/{y}{r}.png\" //'https://maps.wikimedia.org/osm-intl/{z}/{x}/{y}{r}.png' //'https://{s}.tile.osm.org/{z}/{x}/{y}.png'\n                    />\n\n                    {this.displayMarker()}\n                </Map>\n                <Swiper\n                    spaceBetween={10}\n                    slidesPerView={1.2}\n                    centeredSlides={true}\n                    onSlideChange={(i) => this.onSlideChange(i.activeIndex)}\n                    onSwiper={(swiper) => this.setState({ swiper: swiper })}\n                >\n                    {this.displaySlides()}\n                </Swiper>\n            </div>\n        );\n    };\n}\n\nexport default Traceability;\n\nfunction getDistance(origin, destination) {\n    // return distance in meters\n    var lon1 = toRadian(origin[1]),\n        lat1 = toRadian(origin[0]),\n        lon2 = toRadian(destination[1]),\n        lat2 = toRadian(destination[0]);\n\n    var deltaLat = lat2 - lat1;\n    var deltaLon = lon2 - lon1;\n\n    var a =\n        Math.pow(Math.sin(deltaLat / 2), 2) +\n        Math.cos(lat1) * Math.cos(lat2) * Math.pow(Math.sin(deltaLon / 2), 2);\n    var c = 2 * Math.asin(Math.sqrt(a));\n    var EARTH_RADIUS = 6371;\n    return c; //* EARTH_RADIUS * 1000;\n}\n\nfunction toRadian(degree) {\n    return (degree * Math.PI) / 180;\n}\n\nfunction getZoomRatio(origin, destination) {\n    var distance = getDistance(origin, destination);\n    console.log(distance);\n    return 9 - Math.sqrt(distance * 150);\n}\n\nfunction getCurveOptions(lat1, long1, lat2, long2) {\n    var latlng1 = [lat1, long1],\n        latlng2 = [lat2, long2];\n\n    var offsetX = latlng2[1] - latlng1[1],\n        offsetY = latlng2[0] - latlng1[0];\n\n    var r = Math.sqrt(Math.pow(offsetX, 2) + Math.pow(offsetY, 2)),\n        theta = Math.atan2(offsetY, offsetX);\n\n    var thetaOffset = 3.14 / 10;\n\n    var r2 = r / 2 / Math.cos(thetaOffset),\n        theta2 = theta + thetaOffset;\n\n    var midpointX = r2 * Math.cos(theta2) + latlng1[1],\n        midpointY = r2 * Math.sin(theta2) + latlng1[0];\n\n    var midpointLatLng = [midpointY, midpointX];\n\n    return [\"M\", latlng1, \"Q\", midpointLatLng, latlng2];\n}\n\nfunction getChildElementIndex(node) {\n    return Array.prototype.indexOf.call(node.parentNode.children, node);\n}\n","export default __webpack_public_path__ + \"static/media/nutella.14ecd263.png\";","import React from \"react\";\nimport \"./Environnement.css\";\nimport { Swiper, SwiperSlide } from \"swiper/react\";\n// Import Swiper styles\nimport \"swiper/swiper-bundle.css\";\nimport { CircleProgress } from \"react-gradient-progress\";\n//import { PRODUCTS } from \"../../assets/alternatives/alternatives\";\nimport nutella from \"../../assets/images/nutella.png\";\nimport { Link } from \"react-router-dom\";\n\nfunction RenderColor({ item }) {\n    var labelColor;\n    var labelLevel;\n    if (item.ecoscore_score <= 33) {\n        labelColor = \"red\";\n        labelLevel = \"Mauvais\";\n    } else if (item.ecoscore_score > 33 && item.ecoscore_score < 67) {\n        labelColor = \"yellow\";\n        labelLevel = \"Moyen\";\n    } else {\n        labelColor = \"green\";\n        labelLevel = \"Bonne\";\n    }\n    return (\n        <div className=\"product-alternative-label-position\">\n            <div className=\"product-alternative-label\">\n                <div style={{ color: labelColor }}>●</div>\n                <div className=\"product-alternative-label-text\">{item.ecoscore_score}/100</div>\n            </div>\n            <div className=\"product-alternative-label-level \">{labelLevel}</div>\n        </div>\n    );\n}\n\nclass Environnement extends React.Component {\n    state = {\n        swiper: undefined,\n        currentIndex: 0,\n        width: undefined,\n        showTransport: false,\n        materials: [],\n    };\n\n    getMaterialIcon = (mode) => {\n        switch (mode) {\n            case \"Transformation\":\n                return \"transform\";\n            case \"Arrow\":\n                if (this.state.showTransport) return \"arrow_drop_up\";\n                else return \"arrow_drop_down\";\n            case \"Consommation\":\n                return \"microwave\";\n            case \"Distribution\":\n                return \"store\";\n            case \"Recyclable\":\n                return \"check_circle_outline\";\n            case \"Non recyclable\":\n                return \"highlight_off\";\n            case \"Truck\":\n                return \"local_shipping\";\n            case \"Packaging\":\n                return \"inventory_2\";\n            case \"Agriculture\":\n                return \"agriculture\";\n            case \"Transport\":\n                return \"local_shipping\";\n            default:\n                return \"view_in_ar\";\n        }\n    };\n\n    getColor = (note) => {\n        if (note > 67) {\n            return \"green\";\n        }\n        if (note <= 33) {\n            return \"red\";\n        }\n        return \"yellow\";\n    };\n\n    getColorImpact = (note) => {\n        if (note > 70) {\n            return \"green\";\n        }\n        if (note <= 40) {\n            return \"red\";\n        }\n        return \"yellow\";\n    };\n\n    getLabel = (note) => {\n        if (note > 67) {\n            return \"Bon\";\n        }\n        if (note <= 33) {\n            return \"Mauvais\";\n        }\n        return \"Moyen\";\n    };\n\n    getLabelImpact = (note) => {\n        if (note > 60) {\n            return \"Impact fort\";\n        }\n        if (note <= 30) {\n            return \"Impact faible\";\n        }\n        return \"Impact moyen\";\n    };\n\n    getLabelImpactPackaging = (note) => {\n        if (note > 2) {\n            return \"Impact faible\";\n        }\n        if (note < -2) {\n            return \"Impact fort\";\n        }\n        return \"Impact moyen\";\n    };\n\n    getColorImpactPackaging = (note) => {\n        if (note > 2) {\n            return \"green\";\n        }\n        if (note < -2) {\n            return \"red\";\n        }\n        return \"yellow\";\n    };\n\n    displaySlides = () => {\n        let slides = <React.Fragment></React.Fragment>;\n\n        if (\n            this.props.dataEcoScore &&\n            this.props.dataEcoScore?.adjustments?.packaging?.packagings.length >= 1\n        ) {\n            slides = this.props.dataEcoScore?.adjustments?.packaging?.packagings.map((data) => {\n                var recyclable = \"\";\n                if (data.recycling) {\n                    recyclable = data.recycling.split(\":\")[1];\n                }\n                if (recyclable && recyclable == \"recycle\") {\n                    recyclable = \"Recyclable\";\n                } else if (recyclable && recyclable == \"discard\") {\n                    recyclable = \"Non recyclable\";\n                } else {\n                    recyclable = \"\";\n                }\n\n                return (\n                    <div>\n                        <SwiperSlide>\n                            <div className=\"env-product-slide-container \">\n                                <div className=\"env-product-slide-icon\">\n                                    <span class=\"material-icons env-icon-label\">\n                                        {this.getMaterialIcon(\"\")}\n                                    </span>\n                                </div>\n                                <div className=\"env-product-slide-wrapper\">\n                                    <div className=\"product-slide-name\">\n                                        {data?.material.split(\":\")[1]}\n                                    </div>\n                                    <div className=\"product-ecoscore\">\n                                        Ecoscore : {data?.ecoscore_material_score}\n                                    </div>\n\n                                    <div className=\"env-history-label-container\">\n                                        <span\n                                            className=\"packaging-label-color\"\n                                            style={{\n                                                color: this.getColor(data?.ecoscore_material_score),\n                                            }}\n                                        >\n                                            ●\n                                        </span>\n                                        <div className=\"env-history-label\">\n                                            {this.getLabel(data?.ecoscore_material_score)}\n                                        </div>\n                                    </div>\n                                    <div className=\"product-slide-recyclable\">\n                                        {recyclable}\n                                        <div className=\"material-icons icon-label-recyclable\">\n                                            {this.getMaterialIcon(recyclable)}\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </SwiperSlide>\n                    </div>\n                );\n            });\n        }\n        return slides;\n\n        // return slides;\n    };\n\n    componentDidMount() {\n        this.updateWindowDimensions();\n        window.addEventListener(\"resize\", this.updateWindowDimensions);\n    }\n\n    componentWillUnmount() {\n        window.removeEventListener(\"resize\", this.updateWindowDimensions);\n    }\n\n    updateWindowDimensions = () => {\n        this.setState({ width: window.innerWidth });\n    };\n\n    displayCO2Repartition = (pourcentage, nbKg, type) => {\n        return (\n            <div className=\"product-co2-impact-container\">\n                <div className=\"product-co2-impact-header\">\n                    <div className=\"product-co2-impact-logo\">\n                        <div className=\"material-icons icon-label-co2-impact\">\n                            {this.getMaterialIcon(type)}\n                        </div>\n                    </div>\n                    <div className=\"product-co2-impact-title\">\n                        <div className=\"product-co2-impact-title-text\">CO2 {type}</div>\n                        <div className=\"product-co2-impact-title-label\">Répartition</div>\n                    </div>\n                </div>\n                <div className=\"product-co2-impact-content\">\n                    <div className=\"product-transport-impact-content-details-text\">\n                        {parseFloat(nbKg).toFixed(3)}kg C02 eq/kg produit\n                    </div>\n                    <div className=\"product-co2-impact-content-progress\">\n                        <CircleProgress\n                            percentage={parseFloat(pourcentage * 100).toFixed(1)}\n                            strokeWidth={window.innerWidth * (1.0 / 60.0)}\n                            width={window.innerWidth * (1.0 / 5.0)}\n                            fontSize={window.innerWidth * (1.0 / 25.0)}\n                            primaryColor={[\"#FF3333\", \"#33FF63\"]}\n                        />\n                    </div>\n                </div>\n            </div>\n        );\n    };\n\n    displayRepartitionAllItems = () => {\n        var html_agriculture = <React.Fragment></React.Fragment>;\n        var html_transport = <React.Fragment></React.Fragment>;\n        var html_consommation = <React.Fragment></React.Fragment>;\n        var html_distribution = <React.Fragment></React.Fragment>;\n        var html_packaging = <React.Fragment></React.Fragment>;\n        var html_processing = <React.Fragment></React.Fragment>;\n        var html_total = <React.Fragment></React.Fragment>;\n\n        if (this.props.dataEcoScore?.agribalyse?.co2_agriculture) {\n            html_agriculture = this.displayCO2Repartition(\n                this.props.dataEcoScore?.agribalyse?.co2_agriculture /\n                    this.props.dataEcoScore?.agribalyse?.co2_total,\n                this.props.dataEcoScore?.agribalyse?.co2_agriculture,\n                \"Agriculture\"\n            );\n        }\n        if (this.props.dataEcoScore?.agribalyse?.co2_transportation) {\n            html_transport = this.displayCO2Repartition(\n                this.props.dataEcoScore?.agribalyse?.co2_transportation /\n                    this.props.dataEcoScore?.agribalyse?.co2_total,\n                this.props.dataEcoScore?.agribalyse?.co2_transportation,\n                \"Transport\"\n            );\n        }\n\n        if (this.props.dataEcoScore?.agribalyse?.co2_consumption) {\n            html_consommation = this.displayCO2Repartition(\n                this.props.dataEcoScore?.agribalyse?.co2_consumption /\n                    this.props.dataEcoScore?.agribalyse?.co2_total,\n                this.props.dataEcoScore?.agribalyse?.co2_consumption,\n                \"Consommation\"\n            );\n        }\n\n        if (this.props.dataEcoScore?.agribalyse?.co2_distribution) {\n            html_distribution = this.displayCO2Repartition(\n                this.props.dataEcoScore?.agribalyse?.co2_distribution /\n                    this.props.dataEcoScore?.agribalyse?.co2_total,\n                this.props.dataEcoScore?.agribalyse?.co2_distribution,\n                \"Distribution\"\n            );\n        }\n\n        if (this.props.dataEcoScore?.agribalyse?.co2_packaging) {\n            html_packaging = this.displayCO2Repartition(\n                this.props.dataEcoScore?.agribalyse?.co2_packaging /\n                    this.props.dataEcoScore?.agribalyse?.co2_total,\n                this.props.dataEcoScore?.agribalyse?.co2_packaging,\n                \"Emballage\"\n            );\n        }\n\n        if (this.props.dataEcoScore?.agribalyse?.co2_processing) {\n            html_processing = this.displayCO2Repartition(\n                this.props.dataEcoScore?.agribalyse?.co2_processing /\n                    this.props.dataEcoScore?.agribalyse?.co2_total,\n                this.props.dataEcoScore?.agribalyse?.co2_processing,\n                \"Transformation\"\n            );\n        }\n\n        if (this.props.dataEcoScore?.agribalyse?.co2_total) {\n            html_total = (\n                <span className=\"product-CO2-total\">\n                    Impact carbone générique :&nbsp;\n                    <span className=\"carbon-total-number\">\n                        {parseFloat(this.props.dataEcoScore?.agribalyse?.co2_total).toFixed(3)}\n                    </span>\n                    kg C02 eq/kg produit\n                </span>\n            );\n        }\n\n        let res = (\n            <React.Fragment>\n                {html_total}\n                {html_agriculture}\n                {html_transport}\n                {html_consommation}\n                {html_distribution}\n                {html_packaging}\n                {html_processing}\n            </React.Fragment>\n        );\n\n        return res;\n    };\n\n    handleShowTransport = () => {\n        this.setState({ showTransport: !this.state.showTransport });\n    };\n\n    displayTransportImpact = () => {\n        let res = <React.Fragment></React.Fragment>;\n\n        var agribalyse_CO2 = undefined;\n        var transportation_score = undefined;\n        var transport_final_indicator = undefined;\n        var n = 0;\n\n        if (this.props.dataEcoScore?.agribalyse?.co2_transportation) {\n            agribalyse_CO2 = 0.5 * this.props.dataEcoScore?.agribalyse?.co2_transportation;\n            n += 1;\n        }\n\n        if (this.props.dataEcoScore?.adjustments?.origins_of_ingredients?.value_fr) {\n            transportation_score =\n                0.5 +\n                this.props.dataEcoScore?.adjustments?.origins_of_ingredients?.value_fr *\n                    (-1.0 / 40.0);\n            n += 1;\n        }\n        if (n > 0) {\n            if (!agribalyse_CO2) {\n                agribalyse_CO2 = 0;\n            }\n            if (!transportation_score) {\n                transportation_score = 0;\n            }\n            transport_final_indicator = (agribalyse_CO2 + transportation_score) / n;\n            if (transport_final_indicator > 1) {\n                transport_final_indicator = 1;\n            }\n            if (transport_final_indicator < 0) {\n                transport_final_indicator = 0;\n            }\n        }\n\n        let co2_impact_html = <React.Fragment></React.Fragment>;\n        let transportation_score_html = <React.Fragment></React.Fragment>;\n\n        if (agribalyse_CO2 > 0) {\n            co2_impact_html = (\n                <div className=\"product-transport-impact-content-details-text\">\n                    {parseFloat(this.props.dataEcoScore?.agribalyse?.co2_transportation).toFixed(3)}\n                    kg C02 eq/kg produit\n                </div>\n            );\n        }\n\n        if (transportation_score > 0) {\n            transportation_score_html = (\n                <div className=\"product-transport-impact-content-details-score\">\n                    Score environnemental du transport vers la France :\n                    <span\n                        style={{\n                            color: this.getColorImpact(100 - transportation_score * 100),\n                        }}\n                    >\n                        {Math.round(99 - transportation_score * 100)}\n                    </span>\n                    /100\n                </div>\n            );\n        }\n\n        if (!this.props.displayTranportImpact && transport_final_indicator) {\n            transport_final_indicator = Math.round(transport_final_indicator * 100);\n            return (\n                <div\n                    className=\"product-transport-impact-container\"\n                    onClick={this.handleShowTransport}\n                >\n                    <div className=\"product-transport-impact-header\">\n                        <div className=\"product-transport-impact-logo\">\n                            <div className=\"material-icons icon-label-transport-impact\">\n                                {this.getMaterialIcon(\"Truck\")}\n                            </div>\n                        </div>\n                        <div className=\"product-transport-impact-title\">\n                            <div className=\"product-transport-impact-title-text\">\n                                Impact du transport\n                            </div>\n                            <div className=\"product-transport-impact-title-label\">\n                                {this.getLabelImpact(transport_final_indicator)}\n                            </div>\n                        </div>\n                        <div\n                            className=\"product-transport-impact-color-label\"\n                            style={{\n                                color: this.getColorImpact(100 - transport_final_indicator),\n                            }}\n                        >\n                            ●\n                        </div>\n                    </div>\n                    <div className=\"arrow-container\">\n                        <div className=\"material-icons icon-label-arrow\">\n                            {this.getMaterialIcon(\"Arrow\")}\n                        </div>\n                    </div>\n\n                    <div\n                        className={\n                            this.state.showTransport ? \"animation-appear\" : \"animation-disappear\"\n                        }\n                    >\n                        <div className=\"product-transport-impact-content\">\n                            <div className=\"product-transport-impact-content-text\">\n                                Score total :\n                            </div>\n                            <div className=\"product-transport-impact-content-progress\">\n                                <CircleProgress\n                                    percentage={100 - transport_final_indicator}\n                                    strokeWidth={window.innerWidth * (1.0 / 50.0)}\n                                    width={window.innerWidth * (1.0 / 4.0)}\n                                    fontSize={0}\n                                    primaryColor={[\"#33FF63\", \"#FF3333\"]}\n                                />\n                                <span className=\"impact-percentage-progressBar\">\n                                    {100 - transport_final_indicator}/100\n                                </span>\n                            </div>\n                        </div>\n                        <div className=\"product-transport-impact-content-details\">\n                            {co2_impact_html}\n                            {transportation_score_html}\n                        </div>\n                    </div>\n                </div>\n            );\n        }\n\n        return res;\n    };\n\n    displayPackagingDetailImpact = () => {\n        let res = <React.Fragment></React.Fragment>;\n\n        if (this.props.dataEcoScore?.adjustments?.packaging?.packagings) {\n            var materials = [];\n            let slides = <React.Fragment></React.Fragment>;\n\n            this.props.dataEcoScore?.adjustments?.packaging?.packagings.map((data) => {\n                if (data?.material.split(\":\")[1] != \"unknown\") {\n                    materials.push(data?.material.split(\":\")[1]);\n                }\n            });\n\n            slides = materials\n                .filter(function (item, pos) {\n                    return materials.indexOf(item) == pos;\n                })\n                .map((data) => {\n                    var separator = \"\";\n                    if (materials.indexOf(data) < materials.length - 1) {\n                        separator = \" ; \";\n                    }\n                    return (\n                        <React.Fragment>\n                            <span>\n                                {data} {separator}\n                            </span>\n                        </React.Fragment>\n                    );\n                });\n\n            if (materials.length > 0) {\n                res = (\n                    <React.Fragment>\n                        <div className=\"product-co2-impact-content\">\n                            <div className=\"product-packaging-impact-content-details-text\">\n                                Matériaux utilisés : &nbsp;{slides}\n                            </div>\n                        </div>\n                    </React.Fragment>\n                );\n            } else {\n                res = (\n                    <React.Fragment>\n                        <div className=\"product-co2-impact-content\">\n                            <div className=\"product-packaging-impact-content-details-text\">\n                                Matériaux utilisés : &nbsp; Inconnu\n                            </div>\n                        </div>\n                    </React.Fragment>\n                );\n            }\n        }\n\n        return res;\n    };\n\n    displayPackagingImpact = () => {\n        let res = <React.Fragment></React.Fragment>;\n\n        if (this.props.dataEcoScore?.adjustments?.packaging?.value) {\n            return (\n                <div className=\"product-co2-impact-container\">\n                    <div className=\"product-co2-impact-header\">\n                        <div className=\"product-co2-impact-logo\">\n                            <div className=\"material-icons icon-label-co2-impact\">\n                                {this.getMaterialIcon(\"\")}\n                            </div>\n                        </div>\n                        <div className=\"product-co2-impact-title\">\n                            <div className=\"product-co2-impact-title-text\">\n                                Impact de l'emballage\n                            </div>\n                            <div className=\"product-co2-impact-title-label\">\n                                {this.getLabelImpactPackaging(\n                                    this.props.dataEcoScore?.adjustments?.packaging?.value\n                                )}\n                            </div>\n                        </div>\n                        <div\n                            className=\"product-transport-impact-color-label\"\n                            style={{\n                                color: this.getColorImpactPackaging(\n                                    this.props.dataEcoScore?.adjustments?.packaging?.value\n                                ),\n                            }}\n                        >\n                            ●\n                        </div>\n                    </div>\n                    {this.displayPackagingDetailImpact()}\n                </div>\n            );\n        } else {\n            return res;\n        }\n    };\n\n    onSlideChange = (index) => {\n        this.setState({ currentIndex: index });\n    };\n\n    alternativesloop = () => {\n        var alternativesList = <React.Fragment></React.Fragment>;\n\n        if (\n            this.props.alternatives &&\n            this.props.alternatives != \"loading\" &&\n            this.props.alternatives != \"\"\n        ) {\n            alternativesList = this.props.alternatives.products.map((item) => {\n                var pathProduct = \"/products/\" + item.id;\n                // Mock Front\n                if (item.id === \"8001505005707\") {\n                    pathProduct += \"/24\";\n                }\n\n                if (item.id !== this.props.barcode) {\n                    return (\n                        <SwiperSlide>\n                            <a href={pathProduct} className=\"product-alternative\">\n                                <div>\n                                    <img\n                                        src={item.image_url}\n                                        className=\"product-alternative-image\"\n                                        alt=\"\"\n                                    />\n                                </div>\n                                <div className=\"product-alternative-text\">\n                                    <label className=\"product-alternative-title\">\n                                        {item.product_name}\n                                    </label>\n                                    <label className=\"product-alternative-brand\">{}</label>\n                                    <RenderColor item={item} />\n                                </div>\n                                <div className=\"product-alternative-fleche\">{\">\"}</div>\n                            </a>\n                        </SwiperSlide>\n                    );\n                } else {\n                    return <React.Fragment></React.Fragment>;\n                }\n            });\n        }\n\n        return alternativesList;\n    };\n\n    render = () => {\n        let displaySugg = true;\n        let arraySuggestion = [\n            \"8001505005707\",\n            \"3560070472888\",\n            \"3760020500658\",\n            \"3256226384296\",\n            \"8001505000061\",\n            \"3017620424403\",\n            \"3017620425035\",\n            \"80135463\",\n        ];\n\n        var hmtl_suggestion = <React.Fragment></React.Fragment>;\n\n        hmtl_suggestion = this.alternativesloop();\n        var alternatives_title = \"\";\n\n        if (this.props.alternatives === \"\") {\n            alternatives_title = \"Pas d'alternatives disponible\";\n        } else {\n            if (this.props.alternatives === \"loading\") {\n                alternatives_title = \"Chargement des alternatives ...\";\n            } else {\n                alternatives_title = \"Alternatives\";\n            }\n        }\n\n        if (this.props.barcode) {\n            return (\n                <React.Fragment>\n                    {this.displayTransportImpact()}\n                    {this.displayPackagingImpact()}\n                    {this.displayRepartitionAllItems()}\n\n                    {this.props.ecoScore ? (\n                        <React.Fragment>\n                            <span className=\"title-part-environnement\">{alternatives_title}</span>\n                            <Swiper\n                                spaceBetween={0}\n                                slidesPerView={1}\n                                centeredSlides={true}\n                                onSlideChange={(i) => this.onSlideChange(i.activeIndex)}\n                                onSwiper={(swiper) => this.setState({ swiper: swiper })}\n                            >\n                                {hmtl_suggestion}\n                            </Swiper>{\" \"}\n                        </React.Fragment>\n                    ) : (\n                        <p>Pas encore de données pour ce produit</p>\n                    )}\n                    {/* <span className=\"title-part-environnement\">\n                    Impact de l'emballage\n                </span>\n                <Swiper\n                    spaceBetween={10}\n                    slidesPerView={1}\n                    centeredSlides={true}\n                    onSlideChange={(i) => this.onSlideChange(i.activeIndex)}\n                    onSwiper={(swiper) => this.setState({ swiper: swiper })}\n                >\n                    {this.displaySlides()}\n                </Swiper> */}\n                </React.Fragment>\n            );\n        } else {\n            return <React.Fragment></React.Fragment>;\n        }\n    };\n}\n\nexport default Environnement;\n","import React from \"react\";\nimport Navbar from \"../components/Navbar/Navbar\";\nimport Traceability from \"../components/Traceability/Traceability\";\nimport Environnement from \"../components/Environnement/Environnement\";\nimport Labels from \"../components/Labels/Labels\";\nimport \"./Product.css\";\nimport { Link } from \"react-router-dom\";\nimport jwt from \"jsonwebtoken\";\n\nclass Product extends React.Component {\n    state = {\n        barcode: this.props.match.params.barcode,\n        bcProductId: this.props.match.params.bcProductId,\n        product: undefined,\n        productImageUrl: undefined,\n        productName: undefined,\n        genericName: undefined,\n        ecoScore: undefined,\n        dataEcoScore: undefined,\n        value: 0,\n        connected: false,\n        productData: undefined,\n        userId: undefined,\n        cart: 0,\n        totalCO2Traceability: undefined,\n        alternatives: undefined,\n    };\n\n    isFlipping = false;\n\n    //for scrolling\n    getBottomRef = (component) => {\n        this.bottomComponent = component;\n    };\n\n    componentDidMount = () => {\n        this.Verify();\n        let userId = localStorage.getItem(\"userId\");\n        if (userId) {\n            this.setState({ userId: userId });\n            this.loadHistory(userId);\n        }\n        this.loadFromOpenFoodFacts(this.props.match.params.barcode);\n        if (this.props.match.params.bcProductId) {\n            this.loadProductInformations(\n                this.props.match.params.barcode,\n                this.props.match.params.bcProductId\n            );\n        }\n    };\n\n    handleBarCodeUpdate = () => {\n        if (this.state.barcode !== this.props.match.params.barcode) {\n            this.setState({\n                barcode: this.props.match.params.barcode,\n                bcProductId: this.props.match.params.bcProductId,\n            });\n            this.loadFromOpenFoodFacts(this.props.match.params.barcode);\n            if (this.props.match.params.bcProductId) {\n                this.loadProductInformations(\n                    this.props.match.params.barcode,\n                    this.props.match.params.bcProductId\n                );\n            }\n        }\n    };\n\n    Verify = () => {\n        let isExpired = true;\n        const token = localStorage.getItem(\"token\");\n        if (token) {\n            var decodedToken = jwt.decode(token, { complete: true });\n            var dateNow = new Date();\n            if (decodedToken.payload.exp >= dateNow.getTime() / 1000) {\n                isExpired = false;\n            }\n        }\n        if (isExpired === false) {\n            this.setState({ connected: true });\n        }\n    };\n\n    loadProductInformations = (barcode, bcProductId) => {\n        fetch(\n            `https://api.lowympact.fr/api/v1/products/${barcode}?bcProductId=${bcProductId}`,\n            // `http://localhost:8080/api/v1/products/${barcode}?bcProductId=${bcProductId}`,\n            {\n                method: \"get\",\n                credentials: \"include\",\n                headers: new Headers({\n                    \"api-key\": \"99d8fb95-abdd-4885-bf6c-3a81d8874043\",\n                    \"Content-Type\": \"application/json\",\n                }),\n            }\n        )\n            .then((response) => response.json())\n            .then((res) => {\n                this.setState({\n                    products: res?.data?.traceability,\n                    impact: res?.data?.impact,\n                    totalCO2Traceability: res?.data?.transportCO2Impact,\n                });\n            });\n    };\n\n    loadAlternatives = (code, score) => {\n        this.setState({ alternatives: \"loading\" });\n        fetch(\n            `https://fr.openfoodfacts.org/cgi/search.pl?action=process&tagtype_0=categories_properties.ciqual_food_code:en&tag_contains_0=contains&tag_0=${code}&tagtype_1=ecoscore_grade&tag_contains_1=contains&tag_1=${score}&json=true`\n        )\n            .then((response) => response.json())\n            .then((res) => {\n                if (res.products[0] == undefined) {\n                    this.setState({ alternatives: \"\" });\n                    return;\n\n                    /*console.log(\"TAILLENULLE\");\n                    switch (score) {\n                        case \"a\":\n                            return this.loadAlternatives(code, \"b\");\n                        case \"b\":\n                            return this.loadAlternatives(code, \"c\");\n                        case \"c\":\n                            return this.loadAlternatives(code, \"d\");\n                        default:\n                            break;\n                    }\n                    */\n                }\n                this.setState({ alternatives: res });\n            });\n    };\n\n    loadFromOpenFoodFacts = (barcode) => {\n        let dataEcoScore;\n\n        fetch(`https://world.openfoodfacts.org/api/v0/product/${barcode}.json/`)\n            .then((response) => response.json())\n            .then((res) => {\n                let productImageUrl = res?.product?.image_url;\n                let productName = res?.product?.product_name;\n                let genericName = res?.product?.generic_name;\n                let ecoScore = res?.product?.ecoscore_grade;\n\n                dataEcoScore = res?.product?.ecoscore_data;\n\n                if (res?.product) {\n                    this.setState({ productData: res.product });\n                }\n\n                if (productImageUrl) {\n                    this.setState({ productImageUrl: productImageUrl });\n                }\n                if (productName) {\n                    this.setState({ productName: productName });\n                }\n                if (genericName) {\n                    this.setState({ genericName: genericName });\n                }\n                if (\n                    ecoScore &&\n                    (ecoScore === \"a\" ||\n                        ecoScore === \"b\" ||\n                        ecoScore === \"c\" ||\n                        ecoScore === \"d\" ||\n                        ecoScore === \"e\")\n                ) {\n                    this.setState({ ecoScore: ecoScore });\n                }\n                if (dataEcoScore) {\n                    this.setState({ dataEcoScore: dataEcoScore });\n                }\n                if (res.status === 1) {\n                    this.saveHistory();\n                }\n\n                // Mock Soutenance\n                if (barcode === \"80135463\") {\n                    this.setState({ productName: \"Nutella 200g\" });\n                }\n\n                var scoreSearch = \"a\";\n\n                switch (res.product?.ecoscore_grade) {\n                    case \"b\":\n                        scoreSearch = \"a\";\n                        break;\n                    case \"c\":\n                        scoreSearch = \"b\";\n                        break;\n                    case \"d\":\n                        scoreSearch = \"c\";\n                        break;\n                    case \"e\":\n                        scoreSearch = \"c\";\n                        break;\n\n                    default:\n                        break;\n                }\n\n                if (res.product?.ecoscore_grade != \"a\") {\n                    this.loadAlternatives(\n                        res.product.categories_properties[\"ciqual_food_code:en\"],\n                        scoreSearch\n                    );\n                } else {\n                    this.setState({ alternatives: \"\" });\n                }\n            });\n    };\n\n    loadHistory = (userId) => {\n        if (userId && this.state.barcode && this.state.bcProductId) {\n            fetch(\n                `https://api.lowympact.fr/api/v1/users/${userId}/cart/${this.state.barcode}?bcProductAddress=${this.state.bcProductId}`,\n                // `http://localhost:8080/api/v1/users/${this.state.userId}/history`,\n                {\n                    method: \"get\",\n                    credentials: \"include\",\n                    headers: new Headers({\n                        Authorization: localStorage.getItem(\"token\"),\n                        \"api-key\": \"99d8fb95-abdd-4885-bf6c-3a81d8874043\",\n                        \"Content-Type\": \"application/json\",\n                    }),\n                }\n            )\n                .then((response) => response.json())\n                .then((res) => {\n                    if (res.success) {\n                        this.setState({ cart: res.data?.quantity });\n                    }\n                });\n        }\n    };\n\n    saveHistory = async () => {\n        await delay(2000);\n\n        if (!this.state.connected) {\n            let history = JSON.parse(localStorage.getItem(\"local_history\"));\n            let exist = null;\n            if (history) {\n                exist = history?.find(\n                    (element) =>\n                        element.barcode === this.state.barcode &&\n                        element.bcProductId == this.state.bcProductId\n                );\n            } else {\n                history = [];\n            }\n\n            if (!exist || exist?.length === 0) {\n                history.push({\n                    barcode: this.state.barcode,\n                    bcProductId: this.state.bcProductId,\n                    brand: this.state.productData.brands,\n                    image: this.state.productImageUrl,\n                    label: this.state.ecoScore,\n                    name: this.state.productName,\n                });\n                localStorage.setItem(\"local_history\", JSON.stringify(history));\n            }\n        } else if (this.state.userId) {\n            fetch(\n                `https://api.lowympact.fr/api/v1/users/${this.state.userId}/history`,\n                // `http://localhost:8080/api/v1/users/${this.state.userId}/history`,\n                {\n                    method: \"put\",\n                    credentials: \"include\",\n                    headers: new Headers({\n                        Authorization: localStorage.getItem(\"token\"),\n                        \"api-key\": \"99d8fb95-abdd-4885-bf6c-3a81d8874043\",\n                        \"Content-Type\": \"application/json\",\n                    }),\n                    body: JSON.stringify({\n                        barcode: this.state.barcode,\n                        bcProductAddress: this.state.bcProductId,\n                    }),\n                }\n            )\n                .then((response) => response.json())\n                .then((res) => {\n                    console.log(res);\n                });\n        }\n    };\n\n    addToCart = () => {\n        if (this.state.barcode && this.state.cart >= 0) {\n            let co2 = -1;\n            if (this.state.dataEcoScore?.agribalyse?.co2_total) {\n                co2 = parseFloat(this.state.dataEcoScore?.agribalyse?.co2_total);\n            }\n\n            let ecoscore = \"unkown\";\n            if (this.state.ecoScore) {\n                ecoscore = this.state.ecoScore;\n            }\n            this.flip();\n            fetch(\n                `https://api.lowympact.fr/api/v1/users/${this.state.userId}/cart`,\n                // `http://localhost:8080/api/v1/users/${this.state.userId}/cart`,\n                {\n                    method: \"put\",\n                    credentials: \"include\",\n                    headers: new Headers({\n                        Authorization: localStorage.getItem(\"token\"),\n                        \"api-key\": \"99d8fb95-abdd-4885-bf6c-3a81d8874043\",\n                        \"Content-Type\": \"application/json\",\n                    }),\n                    body: JSON.stringify({\n                        barcode: this.state.barcode,\n                        bcProductAddress: this.state.bcProductId,\n                        quantityDelta: 1,\n                        ecoscore: ecoscore,\n                        carbonImpact: co2,\n                    }),\n                }\n            )\n                .then((response) => response.json())\n                .then((res) => {\n                    console.log(res);\n                    if (res.success) {\n                        this.setState({ cart: this.state.cart + 1 });\n                    }\n                });\n        }\n    };\n\n    removeFromCart = () => {\n        if (this.state.barcode && this.state.cart > 0) {\n            this.flip();\n            let co2 = -1;\n            if (this.state.dataEcoScore?.agribalyse?.co2_total) {\n                co2 = parseFloat(this.state.dataEcoScore?.agribalyse?.co2_total);\n            }\n            let ecoscore = \"unkown\";\n            if (this.state.ecoScore) {\n                ecoscore = this.state.ecoScore;\n            }\n            fetch(\n                `https://api.lowympact.fr/api/v1/users/${this.state.userId}/cart`,\n                // `http://localhost:8080/api/v1/users/${this.state.userId}/cart`,\n                {\n                    method: \"put\",\n                    credentials: \"include\",\n                    headers: new Headers({\n                        Authorization: localStorage.getItem(\"token\"),\n                        \"api-key\": \"99d8fb95-abdd-4885-bf6c-3a81d8874043\",\n                        \"Content-Type\": \"application/json\",\n                    }),\n                    body: JSON.stringify({\n                        barcode: this.state.barcode,\n                        bcProductAddress: this.state.bcProductId,\n                        quantityDelta: -1,\n                        ecoscore: ecoscore,\n                        carbonImpact: co2,\n                    }),\n                }\n            )\n                .then((response) => response.json())\n                .then((res) => {\n                    console.log(res);\n                    if (res.success) {\n                        this.setState({ cart: this.state.cart - 1 });\n                    }\n                });\n        }\n    };\n\n    flip = async (event) => {\n        // if (!this.isFlipping) {\n        // \tthis.isFlipping = true;\n        // \tawait delay(500);\n        console.log(this.imageFlip.style.transform);\n        if (this.imageFlip && !this.state.isFlipping) {\n            if (this.imageFlip.style.transform === \"rotateY(360deg)\") {\n                this.imageFlip.style.transform = \"rotateY(0deg)\";\n            } else {\n                this.imageFlip.style.transform = \"rotateY(360deg)\";\n            }\n        }\n        // await delay(1000);\n        // this.isFlipping = false;\n        // }\n    };\n\n    displayImage = () => {\n        this.handleBarCodeUpdate();\n\n        let image = <React.Fragment />;\n        let productName = <React.Fragment />;\n        let genericName = <React.Fragment />;\n        let ecoScore = <React.Fragment />;\n        if (this.state.productImageUrl) {\n            image = (\n                <img src={this.state.productImageUrl} className=\"product-image\" alt=\"produit\" />\n            );\n        }\n\n        if (this.state.productName) {\n            productName = <div className=\"product-name\">{this.state.productName}</div>;\n        }\n        if (this.state.ecoScore) {\n            let scoreClass = \"color_score_\" + this.state.ecoScore;\n            ecoScore = (\n                <div className=\"product-ecoscore-image\">\n                    <span className={\"circle-score \" + scoreClass}>⬤ </span>\n                    EcoScore :<span className=\"uppercase \">{\" \" + this.state.ecoScore}</span>\n                </div>\n            );\n        } else if (this.state.genericName) {\n            genericName = <div className=\"product-generic-name\">{this.state.genericName}</div>;\n        }\n        return (\n            <React.Fragment>\n                {this.state.userId ? (\n                    <div\n                        className={this.state.cart > 0 ? \"add-to-cart green\" : \"add-to-cart\"}\n                        onClick={this.addToCart}\n                    >\n                        <span className=\"cart-count\">\n                            {this.state.cart > 0 ? this.state.cart : \"\"}\n                        </span>\n                        <span class=\"material-icons\">add_shopping_cart</span>\n                    </div>\n                ) : (\n                    <React.Fragment />\n                )}\n                {this.state.cart > 0 ? (\n                    <div className=\"remove-from-cart\" onClick={this.removeFromCart}>\n                        <span class=\"material-icons\">remove_shopping_cart</span>\n                    </div>\n                ) : (\n                    <React.Fragment />\n                )}\n                {image}\n                {productName}\n                <div className=\"product-bottom-image-div\">\n                    {genericName}\n                    {ecoScore}\n                </div>\n            </React.Fragment>\n        );\n    };\n\n    handleChange = (event, newValue) => {\n        this.setState({ value: newValue });\n        if (newValue === 1) {\n            let elem = document.getElementsByClassName(\"swiper-container\");\n            if (elem[0]) {\n                elem[0].scrollIntoView({ behavior: \"smooth\" });\n            }\n        }\n    };\n\n    displayNavbar = () => {\n        let retour = <React.Fragment />;\n        if (this.state.bcProductId) {\n            retour = (\n                <div className=\"product-navbar-container\">\n                    <button\n                        className={\n                            this.state.value === 0\n                                ? \"product-navbar-button selected\"\n                                : \"product-navbar-button\"\n                        }\n                        onClick={() => this.handleChange(\"\", 0)}\n                    >\n                        Environnement\n                    </button>\n                    <button\n                        className={\n                            this.state.value === 1\n                                ? \"product-navbar-button selected\"\n                                : \"product-navbar-button\"\n                        }\n                        onClick={() => this.handleChange(\"\", 1)}\n                    >\n                        Traçabilité\n                    </button>\n                    <div\n                        className={\n                            this.state.value === 0\n                                ? \"navbar-under nav-left\"\n                                : \"navbar-under nav-right\"\n                        }\n                    ></div>\n                </div>\n            );\n        }\n        return retour;\n    };\n\n    render = () => {\n        //tri des produits\n        let products = this.state.products?.sort((a, b) => {\n            if (a.depth > b.depth) return -1;\n            else return 1;\n        });\n        return (\n            <React.Fragment>\n                <div className=\"product-page-container\">\n                    <div className=\"product-header-container\">\n                        <div className=\"product-history-link\">\n                            <Link to=\"/history\"> {\"<\"} Historique</Link>\n                        </div>\n                        <img\n                            className=\"product-bitmap-image\"\n                            src=\"/images/utils/bitmap.png\"\n                            alt=\"\"\n                        />\n                    </div>\n                    <div\n                        className=\"product-image-container\"\n                        // onClick={this.flip}\n                        ref={(ref) => (this.imageFlip = ref)}\n                    >\n                        {this.displayImage()}\n                    </div>\n\n                    {this.displayNavbar()}\n\n                    {/* <AppBar position=\"static\">\n\t\t\t\t\t\t<Tabs\n\t\t\t\t\t\t\tvalue={this.state.value}\n\t\t\t\t\t\t\tonChange={this.handleChange}\n\t\t\t\t\t\t\taria-label=\"simple tabs example\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<Tab label=\"Traçabilité\" />\n\t\t\t\t\t\t\t<Tab label=\"Environnement\" />\n\t\t\t\t\t\t</Tabs>\n\t\t\t\t\t</AppBar>\n\t\t\t\t\t<TabPanel value={this.state.value} index={0}></TabPanel>\n\t\t\t\t\t<TabPanel value={this.state.value} index={1}>\n\t\t\t\t</TabPanel> */}\n                    {this.state.value === 0 ? (\n                        <Environnement\n                            dataEcoScore={this.state.dataEcoScore}\n                            ecoScore={this.state.ecoScore}\n                            displayTranportImpact={\n                                this.props.match.params.bcProductId !== null &&\n                                this.props.match.params.bcProductId !== undefined\n                            }\n                            barcode={this.props.match.params.barcode}\n                            alternatives={this.state.alternatives}\n                        ></Environnement>\n                    ) : (\n                        <div className=\"product-bottom-container\">\n                            <Traceability\n                                products={products}\n                                getBottomRef={this.getBottomRef}\n                                totalCO2Traceability={this.state.totalCO2Traceability}\n                            />\n                        </div>\n                    )}\n                    <Navbar\n                        barcode={this.props.match.params.barcode}\n                        bcProductId={this.props.match.params.bcProductId}\n                    />\n                </div>\n            </React.Fragment>\n        );\n    };\n}\n\nexport default Product;\n\nconst delay = (ms) => new Promise((res) => setTimeout(res, ms));\n","import React from \"react\";\nimport { Swiper, SwiperSlide } from \"swiper/react\";\n// Import Swiper styles\nimport \"swiper/swiper-bundle.css\";\nimport \"./Labels.css\";\n\nclass Labels extends React.Component {\n\tdisplaySpecies = () => {\n\t\tif (\n\t\t\tthis.props.dataEcoScore?.adjustments?.threatened_species?.length ===\n\t\t\t0\n\t\t) {\n\t\t\treturn <div></div>;\n\t\t} else {\n\t\t\tif (\n\t\t\t\tthis.props.dataEcoScore?.adjustments?.threatened_species\n\t\t\t\t\t?.value < 0\n\t\t\t) {\n\t\t\t\treturn (\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<div className=\"labels-container-bad\">\n\t\t\t\t\t\t\t<span class=\"material-icons\">warning_amber</span>\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tthis.props.dataEcoScore?.adjustments\n\t\t\t\t\t\t\t\t\t?.threatened_species?.ingredient\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\treturn (\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<div className=\"labels-container-good\">\n\t\t\t\t\t\t\t<span class=\"material-icons\">task_alt</span>\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tthis.props.dataEcoScore?.adjustments\n\t\t\t\t\t\t\t\t\t?.threatened_species?.ingredient\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t};\n\n\tdisplaySpecies = () => {\n\t\tif (\n\t\t\t!this.props.dataEcoScore?.adjustments?.threatened_species\n\t\t\t\t?.ingredient\n\t\t) {\n\t\t\treturn <div></div>;\n\t\t} else {\n\t\t\tif (\n\t\t\t\tthis.props.dataEcoScore?.adjustments?.threatened_species\n\t\t\t\t\t?.value < 0\n\t\t\t) {\n\t\t\t\treturn (\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<div className=\"labels-container-bad\">\n\t\t\t\t\t\t\t<span class=\"material-icons\">warning_amber</span>\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tthis.props.dataEcoScore?.adjustments\n\t\t\t\t\t\t\t\t\t?.threatened_species?.ingredient\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\treturn (\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<div className=\"labels-container-good\">\n\t\t\t\t\t\t\t<span class=\"material-icons\">task_alt</span>\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tthis.props.dataEcoScore?.adjustments\n\t\t\t\t\t\t\t\t\t?.threatened_species?.ingredient\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t};\n\n\tdisplayProduction = () => {\n\t\tif (!this.props.dataEcoScore?.adjustments?.production_system?.label) {\n\t\t\treturn <div></div>;\n\t\t} else {\n\t\t\tif (\n\t\t\t\tthis.props.dataEcoScore?.adjustments?.production_system?.value <\n\t\t\t\t0\n\t\t\t) {\n\t\t\t\treturn (\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<div className=\"labels-container-bad\">\n\t\t\t\t\t\t\t<span class=\"material-icons\">warning_amber</span>\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tthis.props.dataEcoScore?.adjustments\n\t\t\t\t\t\t\t\t\t?.production_system?.label\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\treturn (\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<div className=\"labels-container-good\">\n\t\t\t\t\t\t\t<span class=\"material-icons\">task_alt</span>\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tthis.props.dataEcoScore?.adjustments\n\t\t\t\t\t\t\t\t\t?.production_system?.label\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t};\n\n\trender() {\n\t\tif (\n\t\t\tthis.props.dataEcoScore?.adjustments?.threatened_species?.length !=\n\t\t\t\t0 &&\n\t\t\tthis.props.dataEcoScore?.adjustments?.production_system?.label\n\t\t) {\n\t\t\treturn (\n\t\t\t\t<div>\n\t\t\t\t\t<h1>Labels</h1>\n\n\t\t\t\t\t<div className=\"labels-container\">\n\t\t\t\t\t\t{this.displaySpecies()}\n\t\t\t\t\t\t{this.displayProduction()}\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t);\n\t\t} else {\n\t\t\treturn <React.Fragment />;\n\t\t}\n\t}\n}\n\nexport default Labels;\n","import React from \"react\";\nimport Navbar from \"../components/Navbar/Navbar\";\nimport Header from \"../components/Header/Header\";\nimport \"./Profil.css\";\nimport { Link } from \"react-router-dom\";\nimport jwt from \"jsonwebtoken\";\nimport { motion } from \"framer-motion\";\n\nclass Profil extends React.Component {\n    state = {\n        connected: false,\n    };\n\n    disconnect = () => {\n        localStorage.clear();\n        this.props.history.push(\"/login\");\n    };\n\n    componentDidMount = () => {\n        this.Verify();\n    };\n\n    Verify = () => {\n        let isExpired = true;\n        const token = localStorage.getItem(\"token\");\n        if (token) {\n            var decodedToken = jwt.decode(token, { complete: true });\n            var dateNow = new Date();\n            if (decodedToken.payload.exp >= dateNow.getTime() / 1000) {\n                isExpired = false;\n            }\n        }\n        if (isExpired === false) {\n            this.setState({ connected: true }); // redirection vers la page login\n        }\n    };\n\n    displayConnectedProfil = () => {\n        return (\n            <React.Fragment>\n                <h2 className=\"profil-title\">Bienvenue sur ton profil!</h2>\n                <Link to=\"/stats\" className=\"profil-button\">\n                    Statistiques\n                </Link>\n                <Link to=\"/configuration\" className=\"profil-button\">\n                    Configuration\n                </Link>\n                <div onClick={this.disconnect} className=\"profil-button\">\n                    Déconnecter\n                </div>\n            </React.Fragment>\n        );\n    };\n\n    displayUnconnectedProfil = () => {\n        return (\n            <React.Fragment>\n                <h2 className=\"profil-title\">Non connecté</h2>\n                <p>Connecte toi pour que ton historique soit sauvegardé !</p>\n                <Link to=\"/login\" className=\"profil-button\">\n                    Me Connecter\n                </Link>\n            </React.Fragment>\n        );\n    };\n\n    render() {\n        return (\n            <div>\n                <Link to=\"/\">\n                    <Header />\n                </Link>\n                <motion.div\n                    initial={{ opacity: 0 }}\n                    animate={{ opacity: 1 }}\n                    exit={{ opacity: 0 }}\n                    className=\"profil-screen\"\n                >\n                    <div className=\"profil-picture\">\n                        <div class=\"material-icons\">person</div>\n                    </div>\n                    {this.state.connected\n                        ? this.displayConnectedProfil()\n                        : this.displayUnconnectedProfil()}\n                </motion.div>\n                <Navbar />\n            </div>\n        );\n    }\n}\n\nexport default Profil;\n","import React from \"react\";\n\nfunction ButtonSignup() {\n  return (\n  <div>\n    Créer mon compte\n  </div>\n  );\n}\n\nexport default ButtonSignup;","import React, { Component } from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport ButtonSignup from \"../components/Button/ButtonSignup\";\nimport fruits from \"../assets/images/fruits-vegetables-basket-by-oblik-studio.svg\";\nimport Header from \"../components/Header/Header\";\nimport \"./Login.css\";\nimport { Link } from \"react-router-dom\";\n\nexport const validEmail = new RegExp(\"^[a-zA-Z0-9._:$!%-]+@[a-zA-Z0-9.-]+.[a-zA-Z]$\");\n\nclass Signup extends Component {\n    state = {\n        userName: \"\",\n        email: \"\",\n        password: \"\",\n        confirmPassword: \"\",\n        errors: [],\n        redirect: false,\n        submit: false,\n    };\n\n    validate() {\n        var errors = [];\n        if (this.state.userName.length === 0) {\n            errors.push(\"Saissez votre nom\");\n        }\n        if (this.state.email.length === 0) {\n            errors.push(\"Saissez votre adresse e-mail\");\n        }\n        if (validEmail.test(this.state.email) === false) {\n            errors.push(\"Saissez une adresse e-mail valide\");\n        }\n        if (this.state.password.length < 6) {\n            errors.push(\"Entre un mot de passe. 6 caràcteres minimum requis\");\n        }\n        if (this.state.password !== this.state.confirmPassword) {\n            errors.push(\"Les mots de passe ne correspondent pas\");\n        }\n        this.setState({ errors: errors });\n        return errors;\n    }\n\n    signUser = async () => {\n        let errors = await fetch(`https://api.lowympact.fr/api/v1/users/`, {\n            method: \"post\",\n            credentials: \"include\",\n            headers: new Headers({\n                \"api-key\": \"99d8fb95-abdd-4885-bf6c-3a81d8874043\",\n                \"Content-Type\": \"application/json\",\n            }),\n            body: JSON.stringify({\n                username: this.state.userName,\n                email: this.state.email,\n                password: this.state.password,\n            }),\n        })\n            .then((response) => response.json())\n            .then((res) => {\n                console.log(res);\n                let errors = [];\n\n                if (!res.success) {\n                    errors.push(\"Il y a déjà un compte avec ce mail ou une erreur réseau.\");\n                } else {\n                    localStorage.setItem(\"token\", res.token);\n                    localStorage.setItem(\"userId\", res._id);\n                    this.props.history.push(\"/history\");\n                }\n                this.setState({ errors: errors });\n                return errors;\n            });\n        return errors;\n    };\n\n    handleSubmit = async (e) => {\n        e.preventDefault();\n        let errors = this.validate();\n        //console.log(\"errors: \" + errors);\n        if (errors.length === 0) {\n            errors = await this.signUser();\n        }\n        if (errors.length === 0) {\n            this.setState({ redirect: true });\n        }\n    };\n\n    displayErrors = () => {\n        let errors = <React.Fragment></React.Fragment>;\n        errors = this.state.errors.map((error) => {\n            return <p>{error}</p>;\n        });\n        return errors;\n    };\n\n    render() {\n        if (this.state.redirect) {\n            return <Redirect to=\"/history\" />;\n        }\n        //console.log(\"render\");\n        return (\n            <React.Fragment>\n                <Link to=\"/login\">\n                    <Header />\n                </Link>\n                <div className=\"logo-fruits\">\n                    <img src={fruits} className=\"logo\" alt=\"Fruits\" />\n                </div>\n                <Link className=\"back-button\" to=\"/login\">\n                    {\"< Retour\"}\n                </Link>\n                <div className=\"signup-container\">\n                    <form className=\"forms\">\n                        <label>\n                            nom\n                            <input\n                                className=\"input-forms\"\n                                value={this.state.userName}\n                                onChange={(evt) =>\n                                    this.setState({\n                                        userName: evt.target.value,\n                                    })\n                                }\n                                type=\"text\"\n                            />\n                        </label>\n                        <label>\n                            email\n                            <input\n                                className=\"input-forms\"\n                                value={this.state.email}\n                                onChange={(evt) => this.setState({ email: evt.target.value })}\n                                type=\"email\"\n                            />\n                        </label>\n                        <label>\n                            mot de passe\n                            <input\n                                className=\"input-forms\"\n                                value={this.state.password}\n                                onChange={(evt) =>\n                                    this.setState({\n                                        password: evt.target.value,\n                                    })\n                                }\n                                type=\"password\"\n                            />\n                        </label>\n                        <label>\n                            confirmer mot de passe\n                            <input\n                                className=\"input-forms\"\n                                value={this.state.passwordConfirm}\n                                onChange={(evt) =>\n                                    this.setState({\n                                        confirmPassword: evt.target.value,\n                                    })\n                                }\n                                type=\"password\"\n                            />\n                        </label>\n                    </form>\n                    <label className=\"errors-signup\">{this.displayErrors()}</label>\n                    <div className=\"button-signup\" onClick={this.handleSubmit}>\n                        <ButtonSignup />\n                    </div>\n                </div>\n            </React.Fragment>\n        );\n    }\n}\nexport default Signup;\n","import React from \"react\";\n\nfunction ButtonSignin() {\n  return (\n  <div>\n    Me connecter\n  </div>\n  );\n}\n\nexport default ButtonSignin;","import React, { Component } from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport ButtonSignin from \"../components/Button/ButtonSignin\";\nimport fruits from \"../assets/images/fruits-vegetables-basket-by-oblik-studio.svg\";\nimport Header from \"../components/Header/Header\";\nimport blob from \"../assets/images/bitmap.png\";\nimport \"./Login.css\";\nimport { Link } from \"react-router-dom\";\nimport jwt from \"jsonwebtoken\";\n\nfunction validate(email, password) {\n    const errors = [];\n\n    if (email.length === 0) {\n        errors.push(<p>Saissez votre adresse e-mail</p>);\n    }\n    if (password.length === 0) {\n        errors.push(<p>Saissez votre mot de passe</p>);\n    }\n    return errors;\n}\n\nclass Signin extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            email: \"\",\n            password: \"\",\n            errors: [],\n            redirect: false,\n            loginSuccessful: null,\n        };\n    }\n\n    handleSubmit = (e) => {\n        e.preventDefault();\n        const { email, password } = this.state;\n        const errors = validate(email, password);\n        //console.log(email, password, errors);\n        this.setState({ errors });\n        if (errors.length === 0) {\n            this.Connect();\n        }\n    };\n\n    componentDidMount = () => {\n        this.Verify();\n    };\n\n    Verify = () => {\n        let isExpired = true;\n        const token = localStorage.getItem(\"token\");\n        if (token) {\n            var decodedToken = jwt.decode(token, { complete: true });\n            var dateNow = new Date();\n            if (decodedToken.payload.exp >= dateNow.getTime() / 1000) {\n                isExpired = false;\n            }\n        }\n        if (isExpired === false) {\n            this.setState({ redirect: true }); // redirection vers la page login\n        }\n    };\n\n    Connect = () => {\n        fetch(`https://api.lowympact.fr/api/v1/users/login`, {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n                \"api-key\": \"99d8fb95-abdd-4885-bf6c-3a81d8874043\",\n\n                //'x-access-token': localStorage.getItem('token'),\n            },\n            body: JSON.stringify({\n                email: this.state.email,\n                password: this.state.password,\n            }),\n        })\n            .then((response) => response.json())\n            .then((data) => {\n                //console.log(data);\n                if (data.error === \"No user found\") {\n                    this.setState({ loginSuccessful: false });\n                    let err = this.state.errors;\n                    err.push(<p>Utilisateur Inconnu</p>);\n                    this.setState({ errors: err });\n                } else if (data.error === \"Incorrect password\" || !data.success) {\n                    this.setState({ loginSuccessful: false });\n                    let err = this.state.errors;\n                    err.push(<p>Mot de passe Incorrect</p>);\n                    this.setState({ errors: err });\n                } else {\n                    // console.log(data);\n                    localStorage.setItem(\"token\", data.token);\n                    localStorage.setItem(\"userId\", data._id);\n                    this.setState({ loginSuccessful: true, redirect: true });\n                    //this.props.history.goBack();\t// a ajouter pour être redirigé vers la page initialement\n                    // demandée. On doit cependant rediriger si la page demandée\n                    // était la page de login\n                }\n            });\n    };\n\n    onPasswordChange = () => {\n        this.setState({\n            password: this.passwordInput.value,\n            email: this.emailInput.value,\n        });\n    };\n\n    render() {\n        if (this.state.redirect) {\n            return <Redirect to=\"/history\" />;\n        }\n        return (\n            <React.Fragment>\n                <Link to=\"/login\">\n                    <Header />\n                </Link>\n                <div className=\"logo-fruits\">\n                    <img src={fruits} className=\"logo\" alt=\"Fruits\" />\n                </div>\n\n                <Link className=\"back-button\" to=\"/login\">\n                    {\"< Retour\"}\n                </Link>\n                <div className=\"signin-container\">\n                    <form className=\"forms\">\n                        <label>\n                            email\n                            <input\n                                className=\"input-forms\"\n                                value={this.state.email}\n                                onChange={this.onPasswordChange}\n                                ref={(ref) => (this.emailInput = ref)}\n                                type=\"email\"\n                            />\n                        </label>\n                        <label>\n                            mot de passe\n                            <input\n                                className=\"input-forms\"\n                                value={this.state.password}\n                                onChange={this.onPasswordChange}\n                                ref={(ref) => (this.passwordInput = ref)}\n                                type=\"password\"\n                            />\n                        </label>\n                    </form>\n                    <label className=\"errors-signin\">{this.state.errors}</label>\n                    <div className=\"button-signin\" onClick={this.handleSubmit}>\n                        <ButtonSignin />\n                    </div>\n                </div>\n            </React.Fragment>\n        );\n    }\n}\nexport default Signin;\n","import React from \"react\";\n\nfunction ButtonChangePassword() {\n  return (\n  <div>\n    Changer mot de passe\n  </div>\n  );\n}\n\nexport default ButtonChangePassword;","export const USERS =\n    {\n        id: 0,\n        email: \"bububu@bababa.com\",\n        password: \"123456\"\n    };","import React, { Component } from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport ButtonChangePassword from \"../components/Button/ButtonChangePassword\";\nimport fruits from \"../assets/images/fruits-vegetables-basket-by-oblik-studio.svg\";\nimport Header from \"../components/Header/Header\";\nimport Navbar from \"../components/Navbar/Navbar\";\nimport \"./ProfileConfiguration.css\";\nimport { USERS } from \"../assets/users/users\";\nimport jwt from \"jsonwebtoken\";\nimport { Link } from \"react-router-dom\";\n\nfunction validate(newPassword, confirmPassword) {\n    const errors = [];\n    if (newPassword.length < 6) {\n        errors.push(<p>Entre un mot de passe. 6 caractères minimum requis</p>);\n    }\n    if (newPassword !== confirmPassword) {\n        errors.push(<p>Les mots de passe ne correspondent pas</p>);\n    }\n    return errors;\n}\n\nclass ProfileConfiguration extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            user: USERS,\n            currentPassword: \"\",\n            newPassword: \"\",\n            confirmPassword: \"\",\n            errors: [],\n            redirect: false,\n        };\n    }\n\n    handleChange = (e) => {\n        e.preventDefault();\n        const { currentPassword, newPassword, confirmPassword } = this.state;\n        const errors = validate(newPassword, confirmPassword);\n        console.log(this.state.user.email, currentPassword, newPassword, confirmPassword, errors);\n        this.setState({ errors });\n        if (errors.length === 0) {\n            this.changeUserInfo(this.state.user._id, currentPassword, newPassword);\n        }\n    };\n\n    changeUserInfo = (userId, currentPassword, newPassword) => {\n        console.log(\"hey\");\n        fetch(\n            `https://api.lowympact.fr/api/v1/users/${userId}`,\n            // `http://localhost:8080/api/v1/users/login`,\n            {\n                method: \"PUT\",\n                headers: {\n                    \"Content-Type\": \"application/json\",\n                    \"api-key\": \"99d8fb95-abdd-4885-bf6c-3a81d8874043\",\n                    authorization: localStorage.getItem(\"token\"),\n                },\n                body: JSON.stringify({\n                    currentPassword: currentPassword,\n                    newPassword: newPassword,\n                }),\n            }\n        )\n            .then((response) => response.json())\n            .then((res) => {\n                console.log(res);\n                if (res.success === false) {\n                    this.setState({\n                        errors: [...this.state.errors, res.error],\n                    });\n                } else {\n                    this.setState({ redirect: true });\n                }\n            });\n    };\n\n    Verify = () => {\n        let isExpired = true;\n        const token = localStorage.getItem(\"token\");\n        if (token) {\n            var decodedToken = jwt.decode(token, { complete: true });\n            var dateNow = new Date();\n            if (decodedToken.payload.exp >= dateNow.getTime() / 1000) {\n                isExpired = false;\n            }\n        }\n        if (isExpired === true) {\n            this.setState({ redirect: true }); // redirection vers la page login\n        }\n    };\n\n    componentDidMount = () => {\n        this.Verify();\n        let userId = localStorage.getItem(\"userId\");\n        if (userId) {\n            this.loadUserInfo(userId);\n        }\n    };\n\n    loadUserInfo = (userId) => {\n        fetch(\n            `https://api.lowympact.fr/api/v1/users/${userId}`,\n            // `http://localhost:8080/api/v1/users/login`,\n            {\n                method: \"GET\",\n                headers: {\n                    \"Content-Type\": \"application/json\",\n                    \"api-key\": \"99d8fb95-abdd-4885-bf6c-3a81d8874043\",\n                    authorization: localStorage.getItem(\"token\"),\n                },\n            }\n        )\n            .then((response) => response.json())\n            .then((res) => {\n                console.log(res);\n\n                this.setState({ user: res.data });\n            });\n    };\n\n    render() {\n        if (this.state.redirect) {\n            return <Redirect to=\"/profil\" />;\n        }\n        console.log(this.state.redirect);\n        return (\n            <div className=\"screen\">\n                <Link to=\"/\">\n                    <Header />\n                </Link>\n                <Navbar />\n                <div className=\"logo-fruits\">\n                    <img src={fruits} className=\"logo\" alt=\"Fruits\" />\n                </div>\n                <Link className=\"back-button\" to=\"/profil\">\n                    {\"< Retour\"}\n                </Link>\n                <div className=\"configuration-screen-title\"></div>\n                <div className=\"errors-change-password\">{this.state.errors}</div>\n                <div className=\"configuration-container\">\n                    <div className=\"configuration-email-block\">\n                        <div>email</div>\n                        <div>{this.state.user.email}</div>\n                    </div>\n                    <form className=\"configuration-form\">\n                        <label>\n                            {/* Mot de passe actuel */}\n                            <input\n                                placeholder=\"mot de passe actuel\"\n                                className=\"input-forms\"\n                                value={this.state.currentPassword}\n                                onChange={(evt) =>\n                                    this.setState({\n                                        currentPassword: evt.target.value,\n                                    })\n                                }\n                                type=\"password\"\n                            />\n                        </label>\n                        <label>\n                            {/* Nouveau mot de passe */}\n                            <input\n                                value={this.state.newPassword}\n                                className=\"input-forms\"\n                                onChange={(evt) =>\n                                    this.setState({\n                                        newPassword: evt.target.value,\n                                    })\n                                }\n                                type=\"password\"\n                                placeholder=\"nouveau mot de passe\"\n                            />\n                        </label>\n                        <label>\n                            {/* Confirmation de mot de passe */}\n                            <input\n                                placeholder=\"confirmation de mdp\"\n                                className=\"input-forms\"\n                                value={this.state.confirmPassword}\n                                onChange={(evt) =>\n                                    this.setState({\n                                        confirmPassword: evt.target.value,\n                                    })\n                                }\n                                type=\"password\"\n                            />\n                        </label>\n                        <Link className=\"button-change-password\" onClick={this.handleChange} to=\"\">\n                            <ButtonChangePassword />\n                        </Link>\n                    </form>\n                </div>\n            </div>\n        );\n    }\n}\nexport default ProfileConfiguration;\n","import React from \"react\";\nimport { Swiper, SwiperSlide } from \"swiper/react\";\n// Import Swiper styles\nimport \"swiper/swiper-bundle.css\";\n\n//Import Pie Chart\nimport { PieChart } from \"react-minimal-pie-chart\";\n\nimport fruits from \"../../assets/images/fruits-vegetables-basket-by-oblik-studio.svg\";\nimport { motion } from \"framer-motion\";\n\nclass DoughnutChartEcoScore extends React.Component {\n    state = {\n        swiper: undefined,\n        selectedSegment: undefined,\n    };\n\n    displayChart = () => {\n        let chart = <React.Fragment></React.Fragment>;\n        if (this.props.ecoScoreData && this.props.cartedProduct > 0) {\n            let data = [\n                {\n                    title: \"EcoScore A\",\n                    value: this.props.ecoScoreData.a,\n                    color: \"#1e8f4f\",\n                },\n                {\n                    title: \"EcoScore B\",\n                    value: this.props.ecoScoreData.b,\n                    color: \"#5fad0c\",\n                },\n                {\n                    title: \"EcoScore C\",\n                    value: this.props.ecoScoreData.c,\n                    color: \"#ecb10f\",\n                },\n                {\n                    title: \"EcoScore D\",\n                    value: this.props.ecoScoreData.d,\n                    color: \"#ff6f1e\",\n                },\n                {\n                    title: \"EcoScore E\",\n                    value: this.props.ecoScoreData.e,\n                    color: \"#df1e1f\",\n                },\n                {\n                    title: \"EcoScore Inconnu\",\n                    value: this.props.ecoScoreData.unknown,\n                    color: \"#000000\",\n                },\n            ];\n            chart = (\n                <PieChart\n                    data={data}\n                    lineWidth={30}\n                    paddingAngle={1}\n                    radius={PieChart.defaultProps.radius - 3}\n                    animate\n                    animationDuration={700}\n                    label={({ dataEntry }) => `${Math.round(dataEntry.percentage)}%`}\n                    labelStyle={(index) =>\n                        index === this.state.selectedSegment\n                            ? {\n                                  fontSize: \"6px\",\n                                  fontFamily: \"comfortaa\",\n                                  fill: data[index].color,\n                              }\n                            : {\n                                  fontSize: \"0px\",\n                                  fontFamily: \"comfortaa\",\n                                  fill: data[index].color,\n                              }\n                    }\n                    labelPosition={60}\n                    segmentsStyle={{\n                        transition: \"stroke .3s ease-out\",\n                        cursor: \"pointer\",\n                    }}\n                    segmentsShift={(index) => (index === this.state.selectedSegment ? 3 : 0)}\n                    onClick={(event, index) => {\n                        if (index === this.state.selectedSegment) {\n                            this.setState({ selectedSegment: undefined });\n                            this.state.swiper.slideTo(0, 500);\n                        } else {\n                            this.setState({ selectedSegment: index });\n                            this.state.swiper.slideTo(index + 1, 500);\n                        }\n                    }}\n                />\n            );\n        } else {\n            chart = (\n                <motion.div\n                    className=\"stats-no-product\"\n                    initial={{ opacity: 0 }}\n                    animate={{ opacity: 1 }}\n                    exit={{ opacity: 0 }}\n                >\n                    <div>\n                        <img src={fruits} className=\"logo\" alt=\"Fruits\" />\n                        <p className=\"logo-text\">Commence à scanner des produits !</p>\n                    </div>\n                </motion.div>\n            );\n        }\n        return chart;\n    };\n\n    onSlideChange = (index) => {\n        if (index === 0) {\n            this.setState({ selectedSegment: undefined });\n        } else {\n            this.setState({ selectedSegment: index - 1 });\n        }\n    };\n\n    displaySlides = () => {\n        let slides = <React.Fragment></React.Fragment>;\n        if (this.props.ecoScoreData && this.props.cartedProduct > 0) {\n            slides = (\n                <React.Fragment>\n                    <SwiperSlide>\n                        <div className=\"stats-slider\">\n                            <img\n                                className=\"stats-ecoscore-full\"\n                                src=\"/images/utils/ecoScoreFull.png\"\n                                alt=\"\"\n                            />\n                        </div>\n                    </SwiperSlide>\n                    <SwiperSlide>\n                        <div className=\"stats-slider\">\n                            <span className=\"stats-slider-text\">\n                                {\">\"} EcoScore A : {this.props.ecoScoreData.a}{\" \"}\n                                {this.props.ecoScoreData.a > 1 ? \" produits\" : \" produit\"}\n                            </span>\n                            <img\n                                className=\"stats-ecoscore-image\"\n                                src=\"/images/utils/ecoScoreA.png\"\n                                alt=\"\"\n                            />\n                        </div>\n                    </SwiperSlide>\n                    <SwiperSlide>\n                        <div className=\"stats-slider\">\n                            <span className=\"stats-slider-text\">\n                                {\">\"} EcoScore B : {this.props.ecoScoreData.b}{\" \"}\n                                {this.props.ecoScoreData.b > 1 ? \" produits\" : \" produit\"}\n                            </span>\n                            <img\n                                className=\"stats-ecoscore-image\"\n                                src=\"/images/utils/ecoScoreB.png\"\n                                alt=\"\"\n                            />\n                        </div>\n                    </SwiperSlide>\n                    <SwiperSlide>\n                        <div className=\"stats-slider\">\n                            <span className=\"stats-slider-text\">\n                                {\">\"} EcoScore C : {this.props.ecoScoreData.c}{\" \"}\n                                {this.props.ecoScoreData.c > 1 ? \" produits\" : \" produit\"}\n                            </span>\n                            <img\n                                className=\"stats-ecoscore-image\"\n                                src=\"/images/utils/ecoScoreC.png\"\n                                alt=\"\"\n                            />\n                        </div>\n                    </SwiperSlide>\n                    <SwiperSlide>\n                        <div className=\"stats-slider\">\n                            <span className=\"stats-slider-text\">\n                                {\">\"} EcoScore D : {this.props.ecoScoreData.d}{\" \"}\n                                {this.props.ecoScoreData.d > 1 ? \" produits\" : \" produit\"}\n                            </span>\n                            <img\n                                className=\"stats-ecoscore-image\"\n                                src=\"/images/utils/ecoScoreD.png\"\n                                alt=\"\"\n                            />\n                        </div>\n                    </SwiperSlide>\n                    <SwiperSlide>\n                        <div className=\"stats-slider\">\n                            <span className=\"stats-slider-text\">\n                                {\">\"} EcoScore E : {this.props.ecoScoreData.e}{\" \"}\n                                {this.props.ecoScoreData.e > 1 ? \" produits\" : \" produit\"}\n                            </span>\n                            <img\n                                className=\"stats-ecoscore-image\"\n                                src=\"/images/utils/ecoScoreE.png\"\n                                alt=\"\"\n                            />\n                        </div>\n                    </SwiperSlide>\n                    <SwiperSlide>\n                        <div className=\"stats-slider\">\n                            <span className=\"stats-slider-text\">\n                                {\">\"} EcoScore Inconnu : {this.props.ecoScoreData.unknown}{\" \"}\n                                {this.props.ecoScoreData.unknown > 1 ? \" produits\" : \" produit\"}\n                            </span>\n                        </div>\n                    </SwiperSlide>\n                </React.Fragment>\n            );\n        }\n        return slides;\n    };\n\n    render = () => {\n        return (\n            <React.Fragment>\n                <div className=\"stats-chart-pie\">{this.displayChart()}</div>\n                <div className=\"stats-chart-slider\">\n                    <Swiper\n                        spaceBetween={0}\n                        slidesPerView={1}\n                        centeredSlides={true}\n                        onSlideChange={(i) => this.onSlideChange(i.activeIndex)}\n                        onSwiper={(swiper) => this.setState({ swiper: swiper })}\n                    >\n                        {this.displaySlides()}\n                    </Swiper>\n                </div>\n            </React.Fragment>\n        );\n    };\n}\n\nexport default DoughnutChartEcoScore;\n","import React from \"react\";\nimport { Swiper, SwiperSlide } from \"swiper/react\";\n// Import Swiper styles\nimport \"swiper/swiper-bundle.css\";\n\n//Import Bar Chart\nimport Chart from \"react-apexcharts\";\n\nimport fruits from \"../../assets/images/fruits-vegetables-basket-by-oblik-studio.svg\";\nimport { motion } from \"framer-motion\";\n\nconst monthNames = [\n    \"Janvier\",\n    \"Février\",\n    \"Mars\",\n    \"Avril\",\n    \"Mai\",\n    \"Juin\",\n    \"Juillet\",\n    \"Août\",\n    \"Septembre\",\n    \"Octobre\",\n    \"Novembre\",\n    \"Décembre\",\n];\n\nclass BarChartCarbonImpact extends React.Component {\n    state = {\n        selectedSegment: 0,\n        options: {\n            chart: {\n                toolbar: {\n                    show: false,\n                },\n                dropShadow: {\n                    enabled: true,\n                    top: 0,\n                    left: 0,\n                    blur: 2,\n                    opacity: 0.5,\n                },\n            },\n            plotOptions: {\n                bar: {\n                    borderRadius: 5,\n                    horizontal: true,\n                },\n            },\n            xaxis: {\n                categories: [\"Janvier\", \"Février\", \"Mars\", \"Avril\", \"Mai\"],\n                labels: {\n                    style: {\n                        fontSize: \"12px\",\n                        fontFamily: \"Comfortaa\",\n                        fontColor: \"#1b3044\",\n                    },\n                },\n                title: {\n                    text: \"CO₂ équivalent (kg)\",\n                    style: {\n                        fontSize: \"12px\",\n                        fontFamily: \"Comfortaa\",\n                        fontColor: \"#1b3044\",\n                    },\n                },\n            },\n            yaxis: {\n                labels: {\n                    style: {\n                        fontSize: \"12px\",\n                        fontFamily: \"Comfortaa\",\n                        fontColor: \"#1b3044\",\n                    },\n                },\n            },\n            dataLabels: {\n                enabled: true,\n                style: {\n                    fontSize: \"10px\",\n                    fontFamily: \"Comfortaa\",\n                },\n            },\n            noData: {\n                text: \"Chargement...\",\n            },\n            fill: {\n                colors: [\"#ff914d\"],\n            },\n            grid: {\n                xaxis: {\n                    lines: {\n                        show: true,\n                    },\n                },\n                yaxis: {\n                    lines: {\n                        show: false,\n                    },\n                },\n            },\n        },\n    };\n\n    displayChart = () => {\n        let chart = <React.Fragment></React.Fragment>;\n        if (this.props.carbonImpactData && this.props.cartedProduct > 0) {\n            let dataSize = this.props.carbonImpactData.data.length;\n            let xaxis = [];\n            let now;\n\n            switch (this.props.carbonImpactData.unit) {\n                case \"weekly\":\n                    let d = new Date();\n                    d.setHours(0, 0, 0, 0);\n                    d.setDate(d.getDate() + 4 - (d.getDay() || 7));\n                    let yearStart = new Date(d.getFullYear(), 0, 1);\n                    now = Math.ceil(((d - yearStart) / 86400000 + 1) / 7);\n                    for (let i = dataSize - 1; i >= 0; i--) {\n                        xaxis.push(\"Semaine \" + (now - i));\n                    }\n                    break;\n                case \"monthly\":\n                    now = new Date().getMonth();\n                    let year = new Date().getFullYear();\n                    for (let i = dataSize - 1; i >= 0; i--) {\n                        let monthNum = now - i;\n                        if (monthNum < 0) {\n                            xaxis.push(monthNames[monthNum + 12] + \" \" + (year - 1));\n                        } else {\n                            xaxis.push(monthNames[monthNum] + \" \" + year);\n                        }\n                    }\n                    break;\n                case \"yearly\":\n                    now = new Date().getFullYear();\n                    for (let i = dataSize - 1; i >= 0; i--) {\n                        xaxis.push((now - i).toString());\n                    }\n                    break;\n            }\n\n            this.state.options.xaxis.categories = xaxis;\n\n            let series = [\n                {\n                    name: \"CO₂ équivalent (kg)\",\n                    data: [],\n                },\n            ];\n\n            let sortedData = this.props.carbonImpactData.data;\n            console.log(sortedData);\n            sortedData.sort((a, b) => (a.offset > b.offset ? 1 : -1));\n            console.log(sortedData);\n\n            for (let i = 0; i < sortedData.length; i++) {\n                let finalValue =\n                    this.state.selectedSegment === 0\n                        ? sortedData[i].impact.toFixed(2)\n                        : (sortedData[i].impact / sortedData[i].nbProducts).toFixed(2);\n                series[0].data.push(finalValue);\n            }\n\n            chart = (\n                <React.Fragment>\n                    <div className=\"stats-chart-bar\">\n                        <Chart\n                            options={this.state.options}\n                            series={series}\n                            type=\"bar\"\n                            height={350}\n                        ></Chart>\n                    </div>\n                </React.Fragment>\n            );\n        } else {\n            chart = (\n                <motion.div\n                    className=\"stats-no-product\"\n                    initial={{ opacity: 0 }}\n                    animate={{ opacity: 1 }}\n                    exit={{ opacity: 0 }}\n                >\n                    <div>\n                        <img src={fruits} className=\"logo\" alt=\"Fruits\" />\n                        <p className=\"logo-text\">Commence à scanner des produits !</p>\n                    </div>\n                </motion.div>\n            );\n        }\n        return chart;\n    };\n\n    onSlideChange = (index) => {\n        this.setState({ selectedSegment: this.state.selectedSegment === 0 ? 1 : 0 });\n    };\n\n    displaySlides = () => {\n        let slides = <React.Fragment></React.Fragment>;\n        if (this.props.carbonImpactData && this.props.cartedProduct > 0) {\n            slides = (\n                <React.Fragment>\n                    <SwiperSlide>\n                        <div className=\"stats-slider\">\n                            <span className=\"stats-slider-text\">{\">\"} Impact Carbone total</span>\n                        </div>\n                    </SwiperSlide>\n                    <SwiperSlide>\n                        <div className=\"stats-slider\">\n                            <span className=\"stats-slider-text\">\n                                {\">\"} Impact Carbone par produit\n                            </span>\n                        </div>\n                    </SwiperSlide>\n                </React.Fragment>\n            );\n        }\n        return slides;\n    };\n\n    render = () => {\n        return (\n            <React.Fragment>\n                {this.displayChart()}\n                <div className=\"stats-chart-slider\">\n                    <Swiper\n                        spaceBetween={0}\n                        slidesPerView={1}\n                        centeredSlides={true}\n                        onSlideChange={(i) => this.onSlideChange(i.activeIndex)}\n                        onSwiper={(swiper) => this.setState({ swiper: swiper })}\n                    >\n                        {this.displaySlides()}\n                    </Swiper>\n                </div>\n            </React.Fragment>\n        );\n    };\n}\n\nexport default BarChartCarbonImpact;\n","import React from \"react\";\nimport Navbar from \"../components/Navbar/Navbar\";\nimport DoughnutChartEcoScore from \"../components/Charts/DoughnutChartEcoScore\";\nimport BarChartCarbonImpact from \"../components/Charts/BarChartCarbonImpact\";\nimport \"./Product.css\";\nimport { Link } from \"react-router-dom\";\nimport jwt from \"jsonwebtoken\";\n\nclass Statistics extends React.Component {\n    state = {\n        ecoScoreData: undefined,\n        carbonImpactData: undefined,\n        username: undefined,\n        scannedProduct: undefined,\n        cartedProduct: undefined,\n        userId: undefined,\n        value: 0,\n    };\n\n    Verify = () => {\n        let isExpired = true;\n        const token = localStorage.getItem(\"token\");\n        if (token) {\n            var decodedToken = jwt.decode(token, { complete: true });\n            var dateNow = new Date();\n            if (decodedToken.payload.exp >= dateNow.getTime() / 1000) {\n                isExpired = false;\n            }\n        }\n        if (isExpired === false) {\n            this.setState({ connected: true });\n        }\n    };\n\n    componentDidMount = () => {\n        this.Verify();\n        let userId = localStorage.getItem(\"userId\");\n        if (userId) {\n            this.setState({ userId: userId });\n        }\n        this.loadUserData(userId);\n        this.loadEcoScoreData(userId, \"fromBeginning\");\n        this.loadCarbonImpactData(userId, \"fromBeginning\");\n    };\n\n    loadUserData = (userId) => {\n        fetch(\n            `https://api.lowympact.fr/api/v1/users/${userId}`,\n            // `http://localhost:8080/api/v1/users/${userId}`,\n            {\n                method: \"get\",\n                credentials: \"include\",\n                headers: new Headers({\n                    authorization: localStorage.getItem(\"token\"),\n                    \"api-key\": \"99d8fb95-abdd-4885-bf6c-3a81d8874043\",\n                    \"Content-Type\": \"application/json\",\n                }),\n            }\n        )\n            .then((response) => response.json())\n            .then((res) => {\n                console.log(res);\n                this.setState({\n                    username: res?.data?.username,\n                    scannedProduct: res?.scannedProduct,\n                    cartedProduct: res?.cartedProduct,\n                });\n            });\n    };\n\n    loadEcoScoreData = (userId, typeAggregate) => {\n        fetch(\n            `https://api.lowympact.fr/api/v1/users/${userId}/statistics?typeStatistic=ecoscore&typeAggregate=${typeAggregate}`,\n            // `http://localhost:8080/api/v1/users/${userId}/statistics?typeStatistic=ecoscore&typeAggregate=${typeAggregate}`,\n            {\n                method: \"get\",\n                credentials: \"include\",\n                headers: new Headers({\n                    authorization: localStorage.getItem(\"token\"),\n                    \"api-key\": \"99d8fb95-abdd-4885-bf6c-3a81d8874043\",\n                    \"Content-Type\": \"application/json\",\n                }),\n            }\n        )\n            .then((response) => response.json())\n            .then((res) => {\n                console.log(res);\n                this.setState({\n                    ecoScoreData: res?.statistics?.ecoscore,\n                });\n            });\n    };\n\n    loadCarbonImpactData = (userId, typeAggregate) => {\n        fetch(\n            `https://api.lowympact.fr/api/v1/users/${userId}/statistics?typeStatistic=carbonImpact&typeAggregate=${typeAggregate}`,\n            // `http://localhost:8080/api/v1/users/${userId}/statistics?typeStatistic=carbonImpact&typeAggregate=${typeAggregate}`,\n            {\n                method: \"get\",\n                credentials: \"include\",\n                headers: new Headers({\n                    authorization: localStorage.getItem(\"token\"),\n                    \"api-key\": \"99d8fb95-abdd-4885-bf6c-3a81d8874043\",\n                    \"Content-Type\": \"application/json\",\n                }),\n            }\n        )\n            .then((response) => response.json())\n            .then((res) => {\n                console.log(res);\n                this.setState({\n                    carbonImpactData: res?.statistics?.carbonImpact,\n                });\n            });\n    };\n\n    displayStats = () => {\n        let scannedProduct = <React.Fragment />;\n        let cartedProduct = <React.Fragment />;\n\n        if (this.state.scannedProduct !== undefined) {\n            scannedProduct = (\n                <div className=\"stats-header-text\">\n                    <span className={\"circle-stats color_score_stats\"}>⬤ </span>\n                    {this.state.scannedProduct > 1 ? \"Produits scannés :\" : \"Produit scanné :\"}\n                    <span className=\"uppercase \"> {this.state.scannedProduct}</span>\n                </div>\n            );\n        }\n\n        if (this.state.cartedProduct !== undefined) {\n            cartedProduct = (\n                <div className=\"stats-header-text\">\n                    <span className={\"circle-stats color_score_stats\"}>⬤ </span>\n                    {this.state.cartedProduct > 1 ? \"Produits achetés :\" : \"Produit acheté :\"}\n                    <span className=\"uppercase \"> {this.state.cartedProduct}</span>\n                </div>\n            );\n        }\n\n        return (\n            <React.Fragment>\n                {scannedProduct}\n                {cartedProduct}\n            </React.Fragment>\n        );\n    };\n\n    handleChange = (event, newValue) => {\n        this.setState({ value: newValue });\n    };\n\n    displayNavbar = () => {\n        let retour = (\n            <div className=\"stats-navbar-container\">\n                <button\n                    className={\n                        this.state.value === 0\n                            ? \"stats-navbar-button selected\"\n                            : \"stats-navbar-button\"\n                    }\n                    onClick={() => this.handleChange(\"\", 0)}\n                >\n                    EcoScore\n                </button>\n                <button\n                    className={\n                        this.state.value === 1\n                            ? \"stats-navbar-button selected\"\n                            : \"stats-navbar-button\"\n                    }\n                    onClick={() => this.handleChange(\"\", 1)}\n                >\n                    Impact Carbone\n                </button>\n                <div\n                    className={\n                        this.state.value === 0 ? \"navbar-under nav-left\" : \"navbar-under nav-right\"\n                    }\n                ></div>\n            </div>\n        );\n        return retour;\n    };\n\n    render = () => {\n        return (\n            <React.Fragment>\n                <div className=\"stats-page-container\">\n                    <div className=\"stats-header-container\">\n                        <div className=\"stats-profil-link\">\n                            <Link to=\"/profil\"> {\"<\"} Profil</Link>\n                        </div>\n                        <img className=\"stats-bitmap-image\" src=\"/images/utils/bitmap.png\" alt=\"\" />\n                    </div>\n\n                    <div className=\"stats-welcome\">\n                        <span className=\"stats-welcome-text\">\n                            {this.state.username\n                                ? this.state.username + \", voici ton récapitulatif Lowympact...\"\n                                : \"\"}\n                        </span>\n                    </div>\n\n                    <div className=\"stats-text-container\">{this.displayStats()}</div>\n\n                    {this.displayNavbar()}\n\n                    {this.state.value === 0 ? (\n                        <DoughnutChartEcoScore\n                            ecoScoreData={this.state.ecoScoreData}\n                            scannedProduct={this.state.scannedProduct}\n                            cartedProduct={this.state.cartedProduct}\n                        ></DoughnutChartEcoScore>\n                    ) : (\n                        <BarChartCarbonImpact\n                            carbonImpactData={this.state.carbonImpactData}\n                            scannedProduct={this.state.scannedProduct}\n                            cartedProduct={this.state.cartedProduct}\n                        ></BarChartCarbonImpact>\n                    )}\n\n                    <Navbar />\n                </div>\n            </React.Fragment>\n        );\n    };\n}\n\nexport default Statistics;\n\nconst delay = (ms) => new Promise((res) => setTimeout(res, ms));\n","import React, { Component } from \"react\";\nimport { BrowserRouter as Router, Route, Redirect, Switch } from \"react-router-dom\";\nimport { AnimatePresence } from \"framer-motion\";\n\nimport \"./App.css\";\nimport History from \"./pages/History\";\nimport Error404 from \"./pages/Error404\";\nimport Login from \"./pages/Login\";\nimport Product from \"./pages/Product\";\nimport Profil from \"./pages/Profil\";\nimport Signup from \"./pages/Signup\";\nimport Signin from \"./pages/Signin\";\nimport ProfileConfiguration from \"./pages/ProfileConfiguration\";\nimport Statistics from \"./pages/Statistics\";\nimport Scan_home from \"./components/Test/Scan_home\";\n\nclass App extends Component {\n    render() {\n        return (\n            <Router>\n                <AnimatePresence exitBeforeEnter={true}>\n                    <Switch>\n                        {/* Front Pages */}\n                        <Route path=\"/history\" component={History} exact key={1} />\n                        <Route path=\"/profil\" component={Profil} exact key={2} />\n                        <Route path=\"/login\" component={Login} exact />\n                        <Route path=\"/\" component={Login} exact key={1} />\n                        <Route path=\"/products/:barcode/:bcProductId\" component={Product} exact />\n                        <Route path=\"/products/:barcode\" component={Product} exact />\n                        <Route path=\"/signup\" component={Signup} exact />\n                        <Route path=\"/signin\" component={Signin} exact />\n                        <Route path=\"/configuration\" component={ProfileConfiguration} exact />\n                        <Route path=\"/stats\" component={Statistics} exact />\n                        <Route path=\"/test\" component={Scan_home} exact />\n                        {/* Errors Pages */}\n                        <Route path=\"/error404\" component={Error404} />\n                        <Redirect to=\"/error404\" />\n                        {/* <Route path=\"/MAINTENANCE\" component={ Maintenance } /> */}\n                    </Switch>\n                </AnimatePresence>\n                {/* </Suspense> */}\n            </Router>\n        );\n    }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}