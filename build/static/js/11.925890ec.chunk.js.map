{"version":3,"sources":["components/Traceability/leaflet-curve/leaflet.curve.js","components/Traceability/leaflet-curve/Curve.js","components/Traceability/Traceability.js","components/Environnement/Alternatives.js","components/Environnement/Origins.js","components/Environnement/EmpreinteCarbone.js","components/Environnement/Environnement.js","pages/Product.js","components/Button/ButtonHistory.js","components/Button/ButtonProfil.js","components/Button/ButtonScan.js","components/Scan/Scanner.js","components/Scan/Scan.js","components/Navbar/Navbar.js"],"names":["L","Curve","Path","extend","options","initialize","path","setOptions","this","_initialUpdate","_setPath","getPath","_coords","setPath","redraw","getBounds","_bounds","_computeBounds","lastPoint","lastCommand","coord","bound","LatLngBounds","i","length","String","lat","latLng","lng","controlPoint1","controlPoint2","endPoint","diffLat","diffLng","controlPoint","getCenter","_update","_map","_updatePath","_renderer","_updatecurve","_project","lastCoord","curCommand","curPoint","_points","push","latLngToLayerPoint","curve","SVG","include","layer","_curvePointsToPath","animate","_path","getTotalLength","dashArray","style","strokeDasharray","strokeDashoffset","points","point","str","x","y","props","positions","option","getOptions","fromProps","toProps","leafletElement","setStyleIfChanged","propTypes","children","PropTypes","oneOfType","arrayOf","node","object","array","isRequired","withLeaflet","Traceability","map","undefined","state","zoom","swiper","currentIndex","getMaterialIcon","mode","getTransportMode","getTranslation","displaySlides","slides","Fragment","products","product","pastille","TransportCO2Impact","value","className","transport","productsOutput","productName","seller","localisation","city","country","type","name","buyer","Math","round","dist","handleMarkerClick","latlng","index","elem","document","getElementsByClassName","scrollIntoView","behavior","slideTo","p","getZoomRatio","latitude","longitude","flyTo","duration","onSlideChange","setState","parseFloat","long","displayMarker","markers","icon","icon2","marker1","lat1","long1","marker2","lat2","long2","zIndex","Icon","iconUrl","iconRetinaUrl","iconSize","Point","Marker","zIndexOffset","position","onClick","curves","setAttribute","getCurveOptions","color","fill","delay","render","totalCO2Traceability","toFixed","Map","center","minZoom","scrollWheelZoom","dragging","maxBounds","maxBoundsViscosity","ref","getBottomRef","whenCreated","TileLayer","attribution","url","spaceBetween","slidesPerView","centeredSlides","activeIndex","onSwiper","React","Component","toRadian","degree","PI","origin","destination","distance","lon1","lon2","deltaLat","deltaLon","a","pow","sin","cos","asin","sqrt","getDistance","latlng1","latlng2","offsetX","offsetY","r","theta","atan2","r2","theta2","midpointX","Alternatives","componentDidMount","ecoScore","loadAlternatives","ciqual_code","componentDidUpdate","lastProps","code","alternatives","fetch","then","response","json","res","success","data","alternativesInfos","b","c","d","renderListAlternatives","listItems","item","pathProduct","id","barcode","href","src","img_url","alt","RenderColor","alternativesloop","tab","alternativesList","sort","eco_score","concat","console","log","alternatives_title","autoPlay","interval","centerMode","centerSlidePercentage","showThumbs","showIndicators","showStatus","labelColor","labelLevel","Origins","polygon","activeCountry","getCountries","setActiveCountry","origins","geo","coordinates","poly","Polygon","fillColor","opacity","EmpreinteCarbone","alea","setAlea","nb","dataEcoScore","agribalyse","co2_total","repartition","image","percent","co2_agriculture","co2_transportation","co2_packaging","co2_processing","co2_distribution","co2_consumption","equivalent","getEquivalent","circle","co2","Environnement","width","materials","getColor","note","getColorImpact","getLabel","getLabelImpact","getLabelImpactPackaging","getColorImpactPackaging","updateWindowDimensions","window","innerWidth","displayPackagingDetailImpact","adjustments","packaging","packagings","material","split","filter","pos","indexOf","separator","displayPackagingImpact","addEventListener","removeEventListener","Product","match","params","bcProductId","productImageUrl","genericName","connected","productData","userId","cart","countries","isFlipping","component","bottomComponent","Verify","localStorage","getItem","loadCartInfo","loadFromOpenFoodFacts","loadProductInformations","handleBarCodeUpdate","isExpired","token","decodedToken","jwt","decode","complete","dateNow","Date","payload","exp","getTime","method","credentials","headers","Headers","traceability","impact","transportCO2Impact","image_url","product_name","generic_name","ecoscore_grade","ecoscore_data","origins_hierarchy","status","saveHistory","Authorization","quantity","queryString","location","search","urlParams","URLSearchParams","get","history","JSON","parse","element","brand","brands","label","date","now","setItem","stringify","body","bcProductAddress","addToCart","ecoscore","flip","quantityDelta","carbonImpact","removeFromCart","event","imageFlip","transform","displayImage","scoreClass","handleChange","newValue","displayNavbar","retour","depth","to","displayTranportImpact","Navbar","ms","Promise","setTimeout","ButtonHistory","ButtonProfil","ButtonScan","Scanner","error","usedCamera","devices","switchCamera","num","Quagga","stop","QuaggaInit","deviceId","navigator","mediaDevices","enumerateDevices","videoDevices","forEach","device","kind","maxResolution","getUserMedia","video","exact","stream","getVideoTracks","track","capabilities","getCapabilities","height","max","usedCameraId","getTracks","err","init","inputStream","constraints","focusMode","min","aspectRatio","locator","patchSize","halfSample","locate","area","top","right","left","bottom","numOfWorkers","hardwareConcurrency","decoder","readers","debug","drawBoundingBox","showFrequency","drawScanline","showPattern","multiple","singleChannel","start","setQuagga","onDetected","_onDetected","result","offDetected","Scan","scanning","results","reading","quagga","_scan","codeResult","showScanner","handleScan","arr","handleError","displayQrCode","onError","onScan","showViewFinder","displayBarCode","switchReader","onChange","uncheckedIcon","checkedIcon","checked","onColor","offColor","innerHeight","handleScannerButton","bool","pathname"],"mappings":"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","file":"static/js/11.925890ec.chunk.js","sourcesContent":["import L from \"leaflet\";\n\nL.Curve = L.Path.extend({\n\toptions: {},\n\n\tinitialize: function (path, options) {\n\t\t//1\n\t\tL.setOptions(this, options);\n\t\tthis._initialUpdate = true;\n\t\tthis._setPath(path);\n\t},\n\n\tgetPath: function () {\n\t\treturn this._coords;\n\t},\n\n\tsetPath: function (path, options) {\n\t\tthis._initialUpdate = true;\n\t\tthis._setPath(path);\n\t\treturn this.redraw();\n\t},\n\n\tgetBounds: function () {\n\t\treturn this._bounds;\n\t},\n\n\t_setPath: function (path) {\n\t\t//2\n\t\tthis._coords = path;\n\t\tthis._bounds = this._computeBounds();\n\t},\n\n\t_computeBounds: function () {\n\t\t//3\n\t\tvar bound = new L.LatLngBounds();\n\t\tvar lastPoint;\n\t\tvar lastCommand;\n\t\tvar coord;\n\t\tfor (var i = 0; i < this._coords.length; i++) {\n\t\t\tcoord = this._coords[i];\n\t\t\tif (typeof coord == \"string\" || coord instanceof String) {\n\t\t\t\tlastCommand = coord;\n\t\t\t} else if (lastCommand == \"H\") {\n\t\t\t\tbound.extend([lastPoint.lat, coord[0]]);\n\t\t\t\tlastPoint = new L.latLng(lastPoint.lat, coord[0]);\n\t\t\t} else if (lastCommand == \"V\") {\n\t\t\t\tbound.extend([coord[0], lastPoint.lng]);\n\t\t\t\tlastPoint = new L.latLng(coord[0], lastPoint.lng);\n\t\t\t} else if (lastCommand == \"C\") {\n\t\t\t\tvar controlPoint1 = new L.latLng(coord[0], coord[1]);\n\t\t\t\tcoord = this._coords[++i];\n\t\t\t\tvar controlPoint2 = new L.latLng(coord[0], coord[1]);\n\t\t\t\tcoord = this._coords[++i];\n\t\t\t\tvar endPoint = new L.latLng(coord[0], coord[1]);\n\n\t\t\t\tbound.extend(controlPoint1);\n\t\t\t\tbound.extend(controlPoint2);\n\t\t\t\tbound.extend(endPoint);\n\n\t\t\t\tendPoint.controlPoint1 = controlPoint1;\n\t\t\t\tendPoint.controlPoint2 = controlPoint2;\n\t\t\t\tlastPoint = endPoint;\n\t\t\t} else if (lastCommand == \"S\") {\n\t\t\t\tvar controlPoint2 = new L.latLng(coord[0], coord[1]);\n\t\t\t\tcoord = this._coords[++i];\n\t\t\t\tvar endPoint = new L.latLng(coord[0], coord[1]);\n\n\t\t\t\tvar controlPoint1 = lastPoint;\n\t\t\t\tif (lastPoint.controlPoint2) {\n\t\t\t\t\tvar diffLat = lastPoint.lat - lastPoint.controlPoint2.lat;\n\t\t\t\t\tvar diffLng = lastPoint.lng - lastPoint.controlPoint2.lng;\n\t\t\t\t\tcontrolPoint1 = new L.latLng(\n\t\t\t\t\t\tlastPoint.lat + diffLat,\n\t\t\t\t\t\tlastPoint.lng + diffLng\n\t\t\t\t\t);\n\t\t\t\t}\n\n\t\t\t\tbound.extend(controlPoint1);\n\t\t\t\tbound.extend(controlPoint2);\n\t\t\t\tbound.extend(endPoint);\n\n\t\t\t\tendPoint.controlPoint1 = controlPoint1;\n\t\t\t\tendPoint.controlPoint2 = controlPoint2;\n\t\t\t\tlastPoint = endPoint;\n\t\t\t} else if (lastCommand == \"Q\") {\n\t\t\t\tvar controlPoint = new L.latLng(coord[0], coord[1]);\n\t\t\t\tcoord = this._coords[++i];\n\t\t\t\tvar endPoint = new L.latLng(coord[0], coord[1]);\n\n\t\t\t\tbound.extend(controlPoint);\n\t\t\t\tbound.extend(endPoint);\n\n\t\t\t\tendPoint.controlPoint = controlPoint;\n\t\t\t\tlastPoint = endPoint;\n\t\t\t} else if (lastCommand == \"T\") {\n\t\t\t\tvar endPoint = new L.latLng(coord[0], coord[1]);\n\n\t\t\t\tvar controlPoint = lastPoint;\n\t\t\t\tif (lastPoint.controlPoint) {\n\t\t\t\t\tvar diffLat = lastPoint.lat - lastPoint.controlPoint.lat;\n\t\t\t\t\tvar diffLng = lastPoint.lng - lastPoint.controlPoint.lng;\n\t\t\t\t\tcontrolPoint = new L.latLng(\n\t\t\t\t\t\tlastPoint.lat + diffLat,\n\t\t\t\t\t\tlastPoint.lng + diffLng\n\t\t\t\t\t);\n\t\t\t\t}\n\n\t\t\t\tbound.extend(controlPoint);\n\t\t\t\tbound.extend(endPoint);\n\n\t\t\t\tendPoint.controlPoint = controlPoint;\n\t\t\t\tlastPoint = endPoint;\n\t\t\t} else {\n\t\t\t\tbound.extend(coord);\n\t\t\t\tlastPoint = new L.latLng(coord[0], coord[1]);\n\t\t\t}\n\t\t}\n\t\treturn bound;\n\t},\n\n\t//TODO: use a centroid algorithm instead\n\tgetCenter: function () {\n\t\treturn this._bounds.getCenter();\n\t},\n\n\t_update: function () {\n\t\t//5\n\t\tif (!this._map) {\n\t\t\treturn;\n\t\t}\n\t\tthis._updatePath();\n\t},\n\n\t_updatePath: function () {\n\t\t//6\n\t\tthis._renderer._updatecurve(this);\n\t},\n\n\t_project: function () {\n\t\t//4\n\t\tvar coord, lastCoord, curCommand, curPoint;\n\n\t\tthis._points = [];\n\n\t\tfor (var i = 0; i < this._coords.length; i++) {\n\t\t\tcoord = this._coords[i];\n\t\t\tif (typeof coord == \"string\" || coord instanceof String) {\n\t\t\t\tthis._points.push(coord);\n\t\t\t\tcurCommand = coord;\n\t\t\t} else {\n\t\t\t\tswitch (coord.length) {\n\t\t\t\t\tcase 2:\n\t\t\t\t\t\tcurPoint = this._map.latLngToLayerPoint(coord);\n\t\t\t\t\t\tlastCoord = coord;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 1:\n\t\t\t\t\t\tif (curCommand == \"H\") {\n\t\t\t\t\t\t\tcurPoint = this._map.latLngToLayerPoint([\n\t\t\t\t\t\t\t\tlastCoord[0],\n\t\t\t\t\t\t\t\tcoord[0],\n\t\t\t\t\t\t\t]);\n\t\t\t\t\t\t\tlastCoord = [lastCoord[0], coord[0]];\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tcurPoint = this._map.latLngToLayerPoint([\n\t\t\t\t\t\t\t\tcoord[0],\n\t\t\t\t\t\t\t\tlastCoord[1],\n\t\t\t\t\t\t\t]);\n\t\t\t\t\t\t\tlastCoord = [coord[0], lastCoord[1]];\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tthis._points.push(curPoint);\n\t\t\t}\n\t\t}\n\t},\n});\n\nL.curve = function (path, options) {\n\treturn new L.Curve(path, options);\n};\n\nL.SVG.include({\n\t//7\n\t_updatecurve: function (layer) {\n\t\tthis._setPath(layer, this._curvePointsToPath(layer._points));\n\t\tif (layer.options.animate) {\n\t\t\tvar path = layer._path;\n\t\t\tvar length = path.getTotalLength();\n\n\t\t\tif (!layer.options.dashArray) {\n\t\t\t\tpath.style.strokeDasharray = length + \" \" + length;\n\t\t\t}\n\n\t\t\tif (layer._initialUpdate) {\n\t\t\t\tpath.animate(\n\t\t\t\t\t[{ strokeDashoffset: length }, { strokeDashoffset: 0 }],\n\t\t\t\t\tlayer.options.animate\n\t\t\t\t);\n\t\t\t\tlayer._initialUpdate = false;\n\t\t\t}\n\t\t}\n\t},\n\n\t_curvePointsToPath: function (points) {\n\t\tvar point,\n\t\t\tcurCommand,\n\t\t\tstr = \"\";\n\t\tfor (var i = 0; i < points.length; i++) {\n\t\t\tpoint = points[i];\n\t\t\tif (typeof point == \"string\" || point instanceof String) {\n\t\t\t\tcurCommand = point;\n\t\t\t\tstr += curCommand;\n\t\t\t} else {\n\t\t\t\tswitch (curCommand) {\n\t\t\t\t\tcase \"H\":\n\t\t\t\t\t\tstr += point.x + \" \";\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"V\":\n\t\t\t\t\t\tstr += point.y + \" \";\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tstr += point.x + \",\" + point.y + \" \";\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn str || \"M0 0\";\n\t},\n});\n","// import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Path, withLeaflet } from \"react-leaflet\";\nimport { curve } from \"./leaflet.curve\";\nimport L from \"leaflet\";\n\nclass Curve extends Path {\n\tcreateLeafletElement(props) {\n\t\tconst { positions, option, ...options } = props;\n\t\treturn L.curve(positions, option, this.getOptions(options));\n\t}\n\n\tupdateLeafletElement(fromProps, toProps) {\n\t\tif (toProps.positions !== fromProps.positions) {\n\t\t\tthis.leafletElement.setPath(toProps.positions);\n\t\t}\n\t\tthis.setStyleIfChanged(fromProps, toProps);\n\t}\n}\n\nCurve.propTypes = {\n\tchildren: PropTypes.oneOfType([\n\t\tPropTypes.arrayOf(PropTypes.node),\n\t\tPropTypes.node,\n\t]),\n\toption: PropTypes.object,\n\tpositions: PropTypes.array.isRequired,\n};\n\nexport default withLeaflet(Curve);\n\n/*\n  componentWillMount() {\n    super.componentWillMount();\n    const { positions, ...options } = this.props\n    this.leafletElement = L.curve(positions, this.getOptions(options))\n  }*/\n","import React from \"react\";\nimport { Map, TileLayer, Marker } from \"react-leaflet\";\nimport \"./Traceability.css\";\nimport { Swiper, SwiperSlide } from \"swiper/react\";\nimport { Curve } from \"./leaflet-curve\";\nimport L from \"leaflet\";\n// Import Swiper styles\nimport \"swiper/swiper-bundle.css\";\n\nclass Traceability extends React.Component {\n    map = undefined;\n    state = {\n        zoom: 12,\n        swiper: undefined,\n        currentIndex: 0,\n        map: undefined,\n    };\n\n    getMaterialIcon = (mode) => {\n        switch (mode) {\n            case \"Charette\":\n                return \"directions_bike\";\n            case \"Plane\":\n                return \"flight_takeoff\";\n            case \"Train\":\n                return \"train\";\n            case \"Boat\":\n                return \"directions_boat_filled\";\n            case \"Truck\":\n                return \"local_shipping\";\n            default:\n                return \"nature_people\";\n        }\n    };\n\n    getTransportMode = (mode) => {\n        switch (mode) {\n            case \"Charette\":\n                return \"vélo\";\n            case \"Plane\":\n                return \"avion\";\n            case \"Train\":\n                return \"train\";\n            case \"Boat\":\n                return \"bateau\";\n            case \"Truck\":\n                return \"camion\";\n            default:\n                return mode;\n        }\n    };\n    getTranslation = (mode) => {\n        switch (mode) {\n            case \"maker\":\n                return \"Fabricant\";\n            case \"productor\":\n                return \"Producteur\";\n            case \"shop\":\n                return \"Revendeur\";\n            default:\n                return mode;\n        }\n    };\n\n    displaySlides = () => {\n        let slides = <React.Fragment />;\n        if (this.props.products) {\n            slides = this.props.products.map((product) => {\n                let pastille = \"product-slide-pastille past-green\";\n                if (product.TransportCO2Impact?.value > 10) {\n                    pastille = \"product-slide-pastille past-orange\";\n                }\n                if (product.TransportCO2Impact?.value > 100) {\n                    pastille = \"product-slide-pastille past-red\";\n                }\n\n                return (\n                    <SwiperSlide>\n                        <div className=\"product-slide-container\">\n                            <div className=\"product-slide-icon\">\n                                <span className=\"material-icons\">\n                                    {this.getMaterialIcon(product.transport)}\n                                </span>\n\n                                <div className=\"product-slide-name\">\n                                    <span className=\"product-slide-name-product\">\n                                        {product.productsOutput[0].productName}\n                                    </span>\n                                    <span className=\"product-slide-name-transport\">\n                                        Transport en {this.getTransportMode(product.transport)}\n                                    </span>\n                                </div>\n                            </div>\n                            <div className=\"product-slide-origin-wrapper\">\n                                <div className=\"product-transport-ui\">\n                                    <div className=\"transport-ui-circle\"></div>\n                                    <div className=\"transport-ui-tiret\"></div>\n                                    <div className=\"transport-ui-circle circle-bis\"></div>\n                                </div>\n                                <div className=\"product-slide-transport-container\">\n                                    <div className=\"product-slide-bigname\">\n                                        <span>\n                                            {product.seller.localisation.city},{\" \"}\n                                            {product.seller.localisation.country}\n                                        </span>\n                                    </div>\n                                    <div className=\"product-slide-lowername2\">\n                                        {this.getTranslation(product.seller?.type)}\n                                        {\": \"}\n                                        {product.seller?.name}\n                                    </div>\n\n                                    <div className=\"product-slide-bigname bigname-lower\">\n                                        <span>\n                                            {product.buyer.localisation.city},{\" \"}\n                                            {product.buyer.localisation.country}\n                                        </span>\n                                    </div>\n                                    <div className=\"product-slide-lowername2\">\n                                        {this.getTranslation(product.buyer?.type)}\n                                        {\": \"}\n                                        {product.buyer?.name}\n                                    </div>\n                                </div>\n                            </div>\n                            <div className=\"product-slide-arrow\">{\">\"}</div>\n                            <div className=\"product-slide-consumption\">\n                                <div className={pastille}></div>\n                                <div>{Math.round(product.dist.value)} km </div>\n                                <div>\n                                    {product.TransportCO2Impact?.value > 1\n                                        ? Math.round(product.TransportCO2Impact?.value)\n                                        : \"< 1\"}{\" \"}\n                                    kg CO2{\" \"}\n                                </div>\n                            </div>\n                        </div>\n                    </SwiperSlide>\n                );\n            });\n        }\n        return slides;\n    };\n\n    handleMarkerClick = (latlng, index) => {\n        // window.scrollTo({ top: \"8000px\", behavior: \"smooth\" });\n        let elem = document.getElementsByClassName(\"swiper-container\");\n        if (elem[0]) {\n            elem[0].scrollIntoView({ behavior: \"smooth\" });\n        }\n\n        if (index >= this.props.products?.length) {\n            this.state.swiper.slideTo(index - 1, 500);\n        } else {\n            this.state.swiper.slideTo(index, 500);\n        }\n        let zoom = 5;\n        if (this.props.products && this.props.products[index]) {\n            let p = this.props.products[index];\n\n            zoom = getZoomRatio(\n                [p.buyer.localisation.latitude, p.buyer.localisation.longitude],\n                [p.seller.localisation.latitude, p.seller.localisation.longitude]\n            );\n        }\n\n        this.map.leafletElement.flyTo(latlng, zoom, { duration: 0.5 });\n    };\n\n    onSlideChange = (index) => {\n        this.setState({ currentIndex: index });\n        let zoom = 5;\n        if (this.props.products && this.props.products[index]) {\n            let p = this.props.products[index];\n\n            zoom = getZoomRatio(\n                [p.buyer.localisation.latitude, p.buyer.localisation.longitude],\n                [p.seller.localisation.latitude, p.seller.localisation.longitude]\n            );\n\n            let lat =\n                (parseFloat(p.seller.localisation.latitude) +\n                    parseFloat(p.buyer.localisation.latitude)) /\n                2;\n            let long =\n                (parseFloat(p.seller.localisation.longitude) +\n                    parseFloat(p.buyer.localisation.longitude)) /\n                2;\n\n            this.map.leafletElement.flyTo([lat, long], zoom, { duration: 0.5 });\n        }\n    };\n\n    displayMarker = () => {\n        let markers = <React.Fragment />;\n        if (this.props.products) {\n            markers = this.props.products.map((product, i) => {\n                let marker1 = <React.Fragment />;\n                let lat1 = parseFloat(product?.buyer?.localisation?.latitude);\n                let long1 = parseFloat(product?.buyer?.localisation?.longitude);\n                let marker2 = <React.Fragment />;\n                let lat2 = parseFloat(product?.seller?.localisation?.latitude);\n                let long2 = parseFloat(product?.seller?.localisation?.longitude);\n                let icon;\n                let icon2;\n                let zIndex = 0;\n                if (i === this.state.currentIndex) {\n                    icon = new L.Icon({\n                        iconUrl: \"/images/utils/map.png\", //require('../../images/logo/logo.svg'),\n                        iconRetinaUrl: \"/images/utils/map.png\", //\"/images/images_volume/1-l.png\", //require('../../images/logo/logo.svg'),\n                        iconSize: new L.Point(32, 32),\n                        className: \"leaflet-mark-icon\",\n                    });\n                    icon2 = new L.Icon({\n                        iconUrl: \"/images/utils/map.png\", //require('../../images/logo/logo.svg'),\n                        iconRetinaUrl: \"/images/utils/map3.png\", //\"/images/images_volume/1-l.png\", //require('../../images/logo/logo.svg'),\n                        iconSize: new L.Point(32, 32),\n                        className: \"leaflet-mark-icon\",\n                    });\n                    zIndex = 5;\n                } else {\n                    icon = new L.Icon({\n                        iconUrl: \"/images/utils/map2.png\", //require('../../images/logo/logo.svg'),\n                        iconRetinaUrl: \"/images/utils/map2.png\", //\"/images/images_volume/1-l.png\", //require('../../images/logo/logo.svg'),\n                        iconSize: new L.Point(25, 25),\n                        className: \"leaflet-mark-icon\",\n                    });\n                    icon2 = new L.Icon({\n                        iconUrl: \"/images/utils/map2.png\", //require('../../images/logo/logo.svg'),\n                        iconRetinaUrl: \"/images/utils/map2.png\", //\"/images/images_volume/1-l.png\", //require('../../images/logo/logo.svg'),\n                        iconSize: new L.Point(25, 25),\n                        className: \"leaflet-mark-icon\",\n                    });\n                }\n\n                if (lat1 && long1) {\n                    marker1 = (\n                        <Marker\n                            zIndexOffset={zIndex}\n                            icon={icon}\n                            position={[lat1, long1]}\n                            onClick={() =>\n                                this.handleMarkerClick(\n                                    [\n                                        parseFloat(product.buyer.localisation.latitude),\n                                        parseFloat(product.buyer.localisation.longitude),\n                                    ],\n                                    i + 1\n                                )\n                            }\n                        >\n                            {/* <Popup>{product.buyer.name}</Popup> */}\n                        </Marker>\n                    );\n                }\n                if (lat2 && long2) {\n                    marker2 = (\n                        <Marker\n                            zIndexOffset={zIndex}\n                            icon={icon2}\n                            position={[lat2, long2]}\n                            onClick={() =>\n                                this.handleMarkerClick(\n                                    [\n                                        parseFloat(product.seller.localisation.latitude),\n                                        parseFloat(product.seller.localisation.longitude),\n                                    ],\n                                    i\n                                )\n                            }\n                        >\n                            {/* <Popup>{product.seller.name}</Popup> */}\n                        </Marker>\n                    );\n                }\n\n                let color = \"#1b3044\";\n                let curves = document.getElementsByClassName(\"leaflet-interactive\");\n\n                if (curves && curves[i] && i === this.state.currentIndex) {\n                    curves[i].setAttribute(\"stroke\", \"#78be95\");\n                } else if (curves && curves[i]) {\n                    curves[i].setAttribute(\"stroke\", \"#1b3044\");\n                }\n\n                return (\n                    <React.Fragment>\n                        <div className=\"test\">\n                            <Curve\n                                positions={getCurveOptions(lat2, long2, lat1, long1)}\n                                option={{\n                                    color: color,\n                                    fill: false,\n                                    // animate: animate,\n                                    delay: 5000,\n                                }}\n                            />\n                        </div>\n                        {marker1}\n                        {marker2}\n                    </React.Fragment>\n                );\n            });\n        }\n        return markers;\n    };\n\n    render = () => {\n        return (\n            <div className=\"tracability-container\">\n                <div className=\"product-CO2-total-tracability-container\">\n                    <span className=\"product-CO2-total-tracability\">\n                        Impact total carbone :&nbsp;\n                        <span className=\"carbon-total-number\">\n                            {parseFloat(this.props.totalCO2Traceability).toFixed(1)}\n                        </span>\n                        kg CO2 soit &nbsp;\n                        <span className=\"carbon-total-number\">\n                            {parseFloat(\n                                ((this.props.totalCO2Traceability * 0.05) / 11.0) * 1000.0\n                            ).toFixed(1)}\n                        </span>\n                        kms parcourus en voiture\n                    </span>\n                </div>\n\n                <Map\n                    center={[51.505, -0.09]}\n                    zoom={1}\n                    minZoom={1}\n                    scrollWheelZoom={true}\n                    dragging={false}\n                    maxBounds={[\n                        [-90, -180],\n                        [90, 180],\n                    ]}\n                    maxBoundsViscosity={1}\n                    ref={(ref) => {\n                        this.map = ref;\n                        this.props.getBottomRef(ref);\n                    }}\n                    whenCreated={(map) => this.setState({ map })}\n                >\n                    <TileLayer\n                        attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a>'\n                        url=\"https://stamen-tiles-{s}.a.ssl.fastly.net/toner-background/{z}/{x}/{y}{r}.png\" //'https://maps.wikimedia.org/osm-intl/{z}/{x}/{y}{r}.png' //'https://{s}.tile.osm.org/{z}/{x}/{y}.png'\n                    />\n\n                    {this.displayMarker()}\n                </Map>\n                <Swiper\n                    spaceBetween={10}\n                    slidesPerView={1.2}\n                    centeredSlides={true}\n                    onSlideChange={(i) => this.onSlideChange(i.activeIndex)}\n                    onSwiper={(swiper) => this.setState({ swiper: swiper })}\n                >\n                    {this.displaySlides()}\n                </Swiper>\n            </div>\n        );\n    };\n}\n\nexport default Traceability;\n\nfunction getDistance(origin, destination) {\n    // return distance in meters\n    var lon1 = toRadian(origin[1]),\n        lat1 = toRadian(origin[0]),\n        lon2 = toRadian(destination[1]),\n        lat2 = toRadian(destination[0]);\n\n    var deltaLat = lat2 - lat1;\n    var deltaLon = lon2 - lon1;\n\n    var a =\n        Math.pow(Math.sin(deltaLat / 2), 2) +\n        Math.cos(lat1) * Math.cos(lat2) * Math.pow(Math.sin(deltaLon / 2), 2);\n    var c = 2 * Math.asin(Math.sqrt(a));\n    // var EARTH_RADIUS = 6371;\n    return c; //* EARTH_RADIUS * 1000;\n}\n\nfunction toRadian(degree) {\n    return (degree * Math.PI) / 180;\n}\n\nfunction getZoomRatio(origin, destination) {\n    var distance = getDistance(origin, destination);\n\n    return 9 - Math.sqrt(distance * 150);\n}\n\nfunction getCurveOptions(lat1, long1, lat2, long2) {\n    var latlng1 = [lat1, long1],\n        latlng2 = [lat2, long2];\n\n    var offsetX = latlng2[1] - latlng1[1],\n        offsetY = latlng2[0] - latlng1[0];\n\n    var r = Math.sqrt(Math.pow(offsetX, 2) + Math.pow(offsetY, 2)),\n        theta = Math.atan2(offsetY, offsetX);\n\n    var thetaOffset = 3.14 / 10;\n\n    var r2 = r / 2 / Math.cos(thetaOffset),\n        theta2 = theta + thetaOffset;\n\n    var midpointX = r2 * Math.cos(theta2) + latlng1[1],\n        midpointY = r2 * Math.sin(theta2) + latlng1[0];\n\n    var midpointLatLng = [midpointY, midpointX];\n\n    return [\"M\", latlng1, \"Q\", midpointLatLng, latlng2];\n}\n\n// function getChildElementIndex(node) {\n//     return Array.prototype.indexOf.call(node.parentNode.children, node);\n// }\n","import React from \"react\";\n// import { Swiper, SwiperSlide } from \"swiper/react\";\n// import \"swiper/swiper-bundle.css\";\nimport \"react-responsive-carousel/lib/styles/carousel.min.css\";\nimport { Carousel } from \"react-responsive-carousel\";\n\nclass Alternatives extends React.Component {\n    state = {\n        swiper: undefined,\n    };\n\n    componentDidMount = () => {\n        if (this.props.ecoScore) {\n            this.loadAlternatives(this.props.ciqual_code);\n        }\n    };\n\n    componentDidUpdate = (lastProps) => {\n        if (lastProps.ciqual_code !== this.props.ciqual_code) {\n            if (this.props.ciqual_code) {\n                this.loadAlternatives(this.props.ciqual_code);\n            }\n        }\n    };\n\n    loadAlternatives = (code) => {\n        this.setState({ alternatives: \"loading\" });\n        fetch(`https://api.lowympact.fr/api/v1/alternatives/${code}`)\n            .then((response) => response.json())\n            .then((res) => {\n                if (res.success && res.data?.alternativesInfos) {\n                    if (\n                        res.data?.alternativesInfos?.a?.length == 0 &&\n                        res.data?.alternativesInfos?.b?.length == 0 &&\n                        res.data?.alternativesInfos?.c?.length == 0 &&\n                        res.data?.alternativesInfos?.d?.length == 0\n                    ) {\n                        this.setState({ alternatives: undefined });\n                    } else {\n                        this.setState({ alternatives: res.data.alternativesInfos });\n                    }\n                } else {\n                    this.setState({ alternatives: undefined });\n                }\n            });\n    };\n\n    renderListAlternatives = (listItems) => {\n        let res = <React.Fragment></React.Fragment>;\n        res = listItems.map((item) => {\n            let pathProduct = \"/products/\" + item.id;\n            // Mock Front\n            if (item.id === \"8001505005707\") {\n                pathProduct += \"/24\";\n            }\n\n            if (item.id !== this.props.barcode) {\n                return (\n                    <div className=\"carousel\" key={item.id}>\n                        <a href={pathProduct} className=\"product-alternative\">\n                            <div>\n                                <img\n                                    src={item.img_url}\n                                    className=\"product-alternative-image\"\n                                    alt=\"\"\n                                />\n                            </div>\n                            <div className=\"product-alternative-text\">\n                                <label className=\"product-alternative-title\">{item.name}</label>\n                                <label className=\"product-alternative-brand\">{}</label>\n                                <RenderColor item={item} />\n                            </div>\n                            <div className=\"product-alternative-fleche\">{\">\"}</div>\n                        </a>\n                    </div>\n                );\n            } else {\n                return <React.Fragment></React.Fragment>;\n            }\n        });\n\n        return res;\n    };\n\n    alternativesloop = () => {\n        let alternativesList = <React.Fragment></React.Fragment>;\n        if (\n            this.state.alternatives &&\n            this.state.alternatives !== \"loading\" &&\n            this.state.alternatives !== \"\"\n        ) {\n            this.state.alternatives.a.sort(function (a, b) {\n                return b.eco_score - a.eco_score;\n            });\n\n            this.state.alternatives.b.sort(function (a, b) {\n                return b.eco_score - a.eco_score;\n            });\n            this.state.alternatives.c.sort(function (a, b) {\n                return b.eco_score - a.eco_score;\n            });\n            this.state.alternatives.d.sort(function (a, b) {\n                return b.eco_score - a.eco_score;\n            });\n\n            let tab;\n            switch (this.props.ecoScore) {\n                case \"a\":\n                    return undefined;\n\n                    break;\n                case \"b\":\n                    tab = this.state.alternatives.a;\n                    if (tab.length == 0) {\n                        return undefined;\n                    } else {\n                        alternativesList = this.renderListAlternatives(tab);\n                    }\n                    break;\n                case \"c\":\n                    tab = this.state.alternatives.a.concat(this.state.alternatives.b);\n\n                    if (tab.length == 0) {\n                        return undefined;\n                    } else {\n                        alternativesList = this.renderListAlternatives(tab);\n                    }\n                    break;\n                case \"d\":\n                    tab = this.state.alternatives.a\n                        .concat(this.state.alternatives.b)\n                        .concat(this.state.alternatives.c);\n\n                    if (tab.length == 0) {\n                        return undefined;\n                    } else {\n                        alternativesList = this.renderListAlternatives(tab);\n                    }\n                    break;\n                case \"e\":\n                    tab = this.state.alternatives.a\n                        .concat(this.state.alternatives.b)\n                        .concat(this.state.alternatives.c)\n                        .concat(this.state.alternatives.d);\n                    if (tab.length == 0) {\n                        return undefined;\n                    } else {\n                        alternativesList = this.renderListAlternatives(tab);\n                    }\n                    break;\n                default:\n                    break;\n            }\n        }\n\n        return alternativesList;\n    };\n\n    render = () => {\n        console.log(this.state.alternatives);\n        let alternatives_title = \"\";\n        if (!this.state.alternatives) {\n            alternatives_title = \"Pas d'alternatives disponible\";\n        } else {\n            if (this.state.alternatives === \"loading\") {\n                alternatives_title = \"Chargement des alternatives ...\";\n            } else {\n                alternatives_title = \"Alternatives\";\n            }\n        }\n        let alternatives = this.alternativesloop();\n        if (\n            this.state.alternatives &&\n            this.state.alternatives !== \"loading\" &&\n            this.state.alternatives !== \"\" &&\n            alternatives\n        ) {\n            return (\n                <React.Fragment>\n                    <span className=\"title-part-environnement\">{alternatives_title}</span>\n                    <Carousel\n                        autoPlay={false}\n                        interval={100000}\n                        centerMode={true}\n                        centerSlidePercentage={90}\n                        showThumbs={false}\n                        showIndicators={false}\n                        showStatus={false}\n                    >\n                        {alternatives}\n                    </Carousel>\n                </React.Fragment>\n            );\n        } else {\n            return <React.Fragment />;\n        }\n    };\n}\n\nexport default Alternatives;\n\nfunction RenderColor({ item }) {\n    let labelColor;\n    let labelLevel;\n    if (item.eco_score <= 33) {\n        labelColor = \"red\";\n        labelLevel = \"Mauvais\";\n    } else if (item.eco_score > 33 && item.eco_score < 67) {\n        labelColor = \"yellow\";\n        labelLevel = \"Moyen\";\n    } else {\n        labelColor = \"green\";\n        labelLevel = \"Bonne\";\n    }\n    return (\n        <div className=\"product-alternative-label-position\">\n            <div className=\"product-alternative-label\">\n                <div style={{ color: labelColor }}>●</div>\n                <div className=\"product-alternative-label-text\">{item.eco_score}/100</div>\n            </div>\n            <div className=\"product-alternative-label-level \">{labelLevel}</div>\n        </div>\n    );\n}\n","import React from \"react\";\nimport { Map, TileLayer, Polygon } from \"react-leaflet\";\n\nclass Origins extends React.Component {\n    state = {\n        polygon: [],\n        activeCountry: \"\",\n    };\n\n    componentDidMount = () => {\n        this.getCountries();\n    };\n\n    setActiveCountry = (country) => {\n        this.setState({ activeCountry: country });\n    };\n\n    getCountries = () => {\n        this.props.origins?.map((origin) => {\n            if (origin !== \"en:ghana\") {\n                fetch(`https://api.lowympact.fr/api/v1/countries/${origin}`)\n                    .then((res) => res.json())\n                    .then((res) => {\n                        let polygon = this.state.polygon;\n                        if (res.success && res.data?.country) {\n                            polygon.push({\n                                geo: res.data.country.coordinates,\n                                name: res.data.country.name,\n                            });\n                            this.setState({\n                                polygon: polygon,\n                                activeCountry:\n                                    this.state.activeCountry + res.data.country.name + \", \",\n                            });\n                        }\n                    });\n            }\n            return true;\n        });\n    };\n\n    render = () => {\n        if (this.state.polygon.length === 0) return <React.Fragment />;\n        else {\n            return (\n                <div className=\"environnement-map-container\">\n                    <div className=\"product-co2-impact-header\">\n                        <div className=\"product-co2-impact-logo\">\n                            <div className=\"material-icons icon-label-co2-impact\">place</div>\n                        </div>\n                        <div className=\"product-co2-impact-title\">\n                            <div className=\"product-co2-impact-title-text\">\n                                Provenance des ingrédients\n                            </div>\n                            <div className=\"product-co2-impact-title-label\">\n                                Pays d'origine : {this.state.activeCountry}\n                            </div>\n                        </div>\n                    </div>\n\n                    <Map\n                        center={[51.505, -0.09]}\n                        zoom={-1}\n                        minZoom={0}\n                        className=\"environnement-map\"\n                        scrollWheelZoom={true}\n                        dragging={false}\n                        maxBounds={[\n                            [-90, -180],\n                            [90, 180],\n                        ]}\n                        maxBoundsViscosity={1}\n                        whenCreated={(map) => this.setState({ map })}\n                    >\n                        <TileLayer\n                            attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a>'\n                            url=\"https://stamen-tiles-{s}.a.ssl.fastly.net/toner-background/{z}/{x}/{y}{r}.png\" //'https://maps.wikimedia.org/osm-intl/{z}/{x}/{y}{r}.png' //'https://{s}.tile.osm.org/{z}/{x}/{y}.png'\n                        />\n                        {this.state.polygon.map((poly, i) => {\n                            if (poly)\n                                return (\n                                    <Polygon\n                                        onClick={() => this.setActiveCountry(poly.name)}\n                                        color={\"color:white\"}\n                                        fillColor={\n                                            this.activeCountry === poly.name ? \"blue\" : \"green\"\n                                        }\n                                        opacity={\"1\"}\n                                        positions={poly.geo}\n                                        key={i}\n                                    />\n                                );\n                            else return <React.Fragment />;\n                        })}\n                    </Map>\n                </div>\n            );\n        }\n    };\n}\n\nexport default Origins;\n","import React from \"react\";\n\nclass EmpreinteCarbone extends React.Component {\n    state = {\n        alea: 3,\n    };\n\n    setAlea = (nb) => {\n        // this.setState({ alea: Math.floor(Math.random() * 11) });\n        let alea = this.state.alea + nb;\n        if (alea > 11) alea = 0;\n        if (alea < 0) alea = 11;\n        this.setState({ alea: alea });\n    };\n\n    render = () => {\n        if (this.props.dataEcoScore?.agribalyse?.co2_total) {\n            let repartition = [\n                {\n                    image: \"agriculture\",\n                    name: \"Agriculture\",\n                    percent: (\n                        (parseFloat(this.props.dataEcoScore?.agribalyse?.co2_agriculture) * 100) /\n                        parseFloat(this.props.dataEcoScore?.agribalyse?.co2_total)\n                    ).toFixed(0),\n                },\n                {\n                    image: \"local_shipping\",\n                    name: \"Transport\",\n                    percent: (\n                        (parseFloat(this.props.dataEcoScore?.agribalyse?.co2_transportation) *\n                            100) /\n                        parseFloat(this.props.dataEcoScore?.agribalyse?.co2_total)\n                    ).toFixed(0),\n                },\n                {\n                    image: \"view_in_ar\",\n                    name: \"Emballage\",\n                    percent: (\n                        (parseFloat(this.props.dataEcoScore?.agribalyse?.co2_packaging) * 100) /\n                        parseFloat(this.props.dataEcoScore?.agribalyse?.co2_total)\n                    ).toFixed(0),\n                },\n                {\n                    image: \"transform\",\n                    name: \"Transformation\",\n                    percent: (\n                        (parseFloat(this.props.dataEcoScore?.agribalyse?.co2_processing) * 100) /\n                        parseFloat(this.props.dataEcoScore?.agribalyse?.co2_total)\n                    ).toFixed(0),\n                },\n                {\n                    image: \"store\",\n                    name: \"Distribution\",\n                    percent: (\n                        (parseFloat(this.props.dataEcoScore?.agribalyse?.co2_distribution) * 100) /\n                        parseFloat(this.props.dataEcoScore?.agribalyse?.co2_total)\n                    ).toFixed(0),\n                },\n                {\n                    image: \"microwave\",\n                    name: \"Consommation\",\n                    percent: (\n                        (parseFloat(this.props.dataEcoScore?.agribalyse?.co2_consumption) * 100) /\n                        parseFloat(this.props.dataEcoScore?.agribalyse?.co2_total)\n                    ).toFixed(0),\n                },\n            ];\n            repartition = repartition.map((i) => {\n                return (\n                    <div className=\"empreinte-single\" key={i.name}>\n                        <div className=\"material-icons\">{i.image}</div>\n                        <div className=\"name\">{i.name} : </div>\n                        <div className=\"pourcent\">{i.percent} %</div>\n                    </div>\n                );\n            });\n\n            let equivalent = getEquivalent(\n                parseFloat(this.props.dataEcoScore?.agribalyse?.co2_total),\n                this.state.alea\n            );\n\n            let circle = \"cmauve\";\n            if (this.props.dataEcoScore?.agribalyse?.co2_total < 15) circle = \"cred\";\n            if (this.props.dataEcoScore?.agribalyse?.co2_total < 7) circle = \"corange\";\n            if (this.props.dataEcoScore?.agribalyse?.co2_total < 3) circle = \"cgreen\";\n            if (this.props.dataEcoScore?.agribalyse?.co2_total < 1) circle = \"cdarkgreen\";\n            return (\n                <React.Fragment>\n                    <div className=\"empreinte-carbone-container\">\n                        <div className=\"empreinte-carbone-header\">\n                            <div className=\"header-text\">\n                                <div className=\"header-main\">Empreinte Carbone</div>\n                                <div className=\"header-small\">source : ADEME</div>\n                            </div>\n                            <div className=\"empreinte-carbone-number\">\n                                <span>\n                                    {parseFloat(\n                                        this.props.dataEcoScore?.agribalyse?.co2_total\n                                    ).toFixed(2)}\n                                    kg CO2e\n                                </span>\n                                <div className={\"circle \" + circle}></div>\n                            </div>\n                        </div>\n                        <div className=\"empreinte-carbone-equivalent\">\n                            <div className=\"icon-container\">\n                                <div className=\"material-icons\">\n                                    <img\n                                        src={`/images/alternatives/${equivalent[1]}`}\n                                        alt=\"alternative\"\n                                    />\n                                </div>\n                            </div>\n                            <div className=\"equivalent-container\">\n                                <div className=\"text-small\">Soit l'équivalent...</div>\n                                <div className=\"text-big\">{equivalent[0]}</div>\n                            </div>\n                        </div>\n                        <div className=\"arrow\">\n                            <div className=\"material-icons\" onClick={() => this.setAlea(1)}>\n                                arrow_back_ios\n                            </div>\n                            <div className=\"material-icons\" onClick={() => this.setAlea(-1)}>\n                                arrow_forward_ios\n                            </div>\n                        </div>\n                    </div>\n\n                    <div className=\"empreinte-carbone-container no-margin-container\">\n                        <div className=\"empreinte-carbone-header\">\n                            <div className=\"header-text\">\n                                <div className=\"header-main\">\n                                    Répartition de l'empreinte Carbone\n                                </div>\n                                <div className=\"header-small\">\n                                    selon les différentes étapes du cycle de vie\n                                </div>\n                            </div>\n                            {/* <div className=\"empreinte-carbone-number\">\n                                <span>\n                                    {parseFloat(\n                                        this.props.dataEcoScore?.agribalyse?.co2_total\n                                    ).toFixed(2)}\n                                    kg CO2e\n                                </span>\n                                <div className=\"circle\"></div>\n                            </div> */}\n                        </div>\n                        <div className=\"empreinte-carbone-repartition\">{repartition}</div>\n                    </div>\n                </React.Fragment>\n            );\n        } else {\n            return <React.Fragment />;\n        }\n    };\n}\n\nexport default EmpreinteCarbone;\n\nfunction getEquivalent(co2, alea) {\n    switch (alea) {\n        case 0:\n            return [\n                \"De la production de \" +\n                    (co2 / 0.0046).toFixed(0) +\n                    \" feuilles de papier blanc 80g\",\n                \"paper.png\",\n            ];\n        case 1:\n            return [\n                \"De la production de \" +\n                    (co2 / 0.6).toFixed(1) +\n                    \" kg de pommes de terre en France\",\n                \"potatoe.png\",\n            ];\n        case 2:\n            return [\n                \"De la production de \" + (co2 / 0.53).toFixed(1) + \" kg de fraises en France\",\n                \"strawberry.png\",\n            ];\n        case 3:\n            return [\n                \"De \" + (co2 / 0.193).toFixed(1) + \" km parcourus par une personne en voiture\",\n                \"car.svg\",\n            ];\n        case 4:\n            return [\n                \"De \" + (co2 / 0.137).toFixed(1) + \" km parcourus par une personne en Bus de ville\",\n                \"bus.svg\",\n            ];\n        case 5:\n            return [\n                \"De \" +\n                    (co2 / 0.019).toFixed(0) +\n                    \" e-mails envoyés contenant une pièce jointe d'1mo\",\n                \"mail.svg\",\n            ];\n        case 6:\n            return [\n                \"De \" +\n                    (co2 / 0.5).toFixed(1) +\n                    \" jour(s) d'éclairage d'une ampoule à incandescence\",\n                \"light.svg\",\n            ];\n        case 7:\n            return [\n                \"De \" +\n                    (co2 / 0.24).toFixed(1) +\n                    \" heures de chauffage au gaz d'un appartement moyen de 70m²\",\n                \"appartment.svg\",\n            ];\n        case 8:\n            return [\n                \"De la production de \" +\n                    ((co2 * 1000) / 33.8).toFixed(0) +\n                    \" grammes de steak haché de boeuf cru\",\n                \"steak.png\",\n            ];\n        case 9:\n            return [\n                \"De \" +\n                    (co2 / 0.083).toFixed(1) +\n                    \" jours d'éclairage d'une ampoule basse consommation\",\n                \"light.svg\",\n            ];\n        case 10:\n            return [\n                \"De \" +\n                    (co2 / 0.105).toFixed(1) +\n                    \" kilomètres parcourus en Trotinette électrique (en France)\",\n                \"trotinette.png\",\n            ];\n        case 11:\n            return [\n                \"D'une personne parcourant \" +\n                    (co2 / 0.3).toFixed(0) * 100 +\n                    \" kilomètres en TGV (en France)\",\n                \"train.png\",\n            ];\n        default:\n            return [\n                \"De \" +\n                    (co2 / 0.105).toFixed(1) +\n                    \" kilomètres parcourus en Trotinette électrique (en France)\",\n                \"trotinette.png\",\n            ];\n    }\n}\n","import React from \"react\";\nimport Alternatives from \"./Alternatives\";\nimport Origins from \"./Origins\";\nimport \"./Environnement.css\";\nimport EmpreinteCarbone from \"./EmpreinteCarbone\";\n\nclass Environnement extends React.Component {\n    state = {\n        width: undefined,\n        materials: [],\n    };\n\n    getColor = (note) => {\n        if (note > 67) {\n            return \"green\";\n        }\n        if (note <= 33) {\n            return \"red\";\n        }\n        return \"yellow\";\n    };\n\n    getColorImpact = (note) => {\n        if (note > 70) {\n            return \"green\";\n        }\n        if (note <= 40) {\n            return \"red\";\n        }\n        return \"yellow\";\n    };\n\n    getLabel = (note) => {\n        if (note > 67) {\n            return \"Bon\";\n        }\n        if (note <= 33) {\n            return \"Mauvais\";\n        }\n        return \"Moyen\";\n    };\n\n    getLabelImpact = (note) => {\n        if (note > 60) {\n            return \"Impact fort\";\n        }\n        if (note <= 30) {\n            return \"Impact faible\";\n        }\n        return \"Impact moyen\";\n    };\n\n    getLabelImpactPackaging = (note) => {\n        if (note > 2) {\n            return \"Impact faible\";\n        }\n        if (note < -2) {\n            return \"Impact fort\";\n        }\n        return \"Impact moyen\";\n    };\n\n    getColorImpactPackaging = (note) => {\n        if (note > 2) {\n            return \"green\";\n        }\n        if (note < -2) {\n            return \"red\";\n        }\n        return \"yellow\";\n    };\n\n    componentDidMount() {\n        this.updateWindowDimensions();\n        window.addEventListener(\"resize\", this.updateWindowDimensions);\n    }\n\n    componentWillUnmount() {\n        window.removeEventListener(\"resize\", this.updateWindowDimensions);\n    }\n\n    updateWindowDimensions = () => {\n        this.setState({ width: window.innerWidth });\n    };\n\n    displayPackagingDetailImpact = () => {\n        let res = <React.Fragment></React.Fragment>;\n\n        if (this.props.dataEcoScore?.adjustments?.packaging?.packagings) {\n            var materials = [];\n            let slides = <React.Fragment></React.Fragment>;\n\n            this.props.dataEcoScore?.adjustments?.packaging?.packagings.map((data) => {\n                if (data?.material.split(\":\")[1] !== \"unknown\") {\n                    materials.push(data?.material.split(\":\")[1]);\n                }\n                return true;\n            });\n\n            slides = materials\n                .filter(function (item, pos) {\n                    return materials.indexOf(item) === pos;\n                })\n                .map((data) => {\n                    var separator = \"\";\n                    if (materials.indexOf(data) < materials.length - 1) {\n                        separator = \" ; \";\n                    }\n                    return (\n                        <React.Fragment key={data}>\n                            <span>\n                                {data} {separator}\n                            </span>\n                        </React.Fragment>\n                    );\n                });\n\n            if (materials.length > 0) {\n                res = (\n                    <React.Fragment>\n                        <div className=\"product-co2-impact-content\">\n                            <div className=\"product-packaging-impact-content-details-text\">\n                                Matériaux utilisés : &nbsp;{slides}\n                            </div>\n                        </div>\n                    </React.Fragment>\n                );\n            } else {\n                res = (\n                    <React.Fragment>\n                        <div className=\"product-co2-impact-content\">\n                            <div className=\"product-packaging-impact-content-details-text\">\n                                Matériaux utilisés : &nbsp; Inconnu\n                            </div>\n                        </div>\n                    </React.Fragment>\n                );\n            }\n        }\n\n        return res;\n    };\n\n    displayPackagingImpact = () => {\n        let res = <React.Fragment></React.Fragment>;\n\n        if (this.props.dataEcoScore?.adjustments?.packaging?.value) {\n            return (\n                <div className=\"product-co2-impact-container\">\n                    <div className=\"product-co2-impact-header\">\n                        <div className=\"product-co2-impact-logo\">\n                            <div className=\"material-icons icon-label-co2-impact\">view_in_ar</div>\n                        </div>\n                        <div className=\"product-co2-impact-title\">\n                            <div className=\"product-co2-impact-title-text\">\n                                Impact de l'emballage\n                            </div>\n                            <div className=\"product-co2-impact-title-label\">\n                                {this.getLabelImpactPackaging(\n                                    this.props.dataEcoScore?.adjustments?.packaging?.value\n                                )}\n                            </div>\n                        </div>\n                        <div\n                            className=\"product-transport-impact-color-label\"\n                            style={{\n                                color: this.getColorImpactPackaging(\n                                    this.props.dataEcoScore?.adjustments?.packaging?.value\n                                ),\n                            }}\n                        >\n                            ●\n                        </div>\n                    </div>\n                    {this.displayPackagingDetailImpact()}\n                </div>\n            );\n        } else {\n            return res;\n        }\n    };\n\n    render = () => {\n        if (this.props.barcode) {\n            return (\n                <React.Fragment>\n                    <EmpreinteCarbone dataEcoScore={this.props.dataEcoScore} />\n\n                    {this.props.origins ? (\n                        <Origins origins={this.props.origins} />\n                    ) : (\n                        <React.Fragment />\n                    )}\n                    {this.displayPackagingImpact()}\n\n                    <Alternatives\n                        barcode={this.props.barcode}\n                        ecoScore={this.props.ecoScore}\n                        ciqual_code={this.props.dataEcoScore?.agribalyse?.code}\n                    />\n                </React.Fragment>\n            );\n        } else {\n            return <React.Fragment></React.Fragment>;\n        }\n    };\n}\n\nexport default Environnement;\n","import React from \"react\";\nimport Navbar from \"../components/Navbar/Navbar\";\nimport Traceability from \"../components/Traceability/Traceability\";\nimport Environnement from \"../components/Environnement/Environnement\";\n// import Labels from \"../components/Labels/Labels\";\nimport \"./Product.css\";\nimport { Link } from \"react-router-dom\";\nimport jwt from \"jsonwebtoken\";\n\nclass Product extends React.Component {\n    state = {\n        barcode: this.props.match.params.barcode,\n        bcProductId: this.props.match.params.bcProductId,\n        product: undefined,\n        productImageUrl: undefined,\n        productName: undefined,\n        genericName: undefined,\n        ecoScore: undefined,\n        dataEcoScore: undefined,\n        value: 0,\n        connected: false,\n        productData: undefined,\n        userId: undefined,\n        cart: 0,\n        totalCO2Traceability: undefined,\n        countries: [],\n    };\n\n    isFlipping = false;\n\n    //for scrolling\n    getBottomRef = (component) => {\n        this.bottomComponent = component;\n    };\n\n    componentDidMount = () => {\n        this.Verify();\n        let userId = localStorage.getItem(\"userId\");\n        if (userId) {\n            this.setState({ userId: userId });\n            this.loadCartInfo(userId);\n        }\n        this.loadFromOpenFoodFacts(this.props.match.params.barcode);\n        if (this.props.match.params.bcProductId) {\n            this.loadProductInformations(\n                this.props.match.params.barcode,\n                this.props.match.params.bcProductId\n            );\n        }\n    };\n\n    handleBarCodeUpdate = () => {\n        if (this.state.barcode !== this.props.match.params.barcode) {\n            this.setState({\n                barcode: this.props.match.params.barcode,\n                bcProductId: this.props.match.params.bcProductId,\n            });\n            this.loadFromOpenFoodFacts(this.props.match.params.barcode);\n            if (this.props.match.params.bcProductId) {\n                this.loadProductInformations(\n                    this.props.match.params.barcode,\n                    this.props.match.params.bcProductId\n                );\n            }\n        }\n    };\n\n    Verify = () => {\n        let isExpired = true;\n        const token = localStorage.getItem(\"token\");\n        if (token) {\n            var decodedToken = jwt.decode(token, { complete: true });\n            var dateNow = new Date();\n            if (decodedToken.payload.exp >= dateNow.getTime() / 1000) {\n                isExpired = false;\n            }\n        }\n        if (isExpired === false) {\n            this.setState({ connected: true });\n        }\n    };\n\n    loadProductInformations = (barcode, bcProductId) => {\n        fetch(\n            `https://api.lowympact.fr/api/v1/products/${barcode}?bcProductId=${bcProductId}`,\n            // `http://localhost:8080/api/v1/products/${barcode}?bcProductId=${bcProductId}`,\n            {\n                method: \"get\",\n                credentials: \"include\",\n                headers: new Headers({\n                    \"api-key\": \"99d8fb95-abdd-4885-bf6c-3a81d8874043\",\n                    \"Content-Type\": \"application/json\",\n                }),\n            }\n        )\n            .then((response) => response.json())\n            .then((res) => {\n                this.setState({\n                    products: res?.data?.traceability,\n                    impact: res?.data?.impact,\n                    totalCO2Traceability: res?.data?.transportCO2Impact,\n                });\n            });\n    };\n\n    loadFromOpenFoodFacts = (barcode) => {\n        let dataEcoScore;\n\n        fetch(`https://world.openfoodfacts.org/api/v0/product/${barcode}.json/`)\n            .then((response) => response.json())\n            .then((res) => {\n                let productImageUrl = res?.product?.image_url;\n                let productName = res?.product?.product_name;\n                let genericName = res?.product?.generic_name;\n                let ecoScore = res?.product?.ecoscore_grade;\n\n                dataEcoScore = res?.product?.ecoscore_data;\n\n                //console.log(res);\n                let origins = res?.product?.origins_hierarchy;\n                if (origins && origins != \"\") {\n                    this.setState({ origins: origins });\n                }\n\n                if (res?.product) {\n                    this.setState({ productData: res.product });\n                }\n\n                if (productImageUrl) {\n                    this.setState({ productImageUrl: productImageUrl });\n                }\n                if (productName) {\n                    this.setState({ productName: productName });\n                }\n                if (genericName) {\n                    this.setState({ genericName: genericName });\n                }\n                if (\n                    ecoScore &&\n                    (ecoScore === \"a\" ||\n                        ecoScore === \"b\" ||\n                        ecoScore === \"c\" ||\n                        ecoScore === \"d\" ||\n                        ecoScore === \"e\")\n                ) {\n                    this.setState({ ecoScore: ecoScore });\n                }\n                if (dataEcoScore) {\n                    this.setState({ dataEcoScore: dataEcoScore });\n                }\n                if (res.status === 1) {\n                    this.saveHistory();\n                }\n\n                // Mock Soutenance\n                if (barcode === \"80135463\") {\n                    this.setState({ productName: \"Nutella 200g\" });\n                }\n\n                var scoreSearch = \"a\";\n\n                switch (res.product?.ecoscore_grade) {\n                    case \"b\":\n                        scoreSearch = \"a\";\n                        break;\n                    case \"c\":\n                        scoreSearch = \"b\";\n                        break;\n                    case \"d\":\n                        scoreSearch = \"c\";\n                        break;\n                    case \"e\":\n                        scoreSearch = \"c\";\n                        break;\n\n                    default:\n                        break;\n                }\n            });\n    };\n\n    // Get if a connected user already added this item in this cart in the past 2 hours\n    loadCartInfo = (userId) => {\n        if (userId && this.state.barcode) {\n            fetch(\n                `https://api.lowympact.fr/api/v1/users/${userId}/cart/${this.state.barcode}?bcProductAddress=${this.state.bcProductId}`,\n                // `http://localhost:8080/api/v1/users/${this.state.userId}/history`,\n                {\n                    method: \"get\",\n                    credentials: \"include\",\n                    headers: new Headers({\n                        Authorization: localStorage.getItem(\"token\"),\n                        \"api-key\": \"99d8fb95-abdd-4885-bf6c-3a81d8874043\",\n                        \"Content-Type\": \"application/json\",\n                    }),\n                }\n            )\n                .then((response) => response.json())\n                .then((res) => {\n                    //console.log(res);\n                    if (res.success) {\n                        this.setState({ cart: res.data?.quantity });\n                    }\n                });\n        }\n    };\n\n    saveHistory = async () => {\n        const queryString = window.location.search;\n        const urlParams = new URLSearchParams(queryString);\n        const add = urlParams.get(\"cart\");\n        if (add !== \"no\") {\n            await delay(2000);\n\n            let history = JSON.parse(localStorage.getItem(\"local_history\"));\n            let exist = null;\n            if (history) {\n                history = history?.filter(\n                    (element) =>\n                        !(\n                            element.barcode == this.state.barcode &&\n                            element.bcProductId == this.state.bcProductId\n                        )\n                );\n            } else {\n                history = [];\n            }\n\n            history.push({\n                barcode: this.state.barcode,\n                bcProductId: this.state.bcProductId,\n                brand: this.state.productData.brands,\n                image: this.state.productImageUrl,\n                label: this.state.ecoScore,\n                name: this.state.productName,\n                date: Date.now(),\n            });\n            localStorage.setItem(\"local_history\", JSON.stringify(history));\n\n            if (this.state.userId) {\n                fetch(\n                    `https://api.lowympact.fr/api/v1/users/${this.state.userId}/history`,\n                    // `http://localhost:8080/api/v1/users/${this.state.userId}/history`,\n                    {\n                        method: \"put\",\n                        credentials: \"include\",\n                        headers: new Headers({\n                            Authorization: localStorage.getItem(\"token\"),\n                            \"api-key\": \"99d8fb95-abdd-4885-bf6c-3a81d8874043\",\n                            \"Content-Type\": \"application/json\",\n                        }),\n                        body: JSON.stringify({\n                            barcode: this.state.barcode,\n                            bcProductAddress: this.state.bcProductId,\n                        }),\n                    }\n                )\n                    .then((response) => response.json())\n                    .then((res) => {\n                        //console.log(res);\n                    });\n            }\n        }\n    };\n\n    addToCart = () => {\n        if (this.state.barcode && this.state.cart >= 0) {\n            let co2 = -1;\n            if (this.state.dataEcoScore?.agribalyse?.co2_total) {\n                co2 = parseFloat(this.state.dataEcoScore?.agribalyse?.co2_total);\n            }\n\n            let ecoscore = \"unkown\";\n            if (this.state.ecoScore) {\n                ecoscore = this.state.ecoScore;\n            }\n            this.flip();\n            fetch(\n                `https://api.lowympact.fr/api/v1/users/${this.state.userId}/cart`,\n                // `http://localhost:8080/api/v1/users/${this.state.userId}/cart`,\n                {\n                    method: \"put\",\n                    credentials: \"include\",\n                    headers: new Headers({\n                        Authorization: localStorage.getItem(\"token\"),\n                        \"api-key\": \"99d8fb95-abdd-4885-bf6c-3a81d8874043\",\n                        \"Content-Type\": \"application/json\",\n                    }),\n                    body: JSON.stringify({\n                        barcode: this.state.barcode,\n                        bcProductAddress: this.state.bcProductId,\n                        quantityDelta: 1,\n                        ecoscore: ecoscore,\n                        carbonImpact: co2,\n                    }),\n                }\n            )\n                .then((response) => response.json())\n                .then((res) => {\n                    //console.log(res);\n                    if (res.success) {\n                        this.setState({ cart: this.state.cart + 1 });\n                    }\n                });\n        }\n    };\n\n    removeFromCart = () => {\n        if (this.state.barcode && this.state.cart > 0) {\n            this.flip();\n            let co2 = -1;\n            if (this.state.dataEcoScore?.agribalyse?.co2_total) {\n                co2 = parseFloat(this.state.dataEcoScore?.agribalyse?.co2_total);\n            }\n            let ecoscore = \"unkown\";\n            if (this.state.ecoScore) {\n                ecoscore = this.state.ecoScore;\n            }\n            fetch(\n                `https://api.lowympact.fr/api/v1/users/${this.state.userId}/cart`,\n                // `http://localhost:8080/api/v1/users/${this.state.userId}/cart`,\n                {\n                    method: \"put\",\n                    credentials: \"include\",\n                    headers: new Headers({\n                        Authorization: localStorage.getItem(\"token\"),\n                        \"api-key\": \"99d8fb95-abdd-4885-bf6c-3a81d8874043\",\n                        \"Content-Type\": \"application/json\",\n                    }),\n                    body: JSON.stringify({\n                        barcode: this.state.barcode,\n                        bcProductAddress: this.state.bcProductId,\n                        quantityDelta: -1,\n                        ecoscore: ecoscore,\n                        carbonImpact: co2,\n                    }),\n                }\n            )\n                .then((response) => response.json())\n                .then((res) => {\n                    //console.log(res);\n                    if (res.success) {\n                        this.setState({ cart: this.state.cart - 1 });\n                    }\n                });\n        }\n    };\n\n    flip = async (event) => {\n        // if (!this.isFlipping) {\n        // \tthis.isFlipping = true;\n        // \tawait delay(500);\n        //console.log(this.imageFlip.style.transform);\n        if (this.imageFlip && !this.state.isFlipping) {\n            if (this.imageFlip.style.transform === \"rotateY(360deg)\") {\n                this.imageFlip.style.transform = \"rotateY(0deg)\";\n            } else {\n                this.imageFlip.style.transform = \"rotateY(360deg)\";\n            }\n        }\n        // await delay(1000);\n        // this.isFlipping = false;\n        // }\n    };\n\n    displayImage = () => {\n        this.handleBarCodeUpdate();\n\n        let image = <React.Fragment />;\n        let productName = <React.Fragment />;\n        let genericName = <React.Fragment />;\n        let ecoScore = <React.Fragment />;\n        if (this.state.productImageUrl) {\n            image = (\n                <img src={this.state.productImageUrl} className=\"product-image\" alt=\"produit\" />\n            );\n        }\n\n        if (this.state.productName) {\n            productName = <div className=\"product-name\">{this.state.productName}</div>;\n        }\n        if (this.state.ecoScore) {\n            let scoreClass = \"color_score_\" + this.state.ecoScore;\n            ecoScore = (\n                <div className=\"product-ecoscore-image\">\n                    <span className={\"circle-score \" + scoreClass}>⬤ </span>\n                    EcoScore :<span className=\"uppercase \">{\" \" + this.state.ecoScore}</span>\n                </div>\n            );\n        } else if (this.state.genericName) {\n            genericName = <div className=\"product-generic-name\">{this.state.genericName}</div>;\n        }\n        return (\n            <React.Fragment>\n                {this.state.userId ? (\n                    <div\n                        className={this.state.cart > 0 ? \"add-to-cart green\" : \"add-to-cart\"}\n                        onClick={this.addToCart}\n                    >\n                        <span className=\"cart-count\">\n                            {this.state.cart > 0 ? this.state.cart : \"\"}\n                        </span>\n                        <span className=\"material-icons\">add_shopping_cart</span>\n                    </div>\n                ) : (\n                    <React.Fragment />\n                )}\n                {this.state.cart > 0 ? (\n                    <div className=\"remove-from-cart\" onClick={this.removeFromCart}>\n                        <span className=\"material-icons\">remove_shopping_cart</span>\n                    </div>\n                ) : (\n                    <React.Fragment />\n                )}\n                {image}\n                {productName}\n                <div className=\"product-bottom-image-div\">\n                    {genericName}\n                    {ecoScore}\n                </div>\n            </React.Fragment>\n        );\n    };\n\n    handleChange = (event, newValue) => {\n        this.setState({ value: newValue });\n        if (newValue === 1) {\n            let elem = document.getElementsByClassName(\"swiper-container\");\n            if (elem[0]) {\n                elem[0].scrollIntoView({ behavior: \"smooth\" });\n            }\n        }\n    };\n\n    displayNavbar = () => {\n        let retour = <React.Fragment />;\n        if (this.state.bcProductId) {\n            retour = (\n                <div className=\"product-navbar-container\">\n                    <button\n                        className={\n                            this.state.value === 0\n                                ? \"product-navbar-button selected\"\n                                : \"product-navbar-button\"\n                        }\n                        onClick={() => this.handleChange(\"\", 0)}\n                    >\n                        Environnement\n                    </button>\n                    <button\n                        className={\n                            this.state.value === 1\n                                ? \"product-navbar-button selected\"\n                                : \"product-navbar-button\"\n                        }\n                        onClick={() => this.handleChange(\"\", 1)}\n                    >\n                        Traçabilité\n                    </button>\n                    <div\n                        className={\n                            this.state.value === 0\n                                ? \"navbar-under nav-left\"\n                                : \"navbar-under nav-right\"\n                        }\n                    ></div>\n                </div>\n            );\n        }\n        return retour;\n    };\n\n    render = () => {\n        //tri des produits\n        let products = this.state.products?.sort((a, b) => {\n            if (a.depth > b.depth) return -1;\n            else return 1;\n        });\n        return (\n            <React.Fragment>\n                <div className=\"product-page-container\">\n                    <div className=\"product-header-container\">\n                        <div className=\"product-history-link\">\n                            <Link to=\"/history\"> {\"<\"} Historique</Link>\n                        </div>\n                        <img\n                            className=\"product-bitmap-image\"\n                            src=\"/images/utils/bitmap.png\"\n                            alt=\"\"\n                        />\n                    </div>\n                    <div\n                        className=\"product-image-container\"\n                        // onClick={this.flip}\n                        ref={(ref) => (this.imageFlip = ref)}\n                    >\n                        {this.displayImage()}\n                    </div>\n\n                    {this.displayNavbar()}\n\n                    {/* <AppBar position=\"static\">\n\t\t\t\t\t\t<Tabs\n\t\t\t\t\t\t\tvalue={this.state.value}\n\t\t\t\t\t\t\tonChange={this.handleChange}\n\t\t\t\t\t\t\taria-label=\"simple tabs example\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<Tab label=\"Traçabilité\" />\n\t\t\t\t\t\t\t<Tab label=\"Environnement\" />\n\t\t\t\t\t\t</Tabs>\n\t\t\t\t\t</AppBar>\n\t\t\t\t\t<TabPanel value={this.state.value} index={0}></TabPanel>\n\t\t\t\t\t<TabPanel value={this.state.value} index={1}>\n\t\t\t\t</TabPanel> */}\n                    {this.state.value === 0 ? (\n                        <Environnement\n                            dataEcoScore={this.state.dataEcoScore}\n                            ecoScore={this.state.ecoScore}\n                            origins={this.state.origins}\n                            displayTranportImpact={\n                                this.props.match.params.bcProductId !== null &&\n                                this.props.match.params.bcProductId !== undefined\n                            }\n                            barcode={this.props.match.params.barcode}\n                        ></Environnement>\n                    ) : (\n                        <div className=\"product-bottom-container\">\n                            <Traceability\n                                products={products}\n                                getBottomRef={this.getBottomRef}\n                                totalCO2Traceability={this.state.totalCO2Traceability}\n                            />\n                        </div>\n                    )}\n                    <Navbar\n                        barcode={this.props.match.params.barcode}\n                        bcProductId={this.props.match.params.bcProductId}\n                    />\n                </div>\n            </React.Fragment>\n        );\n    };\n}\n\nexport default Product;\n\nconst delay = (ms) => new Promise((res) => setTimeout(res, ms));\n","import \"./ButtonNavBar.css\";\n\nfunction ButtonHistory() {\n    return (\n        <div>\n            <div className=\"button-logo\">\n                <span className=\"material-icons\">history</span>\n            </div>\n            <div>Historique</div>\n        </div>\n    );\n}\n\nexport default ButtonHistory;\n","function ButtonProfil() {\n    return (\n        <div>\n            <div>\n                <span className=\"material-icons\">person</span>\n            </div>\n            <div>Profil</div>\n        </div>\n    );\n}\n\nexport default ButtonProfil;\n","import { React } from \"react\";\n\nfunction ButtonScan() {\n    return (\n        <div>\n            <div className=\"navbar-scan-icon\">\n                <span className=\"material-icons\">qr_code_scanner</span>\n            </div>\n        </div>\n    );\n}\n\nexport default ButtonScan;\n","import React, { Component } from \"react\";\nimport Quagga from \"quagga\";\n\nclass Scanner extends Component {\n    state = {\n        error: false,\n        usedCamera: 0,\n        devices: [],\n    };\n\n    switchCamera = () => {\n        let num = this.state.usedCamera + 1;\n        if (num >= this.state.devices.length) {\n            num = 0;\n        }\n        this.setState({ usedCamera: num });\n        Quagga.stop();\n        this.QuaggaInit(this.state.devices[num].deviceId);\n    };\n\n    componentDidMount = async () => {\n        let usedCameraId;\n        const devices = await navigator.mediaDevices.enumerateDevices().then(function (devices) {\n            return devices;\n        });\n        let videoDevices = [];\n        devices.forEach((device) => {\n            if (device.kind === \"videoinput\") {\n                videoDevices.push(device);\n                // if (device.label.match(/back/) != null) {\n                //     ////console.log(\"Found video device: \" + JSON.stringify(device));\n                // }\n            }\n        });\n        // ALL  cameras\n        //console.log(videoDevices);\n        this.setState({ devices: videoDevices });\n\n        // open every video device and dump its characteristics\n        let maxResolution = -1;\n        for (let i in videoDevices) {\n            const device = videoDevices[i];\n            // //console.log(\"Opening video device \" + device.deviceId + \" (\" + device.label + \")\");\n\n            await navigator.mediaDevices\n                .getUserMedia({\n                    video: { deviceId: { exact: device.deviceId } },\n                })\n                .then(\n                    (stream) => {\n                        stream.getVideoTracks().forEach((track) => {\n                            const capabilities = track.getCapabilities();\n\n                            if (\n                                capabilities.height.max >= maxResolution &&\n                                device.label.match(/back/) != null\n                            ) {\n                                maxResolution = capabilities.height.max;\n                                usedCameraId = device.deviceId;\n                                this.setState({ usedCamera: i });\n                            }\n\n                            ////console.log(\"Track capabilities: \" + JSON.stringify(capabilities));\n                        });\n\n                        stream.getTracks().forEach((track) => track.stop());\n                    },\n                    (err) => console.log(err)\n                );\n        }\n        this.QuaggaInit(usedCameraId);\n    };\n\n    QuaggaInit = (usedCameraId, width = 1920, height = 1080) => {\n        Quagga.init(\n            {\n                inputStream: {\n                    type: \"LiveStream\",\n                    constraints: {\n                        deviceId: usedCameraId,\n                        focusMode: \"continuous\",\n                        width: { min: width },\n                        height: { min: height },\n                        aspectRatio: {\n                            min: 1,\n                            max: 2,\n                        },\n                    },\n                },\n                locator: {\n                    patchSize: \"normal\",\n                    halfSample: false,\n                },\n                locate: false,\n                area: {\n                    top: \"25%\",\n                    right: \"25%\",\n                    left: \"25%\",\n                    bottom: \"25%\",\n                },\n                numOfWorkers: window.navigator.hardwareConcurrency || 2,\n                decoder: {\n                    readers: [\"ean_reader\"],\n                },\n                debug: {\n                    drawBoundingBox: true,\n                    showFrequency: true,\n                    drawScanline: true,\n                    showPattern: true,\n                },\n                multiple: false,\n                singleChannel: false,\n            },\n            (err) => {\n                if (err) {\n                    //console.log(err);\n                    if (width != 960 && height != 540) {\n                        this.QuaggaInit(usedCameraId, 960, 540);\n                    } else {\n                        this.setState({ error: true });\n                    }\n                    return false;\n                }\n                Quagga.start();\n            }\n        );\n        this.props.setQuagga(Quagga);\n        Quagga.onDetected(this._onDetected);\n    };\n\n    componentWillUnmount() {\n        Quagga.offDetected(this._onDetected);\n    }\n\n    _onDetected = async (result) => {\n        let stop = await this.props.onDetected(result);\n        //console.log(stop);\n        if (stop) {\n            Quagga.stop();\n        }\n    };\n\n    render() {\n        return (\n            <React.Fragment>\n                <div id=\"interactive\" className=\"viewport\" />\n                {this.state.devices?.length > 1 ? (\n                    <button className=\"code-switch-camera\" onClick={this.switchCamera}>\n                        <span className=\"material-icons\">cameraswitch</span>\n                        {this.state.usedCamera}\n                    </button>\n                ) : (\n                    <React.Fragment />\n                )}\n                {this.state.error ? (\n                    <div className=\"scan-error\">\n                        Il semblerait que votre caméra ne soit pas détectée. Essayez de changer de\n                        navigateur. Si le problème persiste, contactez-nous{\" \"}\n                        <a href=\"mailto:corentin.branchereau@insa-lyon.fr?Subject=Lowympact-camera not working\">\n                            via ce lien\n                        </a>\n                    </div>\n                ) : (\n                    <React.Fragment />\n                )}\n            </React.Fragment>\n        );\n    }\n}\n\nexport default Scanner;\n","import React, { Component } from \"react\";\nimport Scanner from \"./Scanner\";\nimport QrReader from \"react-qr-reader\";\nimport Switch from \"react-switch\";\nimport { Redirect } from \"react-router-dom\";\nimport \"./Scan.css\";\n\nclass Scan extends Component {\n    state = {\n        scanning: true,\n        status: \"\",\n        results: [],\n        usedCameraId: \"3f6fc4177028f25c3e8215f4444838450630b8d656c627ef511346545d37f302\",\n        devices: [],\n        reading: 0, //false : barcode - true: qrcode\n        barcode: undefined,\n        bcProductId: undefined,\n        Quagga: undefined,\n    };\n\n    setQuagga = (quagga) => {\n        if (this.state.Quagga) {\n            this.state.Quagga.stop();\n        }\n        this.setState({ Quagga: quagga });\n    };\n\n    _scan = () => {\n        this.setState({ scanning: !this.state.scanning, status: \"\" });\n    };\n\n    _onDetected = async (res) => {\n        if (res) {\n            if (res.codeResult && res.codeResult.code) {\n                this.setState({\n                    results: [res],\n                    scanning: true,\n                    status: \"waiting\",\n                });\n                let response = await fetch(\n                    `https://world.openfoodfacts.org/api/v0/product/${res.codeResult.code}.json/`\n                );\n                let result = await response.json();\n                if (result.status !== 0) {\n                    this.setState({\n                        scanning: false,\n                        status: \"found\",\n                        barcode: res.codeResult.code,\n                    });\n                    this.props.showScanner(false);\n                    if (this.state.Quagga) this.state.Quagga.stop();\n                    return true;\n                } else {\n                    this.setState({\n                        scanning: true,\n                        status: \"not found\",\n                    });\n                    return false;\n                }\n            }\n        }\n    };\n\n    handleScan = (data) => {\n        if (data) {\n            let arr = data.split(\"/\");\n            if (arr.length > 1) {\n                this.setState({\n                    scanning: false,\n                    barcode: arr[4],\n                    bcProductId: arr[5],\n                    status: \"found\",\n                });\n            }\n            if (this.state.Quagga) this.state.Quagga.stop();\n        }\n    };\n    handleError = (err) => {\n        console.error(err);\n    };\n\n    displayQrCode = () => {\n        if (this.state.status !== \"found\") {\n            return (\n                <QrReader\n                    delay={300}\n                    onError={this.handleError}\n                    onScan={this.handleScan}\n                    style={{ width: \"100%\" }}\n                    showViewFinder={false}\n                />\n            );\n        } else {\n            return <React.Fragment />;\n        }\n    };\n\n    displayBarCode = () => {\n        if (this.state.status !== \"found\") {\n            return (\n                <React.Fragment>\n                    <div className=\"header\">\n                        <ul className=\"results\">\n                            {this.state.results.map((result, i) => (\n                                <div key={result.codeResult.code + i}>\n                                    {this.state.status === \"waiting\"\n                                        ? \"Vérification du code\" + result?.codeResult?.code\n                                        : \"\"}\n                                    {this.state.status === \"not found\"\n                                        ? \"code non trouvé, merci de réessayer\"\n                                        : \"\"}\n                                </div>\n                            ))}\n                        </ul>\n                    </div>\n                    {this.state.scanning ? (\n                        <Scanner\n                            onDetected={this._onDetected}\n                            setQuagga={this.setQuagga}\n                            usedCameraId={this.usedCameraId}\n                        />\n                    ) : null}\n                </React.Fragment>\n            );\n        } else {\n            return <React.Fragment />;\n        }\n    };\n\n    switchReader = () => {\n        if (this.state.reading) this.setState({ reading: false });\n        else {\n            if (this.state.Quagga) this.state.Quagga.stop();\n            this.setState({ reading: true });\n        }\n    };\n\n    render() {\n        if (\n            this.state.barcode &&\n            this.state.bcProductId &&\n            (this.props.barcode !== this.state.barcode ||\n                this.props.bcProductId !== this.state.bcProductId)\n        ) {\n            return (\n                <Redirect to={\"/products/\" + this.state.barcode + \"/\" + this.state.bcProductId} />\n            );\n        }\n        if (this.state.barcode && this.props.barcode !== this.state.barcode) {\n            return <Redirect to={\"/products/\" + this.state.barcode} />;\n        } else {\n            return (\n                <div className=\"code-reader-container\">\n                    <span\n                        className=\"close\"\n                        onClick={() => {\n                            if (this.state.Quagga) this.state.Quagga.stop();\n\n                            this.props.showScanner(false);\n                        }}\n                    >\n                        &times;\n                    </span>\n                    <div className=\"code-switch\" onClick={this.switchReader}>\n                        <div className=\"span-code-switch\">\n                            <span\n                                className={\n                                    this.state.reading ? \"material-icons\" : \"material-icons green\"\n                                }\n                            >\n                                view_week\n                            </span>\n                            <span>Barcode</span>\n                        </div>\n                        <Switch\n                            onChange={this.switchReader}\n                            uncheckedIcon={false}\n                            checkedIcon={false}\n                            checked={this.state.reading}\n                            onColor={\"#888\"}\n                            offColor={\"#888\"}\n                        />\n                        <div className=\"span-code-switch\">\n                            <span\n                                className={\n                                    !this.state.reading ? \"material-icons\" : \"material-icons green\"\n                                }\n                            >\n                                qr_code_scanner\n                            </span>\n                            <span>QR Code</span>\n                        </div>\n                    </div>\n                    {this.state.reading ? this.displayQrCode() : this.displayBarCode()}\n                </div>\n            );\n        }\n    }\n}\n\nexport default Scan;\n","import \"./Navbar.css\";\nimport React from \"react\";\nimport ButtonHistory from \"../Button/ButtonHistory\";\nimport ButtonProfil from \"../Button/ButtonProfil\";\nimport ButtonScan from \"../Button/ButtonScan\";\n// import Scan from \"../Scan/Scan\";\nimport Scan from \"../Scan/Scan\";\n// import { ScanSettings } from \"scandit-sdk\";\nimport { Link } from \"react-router-dom\";\n\nclass Navbar extends React.Component {\n    state = {\n        showScanner: false,\n        barcode: undefined,\n        bcProductId: undefined,\n        height: 0,\n    };\n\n    componentDidMount() {\n        this.updateWindowDimensions();\n        window.addEventListener(\"resize\", this.updateWindowDimensions);\n    }\n\n    componentWillUnmount() {\n        window.removeEventListener(\"resize\", this.updateWindowDimensions);\n    }\n\n    updateWindowDimensions = () => {\n        this.setState({ height: window.innerHeight });\n    };\n\n    handleScannerButton = (bool) => {\n        this.setState({ showScanner: bool });\n    };\n\n    // handleBarcode = (res) => {\n    //     if (res) {\n    //         //détecté par barcode scanner\n    //         let arr = res.split(\"/\");\n    //         if (arr.length > 1) {\n    //             this.setState({\n    //                 barcode: arr[4],\n    //                 bcProductId: arr[5],\n    //                 showScanner: false,\n    //             });\n    //         } else {\n    //             this.setState({\n    //                 barcode: arr[0],\n    //                 showScanner: false,\n    //                 bcProductId: undefined,\n    //             });\n    //         }\n    //     }\n    // };\n\n    render = () => {\n        if (this.state.height < 550) {\n            return <React.Fragment />;\n        }\n        // if (\n        //     this.state.barcode &&\n        //     this.state.bcProductId &&\n        //     (this.props.barcode !== this.state.barcode ||\n        //         this.props.bcProductId !== this.state.bcProductId)\n        // ) {\n        //     return (\n        //         <Redirect to={\"/products/\" + this.state.barcode + \"/\" + this.state.bcProductId} />\n        //     );\n        // }\n\n        // if (this.state.barcode && this.props.barcode !== this.state.barcode) {\n        //     return <Redirect to={\"/products/\" + this.state.barcode} />;\n        // }\n\n        if (!this.state.showScanner) {\n            return (\n                <React.Fragment>\n                    <div className=\"navbar-container\">\n                        <Link\n                            to=\"/history\"\n                            className={\n                                window.location.pathname === \"/history\"\n                                    ? \"navbar-link navbar-text-left navbar-selected\"\n                                    : \"navbar-link navbar-text-left \"\n                            }\n                        >\n                            <ButtonHistory />\n                        </Link>\n                        <div onClick={() => this.handleScannerButton(true)}>\n                            <div className=\"navbar-circle\">\n                                <ButtonScan />\n                            </div>\n                        </div>\n                        <span className=\"navbar-scan-text\">Scan</span>\n                        <Link\n                            to=\"/profil\"\n                            className={\n                                window.location.pathname === \"/profil\"\n                                    ? \"navbar-link navbar-text-right navbar-selected\"\n                                    : \"navbar-link navbar-text-right \"\n                            }\n                        >\n                            <ButtonProfil />\n                        </Link>\n                    </div>\n                </React.Fragment>\n            );\n        } else {\n            return (\n                // <Scan\n                //     onCrossClicked={this.handleScannerButton}\n                //     // playSoundOnScan={true}\n                //     vibrateOnScan={true}\n                //     enableTorchToggle={true}\n                //     enablePinchToZoom={true}\n                //     enableCameraSwitcher={true}\n                //     guiStyle={\"viewfinder\"}\n                //     scanSettings={\n                //         new ScanSettings({\n                //             enabledSymbologies: [\n                //                 \"qr\",\n                //                 \"ean8\",\n                //                 \"ean13\",\n                //                 \"upca\",\n                //                 \"upce\",\n                //                 \"code128\",\n                //                 \"code39\",\n                //                 \"code93\",\n                //                 \"itf\",\n                //             ],\n                //             codeDuplicateFilter: 1000,\n                //         })\n                //     }\n                //     onScan={(scanResult) => {\n                //         //console.log(scanResult.barcodes[0].data);\n                //         this.handleBarcode(scanResult.barcodes[0].data);\n                //     }}\n                //     onError={(error) => {\n                //         console.error(error.message);\n                //     }}\n                // />\n                <Scan showScanner={this.handleScannerButton} history={this.props.history} />\n            );\n        }\n    };\n}\n\nexport default Navbar;\n"],"sourceRoot":""}