{"version":3,"sources":["pages/History.js","pages/Profil.js","components/Traceability/leaflet-curve/leaflet.curve.js","components/Traceability/leaflet-curve/Curve.js","components/Traceability/Traceability.js","components/Environnement/Alternatives.js","components/Environnement/Origins.js","components/Environnement/EmpreinteCarbone.js","components/Environnement/Environnement.js","pages/Product.js","App.js","reportWebVitals.js","index.js","components/Button/ButtonHistory.js","components/Button/ButtonProfil.js","components/Button/ButtonScan.js","components/Scan/Scanner.js","components/Scan/Scan.js","components/Navbar/Navbar.js","components/Header/Header.js","assets/images/bitmap.png","assets/images/fruits-vegetables-basket-by-oblik-studio.svg","components/Install/UseShouldShowPrompt.js","components/Install/UseIosInstallPrompt.js","components/Install/UseWebInstallPrompt.js","components/Install/InstallPWA.js","assets/images/logo.svg"],"names":["RenderHistoryItem","labelColor","item","label","pathProduct","barcode","bcProductId","name","className","to","src","image","alt","brand","style","color","indexOf","marginRight","History","props","componentDidMount","loadLocalStorageHistory","userId","localStorage","getItem","token","setState","loadHistoryInformations","fetch","method","credentials","headers","Headers","authorization","then","response","json","res","items","data","loading","setItem","JSON","stringify","history","parse","state","undefined","this","itemList","sort","a","b","Date","date","map","Object","keys","length","Header","Navbar","fruits","InstallPWA","Component","Profil","connected","disconnect","removeItem","push","Verify","isExpired","decodedToken","jwt","decode","complete","dateNow","payload","exp","getTime","displayConnectedProfil","Fragment","onClick","displayUnconnectedProfil","React","L","Curve","Path","extend","options","initialize","path","setOptions","_initialUpdate","_setPath","getPath","_coords","setPath","redraw","getBounds","_bounds","_computeBounds","lastPoint","lastCommand","coord","bound","LatLngBounds","i","String","lat","latLng","lng","controlPoint1","controlPoint2","endPoint","diffLat","diffLng","controlPoint","getCenter","_update","_map","_updatePath","_renderer","_updatecurve","_project","lastCoord","curCommand","curPoint","_points","latLngToLayerPoint","curve","SVG","include","layer","_curvePointsToPath","animate","_path","getTotalLength","dashArray","strokeDasharray","strokeDashoffset","points","point","str","x","y","positions","option","getOptions","fromProps","toProps","leafletElement","setStyleIfChanged","propTypes","children","PropTypes","oneOfType","arrayOf","node","object","array","isRequired","withLeaflet","Traceability","zoom","swiper","currentIndex","getMaterialIcon","mode","getTransportMode","getTranslation","displaySlides","slides","products","product","pastille","TransportCO2Impact","value","transport","productsOutput","productName","seller","localisation","city","country","type","buyer","Math","round","dist","handleMarkerClick","latlng","index","elem","document","getElementsByClassName","scrollIntoView","behavior","slideTo","p","getZoomRatio","latitude","longitude","flyTo","duration","onSlideChange","parseFloat","long","displayMarker","markers","icon","icon2","marker1","lat1","long1","marker2","lat2","long2","zIndex","Icon","iconUrl","iconRetinaUrl","iconSize","Point","Marker","zIndexOffset","position","curves","setAttribute","getCurveOptions","fill","delay","render","totalCO2Traceability","toFixed","Map","center","minZoom","scrollWheelZoom","dragging","maxBounds","maxBoundsViscosity","ref","getBottomRef","whenCreated","TileLayer","attribution","url","spaceBetween","slidesPerView","centeredSlides","activeIndex","onSwiper","toRadian","degree","PI","origin","destination","distance","lon1","lon2","deltaLat","deltaLon","pow","sin","cos","asin","sqrt","getDistance","latlng1","latlng2","offsetX","offsetY","r","theta","atan2","r2","theta2","midpointX","Alternatives","ecoScore","loadAlternatives","ciqual_code","componentDidUpdate","lastProps","code","alternatives","success","alternativesInfos","c","d","renderListAlternatives","listItems","id","href","img_url","RenderColor","alternativesloop","tab","alternativesList","eco_score","concat","alternatives_title","autoPlay","interval","centerMode","centerSlidePercentage","showThumbs","showIndicators","showStatus","labelLevel","Origins","polygon","activeCountry","getCountries","setActiveCountry","origins","geo","coordinates","poly","Polygon","fillColor","opacity","EmpreinteCarbone","alea","setAlea","nb","dataEcoScore","agribalyse","co2_total","repartition","percent","co2_agriculture","co2_transportation","co2_packaging","co2_processing","co2_distribution","co2_consumption","equivalent","getEquivalent","circle","co2","Environnement","width","materials","getColor","note","getColorImpact","getLabel","getLabelImpact","getLabelImpactPackaging","getColorImpactPackaging","updateWindowDimensions","window","innerWidth","displayPackagingDetailImpact","adjustments","packaging","packagings","material","split","filter","pos","separator","displayPackagingImpact","addEventListener","removeEventListener","Product","match","params","productImageUrl","genericName","productData","cart","countries","isFlipping","component","bottomComponent","loadCartInfo","loadFromOpenFoodFacts","loadProductInformations","handleBarCodeUpdate","traceability","impact","transportCO2Impact","image_url","product_name","generic_name","ecoscore_grade","ecoscore_data","origins_hierarchy","status","saveHistory","Authorization","console","log","quantity","queryString","location","search","urlParams","URLSearchParams","get","element","brands","now","body","bcProductAddress","addToCart","ecoscore","flip","quantityDelta","carbonImpact","removeFromCart","event","imageFlip","transform","displayImage","scoreClass","handleChange","newValue","displayNavbar","retour","depth","displayTranportImpact","ms","Promise","setTimeout","Login","lazy","Error404","Signup","Signin","ProfileConfiguration","Statistics","Debug","Avis","App","fallback","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","getElementById","ButtonHistory","ButtonProfil","ButtonScan","Scanner","error","noBackCamera","usedCamera","devices","processingImage","text","mutlipleTracks","no_permission","switchCamera","num","Quagga","stop","QuaggaInit","deviceId","navigator","getUserMedia","webkitGetUserMedia","mozGetUserMedia","msGetUserMedia","mediaDevices","enumerateDevices","kind","videoDevices","capabilities","device","video","stream","getVideoTracks","track","getCapabilities","getTracks","forEach","err","all","capa","max","height","init","inputStream","constraints","locator","patchSize","halfSample","locate","area","top","right","left","bottom","numOfWorkers","hardwareConcurrency","decoder","readers","multiple","singleChannel","start","setQuagga","onDetected","_onDetected","result","onDrop","reader","FileReader","readAsDataURL","onloadend","decodeSingle","codeResult","setImport","offDetected","textImage","withIcon","withPreview","buttonText","onChange","imgExtension","maxFileSize","labelClass","Scan","scanning","results","usedCameraId","reading","quagga","_scan","showScanner","handleScan","arr","handleError","displayQrCode","onError","onScan","showViewFinder","displayBarCode","switchReader","innerHeight","handleScannerButton","bool","pathname","blob","logo","setInstallPromptSeenToday","promptName","today","moment","toISOString","getUserShouldBePromptedToInstall","daysToWaitBeforePromptingAgain","lastPrompt","getInstallPromptLastSeenAt","daysSinceLastPrompt","diff","isNaN","UseShouldShowPrompt","useState","userShouldBePromptedToInstall","setUserShouldBePromptedToInstall","handleUserSeeingInstallPrompt","isIOS","standalone","ua","userAgent","isIPad","isIPhone","UseIosInstallPrompt","useShouldShowPrompt","UseWebInstallPrompt","installPromptEvent","setInstallPromptEvent","prompt","userChoice","choice","outcome","useIosInstallPrompt","iosInstallPrompt","handleIOSInstallDeclined","useWebInstallPrompt","webInstallPrompt","handleWebInstallDeclined","handleWebInstallAccepted","borderTopRightRadius","borderTopLeftRadius","backgroundColor","marginTop"],"mappings":"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","file":"static/js/main.a3e81b8d.chunk.js","sourcesContent":["import { React, Component, Fragment } from \"react\";\nimport fruits from \"../assets/images/fruits-vegetables-basket-by-oblik-studio.svg\";\nimport Navbar from \"../components/Navbar/Navbar\";\nimport Header from \"../components/Header/Header\";\nimport \"./History.css\";\n// import { ITEMS } from \"../assets/scanned/items\";\nimport { Link } from \"react-router-dom\";\nimport InstallPWA from \"../components/Install/InstallPWA\";\n\nfunction RenderHistoryItem({ item }) {\n    var labelColor;\n    if (item.label === \"d\" || item.label === \"e\") {\n        labelColor = \"red\";\n    } else if (item.label === \"c\") {\n        labelColor = \"yellow\";\n    } else if (item.label === \"a\" || item.label === \"b\") {\n        labelColor = \"green\";\n    }\n\n    var pathProduct = \"/products/\" + item.barcode;\n    if (item.bcProductId) {\n        pathProduct += \"/\" + item.bcProductId;\n    }\n    pathProduct += \"?cart=no\";\n\n    // Mock Soutenance\n    if (item.barcode === \"80135463\") {\n        item.name = \"Nutella 200g\";\n    }\n\n    return (\n        <div>\n            <Link className=\"history-item\" to={pathProduct}>\n                <div className=\"history-img-container\">\n                    <img src={item.image} alt=\"\" />\n                </div>\n                <div className=\"history-name-container\">\n                    <div className=\"history-name\">{item.name}</div>\n                    <div className=\"history-brand\">{item.brand}</div>\n                </div>\n                <div className=\"history-label-container\">\n                    <div style={{ color: labelColor }}>●</div>\n                    <div className=\"history-label\">\n                        {[\"a\", \"b\", \"c\", \"d\", \"e\"].indexOf(item.label) == -1 ? \"\" : item.label}\n                    </div>\n                </div>\n                <div style={{ marginRight: \"10px\", color: \"rgb(41,72,102)\" }}>{\">\"}</div>\n            </Link>\n        </div>\n    );\n}\n\nclass History extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            items: undefined,\n            loading: true,\n            userId: undefined,\n        };\n    }\n\n    componentDidMount = () => {\n        this.loadLocalStorageHistory();\n        let userId = localStorage.getItem(\"userId\");\n        let token = localStorage.getItem(\"token\");\n        if (userId && token) {\n            this.setState({ userId: userId });\n            // this.loadHistoryInformations(userId);\n        }\n    };\n\n    loadHistoryInformations = (userId) => {\n        fetch(\n            `https://api.lowympact.fr/api/v1/users/${userId}/history`,\n            // `http://localhost:8080/api/v1/users/${userId}/history`,\n\n            {\n                method: \"get\",\n                credentials: \"include\",\n                headers: new Headers({\n                    authorization: localStorage.getItem(\"token\"),\n                    \"Content-Type\": \"application/json\",\n                    \"api-key\": \"99d8fb95-abdd-4885-bf6c-3a81d8874043\",\n                }),\n            }\n        )\n            .then((response) => response.json())\n            .then((res) => {\n                //console.log(res);\n\n                this.setState({\n                    items: res?.data,\n                    loading: false,\n                });\n                localStorage.setItem(\"local_history\", JSON.stringify(res?.data));\n            });\n    };\n\n    loadLocalStorageHistory = () => {\n        let history = JSON.parse(localStorage.getItem(\"local_history\"));\n        this.setState({\n            items: history,\n            loading: false,\n        });\n\n        if (!history) {\n            let userId = localStorage.getItem(\"userId\");\n            let token = localStorage.getItem(\"token\");\n            if (userId && token) {\n                this.setState({\n                    loading: true,\n                });\n                this.loadHistoryInformations(userId);\n            }\n        }\n    };\n\n    render() {\n        if (this.state.items) {\n            let itemList = <Fragment />;\n            if (!this.loading) {\n                itemList = this.state.items\n                    .sort((a, b) => {\n                        if (Date.parse(new Date(a.date)) < Date.parse(new Date(b.date))) {\n                            return 1;\n                        } else {\n                            return -1;\n                        }\n                        // else return true;\n                    })\n                    .map((item) => {\n                        return (\n                            <div key={item.barcode + item.bcProductId}>\n                                <RenderHistoryItem item={item} />\n                            </div>\n                        );\n                    });\n            } else {\n                itemList = (\n                    <div className=\"loader\">\n                        <img src=\"/images/utils/loading.gif\" alt=\"\" />\n                    </div>\n                );\n            }\n\n            if (Object.keys(this.state.items).length === 0)\n                return (\n                    <div>\n                        <Header />\n                        <Navbar />\n                        <div className=\"App\">\n                            <div>\n                                <img src={fruits} className=\"logo\" alt=\"Fruits\" />\n                                <p className=\"logo-text\">Commence à scanner des produits !</p>\n                            </div>\n                        </div>\n                    </div>\n                );\n            else\n                return (\n                    <div>\n                        <div className=\"screen\">\n                            <div className=\"screen-title\">{itemList}</div>\n                        </div>\n                        <Header />\n                        <Navbar />\n                        {this.state.items.length > 1 ? <InstallPWA /> : <Fragment />}\n                    </div>\n                );\n        } else {\n            let image = (\n                <div>\n                    <img src={fruits} className=\"logo\" alt=\"Fruits\" />\n                    <p className=\"logo-text\">Commence à scanner des produits !</p>\n                </div>\n            );\n            if (this.state.loading) {\n                image = (\n                    <div className=\"loader\">\n                        <img src=\"/images/utils/loading.gif\" alt=\"\" />\n                    </div>\n                );\n            }\n            return (\n                <div>\n                    <Header />\n                    <Navbar />\n                    <div className=\"App\">{image}</div>\n                </div>\n            );\n        }\n    }\n}\n\nexport default History;\n","import React from \"react\";\nimport Navbar from \"../components/Navbar/Navbar\";\nimport Header from \"../components/Header/Header\";\nimport \"./Profil.css\";\nimport { Link } from \"react-router-dom\";\nimport jwt from \"jsonwebtoken\";\n\nclass Profil extends React.Component {\n    state = {\n        connected: false,\n    };\n\n    disconnect = () => {\n        localStorage.removeItem(\"token\");\n        localStorage.removeItem(\"userId\");\n        this.props.history.push(\"/login\");\n    };\n\n    componentDidMount = () => {\n        this.Verify();\n    };\n\n    Verify = () => {\n        let isExpired = true;\n        const token = localStorage.getItem(\"token\");\n        if (token) {\n            var decodedToken = jwt.decode(token, { complete: true });\n            var dateNow = new Date();\n            if (decodedToken.payload.exp >= dateNow.getTime() / 1000) {\n                isExpired = false;\n            }\n        }\n        if (isExpired === false) {\n            this.setState({ connected: true }); // redirection vers la page login\n        }\n    };\n\n    displayConnectedProfil = () => {\n        return (\n            <React.Fragment>\n                <h2 className=\"profil-title\">Bienvenue sur ton profil!</h2>\n                <Link to=\"/stats\" className=\"profil-button\">\n                    Statistiques\n                </Link>\n                <Link to=\"/avis\" className=\"profil-button\">\n                    Donnez votre avis !\n                </Link>\n                <Link to=\"/configuration\" className=\"profil-button\">\n                    Configuration\n                </Link>\n                <div onClick={this.disconnect} className=\"profil-button-disconnect\">\n                    <div className=\"material-icons\">logout</div>\n                    <p>Déconnexion</p>\n                </div>\n            </React.Fragment>\n        );\n    };\n\n    displayUnconnectedProfil = () => {\n        return (\n            <React.Fragment>\n                <h2 className=\"profil-title\">Non connecté</h2>\n                <p>Connecte toi pour que ton historique soit sauvegardé !</p>\n                <Link to=\"/login\" className=\"profil-button\">\n                    Me Connecter\n                </Link>\n            </React.Fragment>\n        );\n    };\n\n    render() {\n        return (\n            <div>\n                <Link to=\"/\">\n                    <Header />\n                </Link>\n                <div className=\"profil-screen\">\n                    <div className=\"profil-picture\">\n                        <div className=\"material-icons\">person</div>\n                    </div>\n                    {this.state.connected\n                        ? this.displayConnectedProfil()\n                        : this.displayUnconnectedProfil()}\n                </div>\n                <Navbar />\n            </div>\n        );\n    }\n}\n\nexport default Profil;\n","import L from \"leaflet\";\n\nL.Curve = L.Path.extend({\n\toptions: {},\n\n\tinitialize: function (path, options) {\n\t\t//1\n\t\tL.setOptions(this, options);\n\t\tthis._initialUpdate = true;\n\t\tthis._setPath(path);\n\t},\n\n\tgetPath: function () {\n\t\treturn this._coords;\n\t},\n\n\tsetPath: function (path, options) {\n\t\tthis._initialUpdate = true;\n\t\tthis._setPath(path);\n\t\treturn this.redraw();\n\t},\n\n\tgetBounds: function () {\n\t\treturn this._bounds;\n\t},\n\n\t_setPath: function (path) {\n\t\t//2\n\t\tthis._coords = path;\n\t\tthis._bounds = this._computeBounds();\n\t},\n\n\t_computeBounds: function () {\n\t\t//3\n\t\tvar bound = new L.LatLngBounds();\n\t\tvar lastPoint;\n\t\tvar lastCommand;\n\t\tvar coord;\n\t\tfor (var i = 0; i < this._coords.length; i++) {\n\t\t\tcoord = this._coords[i];\n\t\t\tif (typeof coord == \"string\" || coord instanceof String) {\n\t\t\t\tlastCommand = coord;\n\t\t\t} else if (lastCommand == \"H\") {\n\t\t\t\tbound.extend([lastPoint.lat, coord[0]]);\n\t\t\t\tlastPoint = new L.latLng(lastPoint.lat, coord[0]);\n\t\t\t} else if (lastCommand == \"V\") {\n\t\t\t\tbound.extend([coord[0], lastPoint.lng]);\n\t\t\t\tlastPoint = new L.latLng(coord[0], lastPoint.lng);\n\t\t\t} else if (lastCommand == \"C\") {\n\t\t\t\tvar controlPoint1 = new L.latLng(coord[0], coord[1]);\n\t\t\t\tcoord = this._coords[++i];\n\t\t\t\tvar controlPoint2 = new L.latLng(coord[0], coord[1]);\n\t\t\t\tcoord = this._coords[++i];\n\t\t\t\tvar endPoint = new L.latLng(coord[0], coord[1]);\n\n\t\t\t\tbound.extend(controlPoint1);\n\t\t\t\tbound.extend(controlPoint2);\n\t\t\t\tbound.extend(endPoint);\n\n\t\t\t\tendPoint.controlPoint1 = controlPoint1;\n\t\t\t\tendPoint.controlPoint2 = controlPoint2;\n\t\t\t\tlastPoint = endPoint;\n\t\t\t} else if (lastCommand == \"S\") {\n\t\t\t\tvar controlPoint2 = new L.latLng(coord[0], coord[1]);\n\t\t\t\tcoord = this._coords[++i];\n\t\t\t\tvar endPoint = new L.latLng(coord[0], coord[1]);\n\n\t\t\t\tvar controlPoint1 = lastPoint;\n\t\t\t\tif (lastPoint.controlPoint2) {\n\t\t\t\t\tvar diffLat = lastPoint.lat - lastPoint.controlPoint2.lat;\n\t\t\t\t\tvar diffLng = lastPoint.lng - lastPoint.controlPoint2.lng;\n\t\t\t\t\tcontrolPoint1 = new L.latLng(\n\t\t\t\t\t\tlastPoint.lat + diffLat,\n\t\t\t\t\t\tlastPoint.lng + diffLng\n\t\t\t\t\t);\n\t\t\t\t}\n\n\t\t\t\tbound.extend(controlPoint1);\n\t\t\t\tbound.extend(controlPoint2);\n\t\t\t\tbound.extend(endPoint);\n\n\t\t\t\tendPoint.controlPoint1 = controlPoint1;\n\t\t\t\tendPoint.controlPoint2 = controlPoint2;\n\t\t\t\tlastPoint = endPoint;\n\t\t\t} else if (lastCommand == \"Q\") {\n\t\t\t\tvar controlPoint = new L.latLng(coord[0], coord[1]);\n\t\t\t\tcoord = this._coords[++i];\n\t\t\t\tvar endPoint = new L.latLng(coord[0], coord[1]);\n\n\t\t\t\tbound.extend(controlPoint);\n\t\t\t\tbound.extend(endPoint);\n\n\t\t\t\tendPoint.controlPoint = controlPoint;\n\t\t\t\tlastPoint = endPoint;\n\t\t\t} else if (lastCommand == \"T\") {\n\t\t\t\tvar endPoint = new L.latLng(coord[0], coord[1]);\n\n\t\t\t\tvar controlPoint = lastPoint;\n\t\t\t\tif (lastPoint.controlPoint) {\n\t\t\t\t\tvar diffLat = lastPoint.lat - lastPoint.controlPoint.lat;\n\t\t\t\t\tvar diffLng = lastPoint.lng - lastPoint.controlPoint.lng;\n\t\t\t\t\tcontrolPoint = new L.latLng(\n\t\t\t\t\t\tlastPoint.lat + diffLat,\n\t\t\t\t\t\tlastPoint.lng + diffLng\n\t\t\t\t\t);\n\t\t\t\t}\n\n\t\t\t\tbound.extend(controlPoint);\n\t\t\t\tbound.extend(endPoint);\n\n\t\t\t\tendPoint.controlPoint = controlPoint;\n\t\t\t\tlastPoint = endPoint;\n\t\t\t} else {\n\t\t\t\tbound.extend(coord);\n\t\t\t\tlastPoint = new L.latLng(coord[0], coord[1]);\n\t\t\t}\n\t\t}\n\t\treturn bound;\n\t},\n\n\t//TODO: use a centroid algorithm instead\n\tgetCenter: function () {\n\t\treturn this._bounds.getCenter();\n\t},\n\n\t_update: function () {\n\t\t//5\n\t\tif (!this._map) {\n\t\t\treturn;\n\t\t}\n\t\tthis._updatePath();\n\t},\n\n\t_updatePath: function () {\n\t\t//6\n\t\tthis._renderer._updatecurve(this);\n\t},\n\n\t_project: function () {\n\t\t//4\n\t\tvar coord, lastCoord, curCommand, curPoint;\n\n\t\tthis._points = [];\n\n\t\tfor (var i = 0; i < this._coords.length; i++) {\n\t\t\tcoord = this._coords[i];\n\t\t\tif (typeof coord == \"string\" || coord instanceof String) {\n\t\t\t\tthis._points.push(coord);\n\t\t\t\tcurCommand = coord;\n\t\t\t} else {\n\t\t\t\tswitch (coord.length) {\n\t\t\t\t\tcase 2:\n\t\t\t\t\t\tcurPoint = this._map.latLngToLayerPoint(coord);\n\t\t\t\t\t\tlastCoord = coord;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 1:\n\t\t\t\t\t\tif (curCommand == \"H\") {\n\t\t\t\t\t\t\tcurPoint = this._map.latLngToLayerPoint([\n\t\t\t\t\t\t\t\tlastCoord[0],\n\t\t\t\t\t\t\t\tcoord[0],\n\t\t\t\t\t\t\t]);\n\t\t\t\t\t\t\tlastCoord = [lastCoord[0], coord[0]];\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tcurPoint = this._map.latLngToLayerPoint([\n\t\t\t\t\t\t\t\tcoord[0],\n\t\t\t\t\t\t\t\tlastCoord[1],\n\t\t\t\t\t\t\t]);\n\t\t\t\t\t\t\tlastCoord = [coord[0], lastCoord[1]];\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tthis._points.push(curPoint);\n\t\t\t}\n\t\t}\n\t},\n});\n\nL.curve = function (path, options) {\n\treturn new L.Curve(path, options);\n};\n\nL.SVG.include({\n\t//7\n\t_updatecurve: function (layer) {\n\t\tthis._setPath(layer, this._curvePointsToPath(layer._points));\n\t\tif (layer.options.animate) {\n\t\t\tvar path = layer._path;\n\t\t\tvar length = path.getTotalLength();\n\n\t\t\tif (!layer.options.dashArray) {\n\t\t\t\tpath.style.strokeDasharray = length + \" \" + length;\n\t\t\t}\n\n\t\t\tif (layer._initialUpdate) {\n\t\t\t\tpath.animate(\n\t\t\t\t\t[{ strokeDashoffset: length }, { strokeDashoffset: 0 }],\n\t\t\t\t\tlayer.options.animate\n\t\t\t\t);\n\t\t\t\tlayer._initialUpdate = false;\n\t\t\t}\n\t\t}\n\t},\n\n\t_curvePointsToPath: function (points) {\n\t\tvar point,\n\t\t\tcurCommand,\n\t\t\tstr = \"\";\n\t\tfor (var i = 0; i < points.length; i++) {\n\t\t\tpoint = points[i];\n\t\t\tif (typeof point == \"string\" || point instanceof String) {\n\t\t\t\tcurCommand = point;\n\t\t\t\tstr += curCommand;\n\t\t\t} else {\n\t\t\t\tswitch (curCommand) {\n\t\t\t\t\tcase \"H\":\n\t\t\t\t\t\tstr += point.x + \" \";\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"V\":\n\t\t\t\t\t\tstr += point.y + \" \";\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tstr += point.x + \",\" + point.y + \" \";\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn str || \"M0 0\";\n\t},\n});\n","// import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Path, withLeaflet } from \"react-leaflet\";\nimport { curve } from \"./leaflet.curve\";\nimport L from \"leaflet\";\n\nclass Curve extends Path {\n\tcreateLeafletElement(props) {\n\t\tconst { positions, option, ...options } = props;\n\t\treturn L.curve(positions, option, this.getOptions(options));\n\t}\n\n\tupdateLeafletElement(fromProps, toProps) {\n\t\tif (toProps.positions !== fromProps.positions) {\n\t\t\tthis.leafletElement.setPath(toProps.positions);\n\t\t}\n\t\tthis.setStyleIfChanged(fromProps, toProps);\n\t}\n}\n\nCurve.propTypes = {\n\tchildren: PropTypes.oneOfType([\n\t\tPropTypes.arrayOf(PropTypes.node),\n\t\tPropTypes.node,\n\t]),\n\toption: PropTypes.object,\n\tpositions: PropTypes.array.isRequired,\n};\n\nexport default withLeaflet(Curve);\n\n/*\n  componentWillMount() {\n    super.componentWillMount();\n    const { positions, ...options } = this.props\n    this.leafletElement = L.curve(positions, this.getOptions(options))\n  }*/\n","import React from \"react\";\nimport { Map, TileLayer, Marker } from \"react-leaflet\";\nimport \"./Traceability.css\";\nimport { Swiper, SwiperSlide } from \"swiper/react\";\nimport { Curve } from \"./leaflet-curve\";\nimport L from \"leaflet\";\n// Import Swiper styles\nimport \"swiper/swiper-bundle.css\";\n\nclass Traceability extends React.Component {\n    map = undefined;\n    state = {\n        zoom: 12,\n        swiper: undefined,\n        currentIndex: 0,\n        map: undefined,\n    };\n\n    getMaterialIcon = (mode) => {\n        switch (mode) {\n            case \"Charette\":\n                return \"directions_bike\";\n            case \"Plane\":\n                return \"flight_takeoff\";\n            case \"Train\":\n                return \"train\";\n            case \"Boat\":\n                return \"directions_boat_filled\";\n            case \"Truck\":\n                return \"local_shipping\";\n            default:\n                return \"nature_people\";\n        }\n    };\n\n    getTransportMode = (mode) => {\n        switch (mode) {\n            case \"Charette\":\n                return \"vélo\";\n            case \"Plane\":\n                return \"avion\";\n            case \"Train\":\n                return \"train\";\n            case \"Boat\":\n                return \"bateau\";\n            case \"Truck\":\n                return \"camion\";\n            default:\n                return mode;\n        }\n    };\n    getTranslation = (mode) => {\n        switch (mode) {\n            case \"maker\":\n                return \"Fabricant\";\n            case \"productor\":\n                return \"Producteur\";\n            case \"shop\":\n                return \"Revendeur\";\n            default:\n                return mode;\n        }\n    };\n\n    displaySlides = () => {\n        let slides = <React.Fragment />;\n        if (this.props.products) {\n            slides = this.props.products.map((product) => {\n                let pastille = \"product-slide-pastille past-green\";\n                if (product.TransportCO2Impact?.value > 10) {\n                    pastille = \"product-slide-pastille past-orange\";\n                }\n                if (product.TransportCO2Impact?.value > 100) {\n                    pastille = \"product-slide-pastille past-red\";\n                }\n\n                return (\n                    <SwiperSlide>\n                        <div className=\"product-slide-container\">\n                            <div className=\"product-slide-icon\">\n                                <span className=\"material-icons\">\n                                    {this.getMaterialIcon(product.transport)}\n                                </span>\n\n                                <div className=\"product-slide-name\">\n                                    <span className=\"product-slide-name-product\">\n                                        {product.productsOutput[0].productName}\n                                    </span>\n                                    <span className=\"product-slide-name-transport\">\n                                        Transport en {this.getTransportMode(product.transport)}\n                                    </span>\n                                </div>\n                            </div>\n                            <div className=\"product-slide-origin-wrapper\">\n                                <div className=\"product-transport-ui\">\n                                    <div className=\"transport-ui-circle\"></div>\n                                    <div className=\"transport-ui-tiret\"></div>\n                                    <div className=\"transport-ui-circle circle-bis\"></div>\n                                </div>\n                                <div className=\"product-slide-transport-container\">\n                                    <div className=\"product-slide-bigname\">\n                                        <span>\n                                            {product.seller.localisation.city},{\" \"}\n                                            {product.seller.localisation.country}\n                                        </span>\n                                    </div>\n                                    <div className=\"product-slide-lowername2\">\n                                        {this.getTranslation(product.seller?.type)}\n                                        {\": \"}\n                                        {product.seller?.name}\n                                    </div>\n\n                                    <div className=\"product-slide-bigname bigname-lower\">\n                                        <span>\n                                            {product.buyer.localisation.city},{\" \"}\n                                            {product.buyer.localisation.country}\n                                        </span>\n                                    </div>\n                                    <div className=\"product-slide-lowername2\">\n                                        {this.getTranslation(product.buyer?.type)}\n                                        {\": \"}\n                                        {product.buyer?.name}\n                                    </div>\n                                </div>\n                            </div>\n                            <div className=\"product-slide-arrow\">{\">\"}</div>\n                            <div className=\"product-slide-consumption\">\n                                <div className={pastille}></div>\n                                <div>{Math.round(product.dist.value)} km </div>\n                                <div>\n                                    {product.TransportCO2Impact?.value > 1\n                                        ? Math.round(product.TransportCO2Impact?.value)\n                                        : \"< 1\"}{\" \"}\n                                    kg CO2{\" \"}\n                                </div>\n                            </div>\n                        </div>\n                    </SwiperSlide>\n                );\n            });\n        }\n        return slides;\n    };\n\n    handleMarkerClick = (latlng, index) => {\n        // window.scrollTo({ top: \"8000px\", behavior: \"smooth\" });\n        let elem = document.getElementsByClassName(\"swiper-container\");\n        if (elem[0]) {\n            elem[0].scrollIntoView({ behavior: \"smooth\" });\n        }\n\n        if (index >= this.props.products?.length) {\n            this.state.swiper.slideTo(index - 1, 500);\n        } else {\n            this.state.swiper.slideTo(index, 500);\n        }\n        let zoom = 5;\n        if (this.props.products && this.props.products[index]) {\n            let p = this.props.products[index];\n\n            zoom = getZoomRatio(\n                [p.buyer.localisation.latitude, p.buyer.localisation.longitude],\n                [p.seller.localisation.latitude, p.seller.localisation.longitude]\n            );\n        }\n\n        this.map.leafletElement.flyTo(latlng, zoom, { duration: 0.5 });\n    };\n\n    onSlideChange = (index) => {\n        this.setState({ currentIndex: index });\n        let zoom = 5;\n        if (this.props.products && this.props.products[index]) {\n            let p = this.props.products[index];\n\n            zoom = getZoomRatio(\n                [p.buyer.localisation.latitude, p.buyer.localisation.longitude],\n                [p.seller.localisation.latitude, p.seller.localisation.longitude]\n            );\n\n            let lat =\n                (parseFloat(p.seller.localisation.latitude) +\n                    parseFloat(p.buyer.localisation.latitude)) /\n                2;\n            let long =\n                (parseFloat(p.seller.localisation.longitude) +\n                    parseFloat(p.buyer.localisation.longitude)) /\n                2;\n\n            this.map.leafletElement.flyTo([lat, long], zoom, { duration: 0.5 });\n        }\n    };\n\n    displayMarker = () => {\n        let markers = <React.Fragment />;\n        if (this.props.products) {\n            markers = this.props.products.map((product, i) => {\n                let marker1 = <React.Fragment />;\n                let lat1 = parseFloat(product?.buyer?.localisation?.latitude);\n                let long1 = parseFloat(product?.buyer?.localisation?.longitude);\n                let marker2 = <React.Fragment />;\n                let lat2 = parseFloat(product?.seller?.localisation?.latitude);\n                let long2 = parseFloat(product?.seller?.localisation?.longitude);\n                let icon;\n                let icon2;\n                let zIndex = 0;\n                if (i === this.state.currentIndex) {\n                    icon = new L.Icon({\n                        iconUrl: \"/images/utils/map.png\", //require('../../images/logo/logo.svg'),\n                        iconRetinaUrl: \"/images/utils/map.png\", //\"/images/images_volume/1-l.png\", //require('../../images/logo/logo.svg'),\n                        iconSize: new L.Point(32, 32),\n                        className: \"leaflet-mark-icon\",\n                    });\n                    icon2 = new L.Icon({\n                        iconUrl: \"/images/utils/map.png\", //require('../../images/logo/logo.svg'),\n                        iconRetinaUrl: \"/images/utils/map3.png\", //\"/images/images_volume/1-l.png\", //require('../../images/logo/logo.svg'),\n                        iconSize: new L.Point(32, 32),\n                        className: \"leaflet-mark-icon\",\n                    });\n                    zIndex = 5;\n                } else {\n                    icon = new L.Icon({\n                        iconUrl: \"/images/utils/map2.png\", //require('../../images/logo/logo.svg'),\n                        iconRetinaUrl: \"/images/utils/map2.png\", //\"/images/images_volume/1-l.png\", //require('../../images/logo/logo.svg'),\n                        iconSize: new L.Point(25, 25),\n                        className: \"leaflet-mark-icon\",\n                    });\n                    icon2 = new L.Icon({\n                        iconUrl: \"/images/utils/map2.png\", //require('../../images/logo/logo.svg'),\n                        iconRetinaUrl: \"/images/utils/map2.png\", //\"/images/images_volume/1-l.png\", //require('../../images/logo/logo.svg'),\n                        iconSize: new L.Point(25, 25),\n                        className: \"leaflet-mark-icon\",\n                    });\n                }\n\n                if (lat1 && long1) {\n                    marker1 = (\n                        <Marker\n                            zIndexOffset={zIndex}\n                            icon={icon}\n                            position={[lat1, long1]}\n                            onClick={() =>\n                                this.handleMarkerClick(\n                                    [\n                                        parseFloat(product.buyer.localisation.latitude),\n                                        parseFloat(product.buyer.localisation.longitude),\n                                    ],\n                                    i + 1\n                                )\n                            }\n                        >\n                            {/* <Popup>{product.buyer.name}</Popup> */}\n                        </Marker>\n                    );\n                }\n                if (lat2 && long2) {\n                    marker2 = (\n                        <Marker\n                            zIndexOffset={zIndex}\n                            icon={icon2}\n                            position={[lat2, long2]}\n                            onClick={() =>\n                                this.handleMarkerClick(\n                                    [\n                                        parseFloat(product.seller.localisation.latitude),\n                                        parseFloat(product.seller.localisation.longitude),\n                                    ],\n                                    i\n                                )\n                            }\n                        >\n                            {/* <Popup>{product.seller.name}</Popup> */}\n                        </Marker>\n                    );\n                }\n\n                let color = \"#1b3044\";\n                let curves = document.getElementsByClassName(\"leaflet-interactive\");\n\n                if (curves && curves[i] && i === this.state.currentIndex) {\n                    curves[i].setAttribute(\"stroke\", \"#78be95\");\n                } else if (curves && curves[i]) {\n                    curves[i].setAttribute(\"stroke\", \"#1b3044\");\n                }\n\n                return (\n                    <React.Fragment>\n                        <div className=\"test\">\n                            <Curve\n                                positions={getCurveOptions(lat2, long2, lat1, long1)}\n                                option={{\n                                    color: color,\n                                    fill: false,\n                                    // animate: animate,\n                                    delay: 5000,\n                                }}\n                            />\n                        </div>\n                        {marker1}\n                        {marker2}\n                    </React.Fragment>\n                );\n            });\n        }\n        return markers;\n    };\n\n    render = () => {\n        return (\n            <div className=\"tracability-container\">\n                <div className=\"product-CO2-total-tracability-container\">\n                    <span className=\"product-CO2-total-tracability\">\n                        Impact total carbone :&nbsp;\n                        <span className=\"carbon-total-number\">\n                            {parseFloat(this.props.totalCO2Traceability).toFixed(1)}\n                        </span>\n                        kg CO2 soit &nbsp;\n                        <span className=\"carbon-total-number\">\n                            {parseFloat(\n                                ((this.props.totalCO2Traceability * 0.05) / 11.0) * 1000.0\n                            ).toFixed(1)}\n                        </span>\n                        kms parcourus en voiture\n                    </span>\n                </div>\n\n                <Map\n                    center={[51.505, -0.09]}\n                    zoom={1}\n                    minZoom={1}\n                    scrollWheelZoom={true}\n                    dragging={false}\n                    maxBounds={[\n                        [-90, -180],\n                        [90, 180],\n                    ]}\n                    maxBoundsViscosity={1}\n                    ref={(ref) => {\n                        this.map = ref;\n                        this.props.getBottomRef(ref);\n                    }}\n                    whenCreated={(map) => this.setState({ map })}\n                >\n                    <TileLayer\n                        attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a>'\n                        url=\"https://stamen-tiles-{s}.a.ssl.fastly.net/toner-background/{z}/{x}/{y}{r}.png\" //'https://maps.wikimedia.org/osm-intl/{z}/{x}/{y}{r}.png' //'https://{s}.tile.osm.org/{z}/{x}/{y}.png'\n                    />\n\n                    {this.displayMarker()}\n                </Map>\n                <Swiper\n                    spaceBetween={10}\n                    slidesPerView={1.2}\n                    centeredSlides={true}\n                    onSlideChange={(i) => this.onSlideChange(i.activeIndex)}\n                    onSwiper={(swiper) => this.setState({ swiper: swiper })}\n                >\n                    {this.displaySlides()}\n                </Swiper>\n            </div>\n        );\n    };\n}\n\nexport default Traceability;\n\nfunction getDistance(origin, destination) {\n    // return distance in meters\n    var lon1 = toRadian(origin[1]),\n        lat1 = toRadian(origin[0]),\n        lon2 = toRadian(destination[1]),\n        lat2 = toRadian(destination[0]);\n\n    var deltaLat = lat2 - lat1;\n    var deltaLon = lon2 - lon1;\n\n    var a =\n        Math.pow(Math.sin(deltaLat / 2), 2) +\n        Math.cos(lat1) * Math.cos(lat2) * Math.pow(Math.sin(deltaLon / 2), 2);\n    var c = 2 * Math.asin(Math.sqrt(a));\n    // var EARTH_RADIUS = 6371;\n    return c; //* EARTH_RADIUS * 1000;\n}\n\nfunction toRadian(degree) {\n    return (degree * Math.PI) / 180;\n}\n\nfunction getZoomRatio(origin, destination) {\n    var distance = getDistance(origin, destination);\n\n    return 9 - Math.sqrt(distance * 150);\n}\n\nfunction getCurveOptions(lat1, long1, lat2, long2) {\n    var latlng1 = [lat1, long1],\n        latlng2 = [lat2, long2];\n\n    var offsetX = latlng2[1] - latlng1[1],\n        offsetY = latlng2[0] - latlng1[0];\n\n    var r = Math.sqrt(Math.pow(offsetX, 2) + Math.pow(offsetY, 2)),\n        theta = Math.atan2(offsetY, offsetX);\n\n    var thetaOffset = 3.14 / 10;\n\n    var r2 = r / 2 / Math.cos(thetaOffset),\n        theta2 = theta + thetaOffset;\n\n    var midpointX = r2 * Math.cos(theta2) + latlng1[1],\n        midpointY = r2 * Math.sin(theta2) + latlng1[0];\n\n    var midpointLatLng = [midpointY, midpointX];\n\n    return [\"M\", latlng1, \"Q\", midpointLatLng, latlng2];\n}\n\n// function getChildElementIndex(node) {\n//     return Array.prototype.indexOf.call(node.parentNode.children, node);\n// }\n","import React from \"react\";\n// import { Swiper, SwiperSlide } from \"swiper/react\";\n// import \"swiper/swiper-bundle.css\";\nimport \"react-responsive-carousel/lib/styles/carousel.min.css\";\nimport { Carousel } from \"react-responsive-carousel\";\n\nclass Alternatives extends React.Component {\n    state = {\n        swiper: undefined,\n    };\n\n    componentDidMount = () => {\n        if (this.props.ecoScore) {\n            this.loadAlternatives(this.props.ciqual_code);\n        }\n    };\n\n    componentDidUpdate = (lastProps) => {\n        if (lastProps.ciqual_code !== this.props.ciqual_code) {\n            if (this.props.ciqual_code) {\n                this.loadAlternatives(this.props.ciqual_code);\n            }\n        }\n    };\n\n    loadAlternatives = (code) => {\n        this.setState({ alternatives: \"loading\" });\n        fetch(`https://api.lowympact.fr/api/v1/alternatives/${code}`)\n            .then((response) => response.json())\n            .then((res) => {\n                if (res.success && res.data?.alternativesInfos) {\n                    if (\n                        res.data?.alternativesInfos?.a?.length == 0 &&\n                        res.data?.alternativesInfos?.b?.length == 0 &&\n                        res.data?.alternativesInfos?.c?.length == 0 &&\n                        res.data?.alternativesInfos?.d?.length == 0\n                    ) {\n                        this.setState({ alternatives: undefined });\n                    } else {\n                        this.setState({ alternatives: res.data.alternativesInfos });\n                    }\n                } else {\n                    this.setState({ alternatives: undefined });\n                }\n            });\n    };\n\n    renderListAlternatives = (listItems) => {\n        let res = <React.Fragment></React.Fragment>;\n        res = listItems.map((item) => {\n            let pathProduct = \"/products/\" + item.id;\n            // Mock Front\n            if (item.id === \"8001505005707\") {\n                pathProduct += \"/24\";\n            }\n\n            if (item.id !== this.props.barcode) {\n                return (\n                    <div className=\"carousel\" key={item.id}>\n                        <a href={pathProduct} className=\"product-alternative\">\n                            <div>\n                                <img\n                                    src={item.img_url}\n                                    className=\"product-alternative-image\"\n                                    alt=\"\"\n                                />\n                            </div>\n                            <div className=\"product-alternative-text\">\n                                <label className=\"product-alternative-title\">{item.name}</label>\n                                <label className=\"product-alternative-brand\">{}</label>\n                                <RenderColor item={item} />\n                            </div>\n                            <div className=\"product-alternative-fleche\">{\">\"}</div>\n                        </a>\n                    </div>\n                );\n            } else {\n                return <React.Fragment></React.Fragment>;\n            }\n        });\n\n        return res;\n    };\n\n    alternativesloop = () => {\n        let alternativesList = <React.Fragment></React.Fragment>;\n        if (\n            this.state.alternatives &&\n            this.state.alternatives !== \"loading\" &&\n            this.state.alternatives !== \"\"\n        ) {\n            this.state.alternatives.a.sort(function (a, b) {\n                return b.eco_score - a.eco_score;\n            });\n\n            this.state.alternatives.b.sort(function (a, b) {\n                return b.eco_score - a.eco_score;\n            });\n            this.state.alternatives.c.sort(function (a, b) {\n                return b.eco_score - a.eco_score;\n            });\n            this.state.alternatives.d.sort(function (a, b) {\n                return b.eco_score - a.eco_score;\n            });\n\n            let tab;\n            switch (this.props.ecoScore) {\n                case \"a\":\n                    return undefined;\n\n                    break;\n                case \"b\":\n                    tab = this.state.alternatives.a;\n                    if (tab.length == 0) {\n                        return undefined;\n                    } else {\n                        alternativesList = this.renderListAlternatives(tab);\n                    }\n                    break;\n                case \"c\":\n                    tab = this.state.alternatives.a.concat(this.state.alternatives.b);\n\n                    if (tab.length == 0) {\n                        return undefined;\n                    } else {\n                        alternativesList = this.renderListAlternatives(tab);\n                    }\n                    break;\n                case \"d\":\n                    tab = this.state.alternatives.a\n                        .concat(this.state.alternatives.b)\n                        .concat(this.state.alternatives.c);\n\n                    if (tab.length == 0) {\n                        return undefined;\n                    } else {\n                        alternativesList = this.renderListAlternatives(tab);\n                    }\n                    break;\n                case \"e\":\n                    tab = this.state.alternatives.a\n                        .concat(this.state.alternatives.b)\n                        .concat(this.state.alternatives.c)\n                        .concat(this.state.alternatives.d);\n                    if (tab.length == 0) {\n                        return undefined;\n                    } else {\n                        alternativesList = this.renderListAlternatives(tab);\n                    }\n                    break;\n                default:\n                    break;\n            }\n        }\n\n        return alternativesList;\n    };\n\n    render = () => {\n        let alternatives_title = \"\";\n        if (!this.state.alternatives) {\n            alternatives_title = \"Pas d'alternatives disponible\";\n        } else {\n            if (this.state.alternatives === \"loading\") {\n                alternatives_title = \"Chargement des alternatives ...\";\n            } else {\n                alternatives_title = \"Alternatives\";\n            }\n        }\n        let alternatives = this.alternativesloop();\n        if (\n            this.state.alternatives &&\n            this.state.alternatives !== \"loading\" &&\n            this.state.alternatives !== \"\" &&\n            alternatives\n        ) {\n            return (\n                <React.Fragment>\n                    <span className=\"title-part-environnement\">{alternatives_title}</span>\n                    <Carousel\n                        autoPlay={false}\n                        interval={100000}\n                        centerMode={true}\n                        centerSlidePercentage={90}\n                        showThumbs={false}\n                        showIndicators={false}\n                        showStatus={false}\n                    >\n                        {alternatives}\n                    </Carousel>\n                </React.Fragment>\n            );\n        } else {\n            return <React.Fragment />;\n        }\n    };\n}\n\nexport default Alternatives;\n\nfunction RenderColor({ item }) {\n    let labelColor;\n    let labelLevel;\n    if (item.eco_score <= 33) {\n        labelColor = \"red\";\n        labelLevel = \"Mauvais\";\n    } else if (item.eco_score > 33 && item.eco_score < 67) {\n        labelColor = \"yellow\";\n        labelLevel = \"Moyen\";\n    } else {\n        labelColor = \"green\";\n        labelLevel = \"Bonne\";\n    }\n    return (\n        <div className=\"product-alternative-label-position\">\n            <div className=\"product-alternative-label\">\n                <div style={{ color: labelColor }}>●</div>\n                <div className=\"product-alternative-label-text\">{item.eco_score}/100</div>\n            </div>\n            <div className=\"product-alternative-label-level \">{labelLevel}</div>\n        </div>\n    );\n}\n","import React from \"react\";\nimport { Map, TileLayer, Polygon } from \"react-leaflet\";\n\nclass Origins extends React.Component {\n    state = {\n        polygon: [],\n        activeCountry: \"\",\n    };\n\n    componentDidMount = () => {\n        this.getCountries();\n    };\n\n    setActiveCountry = (country) => {\n        this.setState({ activeCountry: country });\n    };\n\n    getCountries = () => {\n        this.props.origins?.map((origin) => {\n            if (origin !== \"en:ghana\") {\n                fetch(`https://api.lowympact.fr/api/v1/countries/${origin}`)\n                    .then((res) => res.json())\n                    .then((res) => {\n                        let polygon = this.state.polygon;\n                        if (res.success && res.data?.country) {\n                            polygon.push({\n                                geo: res.data.country.coordinates,\n                                name: res.data.country.name,\n                            });\n                            this.setState({\n                                polygon: polygon,\n                                activeCountry:\n                                    this.state.activeCountry + res.data.country.name + \", \",\n                            });\n                        }\n                    });\n            }\n            return true;\n        });\n    };\n\n    render = () => {\n        if (this.state.polygon.length === 0) return <React.Fragment />;\n        else {\n            return (\n                <div className=\"environnement-map-container\">\n                    <div className=\"product-co2-impact-header\">\n                        <div className=\"product-co2-impact-logo\">\n                            <div className=\"material-icons icon-label-co2-impact\">place</div>\n                        </div>\n                        <div className=\"product-co2-impact-title\">\n                            <div className=\"product-co2-impact-title-text\">\n                                Provenance des ingrédients\n                            </div>\n                            <div className=\"product-co2-impact-title-label\">\n                                Pays d'origine : {this.state.activeCountry}\n                            </div>\n                        </div>\n                    </div>\n\n                    <Map\n                        center={[51.505, -0.09]}\n                        zoom={-1}\n                        minZoom={0}\n                        className=\"environnement-map\"\n                        scrollWheelZoom={true}\n                        dragging={false}\n                        maxBounds={[\n                            [-90, -180],\n                            [90, 180],\n                        ]}\n                        maxBoundsViscosity={1}\n                        whenCreated={(map) => this.setState({ map })}\n                    >\n                        <TileLayer\n                            attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a>'\n                            url=\"https://stamen-tiles-{s}.a.ssl.fastly.net/toner-background/{z}/{x}/{y}{r}.png\" //'https://maps.wikimedia.org/osm-intl/{z}/{x}/{y}{r}.png' //'https://{s}.tile.osm.org/{z}/{x}/{y}.png'\n                        />\n                        {this.state.polygon.map((poly, i) => {\n                            if (poly)\n                                return (\n                                    <Polygon\n                                        onClick={() => this.setActiveCountry(poly.name)}\n                                        color={\"color:white\"}\n                                        fillColor={\n                                            this.activeCountry === poly.name ? \"blue\" : \"green\"\n                                        }\n                                        opacity={\"1\"}\n                                        positions={poly.geo}\n                                        key={i}\n                                    />\n                                );\n                            else return <React.Fragment />;\n                        })}\n                    </Map>\n                </div>\n            );\n        }\n    };\n}\n\nexport default Origins;\n","import React from \"react\";\n\nclass EmpreinteCarbone extends React.Component {\n    state = {\n        alea: 3,\n    };\n\n    setAlea = (nb) => {\n        // this.setState({ alea: Math.floor(Math.random() * 11) });\n        let alea = this.state.alea + nb;\n        if (alea > 11) alea = 0;\n        if (alea < 0) alea = 11;\n        this.setState({ alea: alea });\n    };\n\n    render = () => {\n        if (this.props.dataEcoScore?.agribalyse?.co2_total) {\n            let repartition = [\n                {\n                    image: \"agriculture\",\n                    name: \"Agriculture\",\n                    percent: (\n                        (parseFloat(this.props.dataEcoScore?.agribalyse?.co2_agriculture) * 100) /\n                        parseFloat(this.props.dataEcoScore?.agribalyse?.co2_total)\n                    ).toFixed(0),\n                },\n                {\n                    image: \"local_shipping\",\n                    name: \"Transport\",\n                    percent: (\n                        (parseFloat(this.props.dataEcoScore?.agribalyse?.co2_transportation) *\n                            100) /\n                        parseFloat(this.props.dataEcoScore?.agribalyse?.co2_total)\n                    ).toFixed(0),\n                },\n                {\n                    image: \"view_in_ar\",\n                    name: \"Emballage\",\n                    percent: (\n                        (parseFloat(this.props.dataEcoScore?.agribalyse?.co2_packaging) * 100) /\n                        parseFloat(this.props.dataEcoScore?.agribalyse?.co2_total)\n                    ).toFixed(0),\n                },\n                {\n                    image: \"transform\",\n                    name: \"Transformation\",\n                    percent: (\n                        (parseFloat(this.props.dataEcoScore?.agribalyse?.co2_processing) * 100) /\n                        parseFloat(this.props.dataEcoScore?.agribalyse?.co2_total)\n                    ).toFixed(0),\n                },\n                {\n                    image: \"store\",\n                    name: \"Distribution\",\n                    percent: (\n                        (parseFloat(this.props.dataEcoScore?.agribalyse?.co2_distribution) * 100) /\n                        parseFloat(this.props.dataEcoScore?.agribalyse?.co2_total)\n                    ).toFixed(0),\n                },\n                {\n                    image: \"microwave\",\n                    name: \"Consommation\",\n                    percent: (\n                        (parseFloat(this.props.dataEcoScore?.agribalyse?.co2_consumption) * 100) /\n                        parseFloat(this.props.dataEcoScore?.agribalyse?.co2_total)\n                    ).toFixed(0),\n                },\n            ];\n            repartition = repartition.map((i) => {\n                return (\n                    <div className=\"empreinte-single\" key={i.name}>\n                        <div className=\"material-icons\">{i.image}</div>\n                        <div className=\"name\">{i.name} : </div>\n                        <div className=\"pourcent\">{i.percent} %</div>\n                    </div>\n                );\n            });\n\n            let equivalent = getEquivalent(\n                parseFloat(this.props.dataEcoScore?.agribalyse?.co2_total),\n                this.state.alea\n            );\n\n            let circle = \"cmauve\";\n            if (this.props.dataEcoScore?.agribalyse?.co2_total < 15) circle = \"cred\";\n            if (this.props.dataEcoScore?.agribalyse?.co2_total < 7) circle = \"corange\";\n            if (this.props.dataEcoScore?.agribalyse?.co2_total < 3) circle = \"cgreen\";\n            if (this.props.dataEcoScore?.agribalyse?.co2_total < 1) circle = \"cdarkgreen\";\n            return (\n                <React.Fragment>\n                    <div className=\"empreinte-carbone-container\">\n                        <div className=\"empreinte-carbone-header\">\n                            <div className=\"header-text\">\n                                <div className=\"header-main\">Empreinte Carbone</div>\n                                <div className=\"header-small\">source : ADEME</div>\n                            </div>\n                            <div className=\"empreinte-carbone-number\">\n                                <span>\n                                    {parseFloat(\n                                        this.props.dataEcoScore?.agribalyse?.co2_total\n                                    ).toFixed(2)}\n                                    kg CO2e\n                                </span>\n                                <div className={\"circle \" + circle}></div>\n                            </div>\n                        </div>\n                        <div className=\"empreinte-carbone-equivalent\">\n                            <div className=\"icon-container\">\n                                <div className=\"material-icons\">\n                                    <img\n                                        src={`/images/alternatives/${equivalent[1]}`}\n                                        alt=\"alternative\"\n                                    />\n                                </div>\n                            </div>\n                            <div className=\"equivalent-container\">\n                                <div className=\"text-small\">Soit l'équivalent...</div>\n                                <div className=\"text-big\">{equivalent[0]}</div>\n                            </div>\n                        </div>\n                        <div className=\"arrow\">\n                            <div className=\"material-icons\" onClick={() => this.setAlea(1)}>\n                                arrow_back_ios\n                            </div>\n                            <div className=\"material-icons\" onClick={() => this.setAlea(-1)}>\n                                arrow_forward_ios\n                            </div>\n                        </div>\n                    </div>\n\n                    <div className=\"empreinte-carbone-container no-margin-container\">\n                        <div className=\"empreinte-carbone-header\">\n                            <div className=\"header-text\">\n                                <div className=\"header-main\">\n                                    Répartition de l'empreinte Carbone\n                                </div>\n                                <div className=\"header-small\">\n                                    selon les différentes étapes du cycle de vie\n                                </div>\n                            </div>\n                            {/* <div className=\"empreinte-carbone-number\">\n                                <span>\n                                    {parseFloat(\n                                        this.props.dataEcoScore?.agribalyse?.co2_total\n                                    ).toFixed(2)}\n                                    kg CO2e\n                                </span>\n                                <div className=\"circle\"></div>\n                            </div> */}\n                        </div>\n                        <div className=\"empreinte-carbone-repartition\">{repartition}</div>\n                    </div>\n                </React.Fragment>\n            );\n        } else {\n            return <React.Fragment />;\n        }\n    };\n}\n\nexport default EmpreinteCarbone;\n\nfunction getEquivalent(co2, alea) {\n    switch (alea) {\n        case 0:\n            return [\n                \"De la production de \" +\n                    (co2 / 0.0046).toFixed(0) +\n                    \" feuilles de papier blanc 80g\",\n                \"paper.png\",\n            ];\n        case 1:\n            return [\n                \"De la production de \" +\n                    (co2 / 0.6).toFixed(1) +\n                    \" kg de pommes de terre en France\",\n                \"potatoe.png\",\n            ];\n        case 2:\n            return [\n                \"De la production de \" + (co2 / 0.53).toFixed(1) + \" kg de fraises en France\",\n                \"strawberry.png\",\n            ];\n        case 3:\n            return [\n                \"De \" + (co2 / 0.193).toFixed(1) + \" km parcourus par une personne en voiture\",\n                \"car.svg\",\n            ];\n        case 4:\n            return [\n                \"De \" + (co2 / 0.137).toFixed(1) + \" km parcourus par une personne en Bus de ville\",\n                \"bus.svg\",\n            ];\n        case 5:\n            return [\n                \"De \" +\n                    (co2 / 0.019).toFixed(0) +\n                    \" e-mails envoyés contenant une pièce jointe d'1mo\",\n                \"mail.svg\",\n            ];\n        case 6:\n            return [\n                \"De \" +\n                    (co2 / 0.5).toFixed(1) +\n                    \" jour(s) d'éclairage d'une ampoule à incandescence\",\n                \"light.svg\",\n            ];\n        case 7:\n            return [\n                \"De \" +\n                    (co2 / 0.24).toFixed(1) +\n                    \" heures de chauffage au gaz d'un appartement moyen de 70m²\",\n                \"appartment.svg\",\n            ];\n        case 8:\n            return [\n                \"De la production de \" +\n                    ((co2 * 1000) / 33.8).toFixed(0) +\n                    \" grammes de steak haché de boeuf cru\",\n                \"steak.png\",\n            ];\n        case 9:\n            return [\n                \"De \" +\n                    (co2 / 0.083).toFixed(1) +\n                    \" jours d'éclairage d'une ampoule basse consommation\",\n                \"light.svg\",\n            ];\n        case 10:\n            return [\n                \"De \" +\n                    (co2 / 0.105).toFixed(1) +\n                    \" kilomètres parcourus en Trotinette électrique (en France)\",\n                \"trotinette.png\",\n            ];\n        case 11:\n            return [\n                \"D'une personne parcourant \" +\n                    (co2 / 0.3).toFixed(0) * 100 +\n                    \" kilomètres en TGV (en France)\",\n                \"train.png\",\n            ];\n        default:\n            return [\n                \"De \" +\n                    (co2 / 0.105).toFixed(1) +\n                    \" kilomètres parcourus en Trotinette électrique (en France)\",\n                \"trotinette.png\",\n            ];\n    }\n}\n","import React from \"react\";\nimport Alternatives from \"./Alternatives\";\nimport Origins from \"./Origins\";\nimport \"./Environnement.css\";\nimport EmpreinteCarbone from \"./EmpreinteCarbone\";\n\nclass Environnement extends React.Component {\n    state = {\n        width: undefined,\n        materials: [],\n    };\n\n    getColor = (note) => {\n        if (note > 67) {\n            return \"green\";\n        }\n        if (note <= 33) {\n            return \"red\";\n        }\n        return \"yellow\";\n    };\n\n    getColorImpact = (note) => {\n        if (note > 70) {\n            return \"green\";\n        }\n        if (note <= 40) {\n            return \"red\";\n        }\n        return \"yellow\";\n    };\n\n    getLabel = (note) => {\n        if (note > 67) {\n            return \"Bon\";\n        }\n        if (note <= 33) {\n            return \"Mauvais\";\n        }\n        return \"Moyen\";\n    };\n\n    getLabelImpact = (note) => {\n        if (note > 60) {\n            return \"Impact fort\";\n        }\n        if (note <= 30) {\n            return \"Impact faible\";\n        }\n        return \"Impact moyen\";\n    };\n\n    getLabelImpactPackaging = (note) => {\n        if (note > 2) {\n            return \"Impact faible\";\n        }\n        if (note < -2) {\n            return \"Impact fort\";\n        }\n        return \"Impact moyen\";\n    };\n\n    getColorImpactPackaging = (note) => {\n        if (note > 2) {\n            return \"green\";\n        }\n        if (note < -2) {\n            return \"red\";\n        }\n        return \"yellow\";\n    };\n\n    componentDidMount() {\n        this.updateWindowDimensions();\n        window.addEventListener(\"resize\", this.updateWindowDimensions);\n    }\n\n    componentWillUnmount() {\n        window.removeEventListener(\"resize\", this.updateWindowDimensions);\n    }\n\n    updateWindowDimensions = () => {\n        this.setState({ width: window.innerWidth });\n    };\n\n    displayPackagingDetailImpact = () => {\n        let res = <React.Fragment></React.Fragment>;\n\n        if (this.props.dataEcoScore?.adjustments?.packaging?.packagings) {\n            var materials = [];\n            let slides = <React.Fragment></React.Fragment>;\n\n            this.props.dataEcoScore?.adjustments?.packaging?.packagings.map((data) => {\n                if (data?.material.split(\":\")[1] !== \"unknown\") {\n                    materials.push(data?.material.split(\":\")[1]);\n                }\n                return true;\n            });\n\n            slides = materials\n                .filter(function (item, pos) {\n                    return materials.indexOf(item) === pos;\n                })\n                .map((data) => {\n                    var separator = \"\";\n                    if (materials.indexOf(data) < materials.length - 1) {\n                        separator = \" ; \";\n                    }\n                    return (\n                        <React.Fragment key={data}>\n                            <span>\n                                {data} {separator}\n                            </span>\n                        </React.Fragment>\n                    );\n                });\n\n            if (materials.length > 0) {\n                res = (\n                    <React.Fragment>\n                        <div className=\"product-co2-impact-content\">\n                            <div className=\"product-packaging-impact-content-details-text\">\n                                Matériaux utilisés : &nbsp;{slides}\n                            </div>\n                        </div>\n                    </React.Fragment>\n                );\n            } else {\n                res = (\n                    <React.Fragment>\n                        <div className=\"product-co2-impact-content\">\n                            <div className=\"product-packaging-impact-content-details-text\">\n                                Matériaux utilisés : &nbsp; Inconnu\n                            </div>\n                        </div>\n                    </React.Fragment>\n                );\n            }\n        }\n\n        return res;\n    };\n\n    displayPackagingImpact = () => {\n        let res = <React.Fragment></React.Fragment>;\n\n        if (this.props.dataEcoScore?.adjustments?.packaging?.value) {\n            return (\n                <div className=\"product-co2-impact-container\">\n                    <div className=\"product-co2-impact-header\">\n                        <div className=\"product-co2-impact-logo\">\n                            <div className=\"material-icons icon-label-co2-impact\">view_in_ar</div>\n                        </div>\n                        <div className=\"product-co2-impact-title\">\n                            <div className=\"product-co2-impact-title-text\">\n                                Impact de l'emballage\n                            </div>\n                            <div className=\"product-co2-impact-title-label\">\n                                {this.getLabelImpactPackaging(\n                                    this.props.dataEcoScore?.adjustments?.packaging?.value\n                                )}\n                            </div>\n                        </div>\n                        <div\n                            className=\"product-transport-impact-color-label\"\n                            style={{\n                                color: this.getColorImpactPackaging(\n                                    this.props.dataEcoScore?.adjustments?.packaging?.value\n                                ),\n                            }}\n                        >\n                            ●\n                        </div>\n                    </div>\n                    {this.displayPackagingDetailImpact()}\n                </div>\n            );\n        } else {\n            return res;\n        }\n    };\n\n    render = () => {\n        if (this.props.barcode) {\n            return (\n                <React.Fragment>\n                    <EmpreinteCarbone dataEcoScore={this.props.dataEcoScore} />\n\n                    {this.props.origins ? (\n                        <Origins origins={this.props.origins} />\n                    ) : (\n                        <React.Fragment />\n                    )}\n                    {/* {this.displayPackagingImpact()} */}\n\n                    <Alternatives\n                        barcode={this.props.barcode}\n                        ecoScore={this.props.ecoScore}\n                        ciqual_code={this.props.dataEcoScore?.agribalyse?.code}\n                    />\n                </React.Fragment>\n            );\n        } else {\n            return <React.Fragment></React.Fragment>;\n        }\n    };\n}\n\nexport default Environnement;\n","import React from \"react\";\nimport Navbar from \"../components/Navbar/Navbar\";\nimport Traceability from \"../components/Traceability/Traceability\";\nimport Environnement from \"../components/Environnement/Environnement\";\n// import Labels from \"../components/Labels/Labels\";\nimport \"./Product.css\";\nimport { Link } from \"react-router-dom\";\nimport jwt from \"jsonwebtoken\";\n\nclass Product extends React.Component {\n    state = {\n        barcode: this.props.match.params.barcode,\n        bcProductId: this.props.match.params.bcProductId,\n        product: undefined,\n        productImageUrl: undefined,\n        productName: undefined,\n        genericName: undefined,\n        ecoScore: undefined,\n        dataEcoScore: undefined,\n        value: 0,\n        connected: false,\n        productData: undefined,\n        userId: undefined,\n        cart: 0,\n        totalCO2Traceability: undefined,\n        countries: [],\n    };\n\n    isFlipping = false;\n\n    //for scrolling\n    getBottomRef = (component) => {\n        this.bottomComponent = component;\n    };\n\n    componentDidMount = () => {\n        this.Verify();\n        let userId = localStorage.getItem(\"userId\");\n        if (userId) {\n            this.setState({ userId: userId });\n            this.loadCartInfo(userId);\n        }\n        this.loadFromOpenFoodFacts(this.props.match.params.barcode);\n        if (this.props.match.params.bcProductId) {\n            this.loadProductInformations(\n                this.props.match.params.barcode,\n                this.props.match.params.bcProductId\n            );\n        }\n    };\n\n    handleBarCodeUpdate = () => {\n        if (this.state.barcode !== this.props.match.params.barcode) {\n            this.setState({\n                barcode: this.props.match.params.barcode,\n                bcProductId: this.props.match.params.bcProductId,\n            });\n            this.loadFromOpenFoodFacts(this.props.match.params.barcode);\n            if (this.props.match.params.bcProductId) {\n                this.loadProductInformations(\n                    this.props.match.params.barcode,\n                    this.props.match.params.bcProductId\n                );\n            }\n        }\n    };\n\n    Verify = () => {\n        let isExpired = true;\n        const token = localStorage.getItem(\"token\");\n        if (token) {\n            var decodedToken = jwt.decode(token, { complete: true });\n            var dateNow = new Date();\n            if (decodedToken.payload.exp >= dateNow.getTime() / 1000) {\n                isExpired = false;\n            }\n        }\n        if (isExpired === false) {\n            this.setState({ connected: true });\n        }\n    };\n\n    loadProductInformations = (barcode, bcProductId) => {\n        fetch(\n            `https://api.lowympact.fr/api/v1/products/${barcode}?bcProductId=${bcProductId}`,\n            // `http://localhost:8080/api/v1/products/${barcode}?bcProductId=${bcProductId}`,\n            {\n                method: \"get\",\n                credentials: \"include\",\n                headers: new Headers({\n                    \"api-key\": \"99d8fb95-abdd-4885-bf6c-3a81d8874043\",\n                    \"Content-Type\": \"application/json\",\n                }),\n            }\n        )\n            .then((response) => response.json())\n            .then((res) => {\n                this.setState({\n                    products: res?.data?.traceability,\n                    impact: res?.data?.impact,\n                    totalCO2Traceability: res?.data?.transportCO2Impact,\n                });\n            });\n    };\n\n    loadFromOpenFoodFacts = (barcode) => {\n        let dataEcoScore;\n\n        fetch(`https://world.openfoodfacts.org/api/v0/product/${barcode}.json/`)\n            .then((response) => response.json())\n            .then((res) => {\n                let productImageUrl = res?.product?.image_url;\n                let productName = res?.product?.product_name;\n                let genericName = res?.product?.generic_name;\n                let ecoScore = res?.product?.ecoscore_grade;\n\n                dataEcoScore = res?.product?.ecoscore_data;\n\n                // console.log(res);\n                let origins = res?.product?.origins_hierarchy;\n                if (origins && origins != \"\") {\n                    this.setState({ origins: origins });\n                }\n\n                if (res?.product) {\n                    this.setState({ productData: res.product });\n                }\n\n                if (productImageUrl) {\n                    this.setState({ productImageUrl: productImageUrl });\n                }\n                if (productName) {\n                    this.setState({ productName: productName });\n                }\n                if (genericName) {\n                    this.setState({ genericName: genericName });\n                }\n                if (\n                    ecoScore &&\n                    (ecoScore === \"a\" ||\n                        ecoScore === \"b\" ||\n                        ecoScore === \"c\" ||\n                        ecoScore === \"d\" ||\n                        ecoScore === \"e\")\n                ) {\n                    this.setState({ ecoScore: ecoScore });\n                }\n                if (dataEcoScore) {\n                    this.setState({ dataEcoScore: dataEcoScore });\n                }\n                if (res.status === 1) {\n                    this.saveHistory();\n                }\n\n                // Mock Soutenance\n                if (barcode === \"80135463\") {\n                    this.setState({ productName: \"Nutella 200g\" });\n                }\n\n                var scoreSearch = \"a\";\n\n                switch (res.product?.ecoscore_grade) {\n                    case \"b\":\n                        scoreSearch = \"a\";\n                        break;\n                    case \"c\":\n                        scoreSearch = \"b\";\n                        break;\n                    case \"d\":\n                        scoreSearch = \"c\";\n                        break;\n                    case \"e\":\n                        scoreSearch = \"c\";\n                        break;\n\n                    default:\n                        break;\n                }\n            });\n    };\n\n    // Get if a connected user already added this item in this cart in the past 2 hours\n    loadCartInfo = (userId) => {\n        if (userId && this.state.barcode) {\n            fetch(\n                `https://api.lowympact.fr/api/v1/users/${userId}/cart/${this.state.barcode}?bcProductAddress=${this.state.bcProductId}`,\n                // `http://localhost:8080/api/v1/users/${this.state.userId}/history`,\n                {\n                    method: \"get\",\n                    credentials: \"include\",\n                    headers: new Headers({\n                        Authorization: localStorage.getItem(\"token\"),\n                        \"api-key\": \"99d8fb95-abdd-4885-bf6c-3a81d8874043\",\n                        \"Content-Type\": \"application/json\",\n                    }),\n                }\n            )\n                .then((response) => response.json())\n                .then((res) => {\n                    console.log(res);\n                    if (res.success) {\n                        this.setState({ cart: res.data?.quantity });\n                    }\n                });\n        }\n    };\n\n    saveHistory = async () => {\n        const queryString = window.location.search;\n        const urlParams = new URLSearchParams(queryString);\n        const add = urlParams.get(\"cart\");\n        if (add !== \"no\") {\n            await delay(2000);\n\n            let history = JSON.parse(localStorage.getItem(\"local_history\"));\n            let exist = null;\n            if (history) {\n                history = history?.filter(\n                    (element) =>\n                        !(\n                            element.barcode == this.state.barcode &&\n                            element.bcProductId == this.state.bcProductId\n                        )\n                );\n            } else {\n                history = [];\n            }\n\n            history.push({\n                barcode: this.state.barcode,\n                bcProductId: this.state.bcProductId,\n                brand: this.state.productData.brands,\n                image: this.state.productImageUrl,\n                label: this.state.ecoScore,\n                name: this.state.productName,\n                date: Date.now(),\n            });\n            localStorage.setItem(\"local_history\", JSON.stringify(history));\n\n            if (this.state.userId) {\n                fetch(\n                    `https://api.lowympact.fr/api/v1/users/${this.state.userId}/history`,\n                    // `http://localhost:8080/api/v1/users/${this.state.userId}/history`,\n                    {\n                        method: \"put\",\n                        credentials: \"include\",\n                        headers: new Headers({\n                            Authorization: localStorage.getItem(\"token\"),\n                            \"api-key\": \"99d8fb95-abdd-4885-bf6c-3a81d8874043\",\n                            \"Content-Type\": \"application/json\",\n                        }),\n                        body: JSON.stringify({\n                            barcode: this.state.barcode,\n                            bcProductAddress: this.state.bcProductId,\n                        }),\n                    }\n                )\n                    .then((response) => response.json())\n                    .then((res) => {\n                        //console.log(res);\n                    });\n            }\n        }\n    };\n\n    addToCart = () => {\n        if (this.state.barcode && this.state.cart >= 0) {\n            let co2 = -1;\n            if (this.state.dataEcoScore?.agribalyse?.co2_total) {\n                co2 = parseFloat(this.state.dataEcoScore?.agribalyse?.co2_total);\n            }\n\n            let ecoscore = \"unknown\";\n            if (this.state.ecoScore) {\n                ecoscore = this.state.ecoScore;\n            }\n            this.flip();\n            fetch(\n                `https://api.lowympact.fr/api/v1/users/${this.state.userId}/cart`,\n                // `http://localhost:8080/api/v1/users/${this.state.userId}/cart`,\n                {\n                    method: \"put\",\n                    credentials: \"include\",\n                    headers: new Headers({\n                        Authorization: localStorage.getItem(\"token\"),\n                        \"api-key\": \"99d8fb95-abdd-4885-bf6c-3a81d8874043\",\n                        \"Content-Type\": \"application/json\",\n                    }),\n                    body: JSON.stringify({\n                        barcode: this.state.barcode,\n                        bcProductAddress: this.state.bcProductId,\n                        quantityDelta: 1,\n                        ecoscore: ecoscore,\n                        carbonImpact: co2,\n                    }),\n                }\n            )\n                .then((response) => response.json())\n                .then((res) => {\n                    //console.log(res);\n                    if (res.success) {\n                        this.setState({ cart: this.state.cart + 1 });\n                    }\n                });\n        }\n    };\n\n    removeFromCart = () => {\n        if (this.state.barcode && this.state.cart > 0) {\n            this.flip();\n            let co2 = -1;\n            if (this.state.dataEcoScore?.agribalyse?.co2_total) {\n                co2 = parseFloat(this.state.dataEcoScore?.agribalyse?.co2_total);\n            }\n            let ecoscore = \"unkown\";\n            if (this.state.ecoScore) {\n                ecoscore = this.state.ecoScore;\n            }\n            fetch(\n                `https://api.lowympact.fr/api/v1/users/${this.state.userId}/cart`,\n                // `http://localhost:8080/api/v1/users/${this.state.userId}/cart`,\n                {\n                    method: \"put\",\n                    credentials: \"include\",\n                    headers: new Headers({\n                        Authorization: localStorage.getItem(\"token\"),\n                        \"api-key\": \"99d8fb95-abdd-4885-bf6c-3a81d8874043\",\n                        \"Content-Type\": \"application/json\",\n                    }),\n                    body: JSON.stringify({\n                        barcode: this.state.barcode,\n                        bcProductAddress: this.state.bcProductId,\n                        quantityDelta: -1,\n                        ecoscore: ecoscore,\n                        carbonImpact: co2,\n                    }),\n                }\n            )\n                .then((response) => response.json())\n                .then((res) => {\n                    //console.log(res);\n                    if (res.success) {\n                        this.setState({ cart: this.state.cart - 1 });\n                    }\n                });\n        }\n    };\n\n    flip = async (event) => {\n        // if (!this.isFlipping) {\n        // \tthis.isFlipping = true;\n        // \tawait delay(500);\n        //console.log(this.imageFlip.style.transform);\n        if (this.imageFlip && !this.state.isFlipping) {\n            if (this.imageFlip.style.transform === \"rotateY(360deg)\") {\n                this.imageFlip.style.transform = \"rotateY(0deg)\";\n            } else {\n                this.imageFlip.style.transform = \"rotateY(360deg)\";\n            }\n        }\n        // await delay(1000);\n        // this.isFlipping = false;\n        // }\n    };\n\n    displayImage = () => {\n        this.handleBarCodeUpdate();\n\n        let image = <React.Fragment />;\n        let productName = <React.Fragment />;\n        let genericName = <React.Fragment />;\n        let ecoScore = <React.Fragment />;\n        if (this.state.productImageUrl) {\n            image = (\n                <img src={this.state.productImageUrl} className=\"product-image\" alt=\"produit\" />\n            );\n        }\n\n        if (this.state.productName) {\n            productName = <div className=\"product-name\">{this.state.productName}</div>;\n        }\n        if (this.state.ecoScore) {\n            let scoreClass = \"color_score_\" + this.state.ecoScore;\n            ecoScore = (\n                <div className=\"product-ecoscore-image\">\n                    <span className={\"circle-score \" + scoreClass}>⬤ </span>\n                    EcoScore :<span className=\"uppercase \">{\" \" + this.state.ecoScore}</span>\n                </div>\n            );\n        } else if (this.state.genericName) {\n            genericName = <div className=\"product-generic-name\">{this.state.genericName}</div>;\n        }\n        return (\n            <React.Fragment>\n                {this.state.userId ? (\n                    <div\n                        className={this.state.cart > 0 ? \"add-to-cart green\" : \"add-to-cart\"}\n                        onClick={this.addToCart}\n                    >\n                        <span className=\"cart-count\">\n                            {this.state.cart > 0 ? this.state.cart : \"\"}\n                        </span>\n                        <span className=\"material-icons\">add_shopping_cart</span>\n                    </div>\n                ) : (\n                    <React.Fragment />\n                )}\n                {this.state.cart > 0 ? (\n                    <div className=\"remove-from-cart\" onClick={this.removeFromCart}>\n                        <span className=\"material-icons\">remove_shopping_cart</span>\n                    </div>\n                ) : (\n                    <React.Fragment />\n                )}\n                {image}\n                {productName}\n                <div className=\"product-bottom-image-div\">\n                    {genericName}\n                    {ecoScore}\n                </div>\n            </React.Fragment>\n        );\n    };\n\n    handleChange = (event, newValue) => {\n        this.setState({ value: newValue });\n        if (newValue === 1) {\n            let elem = document.getElementsByClassName(\"swiper-container\");\n            if (elem[0]) {\n                elem[0].scrollIntoView({ behavior: \"smooth\" });\n            }\n        }\n    };\n\n    displayNavbar = () => {\n        let retour = <React.Fragment />;\n        if (this.state.bcProductId) {\n            retour = (\n                <div className=\"product-navbar-container\">\n                    <button\n                        className={\n                            this.state.value === 0\n                                ? \"product-navbar-button selected\"\n                                : \"product-navbar-button\"\n                        }\n                        onClick={() => this.handleChange(\"\", 0)}\n                    >\n                        Environnement\n                    </button>\n                    <button\n                        className={\n                            this.state.value === 1\n                                ? \"product-navbar-button selected\"\n                                : \"product-navbar-button\"\n                        }\n                        onClick={() => this.handleChange(\"\", 1)}\n                    >\n                        Traçabilité\n                    </button>\n                    <div\n                        className={\n                            this.state.value === 0\n                                ? \"navbar-under nav-left\"\n                                : \"navbar-under nav-right\"\n                        }\n                    ></div>\n                </div>\n            );\n        }\n        return retour;\n    };\n\n    render = () => {\n        //tri des produits\n        let products = this.state.products?.sort((a, b) => {\n            if (a.depth > b.depth) return -1;\n            else return 1;\n        });\n        return (\n            <React.Fragment>\n                <div className=\"product-page-container\">\n                    <div className=\"product-header-container\">\n                        <div className=\"product-history-link\">\n                            <Link to=\"/history\"> {\"<\"} Historique</Link>\n                        </div>\n                        <img\n                            className=\"product-bitmap-image\"\n                            src=\"/images/utils/bitmap.png\"\n                            alt=\"\"\n                        />\n                    </div>\n                    <div\n                        className=\"product-image-container\"\n                        // onClick={this.flip}\n                        ref={(ref) => (this.imageFlip = ref)}\n                    >\n                        {this.displayImage()}\n                    </div>\n\n                    {this.displayNavbar()}\n\n                    {/* <AppBar position=\"static\">\n\t\t\t\t\t\t<Tabs\n\t\t\t\t\t\t\tvalue={this.state.value}\n\t\t\t\t\t\t\tonChange={this.handleChange}\n\t\t\t\t\t\t\taria-label=\"simple tabs example\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<Tab label=\"Traçabilité\" />\n\t\t\t\t\t\t\t<Tab label=\"Environnement\" />\n\t\t\t\t\t\t</Tabs>\n\t\t\t\t\t</AppBar>\n\t\t\t\t\t<TabPanel value={this.state.value} index={0}></TabPanel>\n\t\t\t\t\t<TabPanel value={this.state.value} index={1}>\n\t\t\t\t</TabPanel> */}\n                    {this.state.value === 0 ? (\n                        <Environnement\n                            dataEcoScore={this.state.dataEcoScore}\n                            ecoScore={this.state.ecoScore}\n                            origins={this.state.origins}\n                            displayTranportImpact={\n                                this.props.match.params.bcProductId !== null &&\n                                this.props.match.params.bcProductId !== undefined\n                            }\n                            barcode={this.props.match.params.barcode}\n                        ></Environnement>\n                    ) : (\n                        <div className=\"product-bottom-container\">\n                            <Traceability\n                                products={products}\n                                getBottomRef={this.getBottomRef}\n                                totalCO2Traceability={this.state.totalCO2Traceability}\n                            />\n                        </div>\n                    )}\n                    <Navbar\n                        barcode={this.props.match.params.barcode}\n                        bcProductId={this.props.match.params.bcProductId}\n                    />\n                </div>\n            </React.Fragment>\n        );\n    };\n}\n\nexport default Product;\n\nconst delay = (ms) => new Promise((res) => setTimeout(res, ms));\n","//noprotect\nimport React, { Component, Suspense } from \"react\";\nimport { BrowserRouter as Router, Route, Redirect, Switch } from \"react-router-dom\";\n\nimport \"./App.css\";\n// import History from \"./pages/History\";\n// import Error404 from \"./pages/Error404\";\n// import Login from \"./pages/Login\";\nimport History from \"./pages/History\";\nimport Profil from \"./pages/Profil\";\nimport Product from \"./pages/Product\";\n// import Signup from \"./pages/Signup\";\n// import Signin from \"./pages/Signin\";\n// import ProfileConfiguration from \"./pages/ProfileConfiguration\";\n// import Statistics from \"./pages/Statistics\";\nconst Login = React.lazy(() => import(\"./pages/Login\"));\n// const History = React.lazy(() => import(\"./pages/History\"));\n// const Profil = React.lazy(() => import(\"./pages/Profil\"));\nconst Error404 = React.lazy(() => import(\"./pages/Error404\"));\n// const Product = React.lazy(() => import(\"./pages/Product\"));\nconst Signup = React.lazy(() => import(\"./pages/Signup\"));\nconst Signin = React.lazy(() => import(\"./pages/Signin\"));\nconst ProfileConfiguration = React.lazy(() => import(\"./pages/ProfileConfiguration\"));\nconst Statistics = React.lazy(() => import(\"./pages/Statistics\"));\nconst Debug = React.lazy(() => import(\"./pages/Debug\"));\nconst Avis = React.lazy(() => import(\"./pages/Avis\"));\n\nclass App extends Component {\n    render() {\n        return (\n            <Router>\n                <Suspense\n                    fallback={\n                        <div className=\"loading\">\n                            <div className=\"loadingio-spinner-ripple-4o0kkyduuq4\">\n                                <div className=\"ldio-44krslet1tn\">\n                                    <div></div>\n                                    <div></div>\n                                </div>\n                            </div>\n                        </div>\n                    }\n                >\n                    <Switch>\n                        {/* Front Pages */}\n                        <Route path=\"/history\" component={History} exact key={1} />\n                        <Route path=\"/profil\" component={Profil} exact key={2} />\n                        <Route path=\"/login\" component={Login} exact />\n                        <Route path=\"/\" component={Login} exact key={1} />\n                        <Route path=\"/products/:barcode/:bcProductId\" component={Product} exact />\n                        <Route path=\"/products/:barcode\" component={Product} exact />\n                        <Route path=\"/signup\" component={Signup} exact />\n                        <Route path=\"/signin\" component={Signin} exact />\n                        <Route path=\"/configuration\" component={ProfileConfiguration} exact />\n                        <Route path=\"/stats\" component={Statistics} exact />\n                        <Route path=\"/debug\" component={Debug} exact />\n                        <Route path=\"/avis\" component={Avis} exact />\n                        {/* Errors Pages */}\n                        <Route path=\"/error404\" component={Error404} />\n                        <Redirect to=\"/error404\" />\n                        {/* <Route path=\"/MAINTENANCE\" component={ Maintenance } /> */}\n                    </Switch>\n                </Suspense>\n            </Router>\n        );\n    }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","import \"./ButtonNavBar.css\";\n\nfunction ButtonHistory() {\n    return (\n        <div>\n            <div className=\"button-logo\">\n                <span className=\"material-icons\">history</span>\n            </div>\n            <div>Historique</div>\n        </div>\n    );\n}\n\nexport default ButtonHistory;\n","function ButtonProfil() {\n    return (\n        <div>\n            <div>\n                <span className=\"material-icons\">person</span>\n            </div>\n            <div>Profil</div>\n        </div>\n    );\n}\n\nexport default ButtonProfil;\n","import { React } from \"react\";\n\nfunction ButtonScan() {\n    return (\n        <div>\n            <div className=\"navbar-scan-icon\">\n                <span className=\"material-icons\">qr_code_scanner</span>\n            </div>\n        </div>\n    );\n}\n\nexport default ButtonScan;\n","import React, { Component } from \"react\";\nimport Quagga from \"@ericblade/quagga2\";\nimport ImageUploader from \"react-images-upload\";\n\nclass Scanner extends Component {\n    state = {\n        error: false,\n        noBackCamera: false,\n        usedCamera: 0,\n        devices: [],\n        processingImage: 0,\n        text: 0,\n        mutlipleTracks: false,\n        no_permission: false,\n    };\n\n    switchCamera = () => {\n        let num = this.state.usedCamera + 1;\n        if (num >= this.state.devices.length) {\n            num = 0;\n        }\n        this.setState({ usedCamera: num });\n        Quagga.stop();\n        this.QuaggaInit(this.state.devices[num].deviceId);\n    };\n\n    componentDidMount = async () => {\n        const queryString = window.location.search;\n        const urlParams = new URLSearchParams(queryString);\n        const camera = urlParams.get(\"camera\");\n        if (camera == \"false\") {\n            this.setState({ error: true, text: 1 });\n        } else if (\n            navigator.getUserMedia ||\n            navigator.webkitGetUserMedia ||\n            navigator.mozGetUserMedia ||\n            navigator.msGetUserMedia\n        ) {\n            // On vient récupérer les flux vidéo existants\n            let devices = await navigator.mediaDevices.enumerateDevices().then(function (devices) {\n                return devices.filter((d) => d.kind === \"videoinput\");\n            });\n            this.setState({ devices: devices });\n\n            //On prend seulement les caméras arrière\n            //(toutes les caméra si caméra arrière non existante)\n            let videoDevices = devices.filter((d) => d.label.match(/back/) != null);\n            if (videoDevices.length === 0) {\n                this.setState({ noBackCamera: true });\n                videoDevices = devices;\n            }\n\n            // Get all camera capabilities\n            let capabilities = videoDevices.map(async (device) => {\n                return await navigator.mediaDevices\n                    .getUserMedia({\n                        video: { deviceId: { exact: device.deviceId } },\n                    })\n                    .then(\n                        (stream) => {\n                            let a = stream.getVideoTracks().map((track) => {\n                                console.log(track);\n                                if (track.getCapabilities) {\n                                    return track.getCapabilities();\n                                } else {\n                                    return [{}];\n                                }\n                            });\n                            stream.getTracks().forEach((track) => track.stop());\n                            if (a.length > 1) this.setState({ mutlipleTracks: true });\n                            return a[0];\n                        },\n                        (err) => console.log(err)\n                    );\n            });\n            let capa = await Promise.all(capabilities);\n\n            //On trie les capabilities pour mettre les meilleurs résolutions en premier\n            capa.sort((a, b) => {\n                if ((a.width.max + a.height.max) / 2 > (b.width.max + b.height.max) / 2) return -1;\n                else return 1;\n            });\n\n            if (capa[0]) this.QuaggaInit(capa[0]);\n            else this.QuaggaInit({});\n        } else {\n            this.setState({ error: true, text: 3 });\n        }\n    };\n\n    QuaggaInit = (capabilities) => {\n        Quagga.init(\n            {\n                inputStream: {\n                    type: \"LiveStream\",\n                    constraints: {\n                        ...capabilities,\n                    },\n                },\n                locator: {\n                    patchSize: \"normal\",\n                    halfSample: false,\n                },\n                locate: false,\n                area: {\n                    top: \"40%\",\n                    right: \"25%\",\n                    left: \"25%\",\n                    bottom: \"40%\",\n                },\n                numOfWorkers: window.navigator.hardwareConcurrency || 2,\n                decoder: {\n                    readers: [\"ean_reader\"],\n                },\n                multiple: false,\n                singleChannel: false,\n            },\n            (err) => {\n                if (err) {\n                    console.log(err);\n                    if (err == \"NotAllowedError: Permission denied\") {\n                        this.setState({ no_permission: true });\n                    }\n                    this.setState({ error: true, text: err + \" \" + JSON.stringify(capabilities) });\n                    return false;\n                }\n                Quagga.start();\n            }\n        );\n        this.props.setQuagga(Quagga);\n        Quagga.onDetected(this._onDetected);\n    };\n\n    componentWillUnmount() {\n        Quagga.offDetected(this._onDetected);\n    }\n\n    _onDetected = async (result) => {\n        let stop = await this.props.onDetected(result);\n        console.log(stop);\n        if (stop) {\n            Quagga.stop();\n        }\n    };\n\n    onDrop = (image) => {\n        try {\n            if (this.state.processingImage != 1) {\n                this.setState({ processingImage: 1 });\n                console.log(image[image.length - 1]);\n                let reader = new FileReader();\n                reader.readAsDataURL(image[image.length - 1]);\n                reader.onloadend = () => {\n                    Quagga.decodeSingle(\n                        {\n                            decoder: {\n                                readers: [\"ean_reader\"], // List of active readers\n                            },\n                            locate: true, // try to locate the barcode in the image\n                            src: reader.result, //image[image.length - 1], // or 'data:image/jpg;base64,' + data\n                        },\n                        (result) => {\n                            console.log(result);\n                            if (result) {\n                                this._onDetected(result);\n                                this.setState({ processingImage: 2 });\n                                console.log(\"result\", result.codeResult?.code);\n                            } else {\n                                console.log(\"not detected\");\n                                this.setState({ processingImage: 3 });\n                            }\n                        }\n                    );\n                };\n            }\n        } catch (err) {\n            console.log(err);\n            this.setState({ processingImage: 4 });\n        }\n    };\n\n    setImport = () => {\n        this.setState({ error: !this.state.error });\n    };\n\n    render() {\n        let textImage = <React.Fragment></React.Fragment>;\n\n        if (this.state.processingImage == 1) {\n            textImage = (\n                <React.Fragment>\n                    <p>Chargement en cours...</p>\n                </React.Fragment>\n            );\n        }\n        if (this.state.processingImage == 2) {\n            textImage = (\n                <React.Fragment>\n                    <p>Ce produit n'existe pas dans la base de données</p>\n                </React.Fragment>\n            );\n        }\n        if (this.state.processingImage == 3) {\n            textImage = (\n                <React.Fragment>\n                    <p>Code barre non trouvé sur l'image, merci de réessayer</p>\n                </React.Fragment>\n            );\n        }\n        if (this.state.processingImage == 4) {\n            textImage = (\n                <React.Fragment>\n                    <p>\n                        Mauvais format ou fichier trop grand, merci de réessayer. <br />\n                        Taille max : 5mb <br />\n                        Formats: jpg, png, gif\n                    </p>\n                </React.Fragment>\n            );\n        }\n        return (\n            <React.Fragment>\n                <div id=\"interactive\" className={this.state.error ? \"hidden\" : \"viewport\"} />\n\n                {/* {this.state.devices?.length > 1 ? (\n                    <button className=\"code-switch-camera\" onClick={this.switchCamera}>\n                        <span className=\"material-icons\">cameraswitch</span>\n                        {this.state.usedCamera}\n                    </button>\n                ) : (\n                    <React.Fragment />\n                )} */}\n                {/* {!this.state.error ? (\n                    <button className=\"code-switch-camera\" onClick={this.setImport}>\n                        clique ici si tu souhaite importer une image\n                    </button>\n                ) : (\n                    \"\"\n                )} */}\n                {this.state.error ? (\n                    <div className=\"scan-error\">\n                        <ImageUploader\n                            withIcon={true}\n                            withPreview={false}\n                            buttonText={\n                                <div className=\"button-import\">\n                                    <div className=\"material-icons\">add_a_photo</div>\n                                    <p>Prendre une photo</p>\n                                </div>\n                            }\n                            onChange={this.onDrop}\n                            label={\"\"}\n                            imgExtension={[\".jpg\", \".gif\", \".png\", \".jpeg\"]}\n                            maxFileSize={5242880}\n                            labelClass={\"import-label\"}\n                        />\n                        <p className=\"red\">{textImage}</p>\n                        <p className=\"error-message-import\">\n                            {/* Il semblerait que votre caméra ne soit pas détectée. Vous pouvez\n                            importer une photo de votre bibliothèque, ou essayer un autre\n                            navigateur. <br />\n                            <br /> */}\n                            {/* Si le problème persiste, contactez-nous{\" \"}\n                            <a href=\"mailto:contact@lowympact.fr?Subject=Lowympact-camera not working\">\n                                via ce lien\n                            </a> */}\n                            {/* {\"code d'erreur : \" + this.state.text} */}\n                            {this.state.no_permission ? (\n                                <div className=\"no-permission\">\n                                    L'accès à votre caméra est bloqué : Vous pouvez l'autoriser dans\n                                    les paramètres de votre navigateur pour accéder au scanner\n                                </div>\n                            ) : (\n                                <React.Fragment />\n                            )}\n                            <br />\n                        </p>\n                    </div>\n                ) : (\n                    <React.Fragment />\n                )}\n                {this.state.mutlipleTracks ? (\n                    <h1 className=\"debug\">If you see this, tell me</h1>\n                ) : (\n                    \"\"\n                )}\n            </React.Fragment>\n        );\n    }\n}\n\nexport default Scanner;\n","import React, { Component } from \"react\";\nimport Scanner from \"./Scanner\";\nimport QrReader from \"react-qr-reader\";\nimport Switch from \"react-switch\";\nimport { Redirect } from \"react-router-dom\";\nimport \"./Scan.css\";\n\nclass Scan extends Component {\n    state = {\n        scanning: true,\n        status: \"\",\n        results: [],\n        usedCameraId: \"3f6fc4177028f25c3e8215f4444838450630b8d656c627ef511346545d37f302\",\n        devices: [],\n        reading: false, //false : barcode - true: qrcode\n        barcode: undefined,\n        bcProductId: undefined,\n        Quagga: undefined,\n    };\n\n    setQuagga = (quagga) => {\n        if (this.state.Quagga) {\n            this.state.Quagga.stop();\n        }\n        this.setState({ Quagga: quagga });\n    };\n\n    _scan = () => {\n        this.setState({ scanning: !this.state.scanning, status: \"\" });\n    };\n\n    _onDetected = async (res) => {\n        if (res) {\n            if (res.codeResult && res.codeResult.code) {\n                this.setState({\n                    results: [res],\n                    scanning: true,\n                    status: \"waiting\",\n                });\n                let response = await fetch(\n                    `https://world.openfoodfacts.org/api/v0/product/${res.codeResult.code}.json/`\n                );\n                let result = await response.json();\n                if (result.status !== 0) {\n                    this.setState({\n                        scanning: false,\n                        status: \"found\",\n                        barcode: res.codeResult.code,\n                    });\n                    this.props.showScanner(false);\n                    if (this.state.Quagga) this.state.Quagga.stop();\n                    return true;\n                } else {\n                    this.setState({\n                        scanning: true,\n                        status: \"not found\",\n                    });\n                    return false;\n                }\n            }\n        }\n    };\n\n    handleScan = (data) => {\n        if (data) {\n            let arr = data.split(\"/\");\n            if (arr.length > 1) {\n                this.setState({\n                    scanning: false,\n                    barcode: arr[4],\n                    bcProductId: arr[5],\n                    status: \"found\",\n                });\n            }\n            if (this.state.Quagga) this.state.Quagga.stop();\n        }\n    };\n    handleError = (err) => {\n        console.error(err);\n    };\n\n    displayQrCode = () => {\n        if (this.state.status !== \"found\") {\n            return (\n                <QrReader\n                    delay={300}\n                    onError={this.handleError}\n                    onScan={this.handleScan}\n                    style={{ width: \"100%\" }}\n                    showViewFinder={false}\n                />\n            );\n        } else {\n            return <React.Fragment />;\n        }\n    };\n\n    displayBarCode = () => {\n        if (this.state.status !== \"found\") {\n            return (\n                <React.Fragment>\n                    <div className=\"header\">\n                        <ul className=\"results\">\n                            {this.state.results.map((result, i) => (\n                                <div key={result.codeResult.code + i}>\n                                    {this.state.status === \"waiting\"\n                                        ? \"Vérification du code : \" + result?.codeResult?.code\n                                        : \"\"}\n                                    {this.state.status === \"not found\"\n                                        ? \"Code non trouvé, merci de réessayer\"\n                                        : \"\"}\n                                </div>\n                            ))}\n                        </ul>\n                    </div>\n                    {this.state.scanning ? (\n                        <Scanner\n                            onDetected={this._onDetected}\n                            setQuagga={this.setQuagga}\n                            usedCameraId={this.usedCameraId}\n                        />\n                    ) : null}\n                </React.Fragment>\n            );\n        } else {\n            return <React.Fragment />;\n        }\n    };\n\n    switchReader = () => {\n        if (this.state.reading) this.setState({ reading: false });\n        else {\n            if (this.state.Quagga) this.state.Quagga.stop();\n            this.setState({ reading: true });\n        }\n    };\n\n    render() {\n        if (\n            this.state.barcode &&\n            this.state.bcProductId &&\n            (this.props.barcode !== this.state.barcode ||\n                this.props.bcProductId !== this.state.bcProductId)\n        ) {\n            return (\n                <Redirect to={\"/products/\" + this.state.barcode + \"/\" + this.state.bcProductId} />\n            );\n        }\n        if (this.state.barcode && this.props.barcode !== this.state.barcode) {\n            return <Redirect to={\"/products/\" + this.state.barcode} />;\n        } else {\n            return (\n                <div className=\"code-reader-container\">\n                    <span\n                        className=\"close\"\n                        onClick={() => {\n                            if (this.state.Quagga) this.state.Quagga.stop();\n\n                            this.props.showScanner(false);\n                        }}\n                    >\n                        &times;\n                    </span>\n                    {/* <div className=\"code-switch\" onClick={this.switchReader}>\n                        <div className=\"span-code-switch\">\n                            <span\n                                className={\n                                    this.state.reading ? \"material-icons\" : \"material-icons green\"\n                                }\n                            >\n                                view_week\n                            </span>\n                            <span>Barcode</span>\n                        </div>\n                        <Switch\n                            onChange={this.switchReader}\n                            uncheckedIcon={false}\n                            checkedIcon={false}\n                            checked={this.state.reading}\n                            onColor={\"#888\"}\n                            offColor={\"#888\"}\n                        />\n                        <div className=\"span-code-switch\">\n                            <span\n                                className={\n                                    !this.state.reading ? \"material-icons\" : \"material-icons green\"\n                                }\n                            >\n                                qr_code_scanner\n                            </span>\n                            <span>QR Code</span>\n                        </div>\n                    </div> */}\n                    {/* {this.state.reading ? this.displayQrCode() : this.displayBarCode()} */}\n                    {this.displayBarCode()}\n                </div>\n            );\n        }\n    }\n}\n\nexport default Scan;\n","import \"./Navbar.css\";\nimport React from \"react\";\nimport ButtonHistory from \"../Button/ButtonHistory\";\nimport ButtonProfil from \"../Button/ButtonProfil\";\nimport ButtonScan from \"../Button/ButtonScan\";\n// import Scan from \"../Scan/Scan\";\nimport Scan from \"../Scan/Scan\";\n// import { ScanSettings } from \"scandit-sdk\";\nimport { Link } from \"react-router-dom\";\n\nclass Navbar extends React.Component {\n    state = {\n        showScanner: false,\n        barcode: undefined,\n        bcProductId: undefined,\n        height: 0,\n    };\n\n    componentDidMount() {\n        this.updateWindowDimensions();\n        window.addEventListener(\"resize\", this.updateWindowDimensions);\n    }\n\n    componentWillUnmount() {\n        window.removeEventListener(\"resize\", this.updateWindowDimensions);\n    }\n\n    updateWindowDimensions = () => {\n        this.setState({ height: window.innerHeight });\n    };\n\n    handleScannerButton = (bool) => {\n        this.setState({ showScanner: bool });\n    };\n\n    // handleBarcode = (res) => {\n    //     if (res) {\n    //         //détecté par barcode scanner\n    //         let arr = res.split(\"/\");\n    //         if (arr.length > 1) {\n    //             this.setState({\n    //                 barcode: arr[4],\n    //                 bcProductId: arr[5],\n    //                 showScanner: false,\n    //             });\n    //         } else {\n    //             this.setState({\n    //                 barcode: arr[0],\n    //                 showScanner: false,\n    //                 bcProductId: undefined,\n    //             });\n    //         }\n    //     }\n    // };\n\n    render = () => {\n        if (this.state.height < 550) {\n            return <React.Fragment />;\n        }\n        // if (\n        //     this.state.barcode &&\n        //     this.state.bcProductId &&\n        //     (this.props.barcode !== this.state.barcode ||\n        //         this.props.bcProductId !== this.state.bcProductId)\n        // ) {\n        //     return (\n        //         <Redirect to={\"/products/\" + this.state.barcode + \"/\" + this.state.bcProductId} />\n        //     );\n        // }\n\n        // if (this.state.barcode && this.props.barcode !== this.state.barcode) {\n        //     return <Redirect to={\"/products/\" + this.state.barcode} />;\n        // }\n\n        if (!this.state.showScanner) {\n            return (\n                <React.Fragment>\n                    <div className=\"navbar-container\">\n                        <Link\n                            to=\"/history\"\n                            className={\n                                window.location.pathname === \"/history\"\n                                    ? \"navbar-link navbar-text-left navbar-selected\"\n                                    : \"navbar-link navbar-text-left \"\n                            }\n                        >\n                            <ButtonHistory />\n                        </Link>\n                        <div onClick={() => this.handleScannerButton(true)}>\n                            <div className=\"navbar-circle\">\n                                <ButtonScan />\n                            </div>\n                        </div>\n                        <span className=\"navbar-scan-text\">Scan</span>\n                        <Link\n                            to=\"/profil\"\n                            className={\n                                window.location.pathname === \"/profil\"\n                                    ? \"navbar-link navbar-text-right navbar-selected\"\n                                    : \"navbar-link navbar-text-right \"\n                            }\n                        >\n                            <ButtonProfil />\n                        </Link>\n                    </div>\n                </React.Fragment>\n            );\n        } else {\n            return (\n                // <Scan\n                //     onCrossClicked={this.handleScannerButton}\n                //     // playSoundOnScan={true}\n                //     vibrateOnScan={true}\n                //     enableTorchToggle={true}\n                //     enablePinchToZoom={true}\n                //     enableCameraSwitcher={true}\n                //     guiStyle={\"viewfinder\"}\n                //     scanSettings={\n                //         new ScanSettings({\n                //             enabledSymbologies: [\n                //                 \"qr\",\n                //                 \"ean8\",\n                //                 \"ean13\",\n                //                 \"upca\",\n                //                 \"upce\",\n                //                 \"code128\",\n                //                 \"code39\",\n                //                 \"code93\",\n                //                 \"itf\",\n                //             ],\n                //             codeDuplicateFilter: 1000,\n                //         })\n                //     }\n                //     onScan={(scanResult) => {\n                //         //console.log(scanResult.barcodes[0].data);\n                //         this.handleBarcode(scanResult.barcodes[0].data);\n                //     }}\n                //     onError={(error) => {\n                //         console.error(error.message);\n                //     }}\n                // />\n                <Scan showScanner={this.handleScannerButton} history={this.props.history} />\n            );\n        }\n    };\n}\n\nexport default Navbar;\n","import \"./Header.css\";\nimport logo from \"../../assets/images/logo.svg\";\nimport blob from \"../../assets/images/bitmap.png\";\nimport React from \"react\";\n\nfunction Header(props) {\n    return (\n        <div>\n            <div>\n                <img src={blob} className=\"blob-top\" alt=\"Blob\" />\n            </div>\n            {props.history ? (\n                <React.Fragment />\n            ) : (\n                <React.Fragment>\n                    <div>\n                        <img src={blob} className=\"blob-left\" alt=\"Blob\" />\n                    </div>\n                    <div>\n                        <img src={blob} className=\"blob-right\" alt=\"Blob\" />\n                    </div>{\" \"}\n                </React.Fragment>\n            )}\n            <div className=\"header-container\">\n                <img src={logo} className=\"header-logo\" alt=\"Logo\" />\n                <span>Lowympact</span>\n            </div>\n        </div>\n    );\n}\n\nexport default Header;\n","export default __webpack_public_path__ + \"static/media/bitmap.6f490d5b.png\";","export default __webpack_public_path__ + \"static/media/fruits-vegetables-basket-by-oblik-studio.7d5e1c64.svg\";","import { useState } from \"react\";\nimport moment from \"moment\";\n\nconst getInstallPromptLastSeenAt = (promptName) => localStorage.getItem(promptName);\n\nconst setInstallPromptSeenToday = (promptName) => {\n    const today = moment().toISOString();\n    localStorage.setItem(promptName, today);\n};\n\nfunction getUserShouldBePromptedToInstall(promptName, daysToWaitBeforePromptingAgain) {\n    const lastPrompt = moment(getInstallPromptLastSeenAt(promptName));\n    const daysSinceLastPrompt = moment().diff(lastPrompt, \"days\");\n    return isNaN(daysSinceLastPrompt) || daysSinceLastPrompt > daysToWaitBeforePromptingAgain;\n}\n\nconst UseShouldShowPrompt = (promptName, daysToWaitBeforePromptingAgain = 30) => {\n    const [userShouldBePromptedToInstall, setUserShouldBePromptedToInstall] = useState(\n        getUserShouldBePromptedToInstall(promptName, daysToWaitBeforePromptingAgain)\n    );\n\n    const handleUserSeeingInstallPrompt = () => {\n        setUserShouldBePromptedToInstall(false);\n        setInstallPromptSeenToday(promptName);\n    };\n\n    return [userShouldBePromptedToInstall, handleUserSeeingInstallPrompt];\n};\nexport default UseShouldShowPrompt;\n","import useShouldShowPrompt from \"./UseShouldShowPrompt\";\n\nconst iosInstallPromptedAt = \"iosInstallPromptedAt\";\n\nconst isIOS = () => {\n    // @ts-ignore\n    if (navigator.standalone) {\n        //user has already installed the app\n        return false;\n    }\n    const ua = window.navigator.userAgent;\n    const isIPad = !!ua.match(/iPad/i);\n    const isIPhone = !!ua.match(/iPhone/i);\n    return isIPad || isIPhone;\n};\n\nconst UseIosInstallPrompt = () => {\n    const [userShouldBePromptedToInstall, handleUserSeeingInstallPrompt] =\n        useShouldShowPrompt(iosInstallPromptedAt);\n\n    return [isIOS() && userShouldBePromptedToInstall, handleUserSeeingInstallPrompt];\n};\nexport default UseIosInstallPrompt;\n","import { useState, useEffect } from \"react\";\nimport useShouldShowPrompt from \"./UseShouldShowPrompt\";\n\nconst webInstallPromptedAt = \"webInstallPromptedAt\";\n\nconst UseWebInstallPrompt = () => {\n    const [installPromptEvent, setInstallPromptEvent] = useState();\n    const [userShouldBePromptedToInstall, handleUserSeeingInstallPrompt] =\n        useShouldShowPrompt(webInstallPromptedAt);\n\n    const handleInstallDeclined = () => {\n        handleUserSeeingInstallPrompt();\n        setInstallPromptEvent(null);\n    };\n\n    const handleInstallAccepted = () => {\n        // show native prompt\n        prompt = localStorage.getItem(\"installPrompt\");\n        prompt.prompt();\n\n        // decide what to do after the user chooses\n        prompt.userChoice.then((choice) => {\n            // if the user declined, we don't want to show the prompt again\n            if (choice.outcome !== \"accepted\") {\n                handleUserSeeingInstallPrompt();\n            }\n            localStorage.getItem(\"installPrompt\", null);\n        });\n    };\n    return [installPromptEvent, handleInstallDeclined, handleInstallAccepted];\n};\nexport default UseWebInstallPrompt;\n","import React from \"react\";\nimport useIosInstallPrompt from \"./UseIosInstallPrompt\";\nimport useWebInstallPrompt from \"./UseWebInstallPrompt\";\nimport \"./InstallPWA.css\";\n\nconst InstallPWA = () => {\n    const [iosInstallPrompt, handleIOSInstallDeclined] = useIosInstallPrompt();\n    const [webInstallPrompt, handleWebInstallDeclined, handleWebInstallAccepted] =\n        useWebInstallPrompt();\n\n    if (!iosInstallPrompt && !webInstallPrompt) {\n        return null;\n    }\n    return (\n        <div className=\"install-popup\">\n            <div className=\"install-popup-wrapper\">\n                <img\n                    className=\"mx-auto\"\n                    style={{\n                        borderTopRightRadius: \"50%\",\n                        borderTopLeftRadius: \"50%\",\n                        backgroundColor: \"#fff\",\n                        marginTop: \"-50px\",\n                    }}\n                    width=\"100px\"\n                    src=\"pwa-512x512.png\"\n                    alt=\"Icon\"\n                />\n                <div>\n                    {iosInstallPrompt && (\n                        <>\n                            <div className=\"text-center\">\n                                <h3>Téléchargez l'application</h3>\n                            </div>\n                            <div className=\"text-center\">\n                                Cliquez sur {\"  \"}\n                                <span className=\"material-icons\">ios_share</span>\n                                {\"  \"}puis &quot;Ajouter à l'écran d'accueil&quot;\n                            </div>\n                            <div className=\"button-dissmiss\">\n                                <button onClick={handleIOSInstallDeclined}>Pas maintenant</button>\n                            </div>\n                        </>\n                    )}\n                    {webInstallPrompt && (\n                        <>\n                            <div className=\"text-center\">\n                                <h3>Ne passez plus à côté des alternatives durables</h3>\n                            </div>\n                            <div className=\"android-wrapper\">\n                                <button\n                                    className=\"install-button\"\n                                    onClick={handleWebInstallAccepted}\n                                >\n                                    Installer l'application\n                                </button>\n                                <button\n                                    className=\"dont-install-button\"\n                                    onClick={handleWebInstallDeclined}\n                                >\n                                    Pas maintenant\n                                </button>\n                            </div>\n                        </>\n                    )}\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default InstallPWA;\n","export default __webpack_public_path__ + \"static/media/logo.b235ef42.svg\";"],"sourceRoot":""}