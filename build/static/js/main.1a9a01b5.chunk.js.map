{"version":3,"sources":["assets/images/fruits-vegetables-basket-by-oblik-studio.svg","components/Button/ButtonHistory.js","components/Button/ButtonProfil.js","components/Button/ButtonScan.js","components/Scan/Scan.js","components/Navbar/Navbar.js","assets/images/logo.svg","assets/images/bitmap.png","components/Header/Header.js","pages/History.js","pages/Error404.js","components/Button/ButtonCreateAccount.js","components/Button/ButtonLogin.js","components/Button/ButtonNoAccount.js","pages/Login.js","components/Traceability/leaflet-curve/leaflet.curve.js","components/Traceability/leaflet-curve/Curve.js","components/Traceability/Traceability.js","assets/images/nocciolatasanslait.png","assets/alternatives/alternatives.js","assets/images/carrefourbio.png","assets/images/jardinbio.png","assets/images/ubio.png","assets/images/nutella.png","components/Environnement/Environnement.js","pages/Product.js","components/Labels/Labels.js","pages/Profil.js","components/Button/ButtonSignup.js","pages/Signup.js","components/Button/ButtonSignin.js","pages/Signin.js","components/Button/ButtonChangePassword.js","assets/users/users.js","pages/ProfileConfiguration.js","components/Charts/DoughnutChartEcoScore.js","components/Charts/BarChartCarbonImpact.js","pages/Statistics.js","App.js","reportWebVitals.js","index.js"],"names":["ButtonHistory","className","class","ButtonProfil","ButtonScan","configurationPromise","configure","engineLocation","catch","error","alert","style","position","top","bottom","left","right","margin","maxWidth","maxHeight","Scan","props","ref","React","createRef","then","ScanditSDKBarcodePicker","create","current","barcodePicker","onScan","on","onError","this","destroy","prevProps","JSON","stringify","scanSettings","applyScanSettings","visible","setVisible","AnimatePresence","exitBeforeEnter","motion","div","id","initial","animate","transition","duration","exit","onClick","onCrossClicked","Component","Navbar","state","showScanner","barcode","undefined","bcProductId","height","updateWindowDimensions","setState","window","innerHeight","handleScannerButton","bool","handleBarcode","res","arr","split","length","render","Fragment","to","vibrateOnScan","enableTorchToggle","enablePinchToZoom","enableCameraSwitcher","guiStyle","ScanSettings","enabledSymbologies","codeDuplicateFilter","scanResult","console","log","barcodes","data","message","location","pathname","addEventListener","removeEventListener","Header","src","blob","alt","logo","RenderHistoryItem","labelColor","item","label","pathProduct","name","opacity","image","brand","color","marginRight","History","componentDidMount","userId","localStorage","getItem","token","loadHistoryInformations","loadLocalStorageHistory","fetch","method","credentials","headers","Headers","authorization","response","json","items","loading","history","parse","itemList","map","Object","keys","fruits","Error404","ButtonCreateAccount","ButtonLogin","ButtonNoAccount","Login","Verify","isExpired","decodedToken","jwt","decode","complete","dateNow","Date","getTime","payload","exp","push","L","Curve","Path","extend","options","initialize","path","setOptions","_initialUpdate","_setPath","getPath","_coords","setPath","redraw","getBounds","_bounds","_computeBounds","lastPoint","lastCommand","coord","bound","LatLngBounds","i","String","lat","latLng","lng","controlPoint1","controlPoint2","endPoint","diffLat","diffLng","controlPoint","getCenter","_update","_map","_updatePath","_renderer","_updatecurve","_project","lastCoord","curCommand","curPoint","_points","latLngToLayerPoint","curve","SVG","include","layer","_curvePointsToPath","_path","getTotalLength","dashArray","strokeDasharray","strokeDashoffset","points","point","str","x","y","positions","option","getOptions","fromProps","toProps","leafletElement","setStyleIfChanged","propTypes","children","PropTypes","oneOfType","arrayOf","node","object","array","isRequired","withLeaflet","Traceability","zoom","swiper","currentIndex","getMaterialIcon","mode","getTransportMode","getTranslation","displaySlides","slides","products","product","pastille","TransportCO2Impact","value","transport","productsOutput","productName","seller","localisation","city","country","type","buyer","Math","round","dist","handleMarkerClick","latlng","index","elem","document","getElementsByClassName","scrollIntoView","behavior","slideTo","p","latitude","longitude","getZoomRatio","flyTo","onSlideChange","parseFloat","long","displayMarker","markers","icon","icon2","marker1","lat1","long1","marker2","lat2","long2","zIndex","Icon","iconUrl","iconRetinaUrl","iconSize","Point","Marker","zIndexOffset","curves","setAttribute","getCurveOptions","fill","delay","totalCO2Traceability","toFixed","Map","center","minZoom","scrollWheelZoom","maxBounds","maxBoundsViscosity","getBottomRef","whenCreated","TileLayer","attribution","url","spaceBetween","slidesPerView","centeredSlides","activeIndex","onSwiper","toRadian","degree","PI","origin","destination","distance","lon1","lon2","deltaLat","deltaLon","a","pow","sin","cos","asin","sqrt","getDistance","latlng1","latlng2","offsetX","offsetY","r","theta","atan2","r2","theta2","midpointX","PRODUCTS","agribalyse_food_code","nocciolata","ecoscore_score","nocciolatasans","RenderColor","labelLevel","Environnement","width","showTransport","materials","getColor","note","getColorImpact","getLabel","getLabelImpact","getLabelImpactPackaging","getColorImpactPackaging","dataEcoScore","adjustments","packaging","packagings","recyclable","recycling","material","ecoscore_material_score","innerWidth","displayCO2Repartition","pourcentage","nbKg","percentage","strokeWidth","fontSize","primaryColor","displayRepartitionAllItems","html_agriculture","html_transport","html_consommation","html_distribution","html_packaging","html_processing","html_total","agribalyse","co2_agriculture","co2_total","co2_transportation","co2_consumption","co2_distribution","co2_packaging","co2_processing","handleShowTransport","displayTransportImpact","agribalyse_CO2","transportation_score","transport_final_indicator","n","origins_of_ingredients","value_fr","co2_impact_html","transportation_score_html","displayTranportImpact","displayPackagingDetailImpact","filter","pos","indexOf","separator","displayPackagingImpact","alternativesloop","ecoScore","href","hmtl_suggestion","Product","match","params","productImageUrl","genericName","connected","productData","cart","isFlipping","component","bottomComponent","loadHistory","loadFromOpenFoodFacts","loadProductInformations","handleBarCodeUpdate","traceability","impact","transportCO2Impact","image_url","product_name","generic_name","ecoscore_grade","ecoscore_data","status","saveHistory","Authorization","success","quantity","body","bcProductAddress","exist","find","element","brands","setItem","addToCart","co2","ecoscore","flip","quantityDelta","carbonImpact","removeFromCart","event","imageFlip","transform","displayImage","scoreClass","handleChange","newValue","displayNavbar","retour","sort","b","depth","ms","Promise","setTimeout","Profil","disconnect","clear","displayConnectedProfil","displayUnconnectedProfil","ButtonSignup","validEmail","RegExp","Signup","userName","email","password","confirmPassword","errors","redirect","submit","signUser","username","_id","handleSubmit","e","preventDefault","validate","displayErrors","test","onChange","evt","target","passwordConfirm","ButtonSignin","Signin","Connect","loginSuccessful","err","onPasswordChange","passwordInput","emailInput","ButtonChangePassword","USERS","ProfileConfiguration","currentPassword","newPassword","user","changeUserInfo","loadUserInfo","placeholder","DoughnutChartEcoScore","selectedSegment","displayChart","chart","ecoScoreData","cartedProduct","title","c","d","unknown","lineWidth","paddingAngle","radius","PieChart","defaultProps","animationDuration","dataEntry","labelStyle","fontFamily","labelPosition","segmentsStyle","cursor","segmentsShift","monthNames","BarChartCarbonImpact","toolbar","show","dropShadow","enabled","blur","plotOptions","bar","borderRadius","horizontal","xaxis","categories","labels","fontColor","text","yaxis","dataLabels","noData","colors","grid","lines","carbonImpactData","now","dataSize","unit","setHours","setDate","getDate","getDay","yearStart","getFullYear","ceil","getMonth","year","monthNum","toString","series","sortedData","offset","finalValue","nbProducts","Statistics","scannedProduct","loadUserData","loadEcoScoreData","loadCarbonImpactData","typeAggregate","statistics","displayStats","App","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.1a9a01b5.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/fruits-vegetables-basket-by-oblik-studio.9dfc6522.svg\";","import \"./ButtonNavBar.css\";\r\n\r\nfunction ButtonHistory() {\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<div className=\"button-logo\">\r\n\t\t\t\t<span class=\"material-icons\">history</span>\r\n\t\t\t</div>\r\n\t\t\t<div>Historique</div>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default ButtonHistory;\r\n","function ButtonProfil() {\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<div>\r\n\t\t\t\t<span class=\"material-icons\">person</span>\r\n\t\t\t</div>\r\n\t\t\t<div>Profil</div>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default ButtonProfil;\r\n","import { React } from \"react\";\r\n\r\nfunction ButtonScan() {\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<div className=\"navbar-scan-icon\">\r\n\t\t\t\t<span class=\"material-icons\">qr_code_scanner</span>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default ButtonScan;\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport {\r\n\tconfigure,\r\n\tBarcodePicker as ScanditSDKBarcodePicker,\r\n} from \"scandit-sdk\";\r\nimport \"./Scan.css\";\r\nimport { motion, AnimatePresence } from \"framer-motion\";\r\n\r\n// Configure the library and activate it with a license key\r\nconst configurationPromise = configure(\r\n\t\"ASHf6Cx7DGz5BbkR5RWee94Ezm55DtkCAFB5HoNVQLhPf8gUhk8ypmZ72tbfAdIo33/I2gZR9pcXcdBwQGyYu69PkahqLA0dEEN5WFtpVEjMfQMiBhwmRWIJQgn+E54DiwJm/5CjsV1+Uy7AJWXnvrLiuwxG2D/b7b1QoPFJfkKp2OSreWJXnV/kJ+rtqFyNOu2wQb5Rq5IFXOU/tnjlTvJp8Kxl4jezOVoWlQZreaLKfxfBforPArJErC16cldrqFULYUdsPqb4Vn27hWUmPQTfaX/SbeDCl1h++IPmcvRpzwM9hY0ti7zzfhBKg3TgEYTMiPUipakmM21mU92xYjA9kmKO6bOjzY4XqyrWBUzv/C1TwJfK1aZDDLH8BOmqqJILi2Ty9fN84y09vBgv0dfXhQa3Q0/UW0Hnv0Xge2am3RY5dmE6pfWaxYyA3fDj920DpnlUNcAsfdErnvpZz8H1eftw6D2w3ps6q3jNFc/CTkALFZOk9Sy2u+lOfzvjKrcz5d1yoSo1sVhFsLWNUoaoHTP6NPnQaawC1YwPRp90T+2yNfx+iESAhn3qfn2pOEpBG0rHdZNLLj1yeNJU9Pjt7dznNeCJwG2SzSQvPZU5HzLuIu+siWjUPStB9WWMfVluWN3opv+ReRWBjBsaRFPBmit6LNbRk3QLT6To50yVZg8Zy1NuDFUoE+Ms2ytVn9fs30n1DeNYJLCWjQJ4ktQaz2mIFTOFvRVrJqPkTBwzOaAjWoPxOr097hga8bRhPAqV6ir7ojSffUeCjL/jmp1x1uSE4OaQe3Y32oC0XOVJqA==\",\r\n\t{\r\n\t\tengineLocation: \"https://cdn.jsdelivr.net/npm/scandit-sdk@5.x/build/\",\r\n\t}\r\n).catch((error) => {\r\n\talert(error);\r\n});\r\n\r\nconst style = {\r\n\tposition: \"absolute\",\r\n\ttop: \"0\",\r\n\tbottom: \"0\",\r\n\tleft: \"0\",\r\n\tright: \"0\",\r\n\tmargin: \"auto\",\r\n\tmaxWidth: \"1280px\",\r\n\tmaxHeight: \"80%\",\r\n};\r\n\r\nclass Scan extends Component {\r\n\tstatic propTypes = {\r\n\t\tvisible: PropTypes.bool,\r\n\t\tplaySoundOnScan: PropTypes.bool,\r\n\t\tvibrateOnScan: PropTypes.bool,\r\n\t\tscanningPaused: PropTypes.bool,\r\n\t\tguiStyle: PropTypes.string,\r\n\t\tvideoFit: PropTypes.string,\r\n\t\tscanSettings: PropTypes.object,\r\n\t\tenableCameraSwitcher: PropTypes.bool,\r\n\t\tenableTorchToggle: PropTypes.bool,\r\n\t\tenableTapToFocus: PropTypes.bool,\r\n\t\tenablePinchToZoom: PropTypes.bool,\r\n\t\taccessCamera: PropTypes.bool,\r\n\t\tcamera: PropTypes.object,\r\n\t\tcameraSettings: PropTypes.object,\r\n\t\ttargetScanningFPS: PropTypes.number,\r\n\t\tonScan: PropTypes.func,\r\n\t\tonError: PropTypes.func,\r\n\t};\r\n\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.ref = React.createRef();\r\n\t}\r\n\r\n\tcomponentDidMount() {\r\n\t\tconfigurationPromise.then(() => {\r\n\t\t\tScanditSDKBarcodePicker.create(this.ref.current, this.props).then(\r\n\t\t\t\t(barcodePicker) => {\r\n\t\t\t\t\tthis.barcodePicker = barcodePicker;\r\n\r\n\t\t\t\t\tif (this.props.onScan != null) {\r\n\t\t\t\t\t\tbarcodePicker.on(\"scan\", this.props.onScan);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (this.props.onError != null) {\r\n\t\t\t\t\t\tbarcodePicker.on(\"scanError\", this.props.onError);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t);\r\n\t\t});\r\n\t}\r\n\r\n\tcomponentWillUnmount() {\r\n\t\tif (this.barcodePicker != null) {\r\n\t\t\tthis.barcodePicker.destroy();\r\n\t\t}\r\n\t}\r\n\r\n\tcomponentDidUpdate(prevProps) {\r\n\t\t// These are just some examples of how to react to some possible property changes\r\n\r\n\t\tif (\r\n\t\t\tJSON.stringify(prevProps.scanSettings) !==\r\n\t\t\tJSON.stringify(this.props.scanSettings)\r\n\t\t) {\r\n\t\t\tthis.barcodePicker.applyScanSettings(this.props.scanSettings);\r\n\t\t}\r\n\r\n\t\tif (prevProps.visible !== this.props.visible) {\r\n\t\t\tthis.barcodePicker.setVisible(this.props.visible);\r\n\t\t}\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<AnimatePresence exitBeforeEnter={true}>\r\n\t\t\t\t<motion.div\r\n\t\t\t\t\tid=\"background-scan\"\r\n\t\t\t\t\tinitial={{ bottom: \"-1000px\" }}\r\n\t\t\t\t\tanimate={{ bottom: \"0px\" }}\r\n\t\t\t\t\ttransition={{ duration: 0.5 }}\r\n\t\t\t\t\texit={{ bottom: \"-1000px\" }}\r\n\t\t\t\t>\r\n\t\t\t\t\t<div ref={this.ref} style={style} />\r\n\t\t\t\t\t<span\r\n\t\t\t\t\t\tclass=\"close\"\r\n\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\tthis.props.onCrossClicked(false);\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t&times;\r\n\t\t\t\t\t</span>\r\n\t\t\t\t\t<div id=\"scandit-barcode-picker\"></div>\r\n\t\t\t\t</motion.div>\r\n\t\t\t</AnimatePresence>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default Scan;\r\n","import \"./Navbar.css\";\r\nimport React from \"react\";\r\nimport ButtonHistory from \"../Button/ButtonHistory\";\r\nimport ButtonProfil from \"../Button/ButtonProfil\";\r\nimport ButtonScan from \"../Button/ButtonScan\";\r\nimport Scan from \"../Scan/Scan\";\r\nimport { ScanSettings } from \"scandit-sdk\";\r\nimport { Redirect, Link } from \"react-router-dom\";\r\n\r\nclass Navbar extends React.Component {\r\n\tstate = {\r\n\t\tshowScanner: false,\r\n\t\tbarcode: undefined,\r\n\t\tbcProductId: undefined,\r\n\t\theight: 0,\r\n\t};\r\n\r\n\tcomponentDidMount() {\r\n\t\tthis.updateWindowDimensions();\r\n\t\twindow.addEventListener(\"resize\", this.updateWindowDimensions);\r\n\t}\r\n\r\n\tcomponentWillUnmount() {\r\n\t\twindow.removeEventListener(\"resize\", this.updateWindowDimensions);\r\n\t}\r\n\r\n\tupdateWindowDimensions = () => {\r\n\t\tthis.setState({ height: window.innerHeight });\r\n\t};\r\n\r\n\thandleScannerButton = (bool) => {\r\n\t\tthis.setState({ showScanner: bool });\r\n\t};\r\n\r\n\thandleBarcode = (res) => {\r\n\t\tif (res) {\r\n\t\t\t//détecté par barcode scanner\r\n\t\t\tlet arr = res.split(\"/\");\r\n\t\t\tif (arr.length > 1) {\r\n\t\t\t\tthis.setState({\r\n\t\t\t\t\tbarcode: arr[4],\r\n\t\t\t\t\tbcProductId: arr[5],\r\n\t\t\t\t\tshowScanner: false,\r\n\t\t\t\t});\r\n\t\t\t} else {\r\n\t\t\t\tthis.setState({\r\n\t\t\t\t\tbarcode: arr[0],\r\n\t\t\t\t\tshowScanner: false,\r\n\t\t\t\t\tbcProductId: undefined,\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\trender = () => {\r\n\t\tif (this.state.height < 550) {\r\n\t\t\treturn <React.Fragment />;\r\n\t\t}\r\n\t\tif (\r\n\t\t\tthis.state.barcode &&\r\n\t\t\tthis.state.bcProductId &&\r\n\t\t\t(this.props.barcode !== this.state.barcode ||\r\n\t\t\t\tthis.props.bcProductId !== this.state.bcProductId)\r\n\t\t) {\r\n\t\t\treturn (\r\n\t\t\t\t<Redirect\r\n\t\t\t\t\tto={\r\n\t\t\t\t\t\t\"/products/\" +\r\n\t\t\t\t\t\tthis.state.barcode +\r\n\t\t\t\t\t\t\"/\" +\r\n\t\t\t\t\t\tthis.state.bcProductId\r\n\t\t\t\t\t}\r\n\t\t\t\t/>\r\n\t\t\t);\r\n\t\t}\r\n\r\n\t\tif (this.state.barcode && this.props.barcode !== this.state.barcode) {\r\n\t\t\treturn <Redirect to={\"/products/\" + this.state.barcode} />;\r\n\t\t}\r\n\r\n\t\tif (!this.state.showScanner) {\r\n\t\t\treturn (\r\n\t\t\t\t<React.Fragment>\r\n\t\t\t\t\t<div className=\"navbar-container\">\r\n\t\t\t\t\t\t<Link\r\n\t\t\t\t\t\t\tto=\"/history\"\r\n\t\t\t\t\t\t\tclassName={\r\n\t\t\t\t\t\t\t\twindow.location.pathname == \"/history\"\r\n\t\t\t\t\t\t\t\t\t? \"navbar-link navbar-text-left navbar-selected\"\r\n\t\t\t\t\t\t\t\t\t: \"navbar-link navbar-text-left \"\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<ButtonHistory />\r\n\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t\t<div onClick={() => this.handleScannerButton(true)}>\r\n\t\t\t\t\t\t\t<div className=\"navbar-circle\">\r\n\t\t\t\t\t\t\t\t<ButtonScan />\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<span className=\"navbar-scan-text\">Scan</span>\r\n\t\t\t\t\t\t<Link\r\n\t\t\t\t\t\t\tto=\"/profil\"\r\n\t\t\t\t\t\t\tclassName={\r\n\t\t\t\t\t\t\t\twindow.location.pathname == \"/profil\"\r\n\t\t\t\t\t\t\t\t\t? \"navbar-link navbar-text-right navbar-selected\"\r\n\t\t\t\t\t\t\t\t\t: \"navbar-link navbar-text-right \"\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<ButtonProfil />\r\n\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</React.Fragment>\r\n\t\t\t);\r\n\t\t} else {\r\n\t\t\treturn (\r\n\t\t\t\t<Scan\r\n\t\t\t\t\tonCrossClicked={this.handleScannerButton}\r\n\t\t\t\t\t// playSoundOnScan={true}\r\n\t\t\t\t\tvibrateOnScan={true}\r\n\t\t\t\t\tenableTorchToggle={true}\r\n\t\t\t\t\tenablePinchToZoom={true}\r\n\t\t\t\t\tenableCameraSwitcher={true}\r\n\t\t\t\t\tguiStyle={\"viewfinder\"}\r\n\t\t\t\t\tscanSettings={\r\n\t\t\t\t\t\tnew ScanSettings({\r\n\t\t\t\t\t\t\tenabledSymbologies: [\r\n\t\t\t\t\t\t\t\t\"qr\",\r\n\t\t\t\t\t\t\t\t\"ean8\",\r\n\t\t\t\t\t\t\t\t\"ean13\",\r\n\t\t\t\t\t\t\t\t\"upca\",\r\n\t\t\t\t\t\t\t\t\"upce\",\r\n\t\t\t\t\t\t\t\t\"code128\",\r\n\t\t\t\t\t\t\t\t\"code39\",\r\n\t\t\t\t\t\t\t\t\"code93\",\r\n\t\t\t\t\t\t\t\t\"itf\",\r\n\t\t\t\t\t\t\t],\r\n\t\t\t\t\t\t\tcodeDuplicateFilter: 1000,\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t}\r\n\t\t\t\t\tonScan={(scanResult) => {\r\n\t\t\t\t\t\tconsole.log(scanResult.barcodes[0].data);\r\n\t\t\t\t\t\tthis.handleBarcode(scanResult.barcodes[0].data);\r\n\t\t\t\t\t}}\r\n\t\t\t\t\tonError={(error) => {\r\n\t\t\t\t\t\tconsole.error(error.message);\r\n\t\t\t\t\t}}\r\n\t\t\t\t/>\r\n\t\t\t);\r\n\t\t}\r\n\t};\r\n}\r\n\r\nexport default Navbar;\r\n","export default __webpack_public_path__ + \"static/media/logo.0dcb8e95.svg\";","export default __webpack_public_path__ + \"static/media/bitmap.6f490d5b.png\";","import './Header.css';\r\nimport logo from '../../assets/images/logo.svg';\r\nimport blob from \"../../assets/images/bitmap.png\";\r\n\r\nfunction Header() {\r\n  return (\r\n    <div>\r\n      <div>\r\n\t\t\t\t\t\t<img src={blob} className=\"blob-top\" alt=\"Blob\" />\r\n\t\t\t\t</div>\r\n        <div>\r\n          <img src={blob} className=\"blob-left\" alt=\"Blob\" />\r\n        </div>\r\n        <div>\r\n          <img src={blob} className=\"blob-right\" alt=\"Blob\" />\r\n        </div>\r\n      <div className=\"header-container\">\r\n        <img src={logo} className=\"header-logo\" alt=\"Logo\"/>\r\n        <span>Lowympact</span>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Header;","import { React, Component, Fragment } from \"react\";\r\nimport fruits from \"../assets/images/fruits-vegetables-basket-by-oblik-studio.svg\";\r\nimport Navbar from \"../components/Navbar/Navbar\";\r\nimport Header from \"../components/Header/Header\";\r\nimport \"./History.css\";\r\n// import { ITEMS } from \"../assets/scanned/items\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { motion } from \"framer-motion\";\r\n\r\nfunction RenderHistoryItem({ item }) {\r\n    var labelColor;\r\n    if (item.label === \"d\" || item.label === \"e\") {\r\n        labelColor = \"red\";\r\n    } else if (item.label === \"c\") {\r\n        labelColor = \"yellow\";\r\n    } else if (item.label === \"a\" || item.label === \"b\") {\r\n        labelColor = \"green\";\r\n    }\r\n\r\n    var pathProduct = \"/products/\" + item.barcode;\r\n    if (item.bcProductId) {\r\n        pathProduct += \"/\" + item.bcProductId;\r\n    }\r\n\r\n    // Mock Soutenance\r\n    if (item.barcode === \"80135463\") {\r\n        item.name = \"Nutella 200g\";\r\n    }\r\n\r\n    return (\r\n        <motion.div initial={{ opacity: 0 }} animate={{ opacity: 1 }} exit={{ opacity: 0 }}>\r\n            <Link className=\"history-item\" to={pathProduct}>\r\n                <div className=\"history-img-container\">\r\n                    <img src={item.image} alt=\"\" />\r\n                </div>\r\n                <div className=\"history-name-container\">\r\n                    <div className=\"history-name\">{item.name}</div>\r\n                    <div className=\"history-brand\">{item.brand}</div>\r\n                </div>\r\n                <div className=\"history-label-container\">\r\n                    <div style={{ color: labelColor }}>●</div>\r\n                    <div className=\"history-label\">\r\n                        {item.label == \"not-applicable\" ? \"\" : item.label}\r\n                    </div>\r\n                </div>\r\n                <div style={{ marginRight: \"10px\", color: \"rgb(41,72,102)\" }}>{\">\"}</div>\r\n            </Link>\r\n        </motion.div>\r\n    );\r\n}\r\n\r\nclass History extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            items: undefined,\r\n            loading: true,\r\n            userId: undefined,\r\n        };\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        let userId = localStorage.getItem(\"userId\");\r\n        let token = localStorage.getItem(\"token\");\r\n        if (userId && token) {\r\n            this.setState({ userId: userId });\r\n            this.loadHistoryInformations(userId);\r\n        } else {\r\n            this.loadLocalStorageHistory(userId);\r\n        }\r\n    };\r\n\r\n    loadHistoryInformations = (userId) => {\r\n        fetch(\r\n            `https://api.lowympact.fr/api/v1/users/${userId}/history`,\r\n            // `http://localhost:8080/api/v1/users/${userId}/history`,\r\n\r\n            {\r\n                method: \"get\",\r\n                credentials: \"include\",\r\n                headers: new Headers({\r\n                    authorization: localStorage.getItem(\"token\"),\r\n                    \"Content-Type\": \"application/json\",\r\n                    \"api-key\": \"99d8fb95-abdd-4885-bf6c-3a81d8874043\",\r\n                }),\r\n            }\r\n        )\r\n            .then((response) => response.json())\r\n            .then((res) => {\r\n                console.log(res);\r\n\r\n                this.setState({\r\n                    items: res?.data,\r\n                    loading: false,\r\n                });\r\n            });\r\n    };\r\n\r\n    loadLocalStorageHistory = () => {\r\n        let history = JSON.parse(localStorage.getItem(\"local_history\"));\r\n        this.setState({\r\n            items: history,\r\n            loading: false,\r\n        });\r\n    };\r\n\r\n    render() {\r\n        if (this.state.items) {\r\n            let itemList = <Fragment />;\r\n            if (!this.loading) {\r\n                itemList = this.state.items.map((item) => {\r\n                    return (\r\n                        <div key={item.id}>\r\n                            <RenderHistoryItem item={item} />\r\n                        </div>\r\n                    );\r\n                });\r\n            } else {\r\n                itemList = (\r\n                    <div className=\"loader\">\r\n                        <img src=\"/images/utils/loading.gif\" alt=\"\" />\r\n                    </div>\r\n                );\r\n            }\r\n\r\n            if (Object.keys(this.state.items).length === 0)\r\n                return (\r\n                    <div>\r\n                        <Header />\r\n                        <Navbar />\r\n                        <motion.div\r\n                            className=\"App\"\r\n                            initial={{ opacity: 0 }}\r\n                            animate={{ opacity: 1 }}\r\n                            exit={{ opacity: 0 }}\r\n                        >\r\n                            <div>\r\n                                <img src={fruits} className=\"logo\" alt=\"Fruits\" />\r\n                                <p className=\"logo-text\">Commence à scanner des produits !</p>\r\n                            </div>\r\n                        </motion.div>\r\n                    </div>\r\n                );\r\n            else\r\n                return (\r\n                    <div>\r\n                        <div className=\"screen\">\r\n                            <div className=\"screen-title\"></div>\r\n                            {itemList}\r\n                        </div>\r\n                        <Header />\r\n                        <Navbar />\r\n                    </div>\r\n                );\r\n        } else {\r\n            let image = (\r\n                <div>\r\n                    <img src={fruits} className=\"logo\" alt=\"Fruits\" />\r\n                    <p className=\"logo-text\">Commence à scanner des produits !</p>\r\n                </div>\r\n            );\r\n            if (this.state.loading) {\r\n                image = (\r\n                    <div className=\"loader\">\r\n                        <img src=\"/images/utils/loading.gif\" alt=\"\" />\r\n                    </div>\r\n                );\r\n            }\r\n            return (\r\n                <div>\r\n                    <Header />\r\n                    <Navbar />\r\n                    <motion.div\r\n                        className=\"App\"\r\n                        initial={{ opacity: 0 }}\r\n                        animate={{ opacity: 1 }}\r\n                        exit={{ opacity: 0 }}\r\n                    >\r\n                        {image}\r\n                    </motion.div>\r\n                </div>\r\n            );\r\n        }\r\n    }\r\n}\r\n\r\nexport default History;\r\n","import logo from \"../assets/images/logo.svg\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction Error404() {\r\n\treturn (\r\n\t\t<div className=\"App\">\r\n\t\t\t<header className=\"App-header\">\r\n\t\t\t\t<img src={logo} className=\"logo\" alt=\"logo\" />\r\n\t\t\t\t<h1>Erreur 404</h1>\r\n\t\t\t\t<Link to=\"/\">Retourner à l'accueil</Link>\r\n\t\t\t</header>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default Error404;\r\n","import '../../pages/Login.css';\r\nfunction ButtonCreateAccount() {\r\n    return (\r\n      <div>\r\n        Créer un compte\r\n      </div>\r\n    );\r\n  }\r\n  export default ButtonCreateAccount;\r\n","\r\nfunction ButtonLogin() {\r\n    return (\r\n      <div>\r\n        Me connecter\r\n      </div>\r\n    );\r\n  }\r\n  export default ButtonLogin;","function ButtonNoAccount() {\r\n\treturn <div>Continuer sans compte {\">\"}</div>;\r\n}\r\nexport default ButtonNoAccount;\r\n","import React from \"react\";\r\nimport logo from \"../assets/images/logo.svg\";\r\nimport fruits from \"../assets/images/fruits-vegetables-basket-by-oblik-studio.svg\";\r\nimport \"./Login.css\";\r\nimport ButtonCreateAccount from \"../components/Button/ButtonCreateAccount\";\r\nimport ButtonLogin from \"../components/Button/ButtonLogin\";\r\nimport { Link } from \"react-router-dom\";\r\nimport ButtonNoAccount from \"../components/Button/ButtonNoAccount\";\r\nimport jwt from \"jsonwebtoken\";\r\nimport { motion } from \"framer-motion\";\r\n\r\nclass Login extends React.Component {\r\n\tcomponentDidMount = () => {\r\n\t\tthis.Verify();\r\n\t};\r\n\r\n\tVerify = () => {\r\n\t\tlet isExpired = true;\r\n\t\tconst token = localStorage.getItem(\"token\");\r\n\t\tif (token) {\r\n\t\t\tvar decodedToken = jwt.decode(token, { complete: true });\r\n\t\t\tvar dateNow = new Date();\r\n\t\t\tconsole.log(decodedToken, dateNow.getTime() / 1000);\r\n\t\t\tif (decodedToken.payload.exp >= dateNow.getTime() / 1000) {\r\n\t\t\t\tisExpired = false;\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (isExpired === false) {\r\n\t\t\tconsole.log(\"here\");\r\n\t\t\tthis.props.history.push(`/history`); // redirection vers la page login\r\n\t\t}\r\n\t};\r\n\trender = () => {\r\n\t\treturn (\r\n\t\t\t<motion.div exit={{ opacity: 0 }}>\r\n\t\t\t\t<div className=\"login-logo\">\r\n\t\t\t\t\t<img src={logo} className=\"logo\" alt=\"Logo\" />\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"login-lowympact\">Lowympact</div>\r\n\t\t\t\t<Link to=\"/signup\" className=\"button-account\">\r\n\t\t\t\t\t<ButtonCreateAccount />\r\n\t\t\t\t</Link>\r\n\t\t\t\t<Link to=\"/signin\" className=\"button-connect\">\r\n\t\t\t\t\t<ButtonLogin />\r\n\t\t\t\t</Link>\r\n\t\t\t\t<Link to=\"/history\" className=\"button-no-account\">\r\n\t\t\t\t\t<ButtonNoAccount />\r\n\t\t\t\t</Link>\r\n\t\t\t\t<div className=\"logo-fruits\">\r\n\t\t\t\t\t<img src={fruits} className=\"logo\" alt=\"Fruits\" />\r\n\t\t\t\t</div>\r\n\t\t\t</motion.div>\r\n\t\t);\r\n\t};\r\n}\r\nexport default Login;\r\n","import L from \"leaflet\";\r\n\r\nL.Curve = L.Path.extend({\r\n\toptions: {},\r\n\r\n\tinitialize: function (path, options) {\r\n\t\t//1\r\n\t\tL.setOptions(this, options);\r\n\t\tthis._initialUpdate = true;\r\n\t\tthis._setPath(path);\r\n\t},\r\n\r\n\tgetPath: function () {\r\n\t\treturn this._coords;\r\n\t},\r\n\r\n\tsetPath: function (path, options) {\r\n\t\tthis._initialUpdate = true;\r\n\t\tthis._setPath(path);\r\n\t\treturn this.redraw();\r\n\t},\r\n\r\n\tgetBounds: function () {\r\n\t\treturn this._bounds;\r\n\t},\r\n\r\n\t_setPath: function (path) {\r\n\t\t//2\r\n\t\tthis._coords = path;\r\n\t\tthis._bounds = this._computeBounds();\r\n\t},\r\n\r\n\t_computeBounds: function () {\r\n\t\t//3\r\n\t\tvar bound = new L.LatLngBounds();\r\n\t\tvar lastPoint;\r\n\t\tvar lastCommand;\r\n\t\tvar coord;\r\n\t\tfor (var i = 0; i < this._coords.length; i++) {\r\n\t\t\tcoord = this._coords[i];\r\n\t\t\tif (typeof coord == \"string\" || coord instanceof String) {\r\n\t\t\t\tlastCommand = coord;\r\n\t\t\t} else if (lastCommand == \"H\") {\r\n\t\t\t\tbound.extend([lastPoint.lat, coord[0]]);\r\n\t\t\t\tlastPoint = new L.latLng(lastPoint.lat, coord[0]);\r\n\t\t\t} else if (lastCommand == \"V\") {\r\n\t\t\t\tbound.extend([coord[0], lastPoint.lng]);\r\n\t\t\t\tlastPoint = new L.latLng(coord[0], lastPoint.lng);\r\n\t\t\t} else if (lastCommand == \"C\") {\r\n\t\t\t\tvar controlPoint1 = new L.latLng(coord[0], coord[1]);\r\n\t\t\t\tcoord = this._coords[++i];\r\n\t\t\t\tvar controlPoint2 = new L.latLng(coord[0], coord[1]);\r\n\t\t\t\tcoord = this._coords[++i];\r\n\t\t\t\tvar endPoint = new L.latLng(coord[0], coord[1]);\r\n\r\n\t\t\t\tbound.extend(controlPoint1);\r\n\t\t\t\tbound.extend(controlPoint2);\r\n\t\t\t\tbound.extend(endPoint);\r\n\r\n\t\t\t\tendPoint.controlPoint1 = controlPoint1;\r\n\t\t\t\tendPoint.controlPoint2 = controlPoint2;\r\n\t\t\t\tlastPoint = endPoint;\r\n\t\t\t} else if (lastCommand == \"S\") {\r\n\t\t\t\tvar controlPoint2 = new L.latLng(coord[0], coord[1]);\r\n\t\t\t\tcoord = this._coords[++i];\r\n\t\t\t\tvar endPoint = new L.latLng(coord[0], coord[1]);\r\n\r\n\t\t\t\tvar controlPoint1 = lastPoint;\r\n\t\t\t\tif (lastPoint.controlPoint2) {\r\n\t\t\t\t\tvar diffLat = lastPoint.lat - lastPoint.controlPoint2.lat;\r\n\t\t\t\t\tvar diffLng = lastPoint.lng - lastPoint.controlPoint2.lng;\r\n\t\t\t\t\tcontrolPoint1 = new L.latLng(\r\n\t\t\t\t\t\tlastPoint.lat + diffLat,\r\n\t\t\t\t\t\tlastPoint.lng + diffLng\r\n\t\t\t\t\t);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tbound.extend(controlPoint1);\r\n\t\t\t\tbound.extend(controlPoint2);\r\n\t\t\t\tbound.extend(endPoint);\r\n\r\n\t\t\t\tendPoint.controlPoint1 = controlPoint1;\r\n\t\t\t\tendPoint.controlPoint2 = controlPoint2;\r\n\t\t\t\tlastPoint = endPoint;\r\n\t\t\t} else if (lastCommand == \"Q\") {\r\n\t\t\t\tvar controlPoint = new L.latLng(coord[0], coord[1]);\r\n\t\t\t\tcoord = this._coords[++i];\r\n\t\t\t\tvar endPoint = new L.latLng(coord[0], coord[1]);\r\n\r\n\t\t\t\tbound.extend(controlPoint);\r\n\t\t\t\tbound.extend(endPoint);\r\n\r\n\t\t\t\tendPoint.controlPoint = controlPoint;\r\n\t\t\t\tlastPoint = endPoint;\r\n\t\t\t} else if (lastCommand == \"T\") {\r\n\t\t\t\tvar endPoint = new L.latLng(coord[0], coord[1]);\r\n\r\n\t\t\t\tvar controlPoint = lastPoint;\r\n\t\t\t\tif (lastPoint.controlPoint) {\r\n\t\t\t\t\tvar diffLat = lastPoint.lat - lastPoint.controlPoint.lat;\r\n\t\t\t\t\tvar diffLng = lastPoint.lng - lastPoint.controlPoint.lng;\r\n\t\t\t\t\tcontrolPoint = new L.latLng(\r\n\t\t\t\t\t\tlastPoint.lat + diffLat,\r\n\t\t\t\t\t\tlastPoint.lng + diffLng\r\n\t\t\t\t\t);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tbound.extend(controlPoint);\r\n\t\t\t\tbound.extend(endPoint);\r\n\r\n\t\t\t\tendPoint.controlPoint = controlPoint;\r\n\t\t\t\tlastPoint = endPoint;\r\n\t\t\t} else {\r\n\t\t\t\tbound.extend(coord);\r\n\t\t\t\tlastPoint = new L.latLng(coord[0], coord[1]);\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn bound;\r\n\t},\r\n\r\n\t//TODO: use a centroid algorithm instead\r\n\tgetCenter: function () {\r\n\t\treturn this._bounds.getCenter();\r\n\t},\r\n\r\n\t_update: function () {\r\n\t\t//5\r\n\t\tif (!this._map) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tthis._updatePath();\r\n\t},\r\n\r\n\t_updatePath: function () {\r\n\t\t//6\r\n\t\tthis._renderer._updatecurve(this);\r\n\t},\r\n\r\n\t_project: function () {\r\n\t\t//4\r\n\t\tvar coord, lastCoord, curCommand, curPoint;\r\n\r\n\t\tthis._points = [];\r\n\r\n\t\tfor (var i = 0; i < this._coords.length; i++) {\r\n\t\t\tcoord = this._coords[i];\r\n\t\t\tif (typeof coord == \"string\" || coord instanceof String) {\r\n\t\t\t\tthis._points.push(coord);\r\n\t\t\t\tcurCommand = coord;\r\n\t\t\t} else {\r\n\t\t\t\tswitch (coord.length) {\r\n\t\t\t\t\tcase 2:\r\n\t\t\t\t\t\tcurPoint = this._map.latLngToLayerPoint(coord);\r\n\t\t\t\t\t\tlastCoord = coord;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 1:\r\n\t\t\t\t\t\tif (curCommand == \"H\") {\r\n\t\t\t\t\t\t\tcurPoint = this._map.latLngToLayerPoint([\r\n\t\t\t\t\t\t\t\tlastCoord[0],\r\n\t\t\t\t\t\t\t\tcoord[0],\r\n\t\t\t\t\t\t\t]);\r\n\t\t\t\t\t\t\tlastCoord = [lastCoord[0], coord[0]];\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tcurPoint = this._map.latLngToLayerPoint([\r\n\t\t\t\t\t\t\t\tcoord[0],\r\n\t\t\t\t\t\t\t\tlastCoord[1],\r\n\t\t\t\t\t\t\t]);\r\n\t\t\t\t\t\t\tlastCoord = [coord[0], lastCoord[1]];\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t\tthis._points.push(curPoint);\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n});\r\n\r\nL.curve = function (path, options) {\r\n\treturn new L.Curve(path, options);\r\n};\r\n\r\nL.SVG.include({\r\n\t//7\r\n\t_updatecurve: function (layer) {\r\n\t\tthis._setPath(layer, this._curvePointsToPath(layer._points));\r\n\t\tif (layer.options.animate) {\r\n\t\t\tvar path = layer._path;\r\n\t\t\tvar length = path.getTotalLength();\r\n\r\n\t\t\tif (!layer.options.dashArray) {\r\n\t\t\t\tpath.style.strokeDasharray = length + \" \" + length;\r\n\t\t\t}\r\n\r\n\t\t\tif (layer._initialUpdate) {\r\n\t\t\t\tpath.animate(\r\n\t\t\t\t\t[{ strokeDashoffset: length }, { strokeDashoffset: 0 }],\r\n\t\t\t\t\tlayer.options.animate\r\n\t\t\t\t);\r\n\t\t\t\tlayer._initialUpdate = false;\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\r\n\t_curvePointsToPath: function (points) {\r\n\t\tvar point,\r\n\t\t\tcurCommand,\r\n\t\t\tstr = \"\";\r\n\t\tfor (var i = 0; i < points.length; i++) {\r\n\t\t\tpoint = points[i];\r\n\t\t\tif (typeof point == \"string\" || point instanceof String) {\r\n\t\t\t\tcurCommand = point;\r\n\t\t\t\tstr += curCommand;\r\n\t\t\t} else {\r\n\t\t\t\tswitch (curCommand) {\r\n\t\t\t\t\tcase \"H\":\r\n\t\t\t\t\t\tstr += point.x + \" \";\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase \"V\":\r\n\t\t\t\t\t\tstr += point.y + \" \";\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tdefault:\r\n\t\t\t\t\t\tstr += point.x + \",\" + point.y + \" \";\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn str || \"M0 0\";\r\n\t},\r\n});\r\n","// import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Path, withLeaflet } from \"react-leaflet\";\r\nimport { curve } from \"./leaflet.curve\";\r\nimport L from \"leaflet\";\r\n\r\nclass Curve extends Path {\r\n\tcreateLeafletElement(props) {\r\n\t\tconst { positions, option, ...options } = props;\r\n\t\treturn L.curve(positions, option, this.getOptions(options));\r\n\t}\r\n\r\n\tupdateLeafletElement(fromProps, toProps) {\r\n\t\tif (toProps.positions !== fromProps.positions) {\r\n\t\t\tthis.leafletElement.setPath(toProps.positions);\r\n\t\t}\r\n\t\tthis.setStyleIfChanged(fromProps, toProps);\r\n\t}\r\n}\r\n\r\nCurve.propTypes = {\r\n\tchildren: PropTypes.oneOfType([\r\n\t\tPropTypes.arrayOf(PropTypes.node),\r\n\t\tPropTypes.node,\r\n\t]),\r\n\toption: PropTypes.object,\r\n\tpositions: PropTypes.array.isRequired,\r\n};\r\n\r\nexport default withLeaflet(Curve);\r\n\r\n/*\r\n  componentWillMount() {\r\n    super.componentWillMount();\r\n    const { positions, ...options } = this.props\r\n    this.leafletElement = L.curve(positions, this.getOptions(options))\r\n  }*/\r\n","import React from \"react\";\r\nimport { Map, TileLayer, Marker } from \"react-leaflet\";\r\nimport \"./Traceability.css\";\r\nimport { Swiper, SwiperSlide } from \"swiper/react\";\r\nimport { Curve } from \"./leaflet-curve\";\r\nimport L from \"leaflet\";\r\n// Import Swiper styles\r\nimport \"swiper/swiper-bundle.css\";\r\n\r\nclass Traceability extends React.Component {\r\n    map = undefined;\r\n    state = {\r\n        zoom: 12,\r\n        swiper: undefined,\r\n        currentIndex: 0,\r\n        map: undefined,\r\n    };\r\n\r\n    getMaterialIcon = (mode) => {\r\n        switch (mode) {\r\n            case \"Charette\":\r\n                return \"directions_bike\";\r\n            case \"Plane\":\r\n                return \"flight_takeoff\";\r\n            case \"Train\":\r\n                return \"train\";\r\n            case \"Boat\":\r\n                return \"directions_boat_filled\";\r\n            case \"Truck\":\r\n                return \"local_shipping\";\r\n            default:\r\n                return \"nature_people\";\r\n        }\r\n    };\r\n\r\n    getTransportMode = (mode) => {\r\n        switch (mode) {\r\n            case \"Charette\":\r\n                return \"vélo\";\r\n            case \"Plane\":\r\n                return \"avion\";\r\n            case \"Train\":\r\n                return \"train\";\r\n            case \"Boat\":\r\n                return \"bateau\";\r\n            case \"Truck\":\r\n                return \"camion\";\r\n            default:\r\n                return mode;\r\n        }\r\n    };\r\n    getTranslation = (mode) => {\r\n        switch (mode) {\r\n            case \"maker\":\r\n                return \"Fabricant\";\r\n            case \"productor\":\r\n                return \"Producteur\";\r\n            case \"shop\":\r\n                return \"Revendeur\";\r\n            default:\r\n                return mode;\r\n        }\r\n    };\r\n\r\n    displaySlides = () => {\r\n        let slides = <React.Fragment />;\r\n        if (this.props.products) {\r\n            slides = this.props.products.map((product) => {\r\n                let pastille = \"product-slide-pastille past-green\";\r\n                if (product.TransportCO2Impact?.value > 10) {\r\n                    pastille = \"product-slide-pastille past-orange\";\r\n                }\r\n                if (product.TransportCO2Impact?.value > 100) {\r\n                    pastille = \"product-slide-pastille past-red\";\r\n                }\r\n\r\n                return (\r\n                    <SwiperSlide>\r\n                        <div className=\"product-slide-container\">\r\n                            <div className=\"product-slide-icon\">\r\n                                <span class=\"material-icons\">\r\n                                    {this.getMaterialIcon(product.transport)}\r\n                                </span>\r\n\r\n                                <div className=\"product-slide-name\">\r\n                                    <span className=\"product-slide-name-product\">\r\n                                        {product.productsOutput[0].productName}\r\n                                    </span>\r\n                                    <span className=\"product-slide-name-transport\">\r\n                                        Transport en {this.getTransportMode(product.transport)}\r\n                                    </span>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"product-slide-origin-wrapper\">\r\n                                <div className=\"product-transport-ui\">\r\n                                    <div className=\"transport-ui-circle\"></div>\r\n                                    <div className=\"transport-ui-tiret\"></div>\r\n                                    <div className=\"transport-ui-circle circle-bis\"></div>\r\n                                </div>\r\n                                <div className=\"product-slide-transport-container\">\r\n                                    <div className=\"product-slide-bigname\">\r\n                                        <span>\r\n                                            {product.seller.localisation.city},{\" \"}\r\n                                            {product.seller.localisation.country}\r\n                                        </span>\r\n                                    </div>\r\n                                    <div className=\"product-slide-lowername2\">\r\n                                        {this.getTranslation(product.seller?.type)}\r\n                                        {\": \"}\r\n                                        {product.seller?.name}\r\n                                    </div>\r\n\r\n                                    <div className=\"product-slide-bigname bigname-lower\">\r\n                                        <span>\r\n                                            {product.buyer.localisation.city},{\" \"}\r\n                                            {product.buyer.localisation.country}\r\n                                        </span>\r\n                                    </div>\r\n                                    <div className=\"product-slide-lowername2\">\r\n                                        {this.getTranslation(product.buyer?.type)}\r\n                                        {\": \"}\r\n                                        {product.buyer?.name}\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"product-slide-arrow\">{\">\"}</div>\r\n                            <div className=\"product-slide-consumption\">\r\n                                <div className={pastille}></div>\r\n                                <div>{Math.round(product.dist.value)} km </div>\r\n                                <div>\r\n                                    {product.TransportCO2Impact?.value > 1\r\n                                        ? Math.round(product.TransportCO2Impact?.value)\r\n                                        : \"< 1\"}{\" \"}\r\n                                    kg CO2{\" \"}\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </SwiperSlide>\r\n                );\r\n            });\r\n        }\r\n        return slides;\r\n    };\r\n\r\n    handleMarkerClick = (latlng, index) => {\r\n        // window.scrollTo({ top: \"8000px\", behavior: \"smooth\" });\r\n        let elem = document.getElementsByClassName(\"swiper-container\");\r\n        if (elem[0]) {\r\n            elem[0].scrollIntoView({ behavior: \"smooth\" });\r\n        }\r\n        console.log(index);\r\n        if (index >= this.props.products?.length) {\r\n            this.state.swiper.slideTo(index - 1, 500);\r\n        } else {\r\n            this.state.swiper.slideTo(index, 500);\r\n        }\r\n        let zoom = 5;\r\n        if (this.props.products && this.props.products[index]) {\r\n            let p = this.props.products[index];\r\n            console.log(\r\n                [p.buyer.localisation.latitude, p.buyer.localisation.longitude],\r\n                [p.seller.localisation.latitude, p.seller.localisation.longitude]\r\n            );\r\n            zoom = getZoomRatio(\r\n                [p.buyer.localisation.latitude, p.buyer.localisation.longitude],\r\n                [p.seller.localisation.latitude, p.seller.localisation.longitude]\r\n            );\r\n        }\r\n        console.log(zoom);\r\n        this.map.leafletElement.flyTo(latlng, zoom, { duration: 0.5 });\r\n    };\r\n\r\n    onSlideChange = (index) => {\r\n        this.setState({ currentIndex: index });\r\n        let zoom = 5;\r\n        if (this.props.products && this.props.products[index]) {\r\n            let p = this.props.products[index];\r\n\r\n            zoom = getZoomRatio(\r\n                [p.buyer.localisation.latitude, p.buyer.localisation.longitude],\r\n                [p.seller.localisation.latitude, p.seller.localisation.longitude]\r\n            );\r\n\r\n            let lat =\r\n                (parseFloat(p.seller.localisation.latitude) +\r\n                    parseFloat(p.buyer.localisation.latitude)) /\r\n                2;\r\n            let long =\r\n                (parseFloat(p.seller.localisation.longitude) +\r\n                    parseFloat(p.buyer.localisation.longitude)) /\r\n                2;\r\n            console.log(zoom);\r\n            this.map.leafletElement.flyTo([lat, long], zoom, { duration: 0.5 });\r\n        }\r\n    };\r\n\r\n    displayMarker = () => {\r\n        let markers = <React.Fragment />;\r\n        if (this.props.products) {\r\n            markers = this.props.products.map((product, i) => {\r\n                let marker1 = <React.Fragment />;\r\n                let lat1 = parseFloat(product?.buyer?.localisation?.latitude);\r\n                let long1 = parseFloat(product?.buyer?.localisation?.longitude);\r\n                let marker2 = <React.Fragment />;\r\n                let lat2 = parseFloat(product?.seller?.localisation?.latitude);\r\n                let long2 = parseFloat(product?.seller?.localisation?.longitude);\r\n                let icon;\r\n                let icon2;\r\n                let zIndex = 0;\r\n                if (i === this.state.currentIndex) {\r\n                    icon = new L.Icon({\r\n                        iconUrl: \"/images/utils/map.png\", //require('../../images/logo/logo.svg'),\r\n                        iconRetinaUrl: \"/images/utils/map.png\", //\"/images/images_volume/1-l.png\", //require('../../images/logo/logo.svg'),\r\n                        iconSize: new L.Point(32, 32),\r\n                        className: \"leaflet-mark-icon\",\r\n                    });\r\n                    icon2 = new L.Icon({\r\n                        iconUrl: \"/images/utils/map.png\", //require('../../images/logo/logo.svg'),\r\n                        iconRetinaUrl: \"/images/utils/map3.png\", //\"/images/images_volume/1-l.png\", //require('../../images/logo/logo.svg'),\r\n                        iconSize: new L.Point(32, 32),\r\n                        className: \"leaflet-mark-icon\",\r\n                    });\r\n                    zIndex = 5;\r\n                } else {\r\n                    icon = new L.Icon({\r\n                        iconUrl: \"/images/utils/map2.png\", //require('../../images/logo/logo.svg'),\r\n                        iconRetinaUrl: \"/images/utils/map2.png\", //\"/images/images_volume/1-l.png\", //require('../../images/logo/logo.svg'),\r\n                        iconSize: new L.Point(25, 25),\r\n                        className: \"leaflet-mark-icon\",\r\n                    });\r\n                    icon2 = new L.Icon({\r\n                        iconUrl: \"/images/utils/map2.png\", //require('../../images/logo/logo.svg'),\r\n                        iconRetinaUrl: \"/images/utils/map2.png\", //\"/images/images_volume/1-l.png\", //require('../../images/logo/logo.svg'),\r\n                        iconSize: new L.Point(25, 25),\r\n                        className: \"leaflet-mark-icon\",\r\n                    });\r\n                }\r\n\r\n                if (lat1 && long1) {\r\n                    marker1 = (\r\n                        <Marker\r\n                            zIndexOffset={zIndex}\r\n                            icon={icon}\r\n                            position={[lat1, long1]}\r\n                            onClick={() =>\r\n                                this.handleMarkerClick(\r\n                                    [\r\n                                        parseFloat(product.buyer.localisation.latitude),\r\n                                        parseFloat(product.buyer.localisation.longitude),\r\n                                    ],\r\n                                    i + 1\r\n                                )\r\n                            }\r\n                        >\r\n                            {/* <Popup>{product.buyer.name}</Popup> */}\r\n                        </Marker>\r\n                    );\r\n                }\r\n                if (lat2 && long2) {\r\n                    marker2 = (\r\n                        <Marker\r\n                            zIndexOffset={zIndex}\r\n                            icon={icon2}\r\n                            position={[lat2, long2]}\r\n                            onClick={() =>\r\n                                this.handleMarkerClick(\r\n                                    [\r\n                                        parseFloat(product.seller.localisation.latitude),\r\n                                        parseFloat(product.seller.localisation.longitude),\r\n                                    ],\r\n                                    i\r\n                                )\r\n                            }\r\n                        >\r\n                            {/* <Popup>{product.seller.name}</Popup> */}\r\n                        </Marker>\r\n                    );\r\n                }\r\n\r\n                let color = \"#1b3044\";\r\n                let curves = document.getElementsByClassName(\"leaflet-interactive\");\r\n\r\n                if (curves && curves[i] && i === this.state.currentIndex) {\r\n                    curves[i].setAttribute(\"stroke\", \"#78be95\");\r\n                } else if (curves && curves[i]) {\r\n                    curves[i].setAttribute(\"stroke\", \"#1b3044\");\r\n                }\r\n\r\n                return (\r\n                    <React.Fragment>\r\n                        <div className=\"test\">\r\n                            <Curve\r\n                                positions={getCurveOptions(lat2, long2, lat1, long1)}\r\n                                option={{\r\n                                    color: color,\r\n                                    fill: false,\r\n                                    // animate: animate,\r\n                                    delay: 5000,\r\n                                }}\r\n                            />\r\n                        </div>\r\n                        {marker1}\r\n                        {marker2}\r\n                    </React.Fragment>\r\n                );\r\n            });\r\n        }\r\n        return markers;\r\n    };\r\n\r\n    render = () => {\r\n        return (\r\n            <div className=\"tracability-container\">\r\n                <div className=\"product-CO2-total-tracability-container\">\r\n                    <span className=\"product-CO2-total-tracability\">\r\n                        Impact total carbone :&nbsp;\r\n                        <span className=\"carbon-total-number\">\r\n                            {parseFloat(this.props.totalCO2Traceability).toFixed(1)}\r\n                        </span>\r\n                        kg CO2 soit &nbsp;\r\n                        <span className=\"carbon-total-number\">\r\n                            {parseFloat(\r\n                                ((this.props.totalCO2Traceability * 0.05) / 11.0) * 1000.0\r\n                            ).toFixed(1)}\r\n                        </span>\r\n                        kms parcourus en voiture\r\n                    </span>\r\n                </div>\r\n\r\n                <Map\r\n                    center={[51.505, -0.09]}\r\n                    zoom={1}\r\n                    minZoom={1}\r\n                    scrollWheelZoom={true}\r\n                    maxBounds={[\r\n                        [-90, -180],\r\n                        [90, 180],\r\n                    ]}\r\n                    maxBoundsViscosity={1}\r\n                    ref={(ref) => {\r\n                        this.map = ref;\r\n                        this.props.getBottomRef(ref);\r\n                    }}\r\n                    whenCreated={(map) => this.setState({ map })}\r\n                >\r\n                    <TileLayer\r\n                        attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a>'\r\n                        url=\"https://stamen-tiles-{s}.a.ssl.fastly.net/toner-background/{z}/{x}/{y}{r}.png\" //'https://maps.wikimedia.org/osm-intl/{z}/{x}/{y}{r}.png' //'https://{s}.tile.osm.org/{z}/{x}/{y}.png'\r\n                    />\r\n\r\n                    {this.displayMarker()}\r\n                </Map>\r\n                <Swiper\r\n                    spaceBetween={10}\r\n                    slidesPerView={1.2}\r\n                    centeredSlides={true}\r\n                    onSlideChange={(i) => this.onSlideChange(i.activeIndex)}\r\n                    onSwiper={(swiper) => this.setState({ swiper: swiper })}\r\n                >\r\n                    {this.displaySlides()}\r\n                </Swiper>\r\n            </div>\r\n        );\r\n    };\r\n}\r\n\r\nexport default Traceability;\r\n\r\nfunction getDistance(origin, destination) {\r\n    // return distance in meters\r\n    var lon1 = toRadian(origin[1]),\r\n        lat1 = toRadian(origin[0]),\r\n        lon2 = toRadian(destination[1]),\r\n        lat2 = toRadian(destination[0]);\r\n\r\n    var deltaLat = lat2 - lat1;\r\n    var deltaLon = lon2 - lon1;\r\n\r\n    var a =\r\n        Math.pow(Math.sin(deltaLat / 2), 2) +\r\n        Math.cos(lat1) * Math.cos(lat2) * Math.pow(Math.sin(deltaLon / 2), 2);\r\n    var c = 2 * Math.asin(Math.sqrt(a));\r\n    var EARTH_RADIUS = 6371;\r\n    return c; //* EARTH_RADIUS * 1000;\r\n}\r\n\r\nfunction toRadian(degree) {\r\n    return (degree * Math.PI) / 180;\r\n}\r\n\r\nfunction getZoomRatio(origin, destination) {\r\n    var distance = getDistance(origin, destination);\r\n    console.log(distance);\r\n    return 9 - Math.sqrt(distance * 150);\r\n}\r\n\r\nfunction getCurveOptions(lat1, long1, lat2, long2) {\r\n    var latlng1 = [lat1, long1],\r\n        latlng2 = [lat2, long2];\r\n\r\n    var offsetX = latlng2[1] - latlng1[1],\r\n        offsetY = latlng2[0] - latlng1[0];\r\n\r\n    var r = Math.sqrt(Math.pow(offsetX, 2) + Math.pow(offsetY, 2)),\r\n        theta = Math.atan2(offsetY, offsetX);\r\n\r\n    var thetaOffset = 3.14 / 10;\r\n\r\n    var r2 = r / 2 / Math.cos(thetaOffset),\r\n        theta2 = theta + thetaOffset;\r\n\r\n    var midpointX = r2 * Math.cos(theta2) + latlng1[1],\r\n        midpointY = r2 * Math.sin(theta2) + latlng1[0];\r\n\r\n    var midpointLatLng = [midpointY, midpointX];\r\n\r\n    return [\"M\", latlng1, \"Q\", midpointLatLng, latlng2];\r\n}\r\n\r\nfunction getChildElementIndex(node) {\r\n    return Array.prototype.indexOf.call(node.parentNode.children, node);\r\n}\r\n","export default __webpack_public_path__ + \"static/media/nocciolatasanslait.d27ecba2.png\";","import nocciolata from \"../images/nocciolatasanslait.png\";\r\nimport carbio from \"../images/carrefourbio.png\";\r\nimport jardinbio from \"../images/jardinbio.png\";\r\nimport ubio from \"../images/ubio.png\";\r\nimport nocciolatasans from \"../images/nocciolatasanslait.png\";\r\n\r\nexport const PRODUCTS = [\r\n    {\r\n        id: 0,\r\n        name: \"Nocciolata\",\r\n        barcode: \"8001505005707\",\r\n        agribalyse_food_code: \"31032\",\r\n        image: nocciolata,\r\n        brand: \"Rigoni di Asiago\",\r\n        label: \"c\",\r\n        ecoscore_score: 45,\r\n    },\r\n    {\r\n        id: 1,\r\n        name: \"Pâte à tartiner\",\r\n        barcode: \"3560070472888\",\r\n        agribalyse_food_code: \"31032\",\r\n        image: carbio,\r\n        brand: \"Carrefour Bio\",\r\n        label: \"c\",\r\n        ecoscore_score: 51,\r\n    },\r\n    {\r\n        id: 2,\r\n        name: \"Pâte à tartiner Chocolat Noisette\",\r\n        barcode: \"3760020500658\",\r\n        agribalyse_food_code: \"31032\",\r\n        image: jardinbio,\r\n        brand: \"Jardin Bio\",\r\n        label: \"c\",\r\n        ecoscore_score: 51,\r\n    },\r\n    {\r\n        id: 3,\r\n        name: \"Pâte à tartiner aux noisettes sans huile de palme\",\r\n        barcode: \"3256226384296\",\r\n        agribalyse_food_code: \"31032\",\r\n        image: ubio,\r\n        brand: \"U Bio\",\r\n        label: \"c\",\r\n        ecoscore_score: 45,\r\n    },\r\n    {\r\n        id: 4,\r\n        name: \"Nocciolata sans lait\",\r\n        barcode: \"8001505000061\",\r\n        agribalyse_food_code: \"31032\",\r\n        image: nocciolatasans,\r\n        brand: \"Rigoni di Asiago\",\r\n        label: \"c\",\r\n        ecoscore_score: 45,\r\n    },\r\n];\r\n","export default __webpack_public_path__ + \"static/media/carrefourbio.c05c1ce2.png\";","export default __webpack_public_path__ + \"static/media/jardinbio.e93e39f2.png\";","export default __webpack_public_path__ + \"static/media/ubio.24f7cb67.png\";","export default __webpack_public_path__ + \"static/media/nutella.14ecd263.png\";","import React from \"react\";\r\nimport \"./Environnement.css\";\r\nimport { Swiper, SwiperSlide } from \"swiper/react\";\r\n// Import Swiper styles\r\nimport \"swiper/swiper-bundle.css\";\r\nimport { CircleProgress } from \"react-gradient-progress\";\r\nimport { PRODUCTS } from \"../../assets/alternatives/alternatives\";\r\nimport nutella from \"../../assets/images/nutella.png\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction RenderColor({ item }) {\r\n    var labelColor;\r\n    var labelLevel;\r\n    if (item.ecoscore_score <= 33) {\r\n        labelColor = \"red\";\r\n        labelLevel = \"Mauvais\";\r\n    } else if (item.ecoscore_score > 33 && item.ecoscore_score < 67) {\r\n        labelColor = \"yellow\";\r\n        labelLevel = \"Moyen\";\r\n    } else {\r\n        labelColor = \"green\";\r\n        labelLevel = \"Bonne\";\r\n    }\r\n    return (\r\n        <div className=\"product-alternative-label-position\">\r\n            <div className=\"product-alternative-label\">\r\n                <div style={{ color: labelColor }}>●</div>\r\n                <div className=\"product-alternative-label-text\">{item.ecoscore_score}/100</div>\r\n            </div>\r\n            <div className=\"product-alternative-label-level \">{labelLevel}</div>\r\n        </div>\r\n    );\r\n}\r\n\r\nclass Environnement extends React.Component {\r\n    state = {\r\n        swiper: undefined,\r\n        currentIndex: 0,\r\n        width: undefined,\r\n        showTransport: false,\r\n        materials: [],\r\n    };\r\n\r\n    getMaterialIcon = (mode) => {\r\n        switch (mode) {\r\n            case \"Transformation\":\r\n                return \"transform\";\r\n            case \"Arrow\":\r\n                if (this.state.showTransport) return \"arrow_drop_up\";\r\n                else return \"arrow_drop_down\";\r\n            case \"Consommation\":\r\n                return \"microwave\";\r\n            case \"Distribution\":\r\n                return \"store\";\r\n            case \"Recyclable\":\r\n                return \"check_circle_outline\";\r\n            case \"Non recyclable\":\r\n                return \"highlight_off\";\r\n            case \"Truck\":\r\n                return \"local_shipping\";\r\n            case \"Packaging\":\r\n                return \"inventory_2\";\r\n            case \"Agriculture\":\r\n                return \"agriculture\";\r\n            case \"Transport\":\r\n                return \"local_shipping\";\r\n            default:\r\n                return \"view_in_ar\";\r\n        }\r\n    };\r\n\r\n    getColor = (note) => {\r\n        if (note > 67) {\r\n            return \"green\";\r\n        }\r\n        if (note <= 33) {\r\n            return \"red\";\r\n        }\r\n        return \"yellow\";\r\n    };\r\n\r\n    getColorImpact = (note) => {\r\n        if (note > 70) {\r\n            return \"green\";\r\n        }\r\n        if (note <= 40) {\r\n            return \"red\";\r\n        }\r\n        return \"yellow\";\r\n    };\r\n\r\n    getLabel = (note) => {\r\n        if (note > 67) {\r\n            return \"Bon\";\r\n        }\r\n        if (note <= 33) {\r\n            return \"Mauvais\";\r\n        }\r\n        return \"Moyen\";\r\n    };\r\n\r\n    getLabelImpact = (note) => {\r\n        if (note > 60) {\r\n            return \"Impact fort\";\r\n        }\r\n        if (note <= 30) {\r\n            return \"Impact faible\";\r\n        }\r\n        return \"Impact moyen\";\r\n    };\r\n\r\n    getLabelImpactPackaging = (note) => {\r\n        if (note > 2) {\r\n            return \"Impact faible\";\r\n        }\r\n        if (note < -2) {\r\n            return \"Impact fort\";\r\n        }\r\n        return \"Impact moyen\";\r\n    };\r\n\r\n    getColorImpactPackaging = (note) => {\r\n        if (note > 2) {\r\n            return \"green\";\r\n        }\r\n        if (note < -2) {\r\n            return \"red\";\r\n        }\r\n        return \"yellow\";\r\n    };\r\n\r\n    displaySlides = () => {\r\n        let slides = <React.Fragment></React.Fragment>;\r\n\r\n        if (\r\n            this.props.dataEcoScore &&\r\n            this.props.dataEcoScore?.adjustments?.packaging?.packagings.length >= 1\r\n        ) {\r\n            slides = this.props.dataEcoScore?.adjustments?.packaging?.packagings.map((data) => {\r\n                var recyclable = \"\";\r\n                if (data.recycling) {\r\n                    recyclable = data.recycling.split(\":\")[1];\r\n                }\r\n                if (recyclable && recyclable == \"recycle\") {\r\n                    recyclable = \"Recyclable\";\r\n                } else if (recyclable && recyclable == \"discard\") {\r\n                    recyclable = \"Non recyclable\";\r\n                } else {\r\n                    recyclable = \"\";\r\n                }\r\n\r\n                return (\r\n                    <div>\r\n                        <SwiperSlide>\r\n                            <div className=\"env-product-slide-container \">\r\n                                <div className=\"env-product-slide-icon\">\r\n                                    <span class=\"material-icons env-icon-label\">\r\n                                        {this.getMaterialIcon(\"\")}\r\n                                    </span>\r\n                                </div>\r\n                                <div className=\"env-product-slide-wrapper\">\r\n                                    <div className=\"product-slide-name\">\r\n                                        {data?.material.split(\":\")[1]}\r\n                                    </div>\r\n                                    <div className=\"product-ecoscore\">\r\n                                        Ecoscore : {data?.ecoscore_material_score}\r\n                                    </div>\r\n\r\n                                    <div className=\"env-history-label-container\">\r\n                                        <span\r\n                                            className=\"packaging-label-color\"\r\n                                            style={{\r\n                                                color: this.getColor(data?.ecoscore_material_score),\r\n                                            }}\r\n                                        >\r\n                                            ●\r\n                                        </span>\r\n                                        <div className=\"env-history-label\">\r\n                                            {this.getLabel(data?.ecoscore_material_score)}\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"product-slide-recyclable\">\r\n                                        {recyclable}\r\n                                        <div className=\"material-icons icon-label-recyclable\">\r\n                                            {this.getMaterialIcon(recyclable)}\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </SwiperSlide>\r\n                    </div>\r\n                );\r\n            });\r\n        }\r\n        return slides;\r\n\r\n        // return slides;\r\n    };\r\n\r\n    componentDidMount() {\r\n        this.updateWindowDimensions();\r\n        window.addEventListener(\"resize\", this.updateWindowDimensions);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        window.removeEventListener(\"resize\", this.updateWindowDimensions);\r\n    }\r\n\r\n    updateWindowDimensions = () => {\r\n        this.setState({ width: window.innerWidth });\r\n    };\r\n\r\n    displayCO2Repartition = (pourcentage, nbKg, type) => {\r\n        return (\r\n            <div className=\"product-co2-impact-container\">\r\n                <div className=\"product-co2-impact-header\">\r\n                    <div className=\"product-co2-impact-logo\">\r\n                        <div className=\"material-icons icon-label-co2-impact\">\r\n                            {this.getMaterialIcon(type)}\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"product-co2-impact-title\">\r\n                        <div className=\"product-co2-impact-title-text\">CO2 {type}</div>\r\n                        <div className=\"product-co2-impact-title-label\">Répartition</div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"product-co2-impact-content\">\r\n                    <div className=\"product-transport-impact-content-details-text\">\r\n                        {parseFloat(nbKg).toFixed(3)}kg C02 eq/kg produit\r\n                    </div>\r\n                    <div className=\"product-co2-impact-content-progress\">\r\n                        <CircleProgress\r\n                            percentage={parseFloat(pourcentage * 100).toFixed(1)}\r\n                            strokeWidth={window.innerWidth * (1.0 / 60.0)}\r\n                            width={window.innerWidth * (1.0 / 5.0)}\r\n                            fontSize={window.innerWidth * (1.0 / 25.0)}\r\n                            primaryColor={[\"#FF3333\", \"#33FF63\"]}\r\n                        />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    };\r\n\r\n    displayRepartitionAllItems = () => {\r\n        var html_agriculture = <React.Fragment></React.Fragment>;\r\n        var html_transport = <React.Fragment></React.Fragment>;\r\n        var html_consommation = <React.Fragment></React.Fragment>;\r\n        var html_distribution = <React.Fragment></React.Fragment>;\r\n        var html_packaging = <React.Fragment></React.Fragment>;\r\n        var html_processing = <React.Fragment></React.Fragment>;\r\n        var html_total = <React.Fragment></React.Fragment>;\r\n\r\n        if (this.props.dataEcoScore?.agribalyse?.co2_agriculture) {\r\n            html_agriculture = this.displayCO2Repartition(\r\n                this.props.dataEcoScore?.agribalyse?.co2_agriculture /\r\n                    this.props.dataEcoScore?.agribalyse?.co2_total,\r\n                this.props.dataEcoScore?.agribalyse?.co2_agriculture,\r\n                \"Agriculture\"\r\n            );\r\n        }\r\n        if (this.props.dataEcoScore?.agribalyse?.co2_transportation) {\r\n            html_transport = this.displayCO2Repartition(\r\n                this.props.dataEcoScore?.agribalyse?.co2_transportation /\r\n                    this.props.dataEcoScore?.agribalyse?.co2_total,\r\n                this.props.dataEcoScore?.agribalyse?.co2_transportation,\r\n                \"Transport\"\r\n            );\r\n        }\r\n\r\n        if (this.props.dataEcoScore?.agribalyse?.co2_consumption) {\r\n            html_consommation = this.displayCO2Repartition(\r\n                this.props.dataEcoScore?.agribalyse?.co2_consumption /\r\n                    this.props.dataEcoScore?.agribalyse?.co2_total,\r\n                this.props.dataEcoScore?.agribalyse?.co2_consumption,\r\n                \"Consommation\"\r\n            );\r\n        }\r\n\r\n        if (this.props.dataEcoScore?.agribalyse?.co2_distribution) {\r\n            html_distribution = this.displayCO2Repartition(\r\n                this.props.dataEcoScore?.agribalyse?.co2_distribution /\r\n                    this.props.dataEcoScore?.agribalyse?.co2_total,\r\n                this.props.dataEcoScore?.agribalyse?.co2_distribution,\r\n                \"Distribution\"\r\n            );\r\n        }\r\n\r\n        if (this.props.dataEcoScore?.agribalyse?.co2_packaging) {\r\n            html_packaging = this.displayCO2Repartition(\r\n                this.props.dataEcoScore?.agribalyse?.co2_packaging /\r\n                    this.props.dataEcoScore?.agribalyse?.co2_total,\r\n                this.props.dataEcoScore?.agribalyse?.co2_packaging,\r\n                \"Emballage\"\r\n            );\r\n        }\r\n\r\n        if (this.props.dataEcoScore?.agribalyse?.co2_processing) {\r\n            html_processing = this.displayCO2Repartition(\r\n                this.props.dataEcoScore?.agribalyse?.co2_processing /\r\n                    this.props.dataEcoScore?.agribalyse?.co2_total,\r\n                this.props.dataEcoScore?.agribalyse?.co2_processing,\r\n                \"Transformation\"\r\n            );\r\n        }\r\n\r\n        if (this.props.dataEcoScore?.agribalyse?.co2_total) {\r\n            html_total = (\r\n                <span className=\"product-CO2-total\">\r\n                    Impact carbone générique :&nbsp;\r\n                    <span className=\"carbon-total-number\">\r\n                        {parseFloat(this.props.dataEcoScore?.agribalyse?.co2_total).toFixed(3)}\r\n                    </span>\r\n                    kg C02 eq/kg produit\r\n                </span>\r\n            );\r\n        }\r\n\r\n        let res = (\r\n            <React.Fragment>\r\n                {html_total}\r\n                {html_agriculture}\r\n                {html_transport}\r\n                {html_consommation}\r\n                {html_distribution}\r\n                {html_packaging}\r\n                {html_processing}\r\n            </React.Fragment>\r\n        );\r\n\r\n        return res;\r\n    };\r\n\r\n    handleShowTransport = () => {\r\n        this.setState({ showTransport: !this.state.showTransport });\r\n    };\r\n\r\n    displayTransportImpact = () => {\r\n        let res = <React.Fragment></React.Fragment>;\r\n\r\n        var agribalyse_CO2 = undefined;\r\n        var transportation_score = undefined;\r\n        var transport_final_indicator = undefined;\r\n        var n = 0;\r\n\r\n        if (this.props.dataEcoScore?.agribalyse?.co2_transportation) {\r\n            agribalyse_CO2 = 0.5 * this.props.dataEcoScore?.agribalyse?.co2_transportation;\r\n            n += 1;\r\n        }\r\n\r\n        if (this.props.dataEcoScore?.adjustments?.origins_of_ingredients?.value_fr) {\r\n            transportation_score =\r\n                0.5 +\r\n                this.props.dataEcoScore?.adjustments?.origins_of_ingredients?.value_fr *\r\n                    (-1.0 / 40.0);\r\n            n += 1;\r\n        }\r\n        if (n > 0) {\r\n            if (!agribalyse_CO2) {\r\n                agribalyse_CO2 = 0;\r\n            }\r\n            if (!transportation_score) {\r\n                transportation_score = 0;\r\n            }\r\n            transport_final_indicator = (agribalyse_CO2 + transportation_score) / n;\r\n            if (transport_final_indicator > 1) {\r\n                transport_final_indicator = 1;\r\n            }\r\n            if (transport_final_indicator < 0) {\r\n                transport_final_indicator = 0;\r\n            }\r\n        }\r\n\r\n        let co2_impact_html = <React.Fragment></React.Fragment>;\r\n        let transportation_score_html = <React.Fragment></React.Fragment>;\r\n\r\n        if (agribalyse_CO2 > 0) {\r\n            co2_impact_html = (\r\n                <div className=\"product-transport-impact-content-details-text\">\r\n                    {parseFloat(this.props.dataEcoScore?.agribalyse?.co2_transportation).toFixed(3)}\r\n                    kg C02 eq/kg produit\r\n                </div>\r\n            );\r\n        }\r\n\r\n        if (transportation_score > 0) {\r\n            transportation_score_html = (\r\n                <div className=\"product-transport-impact-content-details-score\">\r\n                    Score environnemental du transport vers la France :\r\n                    <span\r\n                        style={{\r\n                            color: this.getColorImpact(100 - transportation_score * 100),\r\n                        }}\r\n                    >\r\n                        {Math.round(99 - transportation_score * 100)}\r\n                    </span>\r\n                    /100\r\n                </div>\r\n            );\r\n        }\r\n\r\n        if (!this.props.displayTranportImpact && transport_final_indicator) {\r\n            transport_final_indicator = Math.round(transport_final_indicator * 100);\r\n            return (\r\n                <div\r\n                    className=\"product-transport-impact-container\"\r\n                    onClick={this.handleShowTransport}\r\n                >\r\n                    <div className=\"product-transport-impact-header\">\r\n                        <div className=\"product-transport-impact-logo\">\r\n                            <div className=\"material-icons icon-label-transport-impact\">\r\n                                {this.getMaterialIcon(\"Truck\")}\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"product-transport-impact-title\">\r\n                            <div className=\"product-transport-impact-title-text\">\r\n                                Impact du transport\r\n                            </div>\r\n                            <div className=\"product-transport-impact-title-label\">\r\n                                {this.getLabelImpact(transport_final_indicator)}\r\n                            </div>\r\n                        </div>\r\n                        <div\r\n                            className=\"product-transport-impact-color-label\"\r\n                            style={{\r\n                                color: this.getColorImpact(100 - transport_final_indicator),\r\n                            }}\r\n                        >\r\n                            ●\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"arrow-container\">\r\n                        <div className=\"material-icons icon-label-arrow\">\r\n                            {this.getMaterialIcon(\"Arrow\")}\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div\r\n                        className={\r\n                            this.state.showTransport ? \"animation-appear\" : \"animation-disappear\"\r\n                        }\r\n                    >\r\n                        <div className=\"product-transport-impact-content\">\r\n                            <div className=\"product-transport-impact-content-text\">\r\n                                Score total :\r\n                            </div>\r\n                            <div className=\"product-transport-impact-content-progress\">\r\n                                <CircleProgress\r\n                                    percentage={100 - transport_final_indicator}\r\n                                    strokeWidth={window.innerWidth * (1.0 / 50.0)}\r\n                                    width={window.innerWidth * (1.0 / 4.0)}\r\n                                    fontSize={0}\r\n                                    primaryColor={[\"#33FF63\", \"#FF3333\"]}\r\n                                />\r\n                                <span className=\"impact-percentage-progressBar\">\r\n                                    {100 - transport_final_indicator}/100\r\n                                </span>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"product-transport-impact-content-details\">\r\n                            {co2_impact_html}\r\n                            {transportation_score_html}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n\r\n        return res;\r\n    };\r\n\r\n    displayPackagingDetailImpact = () => {\r\n        let res = <React.Fragment></React.Fragment>;\r\n\r\n        if (this.props.dataEcoScore?.adjustments?.packaging?.packagings) {\r\n            var materials = [];\r\n            let slides = <React.Fragment></React.Fragment>;\r\n\r\n            this.props.dataEcoScore?.adjustments?.packaging?.packagings.map((data) => {\r\n                if (data?.material.split(\":\")[1] != \"unknown\") {\r\n                    materials.push(data?.material.split(\":\")[1]);\r\n                }\r\n            });\r\n\r\n            slides = materials\r\n                .filter(function (item, pos) {\r\n                    return materials.indexOf(item) == pos;\r\n                })\r\n                .map((data) => {\r\n                    var separator = \"\";\r\n                    if (materials.indexOf(data) < materials.length - 1) {\r\n                        separator = \" ; \";\r\n                    }\r\n                    return (\r\n                        <React.Fragment>\r\n                            <span>\r\n                                {data} {separator}\r\n                            </span>\r\n                        </React.Fragment>\r\n                    );\r\n                });\r\n\r\n            if (materials.length > 0) {\r\n                res = (\r\n                    <React.Fragment>\r\n                        <div className=\"product-co2-impact-content\">\r\n                            <div className=\"product-packaging-impact-content-details-text\">\r\n                                Matériaux utilisés : &nbsp;{slides}\r\n                            </div>\r\n                        </div>\r\n                    </React.Fragment>\r\n                );\r\n            } else {\r\n                res = (\r\n                    <React.Fragment>\r\n                        <div className=\"product-co2-impact-content\">\r\n                            <div className=\"product-packaging-impact-content-details-text\">\r\n                                Matériaux utilisés : &nbsp; Inconnu\r\n                            </div>\r\n                        </div>\r\n                    </React.Fragment>\r\n                );\r\n            }\r\n        }\r\n\r\n        return res;\r\n    };\r\n\r\n    displayPackagingImpact = () => {\r\n        let res = <React.Fragment></React.Fragment>;\r\n\r\n        if (this.props.dataEcoScore?.adjustments?.packaging?.value) {\r\n            return (\r\n                <div className=\"product-co2-impact-container\">\r\n                    <div className=\"product-co2-impact-header\">\r\n                        <div className=\"product-co2-impact-logo\">\r\n                            <div className=\"material-icons icon-label-co2-impact\">\r\n                                {this.getMaterialIcon(\"\")}\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"product-co2-impact-title\">\r\n                            <div className=\"product-co2-impact-title-text\">\r\n                                Impact de l'emballage\r\n                            </div>\r\n                            <div className=\"product-co2-impact-title-label\">\r\n                                {this.getLabelImpactPackaging(\r\n                                    this.props.dataEcoScore?.adjustments?.packaging?.value\r\n                                )}\r\n                            </div>\r\n                        </div>\r\n                        <div\r\n                            className=\"product-transport-impact-color-label\"\r\n                            style={{\r\n                                color: this.getColorImpactPackaging(\r\n                                    this.props.dataEcoScore?.adjustments?.packaging?.value\r\n                                ),\r\n                            }}\r\n                        >\r\n                            ●\r\n                        </div>\r\n                    </div>\r\n                    {this.displayPackagingDetailImpact()}\r\n                </div>\r\n            );\r\n        } else {\r\n            return res;\r\n        }\r\n    };\r\n\r\n    onSlideChange = (index) => {\r\n        this.setState({ currentIndex: index });\r\n    };\r\n\r\n    alternativesloop = () => {\r\n        const alternativesList = PRODUCTS.map((item) => {\r\n            var pathProduct = \"/products/\" + item.barcode;\r\n            // Mock Front\r\n            if (item.barcode === \"8001505005707\") {\r\n                pathProduct += \"/24\";\r\n            }\r\n            //console.log(pathProduct);\r\n            if (item.label <= this.props.ecoScore && item.barcode !== this.props.barcode) {\r\n                console.log(item.name);\r\n                return (\r\n                    <SwiperSlide>\r\n                        <a href={pathProduct} className=\"product-alternative\">\r\n                            <div>\r\n                                <img\r\n                                    src={item.image}\r\n                                    className=\"product-alternative-image\"\r\n                                    alt=\"\"\r\n                                />\r\n                            </div>\r\n                            <div className=\"product-alternative-text\">\r\n                                <label className=\"product-alternative-title\">{item.name}</label>\r\n                                <label className=\"product-alternative-brand\">{item.brand}</label>\r\n                                <RenderColor item={item} />\r\n                            </div>\r\n                            <div className=\"product-alternative-fleche\">{\">\"}</div>\r\n                        </a>\r\n                    </SwiperSlide>\r\n                );\r\n            } else {\r\n                return <React.Fragment></React.Fragment>;\r\n            }\r\n        });\r\n\r\n        return alternativesList;\r\n    };\r\n\r\n    render = () => {\r\n        let displaySugg = true;\r\n        let arraySuggestion = [\r\n            \"8001505005707\",\r\n            \"3560070472888\",\r\n            \"3760020500658\",\r\n            \"3256226384296\",\r\n            \"8001505000061\",\r\n            \"3017620424403\",\r\n            \"3017620425035\",\r\n            \"80135463\",\r\n        ];\r\n\r\n        var hmtl_suggestion = <React.Fragment></React.Fragment>;\r\n\r\n        if (arraySuggestion.indexOf(this.props.barcode) >= 0) {\r\n            hmtl_suggestion = this.alternativesloop();\r\n        }\r\n\r\n        if (this.props.barcode) {\r\n            return (\r\n                <React.Fragment>\r\n                    {this.displayTransportImpact()}\r\n                    {this.displayPackagingImpact()}\r\n                    {this.displayRepartitionAllItems()}\r\n\r\n                    {this.props.ecoScore ? (\r\n                        <React.Fragment>\r\n                            <span className=\"title-part-environnement\">Alternatives</span>\r\n                            <Swiper\r\n                                spaceBetween={0}\r\n                                slidesPerView={1}\r\n                                centeredSlides={true}\r\n                                onSlideChange={(i) => this.onSlideChange(i.activeIndex)}\r\n                                onSwiper={(swiper) => this.setState({ swiper: swiper })}\r\n                            >\r\n                                {hmtl_suggestion}\r\n                            </Swiper>{\" \"}\r\n                        </React.Fragment>\r\n                    ) : (\r\n                        <p>Pas encore de données pour ce produit</p>\r\n                    )}\r\n                    {/* <span className=\"title-part-environnement\">\r\n                    Impact de l'emballage\r\n                </span>\r\n                <Swiper\r\n                    spaceBetween={10}\r\n                    slidesPerView={1}\r\n                    centeredSlides={true}\r\n                    onSlideChange={(i) => this.onSlideChange(i.activeIndex)}\r\n                    onSwiper={(swiper) => this.setState({ swiper: swiper })}\r\n                >\r\n                    {this.displaySlides()}\r\n                </Swiper> */}\r\n                </React.Fragment>\r\n            );\r\n        } else {\r\n            return <React.Fragment></React.Fragment>;\r\n        }\r\n    };\r\n}\r\n\r\nexport default Environnement;\r\n","import React from \"react\";\r\nimport Navbar from \"../components/Navbar/Navbar\";\r\nimport Traceability from \"../components/Traceability/Traceability\";\r\nimport Environnement from \"../components/Environnement/Environnement\";\r\nimport Labels from \"../components/Labels/Labels\";\r\nimport \"./Product.css\";\r\nimport { Link } from \"react-router-dom\";\r\nimport jwt from \"jsonwebtoken\";\r\n\r\nclass Product extends React.Component {\r\n    state = {\r\n        barcode: this.props.match.params.barcode,\r\n        bcProductId: this.props.match.params.bcProductId,\r\n        product: undefined,\r\n        productImageUrl: undefined,\r\n        productName: undefined,\r\n        genericName: undefined,\r\n        ecoScore: undefined,\r\n        dataEcoScore: undefined,\r\n        value: 0,\r\n        connected: false,\r\n        productData: undefined,\r\n        userId: undefined,\r\n        cart: 0,\r\n        totalCO2Traceability: undefined,\r\n    };\r\n\r\n    isFlipping = false;\r\n\r\n    //for scrolling\r\n    getBottomRef = (component) => {\r\n        this.bottomComponent = component;\r\n    };\r\n\r\n    componentDidMount = () => {\r\n        this.Verify();\r\n        let userId = localStorage.getItem(\"userId\");\r\n        if (userId) {\r\n            this.setState({ userId: userId });\r\n            this.loadHistory(userId);\r\n        }\r\n        this.loadFromOpenFoodFacts(this.props.match.params.barcode);\r\n        if (this.props.match.params.bcProductId) {\r\n            this.loadProductInformations(\r\n                this.props.match.params.barcode,\r\n                this.props.match.params.bcProductId\r\n            );\r\n        }\r\n    };\r\n\r\n    handleBarCodeUpdate = () => {\r\n        if (this.state.barcode !== this.props.match.params.barcode) {\r\n            this.setState({\r\n                barcode: this.props.match.params.barcode,\r\n                bcProductId: this.props.match.params.bcProductId,\r\n            });\r\n            this.loadFromOpenFoodFacts(this.props.match.params.barcode);\r\n            if (this.props.match.params.bcProductId) {\r\n                this.loadProductInformations(\r\n                    this.props.match.params.barcode,\r\n                    this.props.match.params.bcProductId\r\n                );\r\n            }\r\n        }\r\n    };\r\n\r\n    Verify = () => {\r\n        let isExpired = true;\r\n        const token = localStorage.getItem(\"token\");\r\n        if (token) {\r\n            var decodedToken = jwt.decode(token, { complete: true });\r\n            var dateNow = new Date();\r\n            if (decodedToken.payload.exp >= dateNow.getTime() / 1000) {\r\n                isExpired = false;\r\n            }\r\n        }\r\n        if (isExpired === false) {\r\n            this.setState({ connected: true });\r\n        }\r\n    };\r\n\r\n    loadProductInformations = (barcode, bcProductId) => {\r\n        fetch(\r\n            `https://api.lowympact.fr/api/v1/products/${barcode}?bcProductId=${bcProductId}`,\r\n            // `http://localhost:8080/api/v1/products/${barcode}?bcProductId=${bcProductId}`,\r\n            {\r\n                method: \"get\",\r\n                credentials: \"include\",\r\n                headers: new Headers({\r\n                    \"api-key\": \"99d8fb95-abdd-4885-bf6c-3a81d8874043\",\r\n                    \"Content-Type\": \"application/json\",\r\n                }),\r\n            }\r\n        )\r\n            .then((response) => response.json())\r\n            .then((res) => {\r\n                console.log(res);\r\n                this.setState({\r\n                    products: res?.data?.traceability,\r\n                    impact: res?.data?.impact,\r\n                    totalCO2Traceability: res?.data?.transportCO2Impact,\r\n                });\r\n            });\r\n    };\r\n\r\n    loadFromOpenFoodFacts = (barcode) => {\r\n        fetch(`https://world.openfoodfacts.org/api/v0/product/${barcode}.json/`)\r\n            .then((response) => response.json())\r\n            .then((res) => {\r\n                console.log(res);\r\n                let productImageUrl = res?.product?.image_url;\r\n                let productName = res?.product?.product_name;\r\n                let genericName = res?.product?.generic_name;\r\n                let ecoScore = res?.product?.ecoscore_grade;\r\n\r\n                let dataEcoScore = res?.product?.ecoscore_data;\r\n\r\n                if (res?.product) {\r\n                    this.setState({ productData: res.product });\r\n                }\r\n\r\n                if (productImageUrl) {\r\n                    this.setState({ productImageUrl: productImageUrl });\r\n                }\r\n                if (productName) {\r\n                    this.setState({ productName: productName });\r\n                }\r\n                if (genericName) {\r\n                    this.setState({ genericName: genericName });\r\n                }\r\n                if (\r\n                    ecoScore &&\r\n                    (ecoScore === \"a\" ||\r\n                        ecoScore === \"b\" ||\r\n                        ecoScore === \"c\" ||\r\n                        ecoScore === \"d\" ||\r\n                        ecoScore === \"e\")\r\n                ) {\r\n                    this.setState({ ecoScore: ecoScore });\r\n                }\r\n                if (dataEcoScore) {\r\n                    this.setState({ dataEcoScore: dataEcoScore });\r\n                }\r\n                if (res.status === 1) {\r\n                    this.saveHistory();\r\n                }\r\n\r\n                // Mock Soutenance\r\n                if (barcode === \"80135463\") {\r\n                    this.setState({ productName: \"Nutella 200g\" });\r\n                }\r\n            });\r\n    };\r\n\r\n    loadHistory = (userId) => {\r\n        if (userId && this.state.barcode && this.state.bcProductId) {\r\n            fetch(\r\n                `https://api.lowympact.fr/api/v1/users/${userId}/cart/${this.state.barcode}?bcProductAddress=${this.state.bcProductId}`,\r\n                // `http://localhost:8080/api/v1/users/${this.state.userId}/history`,\r\n                {\r\n                    method: \"get\",\r\n                    credentials: \"include\",\r\n                    headers: new Headers({\r\n                        Authorization: localStorage.getItem(\"token\"),\r\n                        \"api-key\": \"99d8fb95-abdd-4885-bf6c-3a81d8874043\",\r\n                        \"Content-Type\": \"application/json\",\r\n                    }),\r\n                }\r\n            )\r\n                .then((response) => response.json())\r\n                .then((res) => {\r\n                    console.log(res);\r\n                    if (res.success) {\r\n                        this.setState({ cart: res.data?.quantity });\r\n                    }\r\n                });\r\n        }\r\n    };\r\n\r\n    saveHistory = async () => {\r\n        await delay(2000);\r\n\r\n        if (!this.state.connected) {\r\n            let history = JSON.parse(localStorage.getItem(\"local_history\"));\r\n            let exist = null;\r\n            if (history) {\r\n                exist = history?.find(\r\n                    (element) =>\r\n                        element.barcode === this.state.barcode &&\r\n                        element.bcProductId == this.state.bcProductId\r\n                );\r\n            } else {\r\n                history = [];\r\n            }\r\n\r\n            if (!exist || exist?.length === 0) {\r\n                history.push({\r\n                    barcode: this.state.barcode,\r\n                    bcProductId: this.state.bcProductId,\r\n                    brand: this.state.productData.brands,\r\n                    image: this.state.productImageUrl,\r\n                    label: this.state.ecoScore,\r\n                    name: this.state.productName,\r\n                });\r\n                localStorage.setItem(\"local_history\", JSON.stringify(history));\r\n            }\r\n        } else if (this.state.userId) {\r\n            console.log(this.state.barcode, this.state.bcProductId);\r\n            fetch(\r\n                `https://api.lowympact.fr/api/v1/users/${this.state.userId}/history`,\r\n                // `http://localhost:8080/api/v1/users/${this.state.userId}/history`,\r\n                {\r\n                    method: \"put\",\r\n                    credentials: \"include\",\r\n                    headers: new Headers({\r\n                        Authorization: localStorage.getItem(\"token\"),\r\n                        \"api-key\": \"99d8fb95-abdd-4885-bf6c-3a81d8874043\",\r\n                        \"Content-Type\": \"application/json\",\r\n                    }),\r\n                    body: JSON.stringify({\r\n                        barcode: this.state.barcode,\r\n                        bcProductAddress: this.state.bcProductId,\r\n                    }),\r\n                }\r\n            )\r\n                .then((response) => response.json())\r\n                .then((res) => {\r\n                    console.log(res);\r\n                });\r\n        }\r\n    };\r\n\r\n    addToCart = () => {\r\n        console.log(this.state.dataEcoScore);\r\n        if (this.state.barcode && this.state.cart >= 0) {\r\n            let co2 = -1;\r\n            if (this.state.dataEcoScore?.agribalyse?.co2_total) {\r\n                co2 = parseFloat(this.state.dataEcoScore?.agribalyse?.co2_total);\r\n            }\r\n\r\n            let ecoscore = \"unkown\";\r\n            if (this.state.ecoScore) {\r\n                ecoscore = this.state.ecoScore;\r\n            }\r\n            this.flip();\r\n            fetch(\r\n                `https://api.lowympact.fr/api/v1/users/${this.state.userId}/cart`,\r\n                // `http://localhost:8080/api/v1/users/${this.state.userId}/cart`,\r\n                {\r\n                    method: \"put\",\r\n                    credentials: \"include\",\r\n                    headers: new Headers({\r\n                        Authorization: localStorage.getItem(\"token\"),\r\n                        \"api-key\": \"99d8fb95-abdd-4885-bf6c-3a81d8874043\",\r\n                        \"Content-Type\": \"application/json\",\r\n                    }),\r\n                    body: JSON.stringify({\r\n                        barcode: this.state.barcode,\r\n                        bcProductAddress: this.state.bcProductId,\r\n                        quantityDelta: 1,\r\n                        ecoscore: ecoscore,\r\n                        carbonImpact: co2,\r\n                    }),\r\n                }\r\n            )\r\n                .then((response) => response.json())\r\n                .then((res) => {\r\n                    console.log(res);\r\n                    if (res.success) {\r\n                        this.setState({ cart: this.state.cart + 1 });\r\n                    }\r\n                });\r\n        }\r\n    };\r\n\r\n    removeFromCart = () => {\r\n        if (this.state.barcode && this.state.cart > 0) {\r\n            this.flip();\r\n            let co2 = -1;\r\n            if (this.state.dataEcoScore?.agribalyse?.co2_total) {\r\n                co2 = parseFloat(this.state.dataEcoScore?.agribalyse?.co2_total);\r\n            }\r\n            let ecoscore = \"unkown\";\r\n            if (this.state.ecoScore) {\r\n                ecoscore = this.state.ecoScore;\r\n            }\r\n            fetch(\r\n                `https://api.lowympact.fr/api/v1/users/${this.state.userId}/cart`,\r\n                // `http://localhost:8080/api/v1/users/${this.state.userId}/cart`,\r\n                {\r\n                    method: \"put\",\r\n                    credentials: \"include\",\r\n                    headers: new Headers({\r\n                        Authorization: localStorage.getItem(\"token\"),\r\n                        \"api-key\": \"99d8fb95-abdd-4885-bf6c-3a81d8874043\",\r\n                        \"Content-Type\": \"application/json\",\r\n                    }),\r\n                    body: JSON.stringify({\r\n                        barcode: this.state.barcode,\r\n                        bcProductAddress: this.state.bcProductId,\r\n                        quantityDelta: -1,\r\n                        ecoscore: ecoscore,\r\n                        carbonImpact: co2,\r\n                    }),\r\n                }\r\n            )\r\n                .then((response) => response.json())\r\n                .then((res) => {\r\n                    console.log(res);\r\n                    if (res.success) {\r\n                        this.setState({ cart: this.state.cart - 1 });\r\n                    }\r\n                });\r\n        }\r\n    };\r\n\r\n    flip = async (event) => {\r\n        // if (!this.isFlipping) {\r\n        // \tthis.isFlipping = true;\r\n        // \tawait delay(500);\r\n        console.log(this.imageFlip.style.transform);\r\n        if (this.imageFlip && !this.state.isFlipping) {\r\n            if (this.imageFlip.style.transform === \"rotateY(360deg)\") {\r\n                this.imageFlip.style.transform = \"rotateY(0deg)\";\r\n            } else {\r\n                this.imageFlip.style.transform = \"rotateY(360deg)\";\r\n            }\r\n        }\r\n        // await delay(1000);\r\n        // this.isFlipping = false;\r\n        // }\r\n    };\r\n\r\n    displayImage = () => {\r\n        this.handleBarCodeUpdate();\r\n\r\n        let image = <React.Fragment />;\r\n        let productName = <React.Fragment />;\r\n        let genericName = <React.Fragment />;\r\n        let ecoScore = <React.Fragment />;\r\n        if (this.state.productImageUrl) {\r\n            image = (\r\n                <img src={this.state.productImageUrl} className=\"product-image\" alt=\"produit\" />\r\n            );\r\n        }\r\n\r\n        if (this.state.productName) {\r\n            productName = <div className=\"product-name\">{this.state.productName}</div>;\r\n        }\r\n        if (this.state.ecoScore) {\r\n            let scoreClass = \"color_score_\" + this.state.ecoScore;\r\n            ecoScore = (\r\n                <div className=\"product-ecoscore-image\">\r\n                    <span className={\"circle-score \" + scoreClass}>⬤ </span>\r\n                    EcoScore :<span className=\"uppercase \">{\" \" + this.state.ecoScore}</span>\r\n                </div>\r\n            );\r\n        } else if (this.state.genericName) {\r\n            genericName = <div className=\"product-generic-name\">{this.state.genericName}</div>;\r\n        }\r\n        return (\r\n            <React.Fragment>\r\n                {this.state.userId ? (\r\n                    <div\r\n                        className={this.state.cart > 0 ? \"add-to-cart green\" : \"add-to-cart\"}\r\n                        onClick={this.addToCart}\r\n                    >\r\n                        <span className=\"cart-count\">\r\n                            {this.state.cart > 0 ? this.state.cart : \"\"}\r\n                        </span>\r\n                        <span class=\"material-icons\">add_shopping_cart</span>\r\n                    </div>\r\n                ) : (\r\n                    <React.Fragment />\r\n                )}\r\n                {this.state.cart > 0 ? (\r\n                    <div className=\"remove-from-cart\" onClick={this.removeFromCart}>\r\n                        <span class=\"material-icons\">remove_shopping_cart</span>\r\n                    </div>\r\n                ) : (\r\n                    <React.Fragment />\r\n                )}\r\n                {image}\r\n                {productName}\r\n                <div className=\"product-bottom-image-div\">\r\n                    {genericName}\r\n                    {ecoScore}\r\n                </div>\r\n            </React.Fragment>\r\n        );\r\n    };\r\n\r\n    handleChange = (event, newValue) => {\r\n        this.setState({ value: newValue });\r\n        if (newValue === 1) {\r\n            let elem = document.getElementsByClassName(\"swiper-container\");\r\n            if (elem[0]) {\r\n                elem[0].scrollIntoView({ behavior: \"smooth\" });\r\n            }\r\n        }\r\n    };\r\n\r\n    displayNavbar = () => {\r\n        let retour = <React.Fragment />;\r\n        if (this.state.bcProductId) {\r\n            retour = (\r\n                <div className=\"product-navbar-container\">\r\n                    <button\r\n                        className={\r\n                            this.state.value === 0\r\n                                ? \"product-navbar-button selected\"\r\n                                : \"product-navbar-button\"\r\n                        }\r\n                        onClick={() => this.handleChange(\"\", 0)}\r\n                    >\r\n                        Environnement\r\n                    </button>\r\n                    <button\r\n                        className={\r\n                            this.state.value === 1\r\n                                ? \"product-navbar-button selected\"\r\n                                : \"product-navbar-button\"\r\n                        }\r\n                        onClick={() => this.handleChange(\"\", 1)}\r\n                    >\r\n                        Traçabilité\r\n                    </button>\r\n                    <div\r\n                        className={\r\n                            this.state.value === 0\r\n                                ? \"navbar-under nav-left\"\r\n                                : \"navbar-under nav-right\"\r\n                        }\r\n                    ></div>\r\n                </div>\r\n            );\r\n        }\r\n        return retour;\r\n    };\r\n\r\n    render = () => {\r\n        //tri des produits\r\n        let products = this.state.products?.sort((a, b) => {\r\n            if (a.depth > b.depth) return -1;\r\n            else return 1;\r\n        });\r\n        return (\r\n            <React.Fragment>\r\n                <div className=\"product-page-container\">\r\n                    <div className=\"product-header-container\">\r\n                        <div className=\"product-history-link\">\r\n                            <Link to=\"/history\"> {\"<\"} Historique</Link>\r\n                        </div>\r\n                        <img\r\n                            className=\"product-bitmap-image\"\r\n                            src=\"/images/utils/bitmap.png\"\r\n                            alt=\"\"\r\n                        />\r\n                    </div>\r\n                    <div\r\n                        className=\"product-image-container\"\r\n                        // onClick={this.flip}\r\n                        ref={(ref) => (this.imageFlip = ref)}\r\n                    >\r\n                        {this.displayImage()}\r\n                    </div>\r\n\r\n                    {this.displayNavbar()}\r\n\r\n                    {/* <AppBar position=\"static\">\r\n\t\t\t\t\t\t<Tabs\r\n\t\t\t\t\t\t\tvalue={this.state.value}\r\n\t\t\t\t\t\t\tonChange={this.handleChange}\r\n\t\t\t\t\t\t\taria-label=\"simple tabs example\"\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<Tab label=\"Traçabilité\" />\r\n\t\t\t\t\t\t\t<Tab label=\"Environnement\" />\r\n\t\t\t\t\t\t</Tabs>\r\n\t\t\t\t\t</AppBar>\r\n\t\t\t\t\t<TabPanel value={this.state.value} index={0}></TabPanel>\r\n\t\t\t\t\t<TabPanel value={this.state.value} index={1}>\r\n\t\t\t\t</TabPanel> */}\r\n                    {this.state.value === 0 ? (\r\n                        <Environnement\r\n                            dataEcoScore={this.state.dataEcoScore}\r\n                            ecoScore={this.state.ecoScore}\r\n                            displayTranportImpact={this.state.totalCO2Traceability}\r\n                            barcode={this.props.match.params.barcode}\r\n                        ></Environnement>\r\n                    ) : (\r\n                        <div className=\"product-bottom-container\">\r\n                            <Traceability\r\n                                products={products}\r\n                                getBottomRef={this.getBottomRef}\r\n                                totalCO2Traceability={this.state.totalCO2Traceability}\r\n                            />\r\n                        </div>\r\n                    )}\r\n                    <Navbar\r\n                        barcode={this.props.match.params.barcode}\r\n                        bcProductId={this.props.match.params.bcProductId}\r\n                    />\r\n                </div>\r\n            </React.Fragment>\r\n        );\r\n    };\r\n}\r\n\r\nexport default Product;\r\n\r\nconst delay = (ms) => new Promise((res) => setTimeout(res, ms));\r\n","import React from \"react\";\r\nimport { Swiper, SwiperSlide } from \"swiper/react\";\r\n// Import Swiper styles\r\nimport \"swiper/swiper-bundle.css\";\r\nimport \"./Labels.css\";\r\n\r\nclass Labels extends React.Component {\r\n\tdisplaySpecies = () => {\r\n\t\tif (\r\n\t\t\tthis.props.dataEcoScore?.adjustments?.threatened_species?.length ===\r\n\t\t\t0\r\n\t\t) {\r\n\t\t\treturn <div></div>;\r\n\t\t} else {\r\n\t\t\tif (\r\n\t\t\t\tthis.props.dataEcoScore?.adjustments?.threatened_species\r\n\t\t\t\t\t?.value < 0\r\n\t\t\t) {\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<div className=\"labels-container-bad\">\r\n\t\t\t\t\t\t\t<span class=\"material-icons\">warning_amber</span>\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\tthis.props.dataEcoScore?.adjustments\r\n\t\t\t\t\t\t\t\t\t?.threatened_species?.ingredient\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t);\r\n\t\t\t} else {\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<div className=\"labels-container-good\">\r\n\t\t\t\t\t\t\t<span class=\"material-icons\">task_alt</span>\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\tthis.props.dataEcoScore?.adjustments\r\n\t\t\t\t\t\t\t\t\t?.threatened_species?.ingredient\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\tdisplaySpecies = () => {\r\n\t\tif (\r\n\t\t\t!this.props.dataEcoScore?.adjustments?.threatened_species\r\n\t\t\t\t?.ingredient\r\n\t\t) {\r\n\t\t\treturn <div></div>;\r\n\t\t} else {\r\n\t\t\tif (\r\n\t\t\t\tthis.props.dataEcoScore?.adjustments?.threatened_species\r\n\t\t\t\t\t?.value < 0\r\n\t\t\t) {\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<div className=\"labels-container-bad\">\r\n\t\t\t\t\t\t\t<span class=\"material-icons\">warning_amber</span>\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\tthis.props.dataEcoScore?.adjustments\r\n\t\t\t\t\t\t\t\t\t?.threatened_species?.ingredient\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t);\r\n\t\t\t} else {\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<div className=\"labels-container-good\">\r\n\t\t\t\t\t\t\t<span class=\"material-icons\">task_alt</span>\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\tthis.props.dataEcoScore?.adjustments\r\n\t\t\t\t\t\t\t\t\t?.threatened_species?.ingredient\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\tdisplayProduction = () => {\r\n\t\tif (!this.props.dataEcoScore?.adjustments?.production_system?.label) {\r\n\t\t\treturn <div></div>;\r\n\t\t} else {\r\n\t\t\tif (\r\n\t\t\t\tthis.props.dataEcoScore?.adjustments?.production_system?.value <\r\n\t\t\t\t0\r\n\t\t\t) {\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<div className=\"labels-container-bad\">\r\n\t\t\t\t\t\t\t<span class=\"material-icons\">warning_amber</span>\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\tthis.props.dataEcoScore?.adjustments\r\n\t\t\t\t\t\t\t\t\t?.production_system?.label\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t);\r\n\t\t\t} else {\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<div className=\"labels-container-good\">\r\n\t\t\t\t\t\t\t<span class=\"material-icons\">task_alt</span>\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\tthis.props.dataEcoScore?.adjustments\r\n\t\t\t\t\t\t\t\t\t?.production_system?.label\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\trender() {\r\n\t\tif (\r\n\t\t\tthis.props.dataEcoScore?.adjustments?.threatened_species?.length !=\r\n\t\t\t\t0 &&\r\n\t\t\tthis.props.dataEcoScore?.adjustments?.production_system?.label\r\n\t\t) {\r\n\t\t\treturn (\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<h1>Labels</h1>\r\n\r\n\t\t\t\t\t<div className=\"labels-container\">\r\n\t\t\t\t\t\t{this.displaySpecies()}\r\n\t\t\t\t\t\t{this.displayProduction()}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t);\r\n\t\t} else {\r\n\t\t\treturn <React.Fragment />;\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport default Labels;\r\n","import React from \"react\";\r\nimport Navbar from \"../components/Navbar/Navbar\";\r\nimport Header from \"../components/Header/Header\";\r\nimport \"./Profil.css\";\r\nimport { Link } from \"react-router-dom\";\r\nimport jwt from \"jsonwebtoken\";\r\nimport { motion } from \"framer-motion\";\r\n\r\nclass Profil extends React.Component {\r\n    state = {\r\n        connected: false,\r\n    };\r\n\r\n    disconnect = () => {\r\n        localStorage.clear();\r\n        this.props.history.push(\"/login\");\r\n    };\r\n\r\n    componentDidMount = () => {\r\n        this.Verify();\r\n    };\r\n\r\n    Verify = () => {\r\n        let isExpired = true;\r\n        const token = localStorage.getItem(\"token\");\r\n        if (token) {\r\n            var decodedToken = jwt.decode(token, { complete: true });\r\n            var dateNow = new Date();\r\n            if (decodedToken.payload.exp >= dateNow.getTime() / 1000) {\r\n                isExpired = false;\r\n            }\r\n        }\r\n        if (isExpired === false) {\r\n            this.setState({ connected: true }); // redirection vers la page login\r\n        }\r\n    };\r\n\r\n    displayConnectedProfil = () => {\r\n        return (\r\n            <React.Fragment>\r\n                <h2 className=\"profil-title\">Bienvenue sur ton profil!</h2>\r\n                <Link to=\"/stats\" className=\"profil-button\">\r\n                    Statistiques\r\n                </Link>\r\n                <Link to=\"/configuration\" className=\"profil-button\">\r\n                    Configuration\r\n                </Link>\r\n                <div onClick={this.disconnect} className=\"profil-button\">\r\n                    Déconnecter\r\n                </div>\r\n            </React.Fragment>\r\n        );\r\n    };\r\n\r\n    displayUnconnectedProfil = () => {\r\n        return (\r\n            <React.Fragment>\r\n                <h2 className=\"profil-title\">Non connecté</h2>\r\n                <p>Connecte toi pour que ton historique soit sauvegardé !</p>\r\n                <Link to=\"/login\" className=\"profil-button\">\r\n                    Me Connecter\r\n                </Link>\r\n            </React.Fragment>\r\n        );\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Link to=\"/\">\r\n                    <Header />\r\n                </Link>\r\n                <motion.div\r\n                    initial={{ opacity: 0 }}\r\n                    animate={{ opacity: 1 }}\r\n                    exit={{ opacity: 0 }}\r\n                    className=\"profil-screen\"\r\n                >\r\n                    <div className=\"profil-picture\">\r\n                        <div class=\"material-icons\">person</div>\r\n                    </div>\r\n                    {this.state.connected\r\n                        ? this.displayConnectedProfil()\r\n                        : this.displayUnconnectedProfil()}\r\n                </motion.div>\r\n                <Navbar />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Profil;\r\n","import React from \"react\";\r\n\r\nfunction ButtonSignup() {\r\n  return (\r\n  <div>\r\n    Créer mon compte\r\n  </div>\r\n  );\r\n}\r\n\r\nexport default ButtonSignup;","import React, { Component } from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport ButtonSignup from \"../components/Button/ButtonSignup\";\r\nimport fruits from \"../assets/images/fruits-vegetables-basket-by-oblik-studio.svg\";\r\nimport Header from \"../components/Header/Header\";\r\nimport \"./Login.css\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport const validEmail = new RegExp(\"^[a-zA-Z0-9._:$!%-]+@[a-zA-Z0-9.-]+.[a-zA-Z]$\");\r\n\r\nclass Signup extends Component {\r\n    state = {\r\n        userName: \"\",\r\n        email: \"\",\r\n        password: \"\",\r\n        confirmPassword: \"\",\r\n        errors: [],\r\n        redirect: false,\r\n        submit: false,\r\n    };\r\n\r\n    validate() {\r\n        var errors = [];\r\n        if (this.state.userName.length === 0) {\r\n            errors.push(\"Saissez votre nom\");\r\n        }\r\n        if (this.state.email.length === 0) {\r\n            errors.push(\"Saissez votre adresse e-mail\");\r\n        }\r\n        if (validEmail.test(this.state.email) === false) {\r\n            errors.push(\"Saissez une adresse e-mail valide\");\r\n        }\r\n        if (this.state.password.length < 6) {\r\n            errors.push(\"Entre un mot de passe. 6 caràcteres minimum requis\");\r\n        }\r\n        if (this.state.password !== this.state.confirmPassword) {\r\n            errors.push(\"Les mots de passe ne correspondent pas\");\r\n        }\r\n        this.setState({ errors: errors });\r\n        return errors;\r\n    }\r\n\r\n    signUser = async () => {\r\n        let errors = await fetch(`https://api.lowympact.fr/api/v1/users/`, {\r\n            method: \"post\",\r\n            credentials: \"include\",\r\n            headers: new Headers({\r\n                \"api-key\": \"99d8fb95-abdd-4885-bf6c-3a81d8874043\",\r\n                \"Content-Type\": \"application/json\",\r\n            }),\r\n            body: JSON.stringify({\r\n                username: this.state.userName,\r\n                email: this.state.email,\r\n                password: this.state.password,\r\n            }),\r\n        })\r\n            .then((response) => response.json())\r\n            .then((res) => {\r\n                console.log(res);\r\n                let errors = [];\r\n\r\n                if (!res.success) {\r\n                    errors.push(\"Il y a déjà un compte avec ce mail ou une erreur réseau.\");\r\n                } else {\r\n                    localStorage.setItem(\"token\", res.token);\r\n                    localStorage.setItem(\"userId\", res._id);\r\n                    this.props.history.push(\"/history\");\r\n                }\r\n                this.setState({ errors: errors });\r\n                return errors;\r\n            });\r\n        return errors;\r\n    };\r\n\r\n    handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        let errors = this.validate();\r\n        //console.log(\"errors: \" + errors);\r\n        if (errors.length === 0) {\r\n            errors = await this.signUser();\r\n        }\r\n        if (errors.length === 0) {\r\n            this.setState({ redirect: true });\r\n        }\r\n    };\r\n\r\n    displayErrors = () => {\r\n        let errors = <React.Fragment></React.Fragment>;\r\n        errors = this.state.errors.map((error) => {\r\n            return <p>{error}</p>;\r\n        });\r\n        return errors;\r\n    };\r\n\r\n    render() {\r\n        if (this.state.redirect) {\r\n            return <Redirect to=\"/history\" />;\r\n        }\r\n        //console.log(\"render\");\r\n        return (\r\n            <React.Fragment>\r\n                <Link to=\"/login\">\r\n                    <Header />\r\n                </Link>\r\n                <div className=\"logo-fruits\">\r\n                    <img src={fruits} className=\"logo\" alt=\"Fruits\" />\r\n                </div>\r\n                <Link className=\"back-button\" to=\"/login\">\r\n                    {\"< Retour\"}\r\n                </Link>\r\n                <div className=\"signup-container\">\r\n                    <form className=\"forms\">\r\n                        <label>\r\n                            nom\r\n                            <input\r\n                                className=\"input-forms\"\r\n                                value={this.state.userName}\r\n                                onChange={(evt) =>\r\n                                    this.setState({\r\n                                        userName: evt.target.value,\r\n                                    })\r\n                                }\r\n                                type=\"text\"\r\n                            />\r\n                        </label>\r\n                        <label>\r\n                            email\r\n                            <input\r\n                                className=\"input-forms\"\r\n                                value={this.state.email}\r\n                                onChange={(evt) => this.setState({ email: evt.target.value })}\r\n                                type=\"email\"\r\n                            />\r\n                        </label>\r\n                        <label>\r\n                            mot de passe\r\n                            <input\r\n                                className=\"input-forms\"\r\n                                value={this.state.password}\r\n                                onChange={(evt) =>\r\n                                    this.setState({\r\n                                        password: evt.target.value,\r\n                                    })\r\n                                }\r\n                                type=\"password\"\r\n                            />\r\n                        </label>\r\n                        <label>\r\n                            confirmer mot de passe\r\n                            <input\r\n                                className=\"input-forms\"\r\n                                value={this.state.passwordConfirm}\r\n                                onChange={(evt) =>\r\n                                    this.setState({\r\n                                        confirmPassword: evt.target.value,\r\n                                    })\r\n                                }\r\n                                type=\"password\"\r\n                            />\r\n                        </label>\r\n                    </form>\r\n                    <label className=\"errors-signup\">{this.displayErrors()}</label>\r\n                    <div className=\"button-signup\" onClick={this.handleSubmit}>\r\n                        <ButtonSignup />\r\n                    </div>\r\n                </div>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\nexport default Signup;\r\n","import React from \"react\";\r\n\r\nfunction ButtonSignin() {\r\n  return (\r\n  <div>\r\n    Me connecter\r\n  </div>\r\n  );\r\n}\r\n\r\nexport default ButtonSignin;","import React, { Component } from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport ButtonSignin from \"../components/Button/ButtonSignin\";\r\nimport fruits from \"../assets/images/fruits-vegetables-basket-by-oblik-studio.svg\";\r\nimport Header from \"../components/Header/Header\";\r\nimport blob from \"../assets/images/bitmap.png\";\r\nimport \"./Login.css\";\r\nimport { Link } from \"react-router-dom\";\r\nimport jwt from \"jsonwebtoken\";\r\n\r\nfunction validate(email, password) {\r\n    const errors = [];\r\n\r\n    if (email.length === 0) {\r\n        errors.push(<p>Saissez votre adresse e-mail</p>);\r\n    }\r\n    if (password.length === 0) {\r\n        errors.push(<p>Saissez votre mot de passe</p>);\r\n    }\r\n    return errors;\r\n}\r\n\r\nclass Signin extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            email: \"\",\r\n            password: \"\",\r\n            errors: [],\r\n            redirect: false,\r\n            loginSuccessful: null,\r\n        };\r\n    }\r\n\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        const { email, password } = this.state;\r\n        const errors = validate(email, password);\r\n        //console.log(email, password, errors);\r\n        this.setState({ errors });\r\n        if (errors.length === 0) {\r\n            this.Connect();\r\n        }\r\n    };\r\n\r\n    componentDidMount = () => {\r\n        this.Verify();\r\n    };\r\n\r\n    Verify = () => {\r\n        let isExpired = true;\r\n        const token = localStorage.getItem(\"token\");\r\n        if (token) {\r\n            var decodedToken = jwt.decode(token, { complete: true });\r\n            var dateNow = new Date();\r\n            if (decodedToken.payload.exp >= dateNow.getTime() / 1000) {\r\n                isExpired = false;\r\n            }\r\n        }\r\n        if (isExpired === false) {\r\n            this.setState({ redirect: true }); // redirection vers la page login\r\n        }\r\n    };\r\n\r\n    Connect = () => {\r\n        fetch(`https://api.lowympact.fr/api/v1/users/login`, {\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"api-key\": \"99d8fb95-abdd-4885-bf6c-3a81d8874043\",\r\n\r\n                //'x-access-token': localStorage.getItem('token'),\r\n            },\r\n            body: JSON.stringify({\r\n                email: this.state.email,\r\n                password: this.state.password,\r\n            }),\r\n        })\r\n            .then((response) => response.json())\r\n            .then((data) => {\r\n                //console.log(data);\r\n                if (data.error === \"No user found\") {\r\n                    this.setState({ loginSuccessful: false });\r\n                    let err = this.state.errors;\r\n                    err.push(<p>Utilisateur Inconnu</p>);\r\n                    this.setState({ errors: err });\r\n                } else if (data.error === \"Incorrect password\" || !data.success) {\r\n                    this.setState({ loginSuccessful: false });\r\n                    let err = this.state.errors;\r\n                    err.push(<p>Mot de passe Incorrect</p>);\r\n                    this.setState({ errors: err });\r\n                } else {\r\n                    // console.log(data);\r\n                    localStorage.setItem(\"token\", data.token);\r\n                    localStorage.setItem(\"userId\", data._id);\r\n                    this.setState({ loginSuccessful: true, redirect: true });\r\n                    //this.props.history.goBack();\t// a ajouter pour être redirigé vers la page initialement\r\n                    // demandée. On doit cependant rediriger si la page demandée\r\n                    // était la page de login\r\n                }\r\n            });\r\n    };\r\n\r\n    onPasswordChange = () => {\r\n        this.setState({\r\n            password: this.passwordInput.value,\r\n            email: this.emailInput.value,\r\n        });\r\n    };\r\n\r\n    render() {\r\n        if (this.state.redirect) {\r\n            return <Redirect to=\"/history\" />;\r\n        }\r\n        return (\r\n            <React.Fragment>\r\n                <Link to=\"/login\">\r\n                    <Header />\r\n                </Link>\r\n                <div className=\"logo-fruits\">\r\n                    <img src={fruits} className=\"logo\" alt=\"Fruits\" />\r\n                </div>\r\n\r\n                <Link className=\"back-button\" to=\"/login\">\r\n                    {\"< Retour\"}\r\n                </Link>\r\n                <div className=\"signin-container\">\r\n                    <form className=\"forms\">\r\n                        <label>\r\n                            email\r\n                            <input\r\n                                className=\"input-forms\"\r\n                                value={this.state.email}\r\n                                onChange={this.onPasswordChange}\r\n                                ref={(ref) => (this.emailInput = ref)}\r\n                                type=\"email\"\r\n                            />\r\n                        </label>\r\n                        <label>\r\n                            mot de passe\r\n                            <input\r\n                                className=\"input-forms\"\r\n                                value={this.state.password}\r\n                                onChange={this.onPasswordChange}\r\n                                ref={(ref) => (this.passwordInput = ref)}\r\n                                type=\"password\"\r\n                            />\r\n                        </label>\r\n                    </form>\r\n                    <label className=\"errors-signin\">{this.state.errors}</label>\r\n                    <div className=\"button-signin\" onClick={this.handleSubmit}>\r\n                        <ButtonSignin />\r\n                    </div>\r\n                </div>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\nexport default Signin;\r\n","import React from \"react\";\r\n\r\nfunction ButtonChangePassword() {\r\n  return (\r\n  <div>\r\n    Changer mot de passe\r\n  </div>\r\n  );\r\n}\r\n\r\nexport default ButtonChangePassword;","export const USERS =\r\n    {\r\n        id: 0,\r\n        email: \"bububu@bababa.com\",\r\n        password: \"123456\"\r\n    };","import React, { Component } from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport ButtonChangePassword from \"../components/Button/ButtonChangePassword\";\r\nimport fruits from \"../assets/images/fruits-vegetables-basket-by-oblik-studio.svg\";\r\nimport Header from \"../components/Header/Header\";\r\nimport Navbar from \"../components/Navbar/Navbar\";\r\nimport \"./ProfileConfiguration.css\";\r\nimport { USERS } from \"../assets/users/users\";\r\nimport jwt from \"jsonwebtoken\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction validate(newPassword, confirmPassword) {\r\n    const errors = [];\r\n    if (newPassword.length < 6) {\r\n        errors.push(<p>Entre un mot de passe. 6 caractères minimum requis</p>);\r\n    }\r\n    if (newPassword !== confirmPassword) {\r\n        errors.push(<p>Les mots de passe ne correspondent pas</p>);\r\n    }\r\n    return errors;\r\n}\r\n\r\nclass ProfileConfiguration extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            user: USERS,\r\n            currentPassword: \"\",\r\n            newPassword: \"\",\r\n            confirmPassword: \"\",\r\n            errors: [],\r\n            redirect: false,\r\n        };\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        e.preventDefault();\r\n        const { currentPassword, newPassword, confirmPassword } = this.state;\r\n        const errors = validate(newPassword, confirmPassword);\r\n        console.log(this.state.user.email, currentPassword, newPassword, confirmPassword, errors);\r\n        this.setState({ errors });\r\n        if (errors.length === 0) {\r\n            this.changeUserInfo(this.state.user._id, currentPassword, newPassword);\r\n        }\r\n    };\r\n\r\n    changeUserInfo = (userId, currentPassword, newPassword) => {\r\n        console.log(\"hey\");\r\n        fetch(\r\n            `https://api.lowympact.fr/api/v1/users/${userId}`,\r\n            // `http://localhost:8080/api/v1/users/login`,\r\n            {\r\n                method: \"PUT\",\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\",\r\n                    \"api-key\": \"99d8fb95-abdd-4885-bf6c-3a81d8874043\",\r\n                    authorization: localStorage.getItem(\"token\"),\r\n                },\r\n                body: JSON.stringify({\r\n                    currentPassword: currentPassword,\r\n                    newPassword: newPassword,\r\n                }),\r\n            }\r\n        )\r\n            .then((response) => response.json())\r\n            .then((res) => {\r\n                console.log(res);\r\n                if (res.success === false) {\r\n                    this.setState({\r\n                        errors: [...this.state.errors, res.error],\r\n                    });\r\n                } else {\r\n                    this.setState({ redirect: true });\r\n                }\r\n            });\r\n    };\r\n\r\n    Verify = () => {\r\n        let isExpired = true;\r\n        const token = localStorage.getItem(\"token\");\r\n        if (token) {\r\n            var decodedToken = jwt.decode(token, { complete: true });\r\n            var dateNow = new Date();\r\n            if (decodedToken.payload.exp >= dateNow.getTime() / 1000) {\r\n                isExpired = false;\r\n            }\r\n        }\r\n        if (isExpired === true) {\r\n            this.setState({ redirect: true }); // redirection vers la page login\r\n        }\r\n    };\r\n\r\n    componentDidMount = () => {\r\n        this.Verify();\r\n        let userId = localStorage.getItem(\"userId\");\r\n        if (userId) {\r\n            this.loadUserInfo(userId);\r\n        }\r\n    };\r\n\r\n    loadUserInfo = (userId) => {\r\n        fetch(\r\n            `https://api.lowympact.fr/api/v1/users/${userId}`,\r\n            // `http://localhost:8080/api/v1/users/login`,\r\n            {\r\n                method: \"GET\",\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\",\r\n                    \"api-key\": \"99d8fb95-abdd-4885-bf6c-3a81d8874043\",\r\n                    authorization: localStorage.getItem(\"token\"),\r\n                },\r\n            }\r\n        )\r\n            .then((response) => response.json())\r\n            .then((res) => {\r\n                console.log(res);\r\n\r\n                this.setState({ user: res.data });\r\n            });\r\n    };\r\n\r\n    render() {\r\n        if (this.state.redirect) {\r\n            return <Redirect to=\"/profil\" />;\r\n        }\r\n        console.log(this.state.redirect);\r\n        return (\r\n            <div className=\"screen\">\r\n                <Link to=\"/\">\r\n                    <Header />\r\n                </Link>\r\n                <Navbar />\r\n                <div className=\"logo-fruits\">\r\n                    <img src={fruits} className=\"logo\" alt=\"Fruits\" />\r\n                </div>\r\n                <Link className=\"back-button\" to=\"/profil\">\r\n                    {\"< Retour\"}\r\n                </Link>\r\n                <div className=\"configuration-screen-title\"></div>\r\n                <div className=\"errors-change-password\">{this.state.errors}</div>\r\n                <div className=\"configuration-container\">\r\n                    <div className=\"configuration-email-block\">\r\n                        <div>email</div>\r\n                        <div>{this.state.user.email}</div>\r\n                    </div>\r\n                    <form className=\"configuration-form\">\r\n                        <label>\r\n                            {/* Mot de passe actuel */}\r\n                            <input\r\n                                placeholder=\"mot de passe actuel\"\r\n                                className=\"input-forms\"\r\n                                value={this.state.currentPassword}\r\n                                onChange={(evt) =>\r\n                                    this.setState({\r\n                                        currentPassword: evt.target.value,\r\n                                    })\r\n                                }\r\n                                type=\"password\"\r\n                            />\r\n                        </label>\r\n                        <label>\r\n                            {/* Nouveau mot de passe */}\r\n                            <input\r\n                                value={this.state.newPassword}\r\n                                className=\"input-forms\"\r\n                                onChange={(evt) =>\r\n                                    this.setState({\r\n                                        newPassword: evt.target.value,\r\n                                    })\r\n                                }\r\n                                type=\"password\"\r\n                                placeholder=\"nouveau mot de passe\"\r\n                            />\r\n                        </label>\r\n                        <label>\r\n                            {/* Confirmation de mot de passe */}\r\n                            <input\r\n                                placeholder=\"confirmation de mdp\"\r\n                                className=\"input-forms\"\r\n                                value={this.state.confirmPassword}\r\n                                onChange={(evt) =>\r\n                                    this.setState({\r\n                                        confirmPassword: evt.target.value,\r\n                                    })\r\n                                }\r\n                                type=\"password\"\r\n                            />\r\n                        </label>\r\n                        <Link className=\"button-change-password\" onClick={this.handleChange} to=\"\">\r\n                            <ButtonChangePassword />\r\n                        </Link>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default ProfileConfiguration;\r\n","import React from \"react\";\r\nimport { Swiper, SwiperSlide } from \"swiper/react\";\r\n// Import Swiper styles\r\nimport \"swiper/swiper-bundle.css\";\r\n\r\n//Import Pie Chart\r\nimport { PieChart } from \"react-minimal-pie-chart\";\r\n\r\nimport fruits from \"../../assets/images/fruits-vegetables-basket-by-oblik-studio.svg\";\r\nimport { motion } from \"framer-motion\";\r\n\r\nclass DoughnutChartEcoScore extends React.Component {\r\n    state = {\r\n        swiper: undefined,\r\n        selectedSegment: undefined,\r\n    };\r\n\r\n    displayChart = () => {\r\n        let chart = <React.Fragment></React.Fragment>;\r\n        if (this.props.ecoScoreData && this.props.cartedProduct > 0) {\r\n            let data = [\r\n                {\r\n                    title: \"EcoScore A\",\r\n                    value: this.props.ecoScoreData.a,\r\n                    color: \"#1e8f4f\",\r\n                },\r\n                {\r\n                    title: \"EcoScore B\",\r\n                    value: this.props.ecoScoreData.b,\r\n                    color: \"#5fad0c\",\r\n                },\r\n                {\r\n                    title: \"EcoScore C\",\r\n                    value: this.props.ecoScoreData.c,\r\n                    color: \"#ecb10f\",\r\n                },\r\n                {\r\n                    title: \"EcoScore D\",\r\n                    value: this.props.ecoScoreData.d,\r\n                    color: \"#ff6f1e\",\r\n                },\r\n                {\r\n                    title: \"EcoScore E\",\r\n                    value: this.props.ecoScoreData.e,\r\n                    color: \"#df1e1f\",\r\n                },\r\n                {\r\n                    title: \"EcoScore Inconnu\",\r\n                    value: this.props.ecoScoreData.unknown,\r\n                    color: \"#000000\",\r\n                },\r\n            ];\r\n            chart = (\r\n                <PieChart\r\n                    data={data}\r\n                    lineWidth={30}\r\n                    paddingAngle={1}\r\n                    radius={PieChart.defaultProps.radius - 3}\r\n                    animate\r\n                    animationDuration={700}\r\n                    label={({ dataEntry }) => `${Math.round(dataEntry.percentage)}%`}\r\n                    labelStyle={(index) =>\r\n                        index === this.state.selectedSegment\r\n                            ? {\r\n                                  fontSize: \"6px\",\r\n                                  fontFamily: \"comfortaa\",\r\n                                  fill: data[index].color,\r\n                              }\r\n                            : {\r\n                                  fontSize: \"0px\",\r\n                                  fontFamily: \"comfortaa\",\r\n                                  fill: data[index].color,\r\n                              }\r\n                    }\r\n                    labelPosition={60}\r\n                    segmentsStyle={{\r\n                        transition: \"stroke .3s ease-out\",\r\n                        cursor: \"pointer\",\r\n                    }}\r\n                    segmentsShift={(index) => (index === this.state.selectedSegment ? 3 : 0)}\r\n                    onClick={(event, index) => {\r\n                        if (index === this.state.selectedSegment) {\r\n                            this.setState({ selectedSegment: undefined });\r\n                            this.state.swiper.slideTo(0, 500);\r\n                        } else {\r\n                            this.setState({ selectedSegment: index });\r\n                            this.state.swiper.slideTo(index + 1, 500);\r\n                        }\r\n                    }}\r\n                />\r\n            );\r\n        } else {\r\n            chart = (\r\n                <motion.div\r\n                    className=\"stats-no-product\"\r\n                    initial={{ opacity: 0 }}\r\n                    animate={{ opacity: 1 }}\r\n                    exit={{ opacity: 0 }}\r\n                >\r\n                    <div>\r\n                        <img src={fruits} className=\"logo\" alt=\"Fruits\" />\r\n                        <p className=\"logo-text\">Commence à scanner des produits !</p>\r\n                    </div>\r\n                </motion.div>\r\n            );\r\n        }\r\n        return chart;\r\n    };\r\n\r\n    onSlideChange = (index) => {\r\n        if (index === 0) {\r\n            this.setState({ selectedSegment: undefined });\r\n        } else {\r\n            this.setState({ selectedSegment: index - 1 });\r\n        }\r\n    };\r\n\r\n    displaySlides = () => {\r\n        let slides = <React.Fragment></React.Fragment>;\r\n        if (this.props.ecoScoreData && this.props.cartedProduct > 0) {\r\n            slides = (\r\n                <React.Fragment>\r\n                    <SwiperSlide>\r\n                        <div className=\"stats-slider\">\r\n                            <img\r\n                                className=\"stats-ecoscore-full\"\r\n                                src=\"/images/utils/ecoScoreFull.png\"\r\n                                alt=\"\"\r\n                            />\r\n                        </div>\r\n                    </SwiperSlide>\r\n                    <SwiperSlide>\r\n                        <div className=\"stats-slider\">\r\n                            <span className=\"stats-slider-text\">\r\n                                {\">\"} EcoScore A : {this.props.ecoScoreData.a}{\" \"}\r\n                                {this.props.ecoScoreData.a > 1 ? \" produits\" : \" produit\"}\r\n                            </span>\r\n                            <img\r\n                                className=\"stats-ecoscore-image\"\r\n                                src=\"/images/utils/ecoScoreA.png\"\r\n                                alt=\"\"\r\n                            />\r\n                        </div>\r\n                    </SwiperSlide>\r\n                    <SwiperSlide>\r\n                        <div className=\"stats-slider\">\r\n                            <span className=\"stats-slider-text\">\r\n                                {\">\"} EcoScore B : {this.props.ecoScoreData.b}{\" \"}\r\n                                {this.props.ecoScoreData.b > 1 ? \" produits\" : \" produit\"}\r\n                            </span>\r\n                            <img\r\n                                className=\"stats-ecoscore-image\"\r\n                                src=\"/images/utils/ecoScoreB.png\"\r\n                                alt=\"\"\r\n                            />\r\n                        </div>\r\n                    </SwiperSlide>\r\n                    <SwiperSlide>\r\n                        <div className=\"stats-slider\">\r\n                            <span className=\"stats-slider-text\">\r\n                                {\">\"} EcoScore C : {this.props.ecoScoreData.c}{\" \"}\r\n                                {this.props.ecoScoreData.c > 1 ? \" produits\" : \" produit\"}\r\n                            </span>\r\n                            <img\r\n                                className=\"stats-ecoscore-image\"\r\n                                src=\"/images/utils/ecoScoreC.png\"\r\n                                alt=\"\"\r\n                            />\r\n                        </div>\r\n                    </SwiperSlide>\r\n                    <SwiperSlide>\r\n                        <div className=\"stats-slider\">\r\n                            <span className=\"stats-slider-text\">\r\n                                {\">\"} EcoScore D : {this.props.ecoScoreData.d}{\" \"}\r\n                                {this.props.ecoScoreData.d > 1 ? \" produits\" : \" produit\"}\r\n                            </span>\r\n                            <img\r\n                                className=\"stats-ecoscore-image\"\r\n                                src=\"/images/utils/ecoScoreD.png\"\r\n                                alt=\"\"\r\n                            />\r\n                        </div>\r\n                    </SwiperSlide>\r\n                    <SwiperSlide>\r\n                        <div className=\"stats-slider\">\r\n                            <span className=\"stats-slider-text\">\r\n                                {\">\"} EcoScore E : {this.props.ecoScoreData.e}{\" \"}\r\n                                {this.props.ecoScoreData.e > 1 ? \" produits\" : \" produit\"}\r\n                            </span>\r\n                            <img\r\n                                className=\"stats-ecoscore-image\"\r\n                                src=\"/images/utils/ecoScoreE.png\"\r\n                                alt=\"\"\r\n                            />\r\n                        </div>\r\n                    </SwiperSlide>\r\n                    <SwiperSlide>\r\n                        <div className=\"stats-slider\">\r\n                            <span className=\"stats-slider-text\">\r\n                                {\">\"} EcoScore Inconnu : {this.props.ecoScoreData.unknown}{\" \"}\r\n                                {this.props.ecoScoreData.unknown > 1 ? \" produits\" : \" produit\"}\r\n                            </span>\r\n                        </div>\r\n                    </SwiperSlide>\r\n                </React.Fragment>\r\n            );\r\n        }\r\n        return slides;\r\n    };\r\n\r\n    render = () => {\r\n        return (\r\n            <React.Fragment>\r\n                <div className=\"stats-chart-pie\">{this.displayChart()}</div>\r\n                <div className=\"stats-chart-slider\">\r\n                    <Swiper\r\n                        spaceBetween={0}\r\n                        slidesPerView={1}\r\n                        centeredSlides={true}\r\n                        onSlideChange={(i) => this.onSlideChange(i.activeIndex)}\r\n                        onSwiper={(swiper) => this.setState({ swiper: swiper })}\r\n                    >\r\n                        {this.displaySlides()}\r\n                    </Swiper>\r\n                </div>\r\n            </React.Fragment>\r\n        );\r\n    };\r\n}\r\n\r\nexport default DoughnutChartEcoScore;\r\n","import React from \"react\";\r\nimport { Swiper, SwiperSlide } from \"swiper/react\";\r\n// Import Swiper styles\r\nimport \"swiper/swiper-bundle.css\";\r\n\r\n//Import Bar Chart\r\nimport Chart from \"react-apexcharts\";\r\n\r\nimport fruits from \"../../assets/images/fruits-vegetables-basket-by-oblik-studio.svg\";\r\nimport { motion } from \"framer-motion\";\r\n\r\nconst monthNames = [\r\n    \"Janvier\",\r\n    \"Février\",\r\n    \"Mars\",\r\n    \"Avril\",\r\n    \"Mai\",\r\n    \"Juin\",\r\n    \"Juillet\",\r\n    \"Août\",\r\n    \"Septembre\",\r\n    \"Octobre\",\r\n    \"Novembre\",\r\n    \"Décembre\",\r\n];\r\n\r\nclass BarChartCarbonImpact extends React.Component {\r\n    state = {\r\n        selectedSegment: 0,\r\n        options: {\r\n            chart: {\r\n                toolbar: {\r\n                    show: false,\r\n                },\r\n                dropShadow: {\r\n                    enabled: true,\r\n                    top: 0,\r\n                    left: 0,\r\n                    blur: 2,\r\n                    opacity: 0.5,\r\n                },\r\n            },\r\n            plotOptions: {\r\n                bar: {\r\n                    borderRadius: 5,\r\n                    horizontal: true,\r\n                },\r\n            },\r\n            xaxis: {\r\n                categories: [\"Janvier\", \"Février\", \"Mars\", \"Avril\", \"Mai\"],\r\n                labels: {\r\n                    style: {\r\n                        fontSize: \"12px\",\r\n                        fontFamily: \"Comfortaa\",\r\n                        fontColor: \"#1b3044\",\r\n                    },\r\n                },\r\n                title: {\r\n                    text: \"CO₂ équivalent (kg)\",\r\n                    style: {\r\n                        fontSize: \"12px\",\r\n                        fontFamily: \"Comfortaa\",\r\n                        fontColor: \"#1b3044\",\r\n                    },\r\n                },\r\n            },\r\n            yaxis: {\r\n                labels: {\r\n                    style: {\r\n                        fontSize: \"12px\",\r\n                        fontFamily: \"Comfortaa\",\r\n                        fontColor: \"#1b3044\",\r\n                    },\r\n                },\r\n            },\r\n            dataLabels: {\r\n                enabled: true,\r\n                style: {\r\n                    fontSize: \"10px\",\r\n                    fontFamily: \"Comfortaa\",\r\n                },\r\n            },\r\n            noData: {\r\n                text: \"Chargement...\",\r\n            },\r\n            fill: {\r\n                colors: [\"#ff914d\"],\r\n            },\r\n            grid: {\r\n                xaxis: {\r\n                    lines: {\r\n                        show: true,\r\n                    },\r\n                },\r\n                yaxis: {\r\n                    lines: {\r\n                        show: false,\r\n                    },\r\n                },\r\n            },\r\n        },\r\n    };\r\n\r\n    displayChart = () => {\r\n        let chart = <React.Fragment></React.Fragment>;\r\n        if (this.props.carbonImpactData && this.props.cartedProduct > 0) {\r\n            let dataSize = this.props.carbonImpactData.data.length;\r\n            let xaxis = [];\r\n            let now;\r\n\r\n            switch (this.props.carbonImpactData.unit) {\r\n                case \"weekly\":\r\n                    let d = new Date();\r\n                    d.setHours(0, 0, 0, 0);\r\n                    d.setDate(d.getDate() + 4 - (d.getDay() || 7));\r\n                    let yearStart = new Date(d.getFullYear(), 0, 1);\r\n                    now = Math.ceil(((d - yearStart) / 86400000 + 1) / 7);\r\n                    for (let i = dataSize - 1; i >= 0; i--) {\r\n                        xaxis.push(\"Semaine \" + (now - i));\r\n                    }\r\n                    break;\r\n                case \"monthly\":\r\n                    now = new Date().getMonth();\r\n                    let year = new Date().getFullYear();\r\n                    for (let i = dataSize - 1; i >= 0; i--) {\r\n                        let monthNum = now - i;\r\n                        if (monthNum < 0) {\r\n                            xaxis.push(monthNames[monthNum + 12] + \" \" + (year - 1));\r\n                        } else {\r\n                            xaxis.push(monthNames[monthNum] + \" \" + year);\r\n                        }\r\n                    }\r\n                    break;\r\n                case \"yearly\":\r\n                    now = new Date().getFullYear();\r\n                    for (let i = dataSize - 1; i >= 0; i--) {\r\n                        xaxis.push((now - i).toString());\r\n                    }\r\n                    break;\r\n            }\r\n\r\n            this.state.options.xaxis.categories = xaxis;\r\n\r\n            let series = [\r\n                {\r\n                    name: \"CO₂ équivalent (kg)\",\r\n                    data: [],\r\n                },\r\n            ];\r\n\r\n            let sortedData = this.props.carbonImpactData.data;\r\n            console.log(sortedData);\r\n            sortedData.sort((a, b) => (a.offset > b.offset ? 1 : -1));\r\n            console.log(sortedData);\r\n\r\n            for (let i = 0; i < sortedData.length; i++) {\r\n                let finalValue =\r\n                    this.state.selectedSegment === 0\r\n                        ? sortedData[i].impact.toFixed(2)\r\n                        : (sortedData[i].impact / sortedData[i].nbProducts).toFixed(2);\r\n                series[0].data.push(finalValue);\r\n            }\r\n\r\n            chart = (\r\n                <React.Fragment>\r\n                    <div className=\"stats-chart-bar\">\r\n                        <Chart\r\n                            options={this.state.options}\r\n                            series={series}\r\n                            type=\"bar\"\r\n                            height={350}\r\n                        ></Chart>\r\n                    </div>\r\n                </React.Fragment>\r\n            );\r\n        } else {\r\n            chart = (\r\n                <motion.div\r\n                    className=\"stats-no-product\"\r\n                    initial={{ opacity: 0 }}\r\n                    animate={{ opacity: 1 }}\r\n                    exit={{ opacity: 0 }}\r\n                >\r\n                    <div>\r\n                        <img src={fruits} className=\"logo\" alt=\"Fruits\" />\r\n                        <p className=\"logo-text\">Commence à scanner des produits !</p>\r\n                    </div>\r\n                </motion.div>\r\n            );\r\n        }\r\n        return chart;\r\n    };\r\n\r\n    onSlideChange = (index) => {\r\n        this.setState({ selectedSegment: this.state.selectedSegment === 0 ? 1 : 0 });\r\n    };\r\n\r\n    displaySlides = () => {\r\n        let slides = <React.Fragment></React.Fragment>;\r\n        if (this.props.carbonImpactData && this.props.cartedProduct > 0) {\r\n            slides = (\r\n                <React.Fragment>\r\n                    <SwiperSlide>\r\n                        <div className=\"stats-slider\">\r\n                            <span className=\"stats-slider-text\">{\">\"} Impact Carbone total</span>\r\n                        </div>\r\n                    </SwiperSlide>\r\n                    <SwiperSlide>\r\n                        <div className=\"stats-slider\">\r\n                            <span className=\"stats-slider-text\">\r\n                                {\">\"} Impact Carbone par produit\r\n                            </span>\r\n                        </div>\r\n                    </SwiperSlide>\r\n                </React.Fragment>\r\n            );\r\n        }\r\n        return slides;\r\n    };\r\n\r\n    render = () => {\r\n        return (\r\n            <React.Fragment>\r\n                {this.displayChart()}\r\n                <div className=\"stats-chart-slider\">\r\n                    <Swiper\r\n                        spaceBetween={0}\r\n                        slidesPerView={1}\r\n                        centeredSlides={true}\r\n                        onSlideChange={(i) => this.onSlideChange(i.activeIndex)}\r\n                        onSwiper={(swiper) => this.setState({ swiper: swiper })}\r\n                    >\r\n                        {this.displaySlides()}\r\n                    </Swiper>\r\n                </div>\r\n            </React.Fragment>\r\n        );\r\n    };\r\n}\r\n\r\nexport default BarChartCarbonImpact;\r\n","import React from \"react\";\r\nimport Navbar from \"../components/Navbar/Navbar\";\r\nimport DoughnutChartEcoScore from \"../components/Charts/DoughnutChartEcoScore\";\r\nimport BarChartCarbonImpact from \"../components/Charts/BarChartCarbonImpact\";\r\nimport \"./Product.css\";\r\nimport { Link } from \"react-router-dom\";\r\nimport jwt from \"jsonwebtoken\";\r\n\r\nclass Statistics extends React.Component {\r\n    state = {\r\n        ecoScoreData: undefined,\r\n        carbonImpactData: undefined,\r\n        username: undefined,\r\n        scannedProduct: undefined,\r\n        cartedProduct: undefined,\r\n        userId: undefined,\r\n        value: 0,\r\n    };\r\n\r\n    Verify = () => {\r\n        let isExpired = true;\r\n        const token = localStorage.getItem(\"token\");\r\n        if (token) {\r\n            var decodedToken = jwt.decode(token, { complete: true });\r\n            var dateNow = new Date();\r\n            if (decodedToken.payload.exp >= dateNow.getTime() / 1000) {\r\n                isExpired = false;\r\n            }\r\n        }\r\n        if (isExpired === false) {\r\n            this.setState({ connected: true });\r\n        }\r\n    };\r\n\r\n    componentDidMount = () => {\r\n        this.Verify();\r\n        let userId = localStorage.getItem(\"userId\");\r\n        if (userId) {\r\n            this.setState({ userId: userId });\r\n        }\r\n        this.loadUserData(userId);\r\n        this.loadEcoScoreData(userId, \"fromBeginning\");\r\n        this.loadCarbonImpactData(userId, \"fromBeginning\");\r\n    };\r\n\r\n    loadUserData = (userId) => {\r\n        fetch(\r\n            `https://api.lowympact.fr/api/v1/users/${userId}`,\r\n            // `http://localhost:8080/api/v1/users/${userId}`,\r\n            {\r\n                method: \"get\",\r\n                credentials: \"include\",\r\n                headers: new Headers({\r\n                    authorization: localStorage.getItem(\"token\"),\r\n                    \"api-key\": \"99d8fb95-abdd-4885-bf6c-3a81d8874043\",\r\n                    \"Content-Type\": \"application/json\",\r\n                }),\r\n            }\r\n        )\r\n            .then((response) => response.json())\r\n            .then((res) => {\r\n                console.log(res);\r\n                this.setState({\r\n                    username: res?.data?.username,\r\n                    scannedProduct: res?.scannedProduct,\r\n                    cartedProduct: res?.cartedProduct,\r\n                });\r\n            });\r\n    };\r\n\r\n    loadEcoScoreData = (userId, typeAggregate) => {\r\n        fetch(\r\n            `https://api.lowympact.fr/api/v1/users/${userId}/statistics?typeStatistic=ecoscore&typeAggregate=${typeAggregate}`,\r\n            // `http://localhost:8080/api/v1/users/${userId}/statistics?typeStatistic=ecoscore&typeAggregate=${typeAggregate}`,\r\n            {\r\n                method: \"get\",\r\n                credentials: \"include\",\r\n                headers: new Headers({\r\n                    authorization: localStorage.getItem(\"token\"),\r\n                    \"api-key\": \"99d8fb95-abdd-4885-bf6c-3a81d8874043\",\r\n                    \"Content-Type\": \"application/json\",\r\n                }),\r\n            }\r\n        )\r\n            .then((response) => response.json())\r\n            .then((res) => {\r\n                console.log(res);\r\n                this.setState({\r\n                    ecoScoreData: res?.statistics?.ecoscore,\r\n                });\r\n            });\r\n    };\r\n\r\n    loadCarbonImpactData = (userId, typeAggregate) => {\r\n        fetch(\r\n            `https://api.lowympact.fr/api/v1/users/${userId}/statistics?typeStatistic=carbonImpact&typeAggregate=${typeAggregate}`,\r\n            // `http://localhost:8080/api/v1/users/${userId}/statistics?typeStatistic=carbonImpact&typeAggregate=${typeAggregate}`,\r\n            {\r\n                method: \"get\",\r\n                credentials: \"include\",\r\n                headers: new Headers({\r\n                    authorization: localStorage.getItem(\"token\"),\r\n                    \"api-key\": \"99d8fb95-abdd-4885-bf6c-3a81d8874043\",\r\n                    \"Content-Type\": \"application/json\",\r\n                }),\r\n            }\r\n        )\r\n            .then((response) => response.json())\r\n            .then((res) => {\r\n                console.log(res);\r\n                this.setState({\r\n                    carbonImpactData: res?.statistics?.carbonImpact,\r\n                });\r\n            });\r\n    };\r\n\r\n    displayStats = () => {\r\n        let scannedProduct = <React.Fragment />;\r\n        let cartedProduct = <React.Fragment />;\r\n\r\n        if (this.state.scannedProduct !== undefined) {\r\n            scannedProduct = (\r\n                <div className=\"stats-header-text\">\r\n                    <span className={\"circle-stats color_score_stats\"}>⬤ </span>\r\n                    {this.state.scannedProduct > 1 ? \"Produits scannés :\" : \"Produit scanné :\"}\r\n                    <span className=\"uppercase \"> {this.state.scannedProduct}</span>\r\n                </div>\r\n            );\r\n        }\r\n\r\n        if (this.state.cartedProduct !== undefined) {\r\n            cartedProduct = (\r\n                <div className=\"stats-header-text\">\r\n                    <span className={\"circle-stats color_score_stats\"}>⬤ </span>\r\n                    {this.state.cartedProduct > 1 ? \"Produits achetés :\" : \"Produit acheté :\"}\r\n                    <span className=\"uppercase \"> {this.state.cartedProduct}</span>\r\n                </div>\r\n            );\r\n        }\r\n\r\n        return (\r\n            <React.Fragment>\r\n                {scannedProduct}\r\n                {cartedProduct}\r\n            </React.Fragment>\r\n        );\r\n    };\r\n\r\n    handleChange = (event, newValue) => {\r\n        this.setState({ value: newValue });\r\n    };\r\n\r\n    displayNavbar = () => {\r\n        let retour = (\r\n            <div className=\"stats-navbar-container\">\r\n                <button\r\n                    className={\r\n                        this.state.value === 0\r\n                            ? \"stats-navbar-button selected\"\r\n                            : \"stats-navbar-button\"\r\n                    }\r\n                    onClick={() => this.handleChange(\"\", 0)}\r\n                >\r\n                    EcoScore\r\n                </button>\r\n                <button\r\n                    className={\r\n                        this.state.value === 1\r\n                            ? \"stats-navbar-button selected\"\r\n                            : \"stats-navbar-button\"\r\n                    }\r\n                    onClick={() => this.handleChange(\"\", 1)}\r\n                >\r\n                    Impact Carbone\r\n                </button>\r\n                <div\r\n                    className={\r\n                        this.state.value === 0 ? \"navbar-under nav-left\" : \"navbar-under nav-right\"\r\n                    }\r\n                ></div>\r\n            </div>\r\n        );\r\n        return retour;\r\n    };\r\n\r\n    render = () => {\r\n        return (\r\n            <React.Fragment>\r\n                <div className=\"stats-page-container\">\r\n                    <div className=\"stats-header-container\">\r\n                        <div className=\"stats-profil-link\">\r\n                            <Link to=\"/profil\"> {\"<\"} Profil</Link>\r\n                        </div>\r\n                        <img className=\"stats-bitmap-image\" src=\"/images/utils/bitmap.png\" alt=\"\" />\r\n                    </div>\r\n\r\n                    <div className=\"stats-welcome\">\r\n                        <span className=\"stats-welcome-text\">\r\n                            {this.state.username\r\n                                ? this.state.username + \", voici ton récapitulatif Lowympact...\"\r\n                                : \"\"}\r\n                        </span>\r\n                    </div>\r\n\r\n                    <div className=\"stats-text-container\">{this.displayStats()}</div>\r\n\r\n                    {this.displayNavbar()}\r\n\r\n                    {this.state.value === 0 ? (\r\n                        <DoughnutChartEcoScore\r\n                            ecoScoreData={this.state.ecoScoreData}\r\n                            scannedProduct={this.state.scannedProduct}\r\n                            cartedProduct={this.state.cartedProduct}\r\n                        ></DoughnutChartEcoScore>\r\n                    ) : (\r\n                        <BarChartCarbonImpact\r\n                            carbonImpactData={this.state.carbonImpactData}\r\n                            scannedProduct={this.state.scannedProduct}\r\n                            cartedProduct={this.state.cartedProduct}\r\n                        ></BarChartCarbonImpact>\r\n                    )}\r\n\r\n                    <Navbar />\r\n                </div>\r\n            </React.Fragment>\r\n        );\r\n    };\r\n}\r\n\r\nexport default Statistics;\r\n\r\nconst delay = (ms) => new Promise((res) => setTimeout(res, ms));\r\n","import React, { Component } from \"react\";\r\nimport { BrowserRouter as Router, Route, Redirect, Switch } from \"react-router-dom\";\r\nimport { AnimatePresence } from \"framer-motion\";\r\n\r\nimport \"./App.css\";\r\nimport History from \"./pages/History\";\r\nimport Error404 from \"./pages/Error404\";\r\nimport Login from \"./pages/Login\";\r\nimport Product from \"./pages/Product\";\r\nimport Profil from \"./pages/Profil\";\r\nimport Signup from \"./pages/Signup\";\r\nimport Signin from \"./pages/Signin\";\r\nimport ProfileConfiguration from \"./pages/ProfileConfiguration\";\r\nimport Statistics from \"./pages/Statistics\";\r\n\r\nclass App extends Component {\r\n    render() {\r\n        return (\r\n            <Router>\r\n                <AnimatePresence exitBeforeEnter={true}>\r\n                    <Switch>\r\n                        {/* Front Pages */}\r\n                        <Route path=\"/history\" component={History} exact key={1} />\r\n                        <Route path=\"/profil\" component={Profil} exact key={2} />\r\n                        <Route path=\"/login\" component={Login} exact />\r\n                        <Route path=\"/\" component={Login} exact key={1} />\r\n                        <Route path=\"/products/:barcode/:bcProductId\" component={Product} exact />\r\n                        <Route path=\"/products/:barcode\" component={Product} exact />\r\n                        <Route path=\"/signup\" component={Signup} exact />\r\n                        <Route path=\"/signin\" component={Signin} exact />\r\n                        <Route path=\"/configuration\" component={ProfileConfiguration} exact />\r\n                        <Route path=\"/stats\" component={Statistics} exact />\r\n                        {/* Errors Pages */}\r\n                        <Route path=\"/error404\" component={Error404} />\r\n                        <Redirect to=\"/error404\" />\r\n                        {/* <Route path=\"/MAINTENANCE\" component={ Maintenance } /> */}\r\n                    </Switch>\r\n                </AnimatePresence>\r\n                {/* </Suspense> */}\r\n            </Router>\r\n        );\r\n    }\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}