{"version":3,"sources":["components/Traceability/leaflet-curve/leaflet.curve.js","components/Traceability/leaflet-curve/Curve.js","components/Traceability/Traceability.js","components/Environnement/Alternatives.js","components/Environnement/Origins.js","components/Environnement/EmpreinteCarbone.js","components/Environnement/Environnement.js","pages/WilderHarrier.js","components/Button/ButtonHistory.js","components/Button/ButtonProfil.js","components/Button/ButtonScan.js","components/Scan/Scanner.js","components/Scan/Scan.js","components/Navbar/Navbar.js"],"names":["L","Curve","Path","extend","options","initialize","path","setOptions","this","_initialUpdate","_setPath","getPath","_coords","setPath","redraw","getBounds","_bounds","_computeBounds","lastPoint","lastCommand","coord","bound","LatLngBounds","i","length","String","lat","latLng","lng","controlPoint1","controlPoint2","endPoint","diffLat","diffLng","controlPoint","getCenter","_update","_map","_updatePath","_renderer","_updatecurve","_project","lastCoord","curCommand","curPoint","_points","push","latLngToLayerPoint","curve","SVG","include","layer","_curvePointsToPath","animate","_path","getTotalLength","dashArray","style","strokeDasharray","strokeDashoffset","points","point","str","x","y","props","positions","option","getOptions","fromProps","toProps","leafletElement","setStyleIfChanged","propTypes","children","PropTypes","oneOfType","arrayOf","node","object","array","isRequired","withLeaflet","Traceability","map","undefined","state","zoom","swiper","currentIndex","getMaterialIcon","mode","getTransportMode","getTranslation","displaySlides","slides","Fragment","products","product","pastille","TransportCO2Impact","value","className","transport","productsOutput","productName","seller","localisation","city","country","type","name","buyer","onClick","handleSwipeClick","Math","round","dist","parseFloat","toFixed","console","log","nextIndex","slideTo","handleMarkerClick","latlng","index","elem","document","getElementsByClassName","scrollIntoView","behavior","p","getZoomRatio","latitude","longitude","flyTo","duration","onSlideChange","setState","long","displayMarker","markers","icon","icon2","marker1","lat1","long1","marker2","lat2","long2","zIndex","Icon","iconUrl","iconRetinaUrl","iconSize","Point","Marker","zIndexOffset","position","curves","setAttribute","getCurveOptions","color","fill","delay","render","totalCO2Traceability","spaceBetween","slidesPerView","centeredSlides","activeIndex","onSwiper","Map","center","minZoom","scrollWheelZoom","dragging","maxBounds","maxBoundsViscosity","ref","getBottomRef","whenCreated","TileLayer","attribution","url","React","Component","toRadian","degree","PI","origin","destination","distance","lon1","lon2","deltaLat","deltaLon","a","pow","sin","cos","asin","sqrt","getDistance","latlng1","latlng2","offsetX","offsetY","r","theta","atan2","r2","theta2","midpointX","Alternatives","componentDidMount","loadAlternatives","alternatives","id","img_url","redirect","fireAmplitudeEvent","event","amplitude","getInstance","logEvent","e","error","renderListAlternatives","listItems","item","barcode","href","target","rel","src","alt","alternatives_title","autoPlay","interval","centerMode","centerSlidePercentage","showThumbs","showIndicators","showStatus","Origins","polygon","activeCountry","getCountries","setActiveCountry","origins","fetch","then","res","json","success","data","geo","coordinates","poly","Polygon","fillColor","opacity","EmpreinteCarbone","alea","setAlea","nb","repartition","image","percent","dataEcoScore","agribalyse","co2_agriculture","co2_total","co2_transportation","co2_packaging","co2_processing","co2_distribution","co2_consumption","equivalent","getEquivalent","circle","co2","Environnement","width","materials","getColor","note","getColorImpact","getLabel","getLabelImpact","getLabelImpactPackaging","getColorImpactPackaging","updateWindowDimensions","window","innerWidth","displayPackagingDetailImpact","adjustments","packaging","packagings","material","split","filter","pos","indexOf","separator","displayPackagingImpact","ecoScore","ciqual_code","code","addEventListener","removeEventListener","productsTemp","traceability","depth","impact","transportCO2Impact","productImageUrl","Product","match","params","bcProductId","genericName","connected","userId","cart","countries","isFlipping","component","bottomComponent","init","apiEndpoint","displayImage","scoreClass","addToCart","removeFromCart","handleChange","newValue","displayNavbar","sort","b","imageFlip","displayTranportImpact","ButtonHistory","ButtonProfil","ButtonScan","Scanner","noBackCamera","usedCamera","devices","processingImage","text","mutlipleTracks","no_permission","locked","switchCamera","num","Quagga","stop","QuaggaInit","deviceId","capabilities","facingMode","Object","keys","inputStream","constraints","locator","patchSize","halfSample","locate","area","top","right","left","bottom","numOfWorkers","navigator","hardwareConcurrency","decoder","readers","multiple","singleChannel","err","JSON","stringify","start","setQuagga","CameraAccess","onDetected","_onDetected","result","onDrop","reader","FileReader","readAsDataURL","onloadend","decodeSingle","codeResult","setImport","offDetected","textImage","withIcon","withPreview","buttonText","onChange","label","imgExtension","maxFileSize","labelClass","ms","Promise","setTimeout","Scan","scanning","status","results","usedCameraId","reading","online","onLine","updateNetwork","quagga","response","handleScan","arr","handleError","displayQrCode","onError","onScan","showViewFinder","displayBarCode","switchReader","displayPopup","retour","to","showScanner","image_url","product_name","brands","ecoscore_score","ecoscore_grade","marginRight","class","hideScannerAnimation","Navbar","height","queryString","location","search","urlParams","URLSearchParams","get","getUserMedia","webkitGetUserMedia","mozGetUserMedia","msGetUserMedia","mediaDevices","enumerateDevices","d","kind","videoDevices","device","video","exact","stream","getVideoTracks","track","getCapabilities","getTracks","forEach","all","capa","max","innerHeight","handleScannerButton","bool","history","pathname"],"mappings":"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","file":"static/js/14.a91da375.chunk.js","sourcesContent":["import L from \"leaflet\";\n\nL.Curve = L.Path.extend({\n\toptions: {},\n\n\tinitialize: function (path, options) {\n\t\t//1\n\t\tL.setOptions(this, options);\n\t\tthis._initialUpdate = true;\n\t\tthis._setPath(path);\n\t},\n\n\tgetPath: function () {\n\t\treturn this._coords;\n\t},\n\n\tsetPath: function (path, options) {\n\t\tthis._initialUpdate = true;\n\t\tthis._setPath(path);\n\t\treturn this.redraw();\n\t},\n\n\tgetBounds: function () {\n\t\treturn this._bounds;\n\t},\n\n\t_setPath: function (path) {\n\t\t//2\n\t\tthis._coords = path;\n\t\tthis._bounds = this._computeBounds();\n\t},\n\n\t_computeBounds: function () {\n\t\t//3\n\t\tvar bound = new L.LatLngBounds();\n\t\tvar lastPoint;\n\t\tvar lastCommand;\n\t\tvar coord;\n\t\tfor (var i = 0; i < this._coords.length; i++) {\n\t\t\tcoord = this._coords[i];\n\t\t\tif (typeof coord == \"string\" || coord instanceof String) {\n\t\t\t\tlastCommand = coord;\n\t\t\t} else if (lastCommand == \"H\") {\n\t\t\t\tbound.extend([lastPoint.lat, coord[0]]);\n\t\t\t\tlastPoint = new L.latLng(lastPoint.lat, coord[0]);\n\t\t\t} else if (lastCommand == \"V\") {\n\t\t\t\tbound.extend([coord[0], lastPoint.lng]);\n\t\t\t\tlastPoint = new L.latLng(coord[0], lastPoint.lng);\n\t\t\t} else if (lastCommand == \"C\") {\n\t\t\t\tvar controlPoint1 = new L.latLng(coord[0], coord[1]);\n\t\t\t\tcoord = this._coords[++i];\n\t\t\t\tvar controlPoint2 = new L.latLng(coord[0], coord[1]);\n\t\t\t\tcoord = this._coords[++i];\n\t\t\t\tvar endPoint = new L.latLng(coord[0], coord[1]);\n\n\t\t\t\tbound.extend(controlPoint1);\n\t\t\t\tbound.extend(controlPoint2);\n\t\t\t\tbound.extend(endPoint);\n\n\t\t\t\tendPoint.controlPoint1 = controlPoint1;\n\t\t\t\tendPoint.controlPoint2 = controlPoint2;\n\t\t\t\tlastPoint = endPoint;\n\t\t\t} else if (lastCommand == \"S\") {\n\t\t\t\tvar controlPoint2 = new L.latLng(coord[0], coord[1]);\n\t\t\t\tcoord = this._coords[++i];\n\t\t\t\tvar endPoint = new L.latLng(coord[0], coord[1]);\n\n\t\t\t\tvar controlPoint1 = lastPoint;\n\t\t\t\tif (lastPoint.controlPoint2) {\n\t\t\t\t\tvar diffLat = lastPoint.lat - lastPoint.controlPoint2.lat;\n\t\t\t\t\tvar diffLng = lastPoint.lng - lastPoint.controlPoint2.lng;\n\t\t\t\t\tcontrolPoint1 = new L.latLng(\n\t\t\t\t\t\tlastPoint.lat + diffLat,\n\t\t\t\t\t\tlastPoint.lng + diffLng\n\t\t\t\t\t);\n\t\t\t\t}\n\n\t\t\t\tbound.extend(controlPoint1);\n\t\t\t\tbound.extend(controlPoint2);\n\t\t\t\tbound.extend(endPoint);\n\n\t\t\t\tendPoint.controlPoint1 = controlPoint1;\n\t\t\t\tendPoint.controlPoint2 = controlPoint2;\n\t\t\t\tlastPoint = endPoint;\n\t\t\t} else if (lastCommand == \"Q\") {\n\t\t\t\tvar controlPoint = new L.latLng(coord[0], coord[1]);\n\t\t\t\tcoord = this._coords[++i];\n\t\t\t\tvar endPoint = new L.latLng(coord[0], coord[1]);\n\n\t\t\t\tbound.extend(controlPoint);\n\t\t\t\tbound.extend(endPoint);\n\n\t\t\t\tendPoint.controlPoint = controlPoint;\n\t\t\t\tlastPoint = endPoint;\n\t\t\t} else if (lastCommand == \"T\") {\n\t\t\t\tvar endPoint = new L.latLng(coord[0], coord[1]);\n\n\t\t\t\tvar controlPoint = lastPoint;\n\t\t\t\tif (lastPoint.controlPoint) {\n\t\t\t\t\tvar diffLat = lastPoint.lat - lastPoint.controlPoint.lat;\n\t\t\t\t\tvar diffLng = lastPoint.lng - lastPoint.controlPoint.lng;\n\t\t\t\t\tcontrolPoint = new L.latLng(\n\t\t\t\t\t\tlastPoint.lat + diffLat,\n\t\t\t\t\t\tlastPoint.lng + diffLng\n\t\t\t\t\t);\n\t\t\t\t}\n\n\t\t\t\tbound.extend(controlPoint);\n\t\t\t\tbound.extend(endPoint);\n\n\t\t\t\tendPoint.controlPoint = controlPoint;\n\t\t\t\tlastPoint = endPoint;\n\t\t\t} else {\n\t\t\t\tbound.extend(coord);\n\t\t\t\tlastPoint = new L.latLng(coord[0], coord[1]);\n\t\t\t}\n\t\t}\n\t\treturn bound;\n\t},\n\n\t//TODO: use a centroid algorithm instead\n\tgetCenter: function () {\n\t\treturn this._bounds.getCenter();\n\t},\n\n\t_update: function () {\n\t\t//5\n\t\tif (!this._map) {\n\t\t\treturn;\n\t\t}\n\t\tthis._updatePath();\n\t},\n\n\t_updatePath: function () {\n\t\t//6\n\t\tthis._renderer._updatecurve(this);\n\t},\n\n\t_project: function () {\n\t\t//4\n\t\tvar coord, lastCoord, curCommand, curPoint;\n\n\t\tthis._points = [];\n\n\t\tfor (var i = 0; i < this._coords.length; i++) {\n\t\t\tcoord = this._coords[i];\n\t\t\tif (typeof coord == \"string\" || coord instanceof String) {\n\t\t\t\tthis._points.push(coord);\n\t\t\t\tcurCommand = coord;\n\t\t\t} else {\n\t\t\t\tswitch (coord.length) {\n\t\t\t\t\tcase 2:\n\t\t\t\t\t\tcurPoint = this._map.latLngToLayerPoint(coord);\n\t\t\t\t\t\tlastCoord = coord;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 1:\n\t\t\t\t\t\tif (curCommand == \"H\") {\n\t\t\t\t\t\t\tcurPoint = this._map.latLngToLayerPoint([\n\t\t\t\t\t\t\t\tlastCoord[0],\n\t\t\t\t\t\t\t\tcoord[0],\n\t\t\t\t\t\t\t]);\n\t\t\t\t\t\t\tlastCoord = [lastCoord[0], coord[0]];\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tcurPoint = this._map.latLngToLayerPoint([\n\t\t\t\t\t\t\t\tcoord[0],\n\t\t\t\t\t\t\t\tlastCoord[1],\n\t\t\t\t\t\t\t]);\n\t\t\t\t\t\t\tlastCoord = [coord[0], lastCoord[1]];\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tthis._points.push(curPoint);\n\t\t\t}\n\t\t}\n\t},\n});\n\nL.curve = function (path, options) {\n\treturn new L.Curve(path, options);\n};\n\nL.SVG.include({\n\t//7\n\t_updatecurve: function (layer) {\n\t\tthis._setPath(layer, this._curvePointsToPath(layer._points));\n\t\tif (layer.options.animate) {\n\t\t\tvar path = layer._path;\n\t\t\tvar length = path.getTotalLength();\n\n\t\t\tif (!layer.options.dashArray) {\n\t\t\t\tpath.style.strokeDasharray = length + \" \" + length;\n\t\t\t}\n\n\t\t\tif (layer._initialUpdate) {\n\t\t\t\tpath.animate(\n\t\t\t\t\t[{ strokeDashoffset: length }, { strokeDashoffset: 0 }],\n\t\t\t\t\tlayer.options.animate\n\t\t\t\t);\n\t\t\t\tlayer._initialUpdate = false;\n\t\t\t}\n\t\t}\n\t},\n\n\t_curvePointsToPath: function (points) {\n\t\tvar point,\n\t\t\tcurCommand,\n\t\t\tstr = \"\";\n\t\tfor (var i = 0; i < points.length; i++) {\n\t\t\tpoint = points[i];\n\t\t\tif (typeof point == \"string\" || point instanceof String) {\n\t\t\t\tcurCommand = point;\n\t\t\t\tstr += curCommand;\n\t\t\t} else {\n\t\t\t\tswitch (curCommand) {\n\t\t\t\t\tcase \"H\":\n\t\t\t\t\t\tstr += point.x + \" \";\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"V\":\n\t\t\t\t\t\tstr += point.y + \" \";\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tstr += point.x + \",\" + point.y + \" \";\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn str || \"M0 0\";\n\t},\n});\n","// import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Path, withLeaflet } from \"react-leaflet\";\nimport { curve } from \"./leaflet.curve\";\nimport L from \"leaflet\";\n\nclass Curve extends Path {\n\tcreateLeafletElement(props) {\n\t\tconst { positions, option, ...options } = props;\n\t\treturn L.curve(positions, option, this.getOptions(options));\n\t}\n\n\tupdateLeafletElement(fromProps, toProps) {\n\t\tif (toProps.positions !== fromProps.positions) {\n\t\t\tthis.leafletElement.setPath(toProps.positions);\n\t\t}\n\t\tthis.setStyleIfChanged(fromProps, toProps);\n\t}\n}\n\nCurve.propTypes = {\n\tchildren: PropTypes.oneOfType([\n\t\tPropTypes.arrayOf(PropTypes.node),\n\t\tPropTypes.node,\n\t]),\n\toption: PropTypes.object,\n\tpositions: PropTypes.array.isRequired,\n};\n\nexport default withLeaflet(Curve);\n\n/*\n  componentWillMount() {\n    super.componentWillMount();\n    const { positions, ...options } = this.props\n    this.leafletElement = L.curve(positions, this.getOptions(options))\n  }*/\n","import \"./Traceability.css\";\n// Import Swiper styles\nimport \"swiper/swiper-bundle.css\";\n\nimport { Map, Marker, TileLayer } from \"react-leaflet\";\nimport { Swiper, SwiperSlide } from \"swiper/react\";\n\nimport { Curve } from \"./leaflet-curve\";\nimport L from \"leaflet\";\nimport React from \"react\";\n\nclass Traceability extends React.Component {\n    map = undefined;\n    state = {\n        zoom: 12,\n        swiper: undefined,\n        currentIndex: 0,\n        map: undefined,\n    };\n\n    getMaterialIcon = (mode) => {\n        switch (mode) {\n            case \"Charette\":\n                return \"directions_bike\";\n            case \"Plane\":\n                return \"flight_takeoff\";\n            case \"Train\":\n                return \"train\";\n            case \"Boat\":\n                return \"directions_boat_filled\";\n            case \"Truck\":\n                return \"local_shipping\";\n            default:\n                return \"nature_people\";\n        }\n    };\n\n    getTransportMode = (mode) => {\n        switch (mode) {\n            case \"Charette\":\n                return \"vélo\";\n            case \"Plane\":\n                return \"avion\";\n            case \"Train\":\n                return \"train\";\n            case \"Boat\":\n                return \"bateau\";\n            case \"Truck\":\n                return \"camion\";\n            default:\n                return mode;\n        }\n    };\n    getTranslation = (mode) => {\n        switch (mode) {\n            case \"maker\":\n                return \"Fabricant\";\n            case \"productor\":\n                return \"Producteur\";\n            case \"shop\":\n                return \"Revendeur\";\n            default:\n                return mode;\n        }\n    };\n\n    displaySlides = () => {\n        let slides = <React.Fragment />;\n        if (this.props.products) {\n            slides = this.props.products.map((product) => {\n                let pastille = \"product-slide-pastille past-green\";\n                if (product.TransportCO2Impact?.value > 10) {\n                    pastille = \"product-slide-pastille past-orange\";\n                }\n                if (product.TransportCO2Impact?.value > 100) {\n                    pastille = \"product-slide-pastille past-red\";\n                }\n\n                return (\n                    <SwiperSlide>\n                        <div className=\"product-slide-container\">\n                            <div className=\"product-slide-icon\">\n                                <span className=\"material-icons\">\n                                    {this.getMaterialIcon(product.transport)}\n                                </span>\n\n                                <div className=\"product-slide-name\">\n                                    <span className=\"product-slide-name-product\">\n                                        {product.productsOutput[0].productName}\n                                    </span>\n                                    <span className=\"product-slide-name-transport\">\n                                        Transport en {this.getTransportMode(product.transport)}\n                                    </span>\n                                </div>\n                            </div>\n                            <div className=\"product-slide-origin-wrapper\">\n                                <div className=\"product-transport-ui\">\n                                    <div className=\"transport-ui-circle\"></div>\n                                    <div className=\"transport-ui-tiret\"></div>\n                                    <div className=\"transport-ui-circle circle-bis\"></div>\n                                </div>\n                                <div className=\"product-slide-transport-container\">\n                                    <div className=\"product-slide-bigname\">\n                                        <span>\n                                            {product.seller.localisation.city},{\" \"}\n                                            {product.seller.localisation.country}\n                                        </span>\n                                    </div>\n                                    <div className=\"product-slide-lowername2\">\n                                        {this.getTranslation(product.seller?.type)}\n                                        {product.seller?.name ? \": \" : null}\n                                        {product.seller?.name}\n                                    </div>\n\n                                    <div className=\"product-slide-bigname bigname-lower\">\n                                        <span>\n                                            {product.buyer.localisation.city},{\" \"}\n                                            {product.buyer.localisation.country}\n                                        </span>\n                                    </div>\n                                    <div className=\"product-slide-lowername2\">\n                                        {this.getTranslation(product.buyer?.type)}\n                                        {\": \"}\n                                        {product.buyer?.name}\n                                    </div>\n                                </div>\n                            </div>\n                            <div\n                                className=\"product-slide-arrow\"\n                                onClick={() => this.handleSwipeClick()}\n                            >\n                                {\">\"}\n                            </div>\n                            <div className=\"product-slide-consumption\">\n                                <div className={pastille}></div>\n                                <div>{Math.round(product.dist.value)} km </div>\n                                <div>\n                                    {product.TransportCO2Impact?.value > 0.009\n                                        ? parseFloat(product.TransportCO2Impact?.value).toFixed(2)\n                                        : \"< 0.01\"}{\" \"}\n                                    kg CO2{\" \"}\n                                </div>\n                            </div>\n                        </div>\n                    </SwiperSlide>\n                );\n            });\n        }\n        return slides;\n    };\n\n    handleSwipeClick = () => {\n        console.log(this.state.currentIndex);\n        let nextIndex = this.state.currentIndex + 1;\n        if (nextIndex >= this.props.products?.length) {\n            this.state.swiper.slideTo(nextIndex - 1, 500);\n        } else {\n            this.state.swiper.slideTo(nextIndex, 500);\n        }\n    };\n\n    handleMarkerClick = (latlng, index) => {\n        // window.scrollTo({ top: \"8000px\", behavior: \"smooth\" });\n        let elem = document.getElementsByClassName(\"swiper-container\");\n        if (elem[0]) {\n            elem[0].scrollIntoView({ behavior: \"smooth\" });\n        }\n\n        if (index >= this.props.products?.length) {\n            this.state.swiper.slideTo(index - 1, 500);\n        } else {\n            this.state.swiper.slideTo(index, 500);\n        }\n        let zoom = 5;\n        if (this.props.products && this.props.products[index]) {\n            let p = this.props.products[index];\n\n            zoom = getZoomRatio(\n                [p.buyer.localisation.latitude, p.buyer.localisation.longitude],\n                [p.seller.localisation.latitude, p.seller.localisation.longitude]\n            );\n        }\n\n        this.map.leafletElement.flyTo(latlng, zoom, { duration: 0.5 });\n    };\n\n    onSlideChange = (index) => {\n        this.setState({ currentIndex: index });\n        let zoom = 5;\n        if (this.props.products && this.props.products[index]) {\n            let p = this.props.products[index];\n\n            zoom = getZoomRatio(\n                [p.buyer.localisation.latitude, p.buyer.localisation.longitude],\n                [p.seller.localisation.latitude, p.seller.localisation.longitude]\n            );\n\n            let lat =\n                (parseFloat(p.seller.localisation.latitude) +\n                    parseFloat(p.buyer.localisation.latitude)) /\n                2;\n            let long =\n                (parseFloat(p.seller.localisation.longitude) +\n                    parseFloat(p.buyer.localisation.longitude)) /\n                2;\n\n            this.map.leafletElement.flyTo([lat, long], zoom, { duration: 0.5 });\n        }\n    };\n\n    displayMarker = () => {\n        let markers = <React.Fragment />;\n        if (this.props.products) {\n            markers = this.props.products.map((product, i) => {\n                let marker1 = <React.Fragment />;\n                let lat1 = parseFloat(product?.buyer?.localisation?.latitude);\n                let long1 = parseFloat(product?.buyer?.localisation?.longitude);\n                let marker2 = <React.Fragment />;\n                let lat2 = parseFloat(product?.seller?.localisation?.latitude);\n                let long2 = parseFloat(product?.seller?.localisation?.longitude);\n                let icon;\n                let icon2;\n                let zIndex = 0;\n                if (i === this.state.currentIndex) {\n                    icon = new L.Icon({\n                        iconUrl: \"/images/utils/map.png\", //require('../../images/logo/logo.svg'),\n                        iconRetinaUrl: \"/images/utils/map.png\", //\"/images/images_volume/1-l.png\", //require('../../images/logo/logo.svg'),\n                        iconSize: new L.Point(32, 32),\n                        className: \"leaflet-mark-icon\",\n                    });\n                    icon2 = new L.Icon({\n                        iconUrl: \"/images/utils/map.png\", //require('../../images/logo/logo.svg'),\n                        iconRetinaUrl: \"/images/utils/map3.png\", //\"/images/images_volume/1-l.png\", //require('../../images/logo/logo.svg'),\n                        iconSize: new L.Point(32, 32),\n                        className: \"leaflet-mark-icon\",\n                    });\n                    zIndex = 5;\n                } else {\n                    icon = new L.Icon({\n                        iconUrl: \"/images/utils/map2.png\", //require('../../images/logo/logo.svg'),\n                        iconRetinaUrl: \"/images/utils/map2.png\", //\"/images/images_volume/1-l.png\", //require('../../images/logo/logo.svg'),\n                        iconSize: new L.Point(25, 25),\n                        className: \"leaflet-mark-icon\",\n                    });\n                    icon2 = new L.Icon({\n                        iconUrl: \"/images/utils/map2.png\", //require('../../images/logo/logo.svg'),\n                        iconRetinaUrl: \"/images/utils/map2.png\", //\"/images/images_volume/1-l.png\", //require('../../images/logo/logo.svg'),\n                        iconSize: new L.Point(25, 25),\n                        className: \"leaflet-mark-icon\",\n                    });\n                }\n\n                if (lat1 && long1) {\n                    marker1 = (\n                        <Marker\n                            zIndexOffset={zIndex}\n                            icon={icon}\n                            position={[lat1, long1]}\n                            onClick={() =>\n                                this.handleMarkerClick(\n                                    [\n                                        parseFloat(product.buyer.localisation.latitude),\n                                        parseFloat(product.buyer.localisation.longitude),\n                                    ],\n                                    i + 1\n                                )\n                            }\n                        >\n                            {/* <Popup>{product.buyer.name}</Popup> */}\n                        </Marker>\n                    );\n                }\n                if (lat2 && long2) {\n                    marker2 = (\n                        <Marker\n                            zIndexOffset={zIndex}\n                            icon={icon2}\n                            position={[lat2, long2]}\n                            onClick={() =>\n                                this.handleMarkerClick(\n                                    [\n                                        parseFloat(product.seller.localisation.latitude),\n                                        parseFloat(product.seller.localisation.longitude),\n                                    ],\n                                    i\n                                )\n                            }\n                        >\n                            {/* <Popup>{product.seller.name}</Popup> */}\n                        </Marker>\n                    );\n                }\n\n                let color = \"#1b3044\";\n                let curves = document.getElementsByClassName(\"leaflet-interactive\");\n\n                if (curves && curves[i] && i === this.state.currentIndex) {\n                    curves[i].setAttribute(\"stroke\", \"#78be95\");\n                } else if (curves && curves[i]) {\n                    curves[i].setAttribute(\"stroke\", \"#1b3044\");\n                }\n\n                return (\n                    <React.Fragment>\n                        <div className=\"test\">\n                            <Curve\n                                positions={getCurveOptions(lat2, long2, lat1, long1)}\n                                option={{\n                                    color: color,\n                                    fill: false,\n                                    // animate: animate,\n                                    delay: 5000,\n                                }}\n                            />\n                        </div>\n                        {marker1}\n                        {marker2}\n                    </React.Fragment>\n                );\n            });\n        }\n        return markers;\n    };\n\n    render = () => {\n        return (\n            <div className=\"tracability-container\">\n                <div className=\"product-CO2-total-tracability-container\">\n                    <span className=\"product-CO2-total-tracability\">\n                        Impact carbone du transport :&nbsp;\n                        <span className=\"carbon-total-number\">\n                            {parseFloat(this.props.totalCO2Traceability).toFixed(2)}\n                        </span>{\" \"}\n                        kg CO2\n                        {/* kg CO2 soit &nbsp;\n                        <span className=\"carbon-total-number\">\n                            {parseFloat(\n                                ((this.props.totalCO2Traceability * 0.05) / 11.0) * 1000.0\n                            ).toFixed(1)}\n                        </span>\n                        kms parcourus en voiture */}\n                    </span>\n                </div>\n                <Swiper\n                    spaceBetween={10}\n                    slidesPerView={1.2}\n                    centeredSlides={true}\n                    onSlideChange={(i) => this.onSlideChange(i.activeIndex)}\n                    onSwiper={(swiper) => this.setState({ swiper: swiper })}\n                >\n                    {this.displaySlides()}\n                </Swiper>\n                <Map\n                    center={[51.505, -0.09]}\n                    zoom={1}\n                    minZoom={1}\n                    scrollWheelZoom={true}\n                    dragging={false}\n                    maxBounds={[\n                        [-90, -180],\n                        [90, 180],\n                    ]}\n                    maxBoundsViscosity={1}\n                    ref={(ref) => {\n                        this.map = ref;\n                        this.props.getBottomRef(ref);\n                    }}\n                    whenCreated={(map) => this.setState({ map })}\n                >\n                    <TileLayer\n                        attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a>'\n                        url=\"https://stamen-tiles-{s}.a.ssl.fastly.net/toner-background/{z}/{x}/{y}{r}.png\" //'https://maps.wikimedia.org/osm-intl/{z}/{x}/{y}{r}.png' //'https://{s}.tile.osm.org/{z}/{x}/{y}.png'\n                    />\n\n                    {this.displayMarker()}\n                </Map>\n            </div>\n        );\n    };\n}\n\nexport default Traceability;\n\nfunction getDistance(origin, destination) {\n    // return distance in meters\n    var lon1 = toRadian(origin[1]),\n        lat1 = toRadian(origin[0]),\n        lon2 = toRadian(destination[1]),\n        lat2 = toRadian(destination[0]);\n\n    var deltaLat = lat2 - lat1;\n    var deltaLon = lon2 - lon1;\n\n    var a =\n        Math.pow(Math.sin(deltaLat / 2), 2) +\n        Math.cos(lat1) * Math.cos(lat2) * Math.pow(Math.sin(deltaLon / 2), 2);\n    var c = 2 * Math.asin(Math.sqrt(a));\n    // var EARTH_RADIUS = 6371;\n    return c; //* EARTH_RADIUS * 1000;\n}\n\nfunction toRadian(degree) {\n    return (degree * Math.PI) / 180;\n}\n\nfunction getZoomRatio(origin, destination) {\n    var distance = getDistance(origin, destination);\n    let a = 9 - Math.sqrt(distance * 150);\n    return a < 1 ? 1 : a;\n}\n\nfunction getCurveOptions(lat1, long1, lat2, long2) {\n    var latlng1 = [lat1, long1],\n        latlng2 = [lat2, long2];\n\n    var offsetX = latlng2[1] - latlng1[1],\n        offsetY = latlng2[0] - latlng1[0];\n\n    var r = Math.sqrt(Math.pow(offsetX, 2) + Math.pow(offsetY, 2)),\n        theta = Math.atan2(offsetY, offsetX);\n\n    var thetaOffset = 3.14 / 10;\n\n    var r2 = r / 2 / Math.cos(thetaOffset),\n        theta2 = theta + thetaOffset;\n\n    var midpointX = r2 * Math.cos(theta2) + latlng1[1],\n        midpointY = r2 * Math.sin(theta2) + latlng1[0];\n\n    var midpointLatLng = [midpointY, midpointX];\n\n    return [\"M\", latlng1, \"Q\", midpointLatLng, latlng2];\n}\n\n// function getChildElementIndex(node) {\n//     return Array.prototype.indexOf.call(node.parentNode.children, node);\n// }\n","import React from \"react\";\n// import { Swiper, SwiperSlide } from \"swiper/react\";\n// import \"swiper/swiper-bundle.css\";\nimport \"react-responsive-carousel/lib/styles/carousel.min.css\";\nimport { Carousel } from \"react-responsive-carousel\";\nimport amplitude from \"amplitude-js\";\n\nclass Alternatives extends React.Component {\n    state = {\n        swiper: undefined,\n    };\n\n    componentDidMount = () => {\n        this.loadAlternatives();\n    };\n\n    loadAlternatives = () => {\n        let alternatives = [\n            {\n                id: 1,\n                img_url: \"/images/products/wh_cricket_soft_ST_2018_220x.png\",\n                name: \"Gâteries d'entrainement aux grillons et shiitake\",\n                redirect: \"https://fr.wilderharrier.com/collections/dog-treats#main\",\n            },\n        ];\n        this.setState({ alternatives: alternatives });\n    };\n    fireAmplitudeEvent = (event, product) => {\n        try {\n            amplitude.getInstance().logEvent(event, { product: product });\n        } catch (e) {\n            console.error(e);\n        }\n    };\n\n    renderListAlternatives = (listItems) => {\n        let res = <React.Fragment></React.Fragment>;\n        res = listItems.map((item) => {\n            let pathProduct = \"/products/\" + item.id;\n\n            if (item.id !== this.props.barcode) {\n                return (\n                    <div\n                        className=\"carousel\"\n                        key={item.id}\n                        onClick={() => this.fireAmplitudeEvent(\"suggestion_redirected\", item.name)}\n                    >\n                        <a\n                            href={item.redirect}\n                            className=\"product-alternative\"\n                            target=\"_blank\"\n                            rel=\"noreferrer\"\n                        >\n                            <div>\n                                <img\n                                    src={item.img_url}\n                                    className=\"product-alternative-image\"\n                                    alt=\"\"\n                                />\n                            </div>\n                            <div className=\"product-alternative-text\">\n                                <label className=\"product-alternative-title\">{item.name}</label>\n                                <label className=\"product-alternative-brand\">{}</label>\n                                {/* <RenderColor item={item} /> */}\n                            </div>\n                            <div className=\"product-alternative-fleche\">{\">\"}</div>\n                        </a>\n                    </div>\n                );\n            } else {\n                return <React.Fragment></React.Fragment>;\n            }\n        });\n\n        return res;\n    };\n\n    render = () => {\n        let alternatives_title = \"\";\n        if (!this.state.alternatives) {\n            alternatives_title = \"Pas d'alternatives disponible\";\n        } else {\n            if (this.state.alternatives === \"loading\") {\n                alternatives_title = \"Chargement des alternatives ...\";\n            } else {\n                alternatives_title = \"Découvrez aussi...\";\n            }\n        }\n        let alternatives;\n        if (this.state.alternatives)\n            alternatives = this.renderListAlternatives(this.state.alternatives);\n\n        if (\n            this.state.alternatives &&\n            this.state.alternatives !== \"loading\" &&\n            this.state.alternatives !== \"\" &&\n            alternatives\n        ) {\n            return (\n                <React.Fragment>\n                    <span className=\"title-part-environnement\">{alternatives_title}</span>\n                    <Carousel\n                        autoPlay={false}\n                        interval={100000}\n                        centerMode={true}\n                        centerSlidePercentage={90}\n                        showThumbs={false}\n                        showIndicators={false}\n                        showStatus={false}\n                    >\n                        {alternatives}\n                    </Carousel>\n                </React.Fragment>\n            );\n        } else {\n            return <React.Fragment />;\n        }\n    };\n}\n\nexport default Alternatives;\n\nfunction RenderColor({ item }) {\n    let labelColor;\n    let labelLevel;\n    if (item.eco_score <= 33) {\n        labelColor = \"red\";\n        labelLevel = \"Mauvais\";\n    } else if (item.eco_score > 33 && item.eco_score < 67) {\n        labelColor = \"yellow\";\n        labelLevel = \"Moyen\";\n    } else {\n        labelColor = \"green\";\n        labelLevel = \"Bonne\";\n    }\n    return (\n        <div className=\"product-alternative-label-position\">\n            <div className=\"product-alternative-label\">\n                <div style={{ color: labelColor }}>●</div>\n                <div className=\"product-alternative-label-text\">{item.eco_score}/100</div>\n            </div>\n            <div className=\"product-alternative-label-level \">{labelLevel}</div>\n        </div>\n    );\n}\n","import React from \"react\";\nimport { Map, TileLayer, Polygon } from \"react-leaflet\";\n\nclass Origins extends React.Component {\n    state = {\n        polygon: [],\n        activeCountry: \"\",\n    };\n\n    componentDidMount = () => {\n        this.getCountries();\n    };\n\n    setActiveCountry = (country) => {\n        this.setState({ activeCountry: country });\n    };\n\n    getCountries = () => {\n        this.props.origins?.map((origin) => {\n            if (origin !== \"en:ghana\") {\n                fetch(`https://api.lowympact.fr/api/v1/countries/${origin}`)\n                    .then((res) => res.json())\n                    .then((res) => {\n                        let polygon = this.state.polygon;\n                        if (res.success && res.data?.country) {\n                            polygon.push({\n                                geo: res.data.country.coordinates,\n                                name: res.data.country.name,\n                            });\n                            this.setState({\n                                polygon: polygon,\n                                activeCountry:\n                                    this.state.activeCountry + res.data.country.name + \", \",\n                            });\n                        }\n                    });\n            }\n            return true;\n        });\n    };\n\n    render = () => {\n        if (this.state.polygon.length === 0) return <React.Fragment />;\n        else {\n            return (\n                <div className=\"environnement-map-container\">\n                    <div className=\"product-co2-impact-header\">\n                        <div className=\"product-co2-impact-logo\">\n                            <div className=\"material-icons icon-label-co2-impact\">place</div>\n                        </div>\n                        <div className=\"product-co2-impact-title\">\n                            <div className=\"product-co2-impact-title-text\">\n                                Provenance des ingrédients\n                            </div>\n                            <div className=\"product-co2-impact-title-label\">\n                                Pays d'origine : {this.state.activeCountry}\n                            </div>\n                        </div>\n                    </div>\n\n                    <Map\n                        center={[51.505, -0.09]}\n                        zoom={-1}\n                        minZoom={0}\n                        className=\"environnement-map\"\n                        scrollWheelZoom={true}\n                        dragging={false}\n                        maxBounds={[\n                            [-90, -180],\n                            [90, 180],\n                        ]}\n                        maxBoundsViscosity={1}\n                        whenCreated={(map) => this.setState({ map })}\n                    >\n                        <TileLayer\n                            attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a>'\n                            url=\"https://stamen-tiles-{s}.a.ssl.fastly.net/toner-background/{z}/{x}/{y}{r}.png\" //'https://maps.wikimedia.org/osm-intl/{z}/{x}/{y}{r}.png' //'https://{s}.tile.osm.org/{z}/{x}/{y}.png'\n                        />\n                        {this.state.polygon.map((poly, i) => {\n                            if (poly)\n                                return (\n                                    <Polygon\n                                        onClick={() => this.setActiveCountry(poly.name)}\n                                        color={\"color:white\"}\n                                        fillColor={\n                                            this.activeCountry === poly.name ? \"blue\" : \"green\"\n                                        }\n                                        opacity={\"1\"}\n                                        positions={poly.geo}\n                                        key={i}\n                                    />\n                                );\n                            else return <React.Fragment />;\n                        })}\n                    </Map>\n                </div>\n            );\n        }\n    };\n}\n\nexport default Origins;\n","import React from \"react\";\n\nclass EmpreinteCarbone extends React.Component {\n    state = {\n        alea: 3,\n    };\n\n    setAlea = (nb) => {\n        // this.setState({ alea: Math.floor(Math.random() * 11) });\n        let alea = this.state.alea + nb;\n        if (alea > 11) alea = 0;\n        if (alea < 0) alea = 11;\n        this.setState({ alea: alea });\n    };\n\n    render = () => {\n        let repartition = [\n            {\n                image: \"agriculture\",\n                name: \"Agriculture\",\n                percent: (\n                    (parseFloat(this.props.dataEcoScore?.agribalyse?.co2_agriculture) * 100) /\n                    parseFloat(this.props.dataEcoScore?.agribalyse?.co2_total)\n                ).toFixed(0),\n            },\n            {\n                image: \"local_shipping\",\n                name: \"Transport\",\n                percent: (\n                    (parseFloat(this.props.dataEcoScore?.agribalyse?.co2_transportation) * 100) /\n                    parseFloat(this.props.dataEcoScore?.agribalyse?.co2_total)\n                ).toFixed(0),\n            },\n            {\n                image: \"view_in_ar\",\n                name: \"Emballage\",\n                percent: (\n                    (parseFloat(this.props.dataEcoScore?.agribalyse?.co2_packaging) * 100) /\n                    parseFloat(this.props.dataEcoScore?.agribalyse?.co2_total)\n                ).toFixed(0),\n            },\n            {\n                image: \"transform\",\n                name: \"Transformation\",\n                percent: (\n                    (parseFloat(this.props.dataEcoScore?.agribalyse?.co2_processing) * 100) /\n                    parseFloat(this.props.dataEcoScore?.agribalyse?.co2_total)\n                ).toFixed(0),\n            },\n            {\n                image: \"store\",\n                name: \"Distribution\",\n                percent: (\n                    (parseFloat(this.props.dataEcoScore?.agribalyse?.co2_distribution) * 100) /\n                    parseFloat(this.props.dataEcoScore?.agribalyse?.co2_total)\n                ).toFixed(0),\n            },\n            {\n                image: \"microwave\",\n                name: \"Consommation\",\n                percent: (\n                    (parseFloat(this.props.dataEcoScore?.agribalyse?.co2_consumption) * 100) /\n                    parseFloat(this.props.dataEcoScore?.agribalyse?.co2_total)\n                ).toFixed(0),\n            },\n        ];\n        repartition = repartition.map((i) => {\n            return (\n                <div className=\"empreinte-single\" key={i.name}>\n                    <div className=\"material-icons\">{i.image}</div>\n                    <div className=\"name\">{i.name} : </div>\n                    <div className=\"pourcent\">{i.percent} %</div>\n                </div>\n            );\n        });\n\n        let equivalent = getEquivalent(\n            parseFloat(\n                this.props.dataEcoScore?.agribalyse?.co2_total\n                    ? this.props.dataEcoScore?.agribalyse?.co2_total\n                    : 0.4\n            ),\n            this.state.alea\n        );\n\n        let circle = \"cgreen\"; //\"cmauve\";\n        if (this.props.dataEcoScore?.agribalyse?.co2_total < 15) circle = \"cred\";\n        if (this.props.dataEcoScore?.agribalyse?.co2_total < 7) circle = \"corange\";\n        if (this.props.dataEcoScore?.agribalyse?.co2_total < 3) circle = \"cgreen\";\n        if (this.props.dataEcoScore?.agribalyse?.co2_total < 1) circle = \"cdarkgreen\";\n        return (\n            <React.Fragment>\n                <div className=\"empreinte-carbone-container\">\n                    <div className=\"empreinte-carbone-header\">\n                        <div className=\"header-text\">\n                            <div className=\"header-main\">Empreinte Carbone Totale</div>\n                        </div>\n                        <div className=\"empreinte-carbone-number\">\n                            <span>\n                                {parseFloat(\n                                    this.props.dataEcoScore?.agribalyse?.co2_total\n                                        ? this.props.dataEcoScore?.agribalyse?.co2_total\n                                        : 1.44\n                                ).toFixed(2)}\n                                kg CO2e\n                            </span>\n                            <div className={\"circle \" + circle}></div>\n                        </div>\n                    </div>\n                    <div className=\"empreinte-carbone-equivalent\">\n                        <div className=\"icon-container\">\n                            <div className=\"material-icons\">\n                                <img\n                                    src={`/images/alternatives/${equivalent[1]}`}\n                                    alt=\"alternative\"\n                                />\n                            </div>\n                        </div>\n                        <div className=\"equivalent-container\">\n                            <div className=\"text-small\">Soit l'équivalent...</div>\n                            <div className=\"text-big\">{equivalent[0]}</div>\n                        </div>\n                    </div>\n                    <div className=\"arrow\">\n                        <div className=\"material-icons\" onClick={() => this.setAlea(1)}>\n                            arrow_back_ios\n                        </div>\n                        <div className=\"material-icons\" onClick={() => this.setAlea(-1)}>\n                            arrow_forward_ios\n                        </div>\n                    </div>\n                </div>\n                {this.props.dataEcoScore ? (\n                    <div className=\"empreinte-carbone-container no-margin-container\">\n                        <div className=\"empreinte-carbone-header\">\n                            <div className=\"header-text\">\n                                <div className=\"header-main\">\n                                    Répartition de l'empreinte Carbone\n                                </div>\n                                <div className=\"header-small\">\n                                    selon les différentes étapes du cycle de vie\n                                </div>\n                            </div>\n                            {/* <div className=\"empreinte-carbone-number\">\n                                <span>\n                                    {parseFloat(\n                                        this.props.dataEcoScore?.agribalyse?.co2_total\n                                    ).toFixed(2)}\n                                    kg CO2e\n                                </span>\n                                <div className=\"circle\"></div>\n                            </div> */}\n                        </div>\n                        <div className=\"empreinte-carbone-repartition\">{repartition}</div>\n                    </div>\n                ) : null}\n            </React.Fragment>\n        );\n    };\n}\n\nexport default EmpreinteCarbone;\n\nfunction getEquivalent(co2, alea) {\n    switch (alea) {\n        case 0:\n            return [\n                \"De la production de \" +\n                    (co2 / 0.0046).toFixed(0) +\n                    \" feuilles de papier blanc 80g\",\n                \"paper.png\",\n            ];\n        case 1:\n            return [\n                \"De la production de \" + (co2 / 0.6).toFixed(1) + \" kg de pommes de terre\",\n                \"potatoe.png\",\n            ];\n        case 2:\n            return [\n                \"De la production de \" + (co2 / 0.53).toFixed(1) + \" kg de fraises\",\n                \"strawberry.png\",\n            ];\n        case 3:\n            return [\n                \"De \" + (co2 / 0.193).toFixed(1) + \" km parcourus par une personne en voiture\",\n                \"car.svg\",\n            ];\n        case 4:\n            return [\n                \"De \" + (co2 / 0.137).toFixed(1) + \" km parcourus par une personne en Bus de ville\",\n                \"bus.svg\",\n            ];\n        case 5:\n            return [\n                \"De \" +\n                    (co2 / 0.019).toFixed(0) +\n                    \" e-mails envoyés contenant une pièce jointe d'1mo\",\n                \"mail.svg\",\n            ];\n        case 6:\n            return [\n                \"De \" +\n                    (co2 / 0.5).toFixed(1) +\n                    \" jour(s) d'éclairage d'une ampoule à incandescence\",\n                \"light.svg\",\n            ];\n        case 7:\n            return [\n                \"De \" +\n                    (co2 / 0.24).toFixed(1) +\n                    \" heures de chauffage au gaz d'un appartement moyen de 70m²\",\n                \"appartment.svg\",\n            ];\n        case 8:\n            return [\n                \"De la production de \" +\n                    ((co2 * 1000) / 33.8).toFixed(0) +\n                    \" grammes de steak haché de boeuf cru\",\n                \"steak.png\",\n            ];\n        case 9:\n            return [\n                \"De \" +\n                    (co2 / 0.083).toFixed(1) +\n                    \" jours d'éclairage d'une ampoule basse consommation\",\n                \"light.svg\",\n            ];\n        case 10:\n            return [\n                \"De \" +\n                    (co2 / 0.105).toFixed(1) +\n                    \" kilomètres parcourus en Trotinette électrique (en France)\",\n                \"trotinette.png\",\n            ];\n        case 11:\n            return [\n                \"D'une personne parcourant \" +\n                    (co2 / 0.3).toFixed(0) * 100 +\n                    \" kilomètres en TGV (en France)\",\n                \"train.png\",\n            ];\n        default:\n            return [\n                \"De \" +\n                    (co2 / 0.105).toFixed(1) +\n                    \" kilomètres parcourus en Trotinette électrique (en France)\",\n                \"trotinette.png\",\n            ];\n    }\n}\n","import React from \"react\";\nimport Alternatives from \"./Alternatives\";\nimport Origins from \"./Origins\";\nimport \"./Environnement.css\";\nimport EmpreinteCarbone from \"./EmpreinteCarbone\";\n\nclass Environnement extends React.Component {\n    state = {\n        width: undefined,\n        materials: [],\n    };\n\n    getColor = (note) => {\n        if (note > 67) {\n            return \"green\";\n        }\n        if (note <= 33) {\n            return \"red\";\n        }\n        return \"yellow\";\n    };\n\n    getColorImpact = (note) => {\n        if (note > 70) {\n            return \"green\";\n        }\n        if (note <= 40) {\n            return \"red\";\n        }\n        return \"yellow\";\n    };\n\n    getLabel = (note) => {\n        if (note > 67) {\n            return \"Bon\";\n        }\n        if (note <= 33) {\n            return \"Mauvais\";\n        }\n        return \"Moyen\";\n    };\n\n    getLabelImpact = (note) => {\n        if (note > 60) {\n            return \"Impact fort\";\n        }\n        if (note <= 30) {\n            return \"Impact faible\";\n        }\n        return \"Impact moyen\";\n    };\n\n    getLabelImpactPackaging = (note) => {\n        if (note > 2) {\n            return \"Impact faible\";\n        }\n        if (note < -2) {\n            return \"Impact fort\";\n        }\n        return \"Impact moyen\";\n    };\n\n    getColorImpactPackaging = (note) => {\n        if (note > 2) {\n            return \"green\";\n        }\n        if (note < -2) {\n            return \"red\";\n        }\n        return \"yellow\";\n    };\n\n    componentDidMount() {\n        this.updateWindowDimensions();\n        window.addEventListener(\"resize\", this.updateWindowDimensions);\n    }\n\n    componentWillUnmount() {\n        window.removeEventListener(\"resize\", this.updateWindowDimensions);\n    }\n\n    updateWindowDimensions = () => {\n        this.setState({ width: window.innerWidth });\n    };\n\n    displayPackagingDetailImpact = () => {\n        let res = <React.Fragment></React.Fragment>;\n\n        if (this.props.dataEcoScore?.adjustments?.packaging?.packagings) {\n            var materials = [];\n            let slides = <React.Fragment></React.Fragment>;\n\n            this.props.dataEcoScore?.adjustments?.packaging?.packagings.map((data) => {\n                if (data?.material.split(\":\")[1] !== \"unknown\") {\n                    materials.push(data?.material.split(\":\")[1]);\n                }\n                return true;\n            });\n\n            slides = materials\n                .filter(function (item, pos) {\n                    return materials.indexOf(item) === pos;\n                })\n                .map((data) => {\n                    var separator = \"\";\n                    if (materials.indexOf(data) < materials.length - 1) {\n                        separator = \" ; \";\n                    }\n                    return (\n                        <React.Fragment key={data}>\n                            <span>\n                                {data} {separator}\n                            </span>\n                        </React.Fragment>\n                    );\n                });\n\n            if (materials.length > 0) {\n                res = (\n                    <React.Fragment>\n                        <div className=\"product-co2-impact-content\">\n                            <div className=\"product-packaging-impact-content-details-text\">\n                                Matériaux utilisés : &nbsp;{slides}\n                            </div>\n                        </div>\n                    </React.Fragment>\n                );\n            } else {\n                res = (\n                    <React.Fragment>\n                        <div className=\"product-co2-impact-content\">\n                            <div className=\"product-packaging-impact-content-details-text\">\n                                Matériaux utilisés : &nbsp; Inconnu\n                            </div>\n                        </div>\n                    </React.Fragment>\n                );\n            }\n        }\n\n        return res;\n    };\n\n    displayPackagingImpact = () => {\n        let res = <React.Fragment></React.Fragment>;\n\n        if (this.props.dataEcoScore?.adjustments?.packaging?.value) {\n            return (\n                <div className=\"product-co2-impact-container\">\n                    <div className=\"product-co2-impact-header\">\n                        <div className=\"product-co2-impact-logo\">\n                            <div className=\"material-icons icon-label-co2-impact\">view_in_ar</div>\n                        </div>\n                        <div className=\"product-co2-impact-title\">\n                            <div className=\"product-co2-impact-title-text\">\n                                Impact de l'emballage\n                            </div>\n                            <div className=\"product-co2-impact-title-label\">\n                                {this.getLabelImpactPackaging(\n                                    this.props.dataEcoScore?.adjustments?.packaging?.value\n                                )}\n                            </div>\n                        </div>\n                        <div\n                            className=\"product-transport-impact-color-label\"\n                            style={{\n                                color: this.getColorImpactPackaging(\n                                    this.props.dataEcoScore?.adjustments?.packaging?.value\n                                ),\n                            }}\n                        >\n                            ●\n                        </div>\n                    </div>\n                    {this.displayPackagingDetailImpact()}\n                </div>\n            );\n        } else {\n            return res;\n        }\n    };\n\n    render = () => {\n        return (\n            <React.Fragment>\n                <EmpreinteCarbone dataEcoScore={this.props.dataEcoScore} />\n\n                {this.props.origins ? (\n                    <Origins origins={this.props.origins} />\n                ) : (\n                    <React.Fragment />\n                )}\n                {/* {this.displayPackagingImpact()} */}\n\n                <Alternatives\n                    barcode={this.props.barcode}\n                    ecoScore={this.props.ecoScore}\n                    ciqual_code={this.props.dataEcoScore?.agribalyse?.code}\n                />\n            </React.Fragment>\n        );\n    };\n}\n\nexport default Environnement;\n","import \"./Product.css\";\n\nimport Environnement from \"../components/Environnement/Environnement\";\nimport Navbar from \"../components/Navbar/Navbar\";\nimport React from \"react\";\nimport Traceability from \"../components/Traceability/Traceability\";\nimport amplitude from \"amplitude-js\";\n\nlet productsTemp = {\n    data: {\n        traceability: [\n            {\n                depth: 1,\n                productsOutput: [{ productName: \"Pois chiches\" }],\n                TransportCO2Impact: {\n                    value: 0.000571428571428571,\n                },\n                dist: {\n                    value: 198,\n                },\n                transport: \"Truck\",\n\n                seller: {\n                    //name: \"The Palm Oil Company\",\n                    //type: \"productor\",\n                    localisation: {\n                        city: \"Ottawa\",\n                        country: \"Canada\",\n                        latitude: 45.4215,\n                        longitude: -75.6972,\n                    },\n                },\n                buyer: {\n                    name: \"Wilder Harrier\",\n                    type: \"maker\",\n                    localisation: {\n                        city: \"Montréal\",\n                        country: \"Canada\",\n                        latitude: 45.5017,\n                        longitude: -73.5673,\n                    },\n                },\n            },\n            {\n                depth: 1,\n                productsOutput: [{ productName: \"Graines de lin\" }],\n                TransportCO2Impact: {\n                    value: 0.005448,\n                },\n                dist: {\n                    value: 2274,\n                },\n                transport: \"Truck\",\n\n                seller: {\n                    //name: \"Noisetti\",\n                    //type: \"productor\",\n                    localisation: {\n                        city: \"Winkler\",\n                        country: \"Canada\",\n                        latitude: 49.1801,\n                        longitude: -97.9389,\n                    },\n                },\n                buyer: {\n                    name: \"Wilder Harrier\",\n                    type: \"maker\",\n                    localisation: {\n                        city: \"Montréal\",\n                        country: \"Canada\",\n                        latitude: 45.5017,\n                        longitude: -73.5673,\n                    },\n                },\n            },\n            {\n                depth: 1,\n                productsOutput: [{ productName: \"Dattes\" }],\n                TransportCO2Impact: {\n                    value: 0.01067,\n                },\n                dist: {\n                    value: 6917,\n                },\n                transport: \"Boat\",\n\n                seller: {\n                    //name: \"Ferrero\",\n                    //type: \"maker\",\n                    localisation: {\n                        city: \"Tunis\",\n                        country: \"Tunisie\",\n                        latitude: 36.8065,\n                        longitude: 10.1815,\n                    },\n                },\n                buyer: {\n                    name: \"Wilder Harrier\",\n                    type: \"maker\",\n                    localisation: {\n                        city: \"Montréal\",\n                        country: \"Canada\",\n                        latitude: 45.5017,\n                        longitude: -73.5673,\n                    },\n                },\n            },\n            {\n                depth: 1,\n                productsOutput: [{ productName: \"Grillons\" }],\n                TransportCO2Impact: {\n                    value: 0.00276,\n                },\n                dist: {\n                    value: 460,\n                },\n                transport: \"Truck\",\n\n                seller: {\n                    //name: \"Ferrero\",\n                    //type: \"maker\",\n                    localisation: {\n                        city: \"Peterborough\",\n                        country: \"Canada\",\n                        latitude: 44.3091,\n                        longitude: -78.3197,\n                    },\n                },\n                buyer: {\n                    name: \"Wilder Harrier\",\n                    type: \"maker\",\n                    localisation: {\n                        city: \"Montréal\",\n                        country: \"Canada\",\n                        latitude: 45.5017,\n                        longitude: -73.5673,\n                    },\n                },\n            },\n            {\n                depth: 1,\n                productsOutput: [{ productName: \"Glycérine végétale\" }],\n                TransportCO2Impact: {\n                    value: 0.000088,\n                },\n                dist: {\n                    value: 10,\n                },\n                transport: \"Truck\",\n\n                seller: {\n                    //name: \"Ferrero\",\n                    //type: \"maker\",\n                    localisation: {\n                        city: \"Montréal\",\n                        country: \"Canada\",\n                        latitude: 45.5017,\n                        longitude: -73.5673,\n                    },\n                },\n                buyer: {\n                    name: \"Wilder Harrier\",\n                    type: \"maker\",\n                    localisation: {\n                        city: \"Montréal\",\n                        country: \"Canada\",\n                        latitude: 45.5017,\n                        longitude: -73.5673,\n                    },\n                },\n            },\n            {\n                depth: 1,\n                productsOutput: [{ productName: \"Bleuets\" }],\n                TransportCO2Impact: {\n                    value: 0.000819,\n                },\n                dist: {\n                    value: 255,\n                },\n                transport: \"Truck\",\n\n                seller: {\n                    //name: \"Ferrero\",\n                    //type: \"maker\",\n                    localisation: {\n                        city: \"Quebec city\",\n                        country: \"Canada\",\n                        latitude: 46.8139,\n                        longitude: -71.208,\n                    },\n                },\n                buyer: {\n                    name: \"Wilder Harrier\",\n                    type: \"maker\",\n                    localisation: {\n                        city: \"Montréal\",\n                        country: \"Canada\",\n                        latitude: 45.5017,\n                        longitude: -73.5673,\n                    },\n                },\n            },\n            {\n                depth: 1,\n                productsOutput: [{ productName: \"Saveur naturelle\" }],\n                TransportCO2Impact: {\n                    value: 0.007332,\n                },\n                dist: {\n                    value: 1875,\n                },\n                transport: \"Truck\",\n\n                seller: {\n                    //name: \"Ferrero\",\n                    //type: \"maker\",\n                    localisation: {\n                        city: \"Des Moines, Iowa\",\n                        country: \"USA\",\n                        latitude: 41.5868,\n                        longitude: -93.625,\n                    },\n                },\n                buyer: {\n                    name: \"Wilder Harrier\",\n                    type: \"maker\",\n                    localisation: {\n                        city: \"Montréal\",\n                        country: \"Canada\",\n                        latitude: 45.5017,\n                        longitude: -73.5673,\n                    },\n                },\n            },\n            {\n                depth: 1,\n                productsOutput: [{ productName: \"Huile d'olive\" }],\n                TransportCO2Impact: {\n                    value: 0.0013936,\n                },\n                dist: {\n                    value: 7651,\n                },\n                transport: \"Boat\",\n\n                seller: {\n                    //name: \"Ferrero\",\n                    //type: \"maker\",\n                    localisation: {\n                        city: \"Athènes\",\n                        country: \"Grèce\",\n                        latitude: 37.9838,\n                        longitude: 23.7275,\n                    },\n                },\n                buyer: {\n                    name: \"Wilder Harrier\",\n                    type: \"maker\",\n                    localisation: {\n                        city: \"Montréal\",\n                        country: \"Canada\",\n                        latitude: 45.5017,\n                        longitude: -73.5673,\n                    },\n                },\n            },\n            {\n                depth: 1,\n                productsOutput: [{ productName: \"Miel\" }],\n                TransportCO2Impact: {\n                    value: 0.007072,\n                },\n                dist: {\n                    value: 683,\n                },\n                transport: \"Truck\",\n\n                seller: {\n                    //name: \"Abitemis\",\n                    //type: \"productor\",\n                    localisation: {\n                        city: \"Saint-Bruno-de-Guigues, QC\",\n                        country: \"Canada\",\n                        latitude: 47.4641,\n                        longitude: -79.4381,\n                    },\n                },\n                buyer: {\n                    name: \"Wilder Harrier\",\n                    type: \"maker\",\n                    localisation: {\n                        city: \"Montréal\",\n                        country: \"Canada\",\n                        latitude: 45.5017,\n                        longitude: -73.5673,\n                    },\n                },\n            },\n            {\n                depth: 1,\n                productsOutput: [{ productName: \"Acide citrique et vinaigre tamponné\" }],\n                TransportCO2Impact: {\n                    value: 0.002444,\n                },\n                dist: {\n                    value: 1875,\n                },\n                transport: \"Truck\",\n\n                seller: {\n                    //name: \"Abitemis\",\n                    //type: \"productor\",\n                    localisation: {\n                        city: \"Des Moines, Iowa\",\n                        country: \"USA\",\n                        latitude: 41.5868,\n                        longitude: -93.625,\n                    },\n                },\n                buyer: {\n                    name: \"Wilder Harrier\",\n                    type: \"maker\",\n                    localisation: {\n                        city: \"Montréal\",\n                        country: \"Canada\",\n                        latitude: 45.5017,\n                        longitude: -73.5673,\n                    },\n                },\n            },\n            {\n                depth: 1,\n                productsOutput: [{ productName: \"Mélange de tocophérols\" }],\n                TransportCO2Impact: {\n                    value: 0.0004888,\n                },\n                dist: {\n                    value: 1875,\n                },\n                transport: \"Truck\",\n\n                seller: {\n                    //name: \"Abitemis\",\n                    //type: \"productor\",\n                    localisation: {\n                        city: \"Des Moines, Iowa\",\n                        country: \"Canada\",\n                        latitude: 41.5868,\n                        longitude: -93.625,\n                    },\n                },\n                buyer: {\n                    name: \"Wilder Harrier\",\n                    type: \"maker\",\n                    localisation: {\n                        city: \"Montréal\",\n                        country: \"Canada\",\n                        latitude: 45.5017,\n                        longitude: -73.5673,\n                    },\n                },\n            },\n        ],\n        impact: \"\",\n        transportCO2Impact: 0.0390868285714286,\n        productImageUrl: \"/images/products/wh_cricket_soft_BH_2018_220x.png\",\n        productName: \"Gâteries d'entraînement aux grillons et bleuets\",\n        //origins : \"Québec\",\n    },\n};\n\nclass Product extends React.Component {\n    state = {\n        barcode: this.props.match.params.barcode,\n        bcProductId: this.props.match.params.bcProductId,\n        product: undefined,\n        productImageUrl: undefined,\n        productName: undefined,\n        genericName: undefined,\n        ecoScore: undefined,\n        dataEcoScore: undefined,\n        value: 0,\n        connected: false,\n        userId: undefined,\n        cart: 0,\n        totalCO2Traceability: undefined,\n        countries: [],\n    };\n\n    isFlipping = false;\n\n    //for scrolling\n    getBottomRef = (component) => {\n        this.bottomComponent = component;\n    };\n\n    fireAmplitudeEvent = (event) => {\n        try {\n            amplitude.getInstance().logEvent(event, { product: \"gateries_grillon-bleuet-miel\" });\n        } catch (e) {\n            console.error(e);\n        }\n    };\n\n    componentDidMount = () => {\n        try {\n            amplitude.getInstance().init(\"0e3fa5bb2eaddf34671d8d9591791815\", null, {\n                apiEndpoint: \"api.lowympact.fr/amplitude\",\n            });\n        } catch (e) {\n            console.error(e);\n        }\n        this.fireAmplitudeEvent(\"qrcode-scanned\");\n\n        this.setState({\n            products: productsTemp?.data?.traceability,\n            impact: productsTemp?.data?.impact,\n            totalCO2Traceability: productsTemp?.data?.transportCO2Impact,\n            productImageUrl: productsTemp?.data?.productImageUrl,\n            productName: productsTemp?.data?.productName,\n        });\n    };\n\n    displayImage = () => {\n        let image = <React.Fragment />;\n        let productName = <React.Fragment />;\n        let genericName = <React.Fragment />;\n        let ecoScore = <React.Fragment />;\n        if (this.state.productImageUrl) {\n            image = (\n                <img src={this.state.productImageUrl} className=\"product-image\" alt=\"produit\" />\n            );\n        }\n\n        if (this.state.productName) {\n            productName = <div className=\"product-name\">{this.state.productName}</div>;\n        }\n        if (this.state.ecoScore) {\n            let scoreClass = \"color_score_\" + this.state.ecoScore;\n            ecoScore = (\n                <div className=\"product-ecoscore-image\">\n                    <span className={\"circle-score \" + scoreClass}>⬤ </span>\n                    EcoScore :<span className=\"uppercase \">{\" \" + this.state.ecoScore}</span>\n                </div>\n            );\n        } else if (this.state.genericName) {\n            genericName = <div className=\"product-generic-name\">{this.state.genericName}</div>;\n        }\n        return (\n            <React.Fragment>\n                {this.state.userId ? (\n                    <div\n                        className={this.state.cart > 0 ? \"add-to-cart green\" : \"add-to-cart\"}\n                        onClick={this.addToCart}\n                    >\n                        <span className=\"cart-count\">\n                            {this.state.cart > 0 ? this.state.cart : \"\"}\n                        </span>\n                        <span className=\"material-icons\">add_shopping_cart</span>\n                    </div>\n                ) : (\n                    <React.Fragment />\n                )}\n                {this.state.cart > 0 ? (\n                    <div className=\"remove-from-cart\" onClick={this.removeFromCart}>\n                        <span className=\"material-icons\">remove_shopping_cart</span>\n                    </div>\n                ) : (\n                    <React.Fragment />\n                )}\n                {image}\n                {productName}\n                <div className=\"product-bottom-image-div\">\n                    {genericName}\n                    {ecoScore}\n                </div>\n            </React.Fragment>\n        );\n    };\n\n    handleChange = (event, newValue) => {\n        this.setState({ value: newValue });\n        if (newValue === 1) {\n            let elem = document.getElementsByClassName(\"swiper-container\");\n            if (elem[0]) {\n                elem[0].scrollIntoView({ behavior: \"smooth\" });\n            }\n        }\n    };\n\n    displayNavbar = () => {\n        let retour = <React.Fragment />;\n        retour = (\n            <div className=\"product-navbar-container\">\n                <button\n                    className={\n                        this.state.value === 0\n                            ? \"product-navbar-button selected\"\n                            : \"product-navbar-button\"\n                    }\n                    onClick={() => {\n                        this.handleChange(\"\", 0);\n                        this.fireAmplitudeEvent(\"informations-clicked\");\n                    }}\n                >\n                    Informations\n                </button>\n                <button\n                    className={\n                        this.state.value === 1\n                            ? \"product-navbar-button selected\"\n                            : \"product-navbar-button\"\n                    }\n                    onClick={() => {\n                        this.handleChange(\"\", 1);\n                        this.fireAmplitudeEvent(\"traceability-clicked\");\n                    }}\n                >\n                    Traçabilité\n                </button>\n                <div\n                    className={\n                        this.state.value === 0 ? \"navbar-under nav-left\" : \"navbar-under nav-right\"\n                    }\n                ></div>\n            </div>\n        );\n        return retour;\n    };\n\n    render = () => {\n        //tri des produits\n        let products = this.state.products?.sort((a, b) => {\n            if (a.depth > b.depth) return -1;\n            else return 1;\n        });\n        return (\n            <React.Fragment>\n                <div className=\"product-page-container\">\n                    <div className=\"product-header-container\">\n                        <img\n                            className=\"product-bitmap-image\"\n                            src=\"/images/utils/bitmap.png\"\n                            alt=\"\"\n                        />\n                    </div>\n                    <div className=\"product-image-container\" ref={(ref) => (this.imageFlip = ref)}>\n                        {this.displayImage()}\n                    </div>\n\n                    {this.displayNavbar()}\n                    {this.state.value === 0 ? (\n                        <Environnement\n                            dataEcoScore={this.state.dataEcoScore}\n                            ecoScore={this.state.ecoScore}\n                            origins={this.state.origins}\n                            displayTranportImpact={\n                                this.props.match.params.bcProductId !== null &&\n                                this.props.match.params.bcProductId !== undefined\n                            }\n                            barcode={this.props.match.params.barcode}\n                        ></Environnement>\n                    ) : (\n                        <div className=\"product-bottom-container\">\n                            <Traceability\n                                products={products}\n                                getBottomRef={this.getBottomRef}\n                                totalCO2Traceability={this.state.totalCO2Traceability}\n                            />\n                        </div>\n                    )}\n                </div>\n            </React.Fragment>\n        );\n    };\n}\n\nexport default Product;\n\nconst delay = (ms) => new Promise((res) => setTimeout(res, ms));\n","import \"./ButtonNavBar.css\";\n\nfunction ButtonHistory() {\n    return (\n        <div>\n            <div className=\"button-logo\">\n                <span className=\"material-icons\">history</span>\n            </div>\n            <div>Historique</div>\n        </div>\n    );\n}\n\nexport default ButtonHistory;\n","function ButtonProfil() {\n    return (\n        <div>\n            <div>\n                <span className=\"material-icons\">person</span>\n            </div>\n            <div>Profil</div>\n        </div>\n    );\n}\n\nexport default ButtonProfil;\n","import { React } from \"react\";\n\nfunction ButtonScan() {\n    return (\n        <div>\n            <div className=\"navbar-scan-icon\">\n                <span className=\"material-icons\">qr_code_scanner</span>\n            </div>\n        </div>\n    );\n}\n\nexport default ButtonScan;\n","import React, { Component } from \"react\";\nimport Quagga from \"@ericblade/quagga2\";\nimport ImageUploader from \"react-images-upload\";\n\nclass Scanner extends Component {\n    state = {\n        error: false,\n        noBackCamera: false,\n        usedCamera: 0,\n        devices: [],\n        processingImage: 0,\n        text: 0,\n        mutlipleTracks: false,\n        no_permission: false,\n        locked: false,\n    };\n\n    locked = false;\n\n    switchCamera = async () => {\n        if (!this.state.locked) {\n            this.setState({ locked: true });\n            let num = this.state.usedCamera + 1;\n            if (num >= this.state.devices.length) {\n                num = 0;\n            }\n            this.setState({ usedCamera: num });\n            Quagga.stop();\n            this.QuaggaInit(this.state.devices[num].deviceId);\n            await delay(800);\n            this.setState({ locked: false });\n        }\n    };\n\n    componentDidMount = async () => {\n        if (this.props.capabilities) {\n            this.setState({ devices: this.props.capabilities, usedCamera: 0 });\n            this.QuaggaInit(this.props.capabilities[0]);\n        } else {\n            this.QuaggaInit({ facingMode: \"environment\" });\n        }\n    };\n\n    QuaggaInit = (capabilities) => {\n        console.log(capabilities);\n        if (Object.keys(capabilities).length == 0) {\n            this.setState({ text: \"vide\" });\n        }\n        Quagga.init(\n            {\n                inputStream: {\n                    type: \"LiveStream\",\n                    constraints: {\n                        ...capabilities,\n                    },\n                },\n                locator: {\n                    patchSize: \"normal\",\n                    halfSample: false,\n                },\n                locate: false,\n                area: {\n                    top: \"40%\",\n                    right: \"25%\",\n                    left: \"25%\",\n                    bottom: \"40%\",\n                },\n                numOfWorkers: window.navigator.hardwareConcurrency || 2,\n                decoder: {\n                    readers: [\"ean_reader\"],\n                },\n                multiple: false,\n                singleChannel: false,\n            },\n            (err) => {\n                if (err) {\n                    console.log(err);\n                    if (err == \"NotAllowedError: Permission denied\") {\n                        this.setState({ no_permission: true });\n                    }\n                    this.setState({ error: true, text: err + \" \" + JSON.stringify(capabilities) });\n                    return false;\n                }\n                Quagga.start();\n            }\n        );\n        this.props.setQuagga(Quagga);\n        console.log(Quagga.CameraAccess);\n        Quagga.onDetected(this._onDetected);\n    };\n\n    componentWillUnmount() {\n        Quagga.offDetected(this._onDetected);\n    }\n\n    _onDetected = async (result) => {\n        let stop = await this.props.onDetected(result);\n        console.log(stop);\n        if (stop) {\n            // Quagga.stop();\n        }\n    };\n\n    onDrop = (image) => {\n        try {\n            if (this.state.processingImage != 1) {\n                this.setState({ processingImage: 1 });\n                console.log(image[image.length - 1]);\n                let reader = new FileReader();\n                reader.readAsDataURL(image[image.length - 1]);\n                reader.onloadend = () => {\n                    Quagga.decodeSingle(\n                        {\n                            decoder: {\n                                readers: [\"ean_reader\"], // List of active readers\n                            },\n                            locate: true, // try to locate the barcode in the image\n                            src: reader.result, //image[image.length - 1], // or 'data:image/jpg;base64,' + data\n                        },\n                        (result) => {\n                            console.log(result);\n                            if (result) {\n                                this._onDetected(result);\n                                this.setState({ processingImage: 2 });\n                                console.log(\"result\", result.codeResult?.code);\n                            } else {\n                                console.log(\"not detected\");\n                                this.setState({ processingImage: 3 });\n                            }\n                        }\n                    );\n                };\n            }\n        } catch (err) {\n            console.log(err);\n            this.setState({ processingImage: 4 });\n        }\n    };\n\n    setImport = () => {\n        this.setState({ error: !this.state.error });\n    };\n\n    render() {\n        let textImage = <React.Fragment></React.Fragment>;\n\n        if (this.state.processingImage == 1) {\n            textImage = (\n                <React.Fragment>\n                    <p>Chargement en cours...</p>\n                </React.Fragment>\n            );\n        }\n        if (this.state.processingImage == 2) {\n            textImage = (\n                <React.Fragment>\n                    <p>Ce produit n'existe pas dans la base de données</p>\n                </React.Fragment>\n            );\n        }\n        if (this.state.processingImage == 3) {\n            textImage = (\n                <React.Fragment>\n                    <p>Code barre non trouvé sur l'image, merci de réessayer</p>\n                </React.Fragment>\n            );\n        }\n        if (this.state.processingImage == 4) {\n            textImage = (\n                <React.Fragment>\n                    <p>\n                        Mauvais format ou fichier trop grand, merci de réessayer. <br />\n                        Taille max : 5mb <br />\n                        Formats: jpg, png, gif\n                    </p>\n                </React.Fragment>\n            );\n        }\n        return (\n            <React.Fragment>\n                <div className=\"interactive-wrapper\">\n                    <div id=\"interactive\" className={this.state.error ? \"hidden\" : \"viewport\"}>\n                        <div className=\"a\" />\n                        <div className=\"b\" />\n                        <div className=\"c\" />\n                        <div className=\"d\" />\n                    </div>\n                    {this.state.devices?.length > 1 ? (\n                        <button className=\"code-switch-camera\" onClick={this.switchCamera}>\n                            <span\n                                className=\"material-icons\"\n                                style={{ color: this.state.locked ? \"#777777\" : \"#1b3044\" }}\n                            >\n                                cameraswitch\n                            </span>\n                            {this.state.usedCamera}\n                        </button>\n                    ) : (\n                        <React.Fragment />\n                    )}\n\n                    {/* <button className=\"code-switch-camera\" onClick={this.setImport}>\n                        <span className=\"material-icons green\">\n                            {!this.state.error ? \"upload_file\" : \"flip\"}\n                        </span>\n                    </button> */}\n\n                    {this.state.error ? (\n                        <div className=\"scan-error\">\n                            <ImageUploader\n                                withIcon={true}\n                                withPreview={false}\n                                buttonText={\n                                    <div className=\"button-import\">\n                                        <div className=\"material-icons\">add_a_photo</div>\n                                        <p>Importer une photo</p>\n                                    </div>\n                                }\n                                onChange={this.onDrop}\n                                label={\"\"}\n                                imgExtension={[\".jpg\", \".gif\", \".png\", \".jpeg\"]}\n                                maxFileSize={5242880}\n                                labelClass={\"import-label\"}\n                            />\n                            <p className=\"red\">{textImage}</p>\n                            <p className=\"error-message-import\">\n                                {/* Il semblerait que votre caméra ne soit pas détectée. Vous pouvez\n                            importer une photo de votre bibliothèque, ou essayer un autre\n                            navigateur. <br />\n                            <br /> */}\n                                {/* Si le problème persiste, contactez-nous{\" \"}\n                            <a href=\"mailto:contact@lowympact.fr?Subject=Lowympact-camera not working\">\n                                via ce lien\n                            </a> */}\n                                {/* {\"code d'erreur : \" + this.state.text} */}\n                                {this.state.no_permission ? (\n                                    <div className=\"no-permission\">\n                                        L'accès à votre caméra est bloqué : Vous pouvez l'autoriser\n                                        dans les paramètres de votre navigateur pour accéder au\n                                        scanner\n                                    </div>\n                                ) : (\n                                    <React.Fragment />\n                                )}\n                                <br />\n                            </p>\n                        </div>\n                    ) : (\n                        <React.Fragment />\n                    )}\n                    {this.state.mutlipleTracks ? (\n                        <h1 className=\"debug\">If you see this, tell me</h1>\n                    ) : (\n                        \"\"\n                    )}\n                    <div className=\"debug\">{this.state.text}</div>\n                </div>\n            </React.Fragment>\n        );\n    }\n}\n\nexport default Scanner;\n\nconst delay = (ms) => new Promise((res) => setTimeout(res, ms));\n","import React, { Component } from \"react\";\nimport Scanner from \"./Scanner\";\nimport QrReader from \"react-qr-reader\";\nimport { Link } from \"react-router-dom\";\nimport \"./Scan.css\";\nimport \"../../pages/History.css\";\n\nclass Scan extends Component {\n    state = {\n        scanning: true,\n        status: \"\",\n        results: [],\n        usedCameraId: \"3f6fc4177028f25c3e8215f4444838450630b8d656c627ef511346545d37f302\",\n        devices: [],\n        reading: false, //false : barcode - true: qrcode\n        barcode: undefined,\n        bcProductId: undefined,\n        Quagga: undefined,\n        product: undefined,\n        online: window.navigator.onLine,\n    };\n\n    componentDidMount = () => {\n        window.addEventListener(\"offline\", this.updateNetwork);\n        window.addEventListener(\"online\", this.updateNetwork);\n    };\n\n    updateNetwork = () => {\n        this.setState({ online: window.navigator.onLine });\n    };\n\n    setQuagga = (quagga) => {\n        if (this.state.Quagga) {\n            this.state.Quagga.stop();\n        }\n        this.setState({ Quagga: quagga });\n    };\n\n    _onDetected = async (res) => {\n        if (res) {\n            console.log(res);\n            if (res.codeResult && res.codeResult.code) {\n                this.setState({\n                    results: [res],\n                    scanning: true,\n                    status: \"waiting\",\n                });\n                let response = await fetch(\n                    `https://world.openfoodfacts.org/api/v0/product/${res.codeResult.code}.json/`\n                );\n                let result = await response.json();\n                console.log(result);\n                if (result.status !== 0) {\n                    this.setState({\n                        scanning: true,\n                        status: \"found\",\n                        product: result,\n                        barcode: res.codeResult.code,\n                    });\n                    // this.props.showScanner(false);\n                    // if (this.state.Quagga) this.state.Quagga.stop();\n                    return true;\n                } else {\n                    this.setState(\n                        {\n                            scanning: true,\n                            status: \"not found\",\n                        },\n                        async () => {\n                            await delay(3000);\n                            this.setState({\n                                scanning: true,\n                                status: undefined,\n                            });\n                        }\n                    );\n\n                    return false;\n                }\n            }\n        }\n    };\n    // For QR CODE Scanner, not used\n    handleScan = (data) => {\n        if (data) {\n            let arr = data.split(\"/\");\n            if (arr.length > 1) {\n                this.setState({\n                    scanning: false,\n                    barcode: arr[4],\n                    bcProductId: arr[5],\n                    status: \"found\",\n                });\n            }\n            // if (this.state.Quagga) this.state.Quagga.stop();\n        }\n    };\n    handleError = (err) => {\n        console.error(err);\n    };\n\n    displayQrCode = () => {\n        if (this.state.status !== \"found\") {\n            return (\n                <QrReader\n                    delay={300}\n                    onError={this.handleError}\n                    onScan={this.handleScan}\n                    style={{ width: \"100%\" }}\n                    showViewFinder={false}\n                />\n            );\n        } else {\n            return <React.Fragment />;\n        }\n    };\n\n    displayBarCode = () => {\n        // if (this.state.status !== \"found\") {\n        return (\n            <React.Fragment>\n                {this.state.scanning ? (\n                    <Scanner\n                        onDetected={this._onDetected}\n                        setQuagga={this.setQuagga}\n                        usedCameraId={this.usedCameraId}\n                        capabilities={this.props.capabilities}\n                    />\n                ) : null}\n            </React.Fragment>\n        );\n        // } else {\n        //     return <React.Fragment />;\n        // }\n    };\n\n    switchReader = () => {\n        if (this.state.reading) this.setState({ reading: false });\n        else {\n            if (this.state.Quagga) this.state.Quagga.stop();\n            this.setState({ reading: true });\n        }\n    };\n\n    displayPopup = () => {\n        console.log(this.state.product);\n        let retour = <React.Fragment />;\n        let item = this.state.product?.product;\n        if (item) {\n            retour = (\n                <Link\n                    className=\"history-item\"\n                    to={\"/products/\" + this.state.product.code}\n                    onClick={() => {\n                        if (this.state.Quagga) this.state.Quagga.stop();\n                        this.props.showScanner(false);\n                    }}\n                >\n                    <div className=\"history-img-container\">\n                        <img src={item.image_url} alt=\"\" />\n                    </div>\n                    <div className=\"history-name-container\">\n                        <div className=\"history-name\">{item.product_name}</div>\n                        <div className=\"history-brand\">{item.brands}</div>\n                    </div>\n                    <div className=\"history-label-container\">\n                        <div style={{ color: getColor(item.ecoscore_score) }}>●</div>\n                        <div className=\"history-label\">\n                            {[\"a\", \"b\", \"c\", \"d\", \"e\"].indexOf(item.ecoscore_grade) == -1\n                                ? \"\"\n                                : item.ecoscore_grade}\n                        </div>\n                    </div>\n                    <div style={{ marginRight: \"10px\", color: \"rgb(41,72,102)\" }}>{\">\"}</div>\n                </Link>\n            );\n        } else if (this.state.status == \"waiting\") {\n            retour = (\n                <div className=\"history-item\">\n                    <div class=\"skeleton-8wwpnkj1sj9\"></div>\n                </div>\n            );\n        } else if (this.state.status == \"not found\") {\n            retour = (\n                <div className=\"history-item\">\n                    <div className=\"history-img-container\">\n                        <div className=\"grey-square\"></div>\n                    </div>\n                    <div className=\"history-name-container\">\n                        <div className=\"history-name\">Article non trouvé</div>\n                        <div className=\"history-brand\"></div>\n                    </div>\n                    <div className=\"history-label-container\"></div>\n                    <div style={{ marginRight: \"10px\", color: \"rgb(41,72,102)\" }}>{\">\"}</div>\n                </div>\n            );\n        }\n        return retour;\n    };\n\n    render() {\n        return (\n            <div\n                className={\n                    this.props.hideScannerAnimation\n                        ? \"code-reader-container hide-scanner\"\n                        : \"code-reader-container\"\n                }\n            >\n                {!this.state.online ? (\n                    <div className=\"offline-container\">\n                        {\" \"}\n                        <span style={{ color: \"red\" }}>●</span> Pas de connexion\n                    </div>\n                ) : (\n                    <React.Fragment />\n                )}\n                <span\n                    className=\"close material-icons\"\n                    onClick={() => {\n                        if (this.state.Quagga) this.state.Quagga.stop();\n\n                        this.props.showScanner(false);\n                    }}\n                >\n                    close\n                </span>\n                {this.displayBarCode()}\n                <div className=\"scan-result-container\">\n                    <div className=\"results\">{this.displayPopup()}</div>\n                </div>\n            </div>\n        );\n        //}\n    }\n}\n\nexport default Scan;\n\nfunction getColor(note) {\n    if (note > 67) {\n        return \"green\";\n    }\n    if (note <= 33) {\n        return \"red\";\n    }\n    return \"yellow\";\n}\n\nconst delay = (ms) => new Promise((res) => setTimeout(res, ms));\n\n// if (\n//     this.state.barcode &&\n//     this.state.bcProductId &&\n//     (this.props.barcode !== this.state.barcode ||\n//         this.props.bcProductId !== this.state.bcProductId)\n// ) {\n//     return (\n//         <Redirect to={\"/products/\" + this.state.barcode + \"/\" + this.state.bcProductId} />\n//     );\n// }\n// if (this.state.barcode && this.props.barcode !== this.state.barcode) {\n//     return <Redirect to={\"/products/\" + this.state.barcode} />;\n// } else {\n{\n    /* <div className=\"code-switch\" onClick={this.switchReader}>\n                        <div className=\"span-code-switch\">\n                            <span\n                                className={\n                                    this.state.reading ? \"material-icons\" : \"material-icons green\"\n                                }\n                            >\n                                view_week\n                            </span>\n                            <span>Barcode</span>\n                        </div>\n                        <Switch\n                            onChange={this.switchReader}\n                            uncheckedIcon={false}\n                            checkedIcon={false}\n                            checked={this.state.reading}\n                            onColor={\"#888\"}\n                            offColor={\"#888\"}\n                        />\n                        <div className=\"span-code-switch\">\n                            <span\n                                className={\n                                    !this.state.reading ? \"material-icons\" : \"material-icons green\"\n                                }\n                            >\n                                qr_code_scanner\n                            </span>\n                            <span>QR Code</span>\n                        </div>\n                    </div> */\n}\n{\n    /* {this.state.reading ? this.displayQrCode() : this.displayBarCode()} */\n}\n","import \"./Navbar.css\";\nimport React from \"react\";\nimport ButtonHistory from \"../Button/ButtonHistory\";\nimport ButtonProfil from \"../Button/ButtonProfil\";\nimport ButtonScan from \"../Button/ButtonScan\";\n// import Scan from \"../Scan/Scan\";\nimport Scan from \"../Scan/Scan\";\n// import { ScanSettings } from \"scandit-sdk\";\nimport { Link } from \"react-router-dom\";\n\nclass Navbar extends React.Component {\n    state = {\n        showScanner: false,\n        barcode: undefined,\n        bcProductId: undefined,\n        height: 0,\n        capabilities: undefined,\n        hideScannerAnimation: false,\n    };\n\n    componentDidMount = async () => {\n        this.updateWindowDimensions();\n        window.addEventListener(\"resize\", this.updateWindowDimensions);\n        try {\n            const queryString = window.location.search;\n            const urlParams = new URLSearchParams(queryString);\n            const camera = urlParams.get(\"camera\");\n            if (\n                navigator.getUserMedia ||\n                navigator.webkitGetUserMedia ||\n                navigator.mozGetUserMedia ||\n                navigator.msGetUserMedia\n            ) {\n                // On vient récupérer les flux vidéo existants\n                let devices = await navigator.mediaDevices\n                    .enumerateDevices()\n                    .then(function (devices) {\n                        return devices.filter((d) => d.kind === \"videoinput\");\n                    });\n\n                //On prend seulement les caméras arrière\n                //(toutes les caméra si caméra arrière non existante)\n                let videoDevices = devices.filter((d) => d.label.match(/back/) != null);\n                if (videoDevices.length === 0) {\n                    videoDevices = devices;\n                }\n                console.log(videoDevices);\n                // Get all camera capabilities\n                let capabilities = videoDevices.map(async (device) => {\n                    return await navigator.mediaDevices\n                        .getUserMedia({\n                            video: { deviceId: { exact: device.deviceId } },\n                        })\n                        .then(\n                            (stream) => {\n                                let a = stream.getVideoTracks().map((track) => {\n                                    console.log(track);\n                                    if (track.getCapabilities) {\n                                        return track.getCapabilities();\n                                    } else {\n                                        return [{}];\n                                    }\n                                });\n                                stream.getTracks().forEach((track) => track.stop());\n                                if (a && a.length > 0) return a[0];\n                                else return {};\n                            },\n                            (err) => console.log(err)\n                        );\n                });\n                let capa = await Promise.all(capabilities);\n                if (capa && capa.length > 0) {\n                    //On trie les capabilities pour mettre les meilleurs résolutions en premier\n                    capa.sort((a, b) => {\n                        if ((a.width.max + a.height.max) / 2 > (b.width.max + b.height.max) / 2)\n                            return -1;\n                        else return 1;\n                    });\n                }\n\n                if (capa[0]) {\n                    this.setState({ capabilities: capa });\n                } else this.setState({ capabilities: undefined });\n            } else {\n                this.setState({ capabilities: undefined });\n            }\n        } catch (err) {\n            this.setState({ capabilities: undefined });\n        }\n    };\n\n    componentWillUnmount() {\n        window.removeEventListener(\"resize\", this.updateWindowDimensions);\n    }\n\n    updateWindowDimensions = () => {\n        this.setState({ height: window.innerHeight });\n    };\n\n    handleScannerButton = (bool) => {\n        if (bool === false) {\n            this.setState({ hideScannerAnimation: true }, async () => {\n                await delay(300);\n                this.setState({ showScanner: bool, hideScannerAnimation: false });\n            });\n        } else {\n            this.setState({ showScanner: bool });\n        }\n    };\n\n    // handleBarcode = (res) => {\n    //     if (res) {\n    //         //détecté par barcode scanner\n    //         let arr = res.split(\"/\");\n    //         if (arr.length > 1) {\n    //             this.setState({\n    //                 barcode: arr[4],\n    //                 bcProductId: arr[5],\n    //                 showScanner: false,\n    //             });\n    //         } else {\n    //             this.setState({\n    //                 barcode: arr[0],\n    //                 showScanner: false,\n    //                 bcProductId: undefined,\n    //             });\n    //         }\n    //     }\n    // };\n\n    render = () => {\n        if (this.state.height < 550) {\n            return <React.Fragment />;\n        }\n        // if (\n        //     this.state.barcode &&\n        //     this.state.bcProductId &&\n        //     (this.props.barcode !== this.state.barcode ||\n        //         this.props.bcProductId !== this.state.bcProductId)\n        // ) {\n        //     return (\n        //         <Redirect to={\"/products/\" + this.state.barcode + \"/\" + this.state.bcProductId} />\n        //     );\n        // }\n\n        // if (this.state.barcode && this.props.barcode !== this.state.barcode) {\n        //     return <Redirect to={\"/products/\" + this.state.barcode} />;\n        // }\n\n        if (!this.state.showScanner) {\n            return (\n                <React.Fragment>\n                    <div className=\"navbar-container\">\n                        <Link\n                            to=\"/history\"\n                            className={\n                                window.location.pathname === \"/history\"\n                                    ? \"navbar-link navbar-text-left navbar-selected\"\n                                    : \"navbar-link navbar-text-left \"\n                            }\n                        >\n                            <ButtonHistory />\n                        </Link>\n                        <div onClick={() => this.handleScannerButton(true)}>\n                            <div className=\"navbar-circle\">\n                                <ButtonScan />\n                            </div>\n                        </div>\n                        <span className=\"navbar-scan-text\">Scan</span>\n                        <Link\n                            to=\"/profil\"\n                            className={\n                                window.location.pathname === \"/profil\"\n                                    ? \"navbar-link navbar-text-right navbar-selected\"\n                                    : \"navbar-link navbar-text-right \"\n                            }\n                        >\n                            <ButtonProfil />\n                        </Link>\n                    </div>\n                </React.Fragment>\n            );\n        } else {\n            return (\n                // <Scan\n                //     onCrossClicked={this.handleScannerButton}\n                //     // playSoundOnScan={true}\n                //     vibrateOnScan={true}\n                //     enableTorchToggle={true}\n                //     enablePinchToZoom={true}\n                //     enableCameraSwitcher={true}\n                //     guiStyle={\"viewfinder\"}\n                //     scanSettings={\n                //         new ScanSettings({\n                //             enabledSymbologies: [\n                //                 \"qr\",\n                //                 \"ean8\",\n                //                 \"ean13\",\n                //                 \"upca\",\n                //                 \"upce\",\n                //                 \"code128\",\n                //                 \"code39\",\n                //                 \"code93\",\n                //                 \"itf\",\n                //             ],\n                //             codeDuplicateFilter: 1000,\n                //         })\n                //     }\n                //     onScan={(scanResult) => {\n                //         //console.log(scanResult.barcodes[0].data);\n                //         this.handleBarcode(scanResult.barcodes[0].data);\n                //     }}\n                //     onError={(error) => {\n                //         console.error(error.message);\n                //     }}\n                // />\n                <Scan\n                    hideScannerAnimation={this.state.hideScannerAnimation}\n                    showScanner={this.handleScannerButton}\n                    history={this.props.history}\n                    capabilities={this.state.capabilities}\n                />\n            );\n        }\n    };\n}\n\nexport default Navbar;\n\nconst delay = (ms) => new Promise((res) => setTimeout(res, ms));\n"],"sourceRoot":""}