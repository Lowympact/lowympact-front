{"version":3,"sources":["components/Charts/DoughnutChartEcoScore.js","components/Charts/BarChartCarbonImpact.js","pages/Statistics.js","assets/images/fruits-vegetables-basket-by-oblik-studio.svg","components/Button/ButtonHistory.js","components/Button/ButtonProfil.js","components/Button/ButtonScan.js","components/Scan/Scanner.js","components/Scan/Scan.js","components/Navbar/Navbar.js"],"names":["DoughnutChartEcoScore","state","swiper","undefined","selectedSegment","displayChart","chart","Fragment","props","ecoScoreData","cartedProduct","data","title","value","a","color","b","c","d","e","unknown","lineWidth","paddingAngle","radius","PieChart","defaultProps","animate","animationDuration","label","dataEntry","Math","round","percentage","labelStyle","index","fontSize","fontFamily","fill","labelPosition","segmentsStyle","transition","cursor","segmentsShift","onClick","event","setState","slideTo","className","src","fruits","alt","onSlideChange","displaySlides","slides","render","spaceBetween","slidesPerView","centeredSlides","i","activeIndex","onSwiper","React","Component","monthNames","BarChartCarbonImpact","options","toolbar","show","dropShadow","enabled","top","left","blur","opacity","plotOptions","bar","borderRadius","horizontal","xaxis","categories","labels","style","fontColor","text","yaxis","dataLabels","noData","colors","grid","lines","carbonImpactData","now","dataSize","length","unit","Date","setHours","setDate","getDate","getDay","yearStart","getFullYear","ceil","push","getMonth","year","monthNum","toString","series","name","sortedData","sort","offset","finalValue","impact","toFixed","nbProducts","type","height","Statistics","username","scannedProduct","userId","Verify","isExpired","token","localStorage","getItem","decodedToken","jwt","decode","complete","dateNow","payload","exp","getTime","connected","componentDidMount","loadUserData","loadEcoScoreData","loadCarbonImpactData","fetch","method","credentials","headers","Headers","authorization","then","response","json","res","typeAggregate","statistics","ecoscore","carbonImpact","displayStats","handleChange","newValue","displayNavbar","to","Navbar","ButtonHistory","ButtonProfil","ButtonScan","Scanner","error","noBackCamera","usedCamera","devices","processingImage","mutlipleTracks","no_permission","locked","switchCamera","num","Quagga","stop","QuaggaInit","deviceId","delay","capabilities","facingMode","console","log","Object","keys","init","inputStream","constraints","locator","patchSize","halfSample","locate","area","right","bottom","numOfWorkers","window","navigator","hardwareConcurrency","decoder","readers","multiple","singleChannel","err","JSON","stringify","start","setQuagga","CameraAccess","onDetected","_onDetected","result","onDrop","image","reader","FileReader","readAsDataURL","onloadend","decodeSingle","codeResult","code","setImport","offDetected","this","textImage","id","withIcon","withPreview","buttonText","onChange","imgExtension","maxFileSize","labelClass","ms","Promise","setTimeout","Scan","scanning","status","results","usedCameraId","reading","barcode","bcProductId","product","online","onLine","addEventListener","updateNetwork","quagga","handleScan","arr","split","handleError","displayQrCode","onError","onScan","width","showViewFinder","displayBarCode","switchReader","displayPopup","retour","item","showScanner","image_url","product_name","brands","getColor","ecoscore_score","indexOf","ecoscore_grade","marginRight","class","hideScannerAnimation","note","updateWindowDimensions","queryString","location","search","urlParams","URLSearchParams","get","getUserMedia","webkitGetUserMedia","mozGetUserMedia","msGetUserMedia","mediaDevices","enumerateDevices","filter","kind","videoDevices","match","map","device","video","exact","stream","getVideoTracks","track","getCapabilities","getTracks","forEach","all","capa","max","innerHeight","handleScannerButton","bool","history","pathname","removeEventListener"],"mappings":"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","file":"static/js/10.cb34de4d.chunk.js","sourcesContent":["import React from \"react\";\nimport { Swiper, SwiperSlide } from \"swiper/react\";\n// Import Swiper styles\nimport \"swiper/swiper-bundle.css\";\n\n//Import Pie Chart\nimport { PieChart } from \"react-minimal-pie-chart\";\n\nimport fruits from \"../../assets/images/fruits-vegetables-basket-by-oblik-studio.svg\";\n\nclass DoughnutChartEcoScore extends React.Component {\n    state = {\n        swiper: undefined,\n        selectedSegment: undefined,\n    };\n\n    displayChart = () => {\n        let chart = <React.Fragment></React.Fragment>;\n        if (this.props.ecoScoreData && this.props.cartedProduct > 0) {\n            let data = [\n                {\n                    title: \"EcoScore A\",\n                    value: this.props.ecoScoreData.a,\n                    color: \"#1e8f4f\",\n                },\n                {\n                    title: \"EcoScore B\",\n                    value: this.props.ecoScoreData.b,\n                    color: \"#5fad0c\",\n                },\n                {\n                    title: \"EcoScore C\",\n                    value: this.props.ecoScoreData.c,\n                    color: \"#ecb10f\",\n                },\n                {\n                    title: \"EcoScore D\",\n                    value: this.props.ecoScoreData.d,\n                    color: \"#ff6f1e\",\n                },\n                {\n                    title: \"EcoScore E\",\n                    value: this.props.ecoScoreData.e,\n                    color: \"#df1e1f\",\n                },\n                {\n                    title: \"EcoScore Inconnu\",\n                    value: this.props.ecoScoreData.unknown,\n                    color: \"#000000\",\n                },\n            ];\n            chart = (\n                <PieChart\n                    data={data}\n                    lineWidth={30}\n                    paddingAngle={1}\n                    radius={PieChart.defaultProps.radius - 3}\n                    animate\n                    animationDuration={700}\n                    label={({ dataEntry }) => `${Math.round(dataEntry.percentage)}%`}\n                    labelStyle={(index) =>\n                        index == this.state.selectedSegment\n                            ? {\n                                  fontSize: \"6px\",\n                                  fontFamily: \"comfortaa\",\n                                  fill: data[index].color,\n                              }\n                            : {\n                                  fontSize: \"0px\",\n                                  fontFamily: \"comfortaa\",\n                                  fill: data[index].color,\n                              }\n                    }\n                    labelPosition={60}\n                    segmentsStyle={{\n                        transition: \"stroke .3s ease-out\",\n                        cursor: \"pointer\",\n                    }}\n                    segmentsShift={(index) => (index == this.state.selectedSegment ? 3 : 0)}\n                    onClick={(event, index) => {\n                        if (index == this.state.selectedSegment) {\n                            this.setState({ selectedSegment: undefined });\n                            this.state.swiper.slideTo(0, 500);\n                        } else {\n                            this.setState({ selectedSegment: index });\n                            this.state.swiper.slideTo(index + 1, 500);\n                        }\n                    }}\n                />\n            );\n        } else {\n            chart = (\n                <div className=\"stats-no-product\">\n                    <div>\n                        <img src={fruits} className=\"logo\" alt=\"Fruits\" />\n                        <p className=\"logo-text\">Commence à scanner des produits !</p>\n                    </div>\n                </div>\n            );\n        }\n        return chart;\n    };\n\n    onSlideChange = (index) => {\n        if (index == 0) {\n            this.setState({ selectedSegment: undefined });\n        } else {\n            this.setState({ selectedSegment: index - 1 });\n        }\n    };\n\n    displaySlides = () => {\n        let slides = <React.Fragment></React.Fragment>;\n        if (this.props.ecoScoreData && this.props.cartedProduct > 0) {\n            slides = (\n                <React.Fragment>\n                    <SwiperSlide>\n                        <div className=\"stats-slider\">\n                            <img\n                                className=\"stats-ecoscore-full\"\n                                src=\"/images/utils/ecoScoreFull.png\"\n                                alt=\"\"\n                            />\n                        </div>\n                    </SwiperSlide>\n                    <SwiperSlide>\n                        <div className=\"stats-slider\">\n                            <span className=\"stats-slider-text\">\n                                {\">\"} EcoScore A : {this.props.ecoScoreData.a}{\" \"}\n                                {this.props.ecoScoreData.a > 1 ? \" produits\" : \" produit\"}\n                            </span>\n                            <img\n                                className=\"stats-ecoscore-image\"\n                                src=\"/images/utils/ecoScoreA.png\"\n                                alt=\"\"\n                            />\n                        </div>\n                    </SwiperSlide>\n                    <SwiperSlide>\n                        <div className=\"stats-slider\">\n                            <span className=\"stats-slider-text\">\n                                {\">\"} EcoScore B : {this.props.ecoScoreData.b}{\" \"}\n                                {this.props.ecoScoreData.b > 1 ? \" produits\" : \" produit\"}\n                            </span>\n                            <img\n                                className=\"stats-ecoscore-image\"\n                                src=\"/images/utils/ecoScoreB.png\"\n                                alt=\"\"\n                            />\n                        </div>\n                    </SwiperSlide>\n                    <SwiperSlide>\n                        <div className=\"stats-slider\">\n                            <span className=\"stats-slider-text\">\n                                {\">\"} EcoScore C : {this.props.ecoScoreData.c}{\" \"}\n                                {this.props.ecoScoreData.c > 1 ? \" produits\" : \" produit\"}\n                            </span>\n                            <img\n                                className=\"stats-ecoscore-image\"\n                                src=\"/images/utils/ecoScoreC.png\"\n                                alt=\"\"\n                            />\n                        </div>\n                    </SwiperSlide>\n                    <SwiperSlide>\n                        <div className=\"stats-slider\">\n                            <span className=\"stats-slider-text\">\n                                {\">\"} EcoScore D : {this.props.ecoScoreData.d}{\" \"}\n                                {this.props.ecoScoreData.d > 1 ? \" produits\" : \" produit\"}\n                            </span>\n                            <img\n                                className=\"stats-ecoscore-image\"\n                                src=\"/images/utils/ecoScoreD.png\"\n                                alt=\"\"\n                            />\n                        </div>\n                    </SwiperSlide>\n                    <SwiperSlide>\n                        <div className=\"stats-slider\">\n                            <span className=\"stats-slider-text\">\n                                {\">\"} EcoScore E : {this.props.ecoScoreData.e}{\" \"}\n                                {this.props.ecoScoreData.e > 1 ? \" produits\" : \" produit\"}\n                            </span>\n                            <img\n                                className=\"stats-ecoscore-image\"\n                                src=\"/images/utils/ecoScoreE.png\"\n                                alt=\"\"\n                            />\n                        </div>\n                    </SwiperSlide>\n                    <SwiperSlide>\n                        <div className=\"stats-slider\">\n                            <span className=\"stats-slider-text\">\n                                {\">\"} EcoScore Inconnu : {this.props.ecoScoreData.unknown}{\" \"}\n                                {this.props.ecoScoreData.unknown > 1 ? \" produits\" : \" produit\"}\n                            </span>\n                        </div>\n                    </SwiperSlide>\n                </React.Fragment>\n            );\n        }\n        return slides;\n    };\n\n    render = () => {\n        return (\n            <React.Fragment>\n                <div className=\"stats-chart-pie\">{this.displayChart()}</div>\n                <div className=\"stats-chart-slider\">\n                    <Swiper\n                        spaceBetween={0}\n                        slidesPerView={1}\n                        centeredSlides={true}\n                        onSlideChange={(i) => this.onSlideChange(i.activeIndex)}\n                        onSwiper={(swiper) => this.setState({ swiper: swiper })}\n                    >\n                        {this.displaySlides()}\n                    </Swiper>\n                </div>\n            </React.Fragment>\n        );\n    };\n}\n\nexport default DoughnutChartEcoScore;\n","import React from \"react\";\nimport { Swiper, SwiperSlide } from \"swiper/react\";\n// Import Swiper styles\nimport \"swiper/swiper-bundle.css\";\n\n//Import Bar Chart\nimport Chart from \"react-apexcharts\";\n\nimport fruits from \"../../assets/images/fruits-vegetables-basket-by-oblik-studio.svg\";\n\nconst monthNames = [\n    \"Janvier\",\n    \"Février\",\n    \"Mars\",\n    \"Avril\",\n    \"Mai\",\n    \"Juin\",\n    \"Juillet\",\n    \"Août\",\n    \"Septembre\",\n    \"Octobre\",\n    \"Novembre\",\n    \"Décembre\",\n];\n\nclass BarChartCarbonImpact extends React.Component {\n    state = {\n        selectedSegment: 0,\n        options: {\n            chart: {\n                toolbar: {\n                    show: false,\n                },\n                dropShadow: {\n                    enabled: true,\n                    top: 0,\n                    left: 0,\n                    blur: 2,\n                    opacity: 0.5,\n                },\n            },\n            plotOptions: {\n                bar: {\n                    borderRadius: 5,\n                    horizontal: true,\n                },\n            },\n            xaxis: {\n                categories: [\"Janvier\", \"Février\", \"Mars\", \"Avril\", \"Mai\"],\n                labels: {\n                    style: {\n                        fontSize: \"12px\",\n                        fontFamily: \"Comfortaa\",\n                        fontColor: \"#1b3044\",\n                    },\n                },\n                title: {\n                    text: \"CO₂ équivalent (kg)\",\n                    style: {\n                        fontSize: \"12px\",\n                        fontFamily: \"Comfortaa\",\n                        fontColor: \"#1b3044\",\n                    },\n                },\n            },\n            yaxis: {\n                labels: {\n                    style: {\n                        fontSize: \"12px\",\n                        fontFamily: \"Comfortaa\",\n                        fontColor: \"#1b3044\",\n                    },\n                },\n            },\n            dataLabels: {\n                enabled: true,\n                style: {\n                    fontSize: \"10px\",\n                    fontFamily: \"Comfortaa\",\n                },\n            },\n            noData: {\n                text: \"Chargement...\",\n            },\n            fill: {\n                colors: [\"#ff914d\"],\n            },\n            grid: {\n                xaxis: {\n                    lines: {\n                        show: true,\n                    },\n                },\n                yaxis: {\n                    lines: {\n                        show: false,\n                    },\n                },\n            },\n        },\n    };\n\n    displayChart = () => {\n        let chart = <React.Fragment></React.Fragment>;\n        if (this.props.carbonImpactData && this.props.cartedProduct > 0) {\n            let dataSize = this.props.carbonImpactData.data.length;\n            let xaxis = [];\n            let now;\n\n            switch (this.props.carbonImpactData.unit) {\n                case \"weekly\":\n                    let d = new Date();\n                    d.setHours(0, 0, 0, 0);\n                    d.setDate(d.getDate() + 4 - (d.getDay() || 7));\n                    let yearStart = new Date(d.getFullYear(), 0, 1);\n                    now = Math.ceil(((d - yearStart) / 86400000 + 1) / 7);\n                    for (let i = dataSize - 1; i >= 0; i--) {\n                        xaxis.push(\"Semaine \" + (now - i));\n                    }\n                    break;\n                case \"monthly\":\n                    now = new Date().getMonth();\n                    let year = new Date().getFullYear();\n                    for (let i = dataSize - 1; i >= 0; i--) {\n                        let monthNum = now - i;\n                        if (monthNum < 0) {\n                            xaxis.push(monthNames[monthNum + 12] + \" \" + (year - 1));\n                        } else {\n                            xaxis.push(monthNames[monthNum] + \" \" + year);\n                        }\n                    }\n                    break;\n                case \"yearly\":\n                    now = new Date().getFullYear();\n                    for (let i = dataSize - 1; i >= 0; i--) {\n                        xaxis.push((now - i).toString());\n                    }\n                    break;\n                default:\n                    now = new Date().getFullYear();\n                    for (let i = dataSize - 1; i >= 0; i--) {\n                        xaxis.push((now - i).toString());\n                    }\n                    break;\n            }\n            this.state.options.xaxis.categories = xaxis;\n\n            let series = [\n                {\n                    name: \"CO₂ équivalent (kg)\",\n                    data: [],\n                },\n            ];\n\n            let sortedData = this.props.carbonImpactData.data;\n            sortedData.sort((a, b) => (a.offset > b.offset ? 1 : -1));\n\n            for (let i = 0; i < sortedData.length; i++) {\n                let finalValue =\n                    this.state.selectedSegment === 0\n                        ? sortedData[i].impact.toFixed(2)\n                        : (sortedData[i].impact / sortedData[i].nbProducts).toFixed(2);\n                series[0].data.push(finalValue);\n            }\n\n            chart = (\n                <React.Fragment>\n                    <div className=\"stats-chart-bar\">\n                        <Chart\n                            options={this.state.options}\n                            series={series}\n                            type=\"bar\"\n                            height={350}\n                        ></Chart>\n                    </div>\n                </React.Fragment>\n            );\n        } else {\n            chart = (\n                <div className=\"stats-no-product\">\n                    <div>\n                        <img src={fruits} className=\"logo\" alt=\"Fruits\" />\n                        <p className=\"logo-text\">Commence à scanner des produits !</p>\n                    </div>\n                </div>\n            );\n        }\n        return chart;\n    };\n\n    onSlideChange = (index) => {\n        this.setState({ selectedSegment: this.state.selectedSegment === 0 ? 1 : 0 });\n    };\n\n    displaySlides = () => {\n        let slides = <React.Fragment></React.Fragment>;\n        if (this.props.carbonImpactData && this.props.cartedProduct > 0) {\n            slides = (\n                <React.Fragment>\n                    <SwiperSlide>\n                        <div className=\"stats-slider\">\n                            <span className=\"stats-slider-text\">{\">\"} Impact Carbone total</span>\n                        </div>\n                    </SwiperSlide>\n                    <SwiperSlide>\n                        <div className=\"stats-slider\">\n                            <span className=\"stats-slider-text\">\n                                {\">\"} Impact Carbone par produit\n                            </span>\n                        </div>\n                    </SwiperSlide>\n                </React.Fragment>\n            );\n        }\n        return slides;\n    };\n\n    render = () => {\n        return (\n            <React.Fragment>\n                {this.displayChart()}\n                <div className=\"stats-chart-slider\">\n                    <Swiper\n                        spaceBetween={0}\n                        slidesPerView={1}\n                        centeredSlides={true}\n                        onSlideChange={(i) => this.onSlideChange(i.activeIndex)}\n                        onSwiper={(swiper) => this.setState({ swiper: swiper })}\n                    >\n                        {this.displaySlides()}\n                    </Swiper>\n                </div>\n            </React.Fragment>\n        );\n    };\n}\n\nexport default BarChartCarbonImpact;\n","import React from \"react\";\nimport Navbar from \"../components/Navbar/Navbar\";\nimport DoughnutChartEcoScore from \"../components/Charts/DoughnutChartEcoScore\";\nimport BarChartCarbonImpact from \"../components/Charts/BarChartCarbonImpact\";\nimport \"./Product.css\";\nimport { Link } from \"react-router-dom\";\nimport jwt from \"jsonwebtoken\";\nimport \"./Statistics.css\";\n\nclass Statistics extends React.Component {\n    state = {\n        ecoScoreData: undefined,\n        carbonImpactData: undefined,\n        username: undefined,\n        scannedProduct: undefined,\n        cartedProduct: undefined,\n        userId: undefined,\n        value: 0,\n    };\n\n    Verify = () => {\n        let isExpired = true;\n        const token = localStorage.getItem(\"token\");\n        if (token) {\n            var decodedToken = jwt.decode(token, { complete: true });\n            var dateNow = new Date();\n            if (decodedToken.payload.exp >= dateNow.getTime() / 1000) {\n                isExpired = false;\n            }\n        }\n        if (isExpired === false) {\n            this.setState({ connected: true });\n        }\n    };\n\n    componentDidMount = () => {\n        this.Verify();\n        let userId = localStorage.getItem(\"userId\");\n        if (userId) {\n            this.setState({ userId: userId });\n        }\n        this.loadUserData(userId);\n        this.loadEcoScoreData(userId, \"fromBeginning\");\n        this.loadCarbonImpactData(userId, \"fromBeginning\");\n    };\n\n    loadUserData = (userId) => {\n        fetch(\n            `https://api.lowympact.fr/api/v1/users/${userId}`,\n            // `http://localhost:8080/api/v1/users/${userId}`,\n            {\n                method: \"get\",\n                credentials: \"include\",\n                headers: new Headers({\n                    authorization: localStorage.getItem(\"token\"),\n                    \"api-key\": \"99d8fb95-abdd-4885-bf6c-3a81d8874043\",\n                    \"Content-Type\": \"application/json\",\n                }),\n            }\n        )\n            .then((response) => response.json())\n            .then((res) => {\n                //console.log(res);\n                this.setState({\n                    username: res?.data?.username,\n                    scannedProduct: res?.scannedProduct,\n                    cartedProduct: res?.cartedProduct,\n                });\n            });\n    };\n\n    loadEcoScoreData = (userId, typeAggregate) => {\n        fetch(\n            `https://api.lowympact.fr/api/v1/users/${userId}/statistics?typeStatistic=ecoscore&typeAggregate=${typeAggregate}`,\n            // `http://localhost:8080/api/v1/users/${userId}/statistics?typeStatistic=ecoscore&typeAggregate=${typeAggregate}`,\n            {\n                method: \"get\",\n                credentials: \"include\",\n                headers: new Headers({\n                    authorization: localStorage.getItem(\"token\"),\n                    \"api-key\": \"99d8fb95-abdd-4885-bf6c-3a81d8874043\",\n                    \"Content-Type\": \"application/json\",\n                }),\n            }\n        )\n            .then((response) => response.json())\n            .then((res) => {\n                //console.log(res);\n                this.setState({\n                    ecoScoreData: res?.statistics?.ecoscore,\n                });\n            });\n    };\n\n    loadCarbonImpactData = (userId, typeAggregate) => {\n        fetch(\n            `https://api.lowympact.fr/api/v1/users/${userId}/statistics?typeStatistic=carbonImpact&typeAggregate=${typeAggregate}`,\n            // `http://localhost:8080/api/v1/users/${userId}/statistics?typeStatistic=carbonImpact&typeAggregate=${typeAggregate}`,\n            {\n                method: \"get\",\n                credentials: \"include\",\n                headers: new Headers({\n                    authorization: localStorage.getItem(\"token\"),\n                    \"api-key\": \"99d8fb95-abdd-4885-bf6c-3a81d8874043\",\n                    \"Content-Type\": \"application/json\",\n                }),\n            }\n        )\n            .then((response) => response.json())\n            .then((res) => {\n                //console.log(res);\n                this.setState({\n                    carbonImpactData: res?.statistics?.carbonImpact,\n                });\n            });\n    };\n\n    displayStats = () => {\n        let scannedProduct = <React.Fragment />;\n        let cartedProduct = <React.Fragment />;\n\n        if (this.state.scannedProduct !== undefined) {\n            scannedProduct = (\n                <div className=\"stats-header-text\">\n                    <span className={\"circle-stats color_score_stats\"}>⬤ </span>\n                    {this.state.scannedProduct > 1 ? \"Produits scannés :\" : \"Produit scanné :\"}\n                    <span className=\"uppercase \"> {this.state.scannedProduct}</span>\n                </div>\n            );\n        }\n\n        if (this.state.cartedProduct !== undefined) {\n            cartedProduct = (\n                <div className=\"stats-header-text\">\n                    <span className={\"circle-stats color_score_stats\"}>⬤ </span>\n                    {this.state.cartedProduct > 1 ? \"Produits achetés :\" : \"Produit acheté :\"}\n                    <span className=\"uppercase \"> {this.state.cartedProduct}</span>\n                </div>\n            );\n        }\n\n        return (\n            <React.Fragment>\n                {scannedProduct}\n                {cartedProduct}\n            </React.Fragment>\n        );\n    };\n\n    handleChange = (event, newValue) => {\n        this.setState({ value: newValue });\n    };\n\n    displayNavbar = () => {\n        let retour = (\n            <div className=\"stats-navbar-container\">\n                <button\n                    className={\n                        this.state.value === 0\n                            ? \"stats-navbar-button selected\"\n                            : \"stats-navbar-button\"\n                    }\n                    onClick={() => this.handleChange(\"\", 0)}\n                >\n                    EcoScore\n                </button>\n                <button\n                    className={\n                        this.state.value === 1\n                            ? \"stats-navbar-button selected\"\n                            : \"stats-navbar-button\"\n                    }\n                    onClick={() => this.handleChange(\"\", 1)}\n                >\n                    Impact Carbone\n                </button>\n                <div\n                    className={\n                        this.state.value === 0 ? \"navbar-under nav-left\" : \"navbar-under nav-right\"\n                    }\n                ></div>\n            </div>\n        );\n        return retour;\n    };\n\n    render = () => {\n        return (\n            <React.Fragment>\n                <div className=\"stats-page-container\">\n                    <div className=\"stats-header-container\">\n                        <div className=\"stats-profil-link\">\n                            <Link to=\"/profil\"> {\"<\"} Profil</Link>\n                        </div>\n                        <img className=\"stats-bitmap-image\" src=\"/images/utils/bitmap.png\" alt=\"\" />\n                    </div>\n\n                    <div className=\"stats-welcome\">\n                        <span className=\"stats-welcome-text\">\n                            {this.state.username\n                                ? this.state.username + \", voici ton récapitulatif Lowympact...\"\n                                : \"\"}\n                        </span>\n                    </div>\n\n                    <div className=\"stats-text-container\">{this.displayStats()}</div>\n\n                    {this.displayNavbar()}\n\n                    {this.state.value === 0 ? (\n                        <DoughnutChartEcoScore\n                            ecoScoreData={this.state.ecoScoreData}\n                            scannedProduct={this.state.scannedProduct}\n                            cartedProduct={this.state.cartedProduct}\n                        ></DoughnutChartEcoScore>\n                    ) : (\n                        <BarChartCarbonImpact\n                            carbonImpactData={this.state.carbonImpactData}\n                            scannedProduct={this.state.scannedProduct}\n                            cartedProduct={this.state.cartedProduct}\n                        ></BarChartCarbonImpact>\n                    )}\n\n                    <Navbar />\n                </div>\n            </React.Fragment>\n        );\n    };\n}\n\nexport default Statistics;\n\nconst delay = (ms) => new Promise((res) => setTimeout(res, ms));\n","export default __webpack_public_path__ + \"static/media/fruits-vegetables-basket-by-oblik-studio.7d5e1c64.svg\";","import \"./ButtonNavBar.css\";\n\nfunction ButtonHistory() {\n    return (\n        <div>\n            <div className=\"button-logo\">\n                <span className=\"material-icons\">history</span>\n            </div>\n            <div>Historique</div>\n        </div>\n    );\n}\n\nexport default ButtonHistory;\n","function ButtonProfil() {\n    return (\n        <div>\n            <div>\n                <span className=\"material-icons\">person</span>\n            </div>\n            <div>Profil</div>\n        </div>\n    );\n}\n\nexport default ButtonProfil;\n","import { React } from \"react\";\n\nfunction ButtonScan() {\n    return (\n        <div>\n            <div className=\"navbar-scan-icon\">\n                <span className=\"material-icons\">qr_code_scanner</span>\n            </div>\n        </div>\n    );\n}\n\nexport default ButtonScan;\n","import React, { Component } from \"react\";\nimport Quagga from \"@ericblade/quagga2\";\nimport ImageUploader from \"react-images-upload\";\n\nclass Scanner extends Component {\n    state = {\n        error: false,\n        noBackCamera: false,\n        usedCamera: 0,\n        devices: [],\n        processingImage: 0,\n        text: 0,\n        mutlipleTracks: false,\n        no_permission: false,\n        locked: false,\n    };\n\n    locked = false;\n\n    switchCamera = async () => {\n        if (!this.state.locked) {\n            this.setState({ locked: true });\n            let num = this.state.usedCamera + 1;\n            if (num >= this.state.devices.length) {\n                num = 0;\n            }\n            this.setState({ usedCamera: num });\n            Quagga.stop();\n            this.QuaggaInit(this.state.devices[num].deviceId);\n            await delay(800);\n            this.setState({ locked: false });\n        }\n    };\n\n    componentDidMount = async () => {\n        if (this.props.capabilities) {\n            this.setState({ devices: this.props.capabilities, usedCamera: 0 });\n            this.QuaggaInit(this.props.capabilities[0]);\n        } else {\n            this.QuaggaInit({ facingMode: \"environment\" });\n        }\n    };\n\n    QuaggaInit = (capabilities) => {\n        console.log(capabilities);\n        if (Object.keys(capabilities).length == 0) {\n            this.setState({ text: \"vide\" });\n        }\n        Quagga.init(\n            {\n                inputStream: {\n                    type: \"LiveStream\",\n                    constraints: {\n                        ...capabilities,\n                    },\n                },\n                locator: {\n                    patchSize: \"normal\",\n                    halfSample: false,\n                },\n                locate: false,\n                area: {\n                    top: \"40%\",\n                    right: \"25%\",\n                    left: \"25%\",\n                    bottom: \"40%\",\n                },\n                numOfWorkers: window.navigator.hardwareConcurrency || 2,\n                decoder: {\n                    readers: [\"ean_reader\"],\n                },\n                multiple: false,\n                singleChannel: false,\n            },\n            (err) => {\n                if (err) {\n                    console.log(err);\n                    if (err == \"NotAllowedError: Permission denied\") {\n                        this.setState({ no_permission: true });\n                    }\n                    this.setState({ error: true, text: err + \" \" + JSON.stringify(capabilities) });\n                    return false;\n                }\n                Quagga.start();\n            }\n        );\n        this.props.setQuagga(Quagga);\n        console.log(Quagga.CameraAccess);\n        Quagga.onDetected(this._onDetected);\n    };\n\n    componentWillUnmount() {\n        Quagga.offDetected(this._onDetected);\n    }\n\n    _onDetected = async (result) => {\n        let stop = await this.props.onDetected(result);\n        console.log(stop);\n        if (stop) {\n            // Quagga.stop();\n        }\n    };\n\n    onDrop = (image) => {\n        try {\n            if (this.state.processingImage != 1) {\n                this.setState({ processingImage: 1 });\n                console.log(image[image.length - 1]);\n                let reader = new FileReader();\n                reader.readAsDataURL(image[image.length - 1]);\n                reader.onloadend = () => {\n                    Quagga.decodeSingle(\n                        {\n                            decoder: {\n                                readers: [\"ean_reader\"], // List of active readers\n                            },\n                            locate: true, // try to locate the barcode in the image\n                            src: reader.result, //image[image.length - 1], // or 'data:image/jpg;base64,' + data\n                        },\n                        (result) => {\n                            console.log(result);\n                            if (result) {\n                                this._onDetected(result);\n                                this.setState({ processingImage: 2 });\n                                console.log(\"result\", result.codeResult?.code);\n                            } else {\n                                console.log(\"not detected\");\n                                this.setState({ processingImage: 3 });\n                            }\n                        }\n                    );\n                };\n            }\n        } catch (err) {\n            console.log(err);\n            this.setState({ processingImage: 4 });\n        }\n    };\n\n    setImport = () => {\n        this.setState({ error: !this.state.error });\n    };\n\n    render() {\n        let textImage = <React.Fragment></React.Fragment>;\n\n        if (this.state.processingImage == 1) {\n            textImage = (\n                <React.Fragment>\n                    <p>Chargement en cours...</p>\n                </React.Fragment>\n            );\n        }\n        if (this.state.processingImage == 2) {\n            textImage = (\n                <React.Fragment>\n                    <p>Ce produit n'existe pas dans la base de données</p>\n                </React.Fragment>\n            );\n        }\n        if (this.state.processingImage == 3) {\n            textImage = (\n                <React.Fragment>\n                    <p>Code barre non trouvé sur l'image, merci de réessayer</p>\n                </React.Fragment>\n            );\n        }\n        if (this.state.processingImage == 4) {\n            textImage = (\n                <React.Fragment>\n                    <p>\n                        Mauvais format ou fichier trop grand, merci de réessayer. <br />\n                        Taille max : 5mb <br />\n                        Formats: jpg, png, gif\n                    </p>\n                </React.Fragment>\n            );\n        }\n        return (\n            <React.Fragment>\n                <div className=\"interactive-wrapper\">\n                    <div id=\"interactive\" className={this.state.error ? \"hidden\" : \"viewport\"}>\n                        <div className=\"a\" />\n                        <div className=\"b\" />\n                        <div className=\"c\" />\n                        <div className=\"d\" />\n                    </div>\n                    {this.state.devices?.length > 1 ? (\n                        <button className=\"code-switch-camera\" onClick={this.switchCamera}>\n                            <span\n                                className=\"material-icons\"\n                                style={{ color: this.state.locked ? \"#777777\" : \"#1b3044\" }}\n                            >\n                                cameraswitch\n                            </span>\n                            {this.state.usedCamera}\n                        </button>\n                    ) : (\n                        <React.Fragment />\n                    )}\n\n                    {/* <button className=\"code-switch-camera\" onClick={this.setImport}>\n                        <span className=\"material-icons green\">\n                            {!this.state.error ? \"upload_file\" : \"flip\"}\n                        </span>\n                    </button> */}\n\n                    {this.state.error ? (\n                        <div className=\"scan-error\">\n                            <ImageUploader\n                                withIcon={true}\n                                withPreview={false}\n                                buttonText={\n                                    <div className=\"button-import\">\n                                        <div className=\"material-icons\">add_a_photo</div>\n                                        <p>Importer une photo</p>\n                                    </div>\n                                }\n                                onChange={this.onDrop}\n                                label={\"\"}\n                                imgExtension={[\".jpg\", \".gif\", \".png\", \".jpeg\"]}\n                                maxFileSize={5242880}\n                                labelClass={\"import-label\"}\n                            />\n                            <p className=\"red\">{textImage}</p>\n                            <p className=\"error-message-import\">\n                                {/* Il semblerait que votre caméra ne soit pas détectée. Vous pouvez\n                            importer une photo de votre bibliothèque, ou essayer un autre\n                            navigateur. <br />\n                            <br /> */}\n                                {/* Si le problème persiste, contactez-nous{\" \"}\n                            <a href=\"mailto:contact@lowympact.fr?Subject=Lowympact-camera not working\">\n                                via ce lien\n                            </a> */}\n                                {/* {\"code d'erreur : \" + this.state.text} */}\n                                {this.state.no_permission ? (\n                                    <div className=\"no-permission\">\n                                        L'accès à votre caméra est bloqué : Vous pouvez l'autoriser\n                                        dans les paramètres de votre navigateur pour accéder au\n                                        scanner\n                                    </div>\n                                ) : (\n                                    <React.Fragment />\n                                )}\n                                <br />\n                            </p>\n                        </div>\n                    ) : (\n                        <React.Fragment />\n                    )}\n                    {this.state.mutlipleTracks ? (\n                        <h1 className=\"debug\">If you see this, tell me</h1>\n                    ) : (\n                        \"\"\n                    )}\n                    <div className=\"debug\">{this.state.text}</div>\n                </div>\n            </React.Fragment>\n        );\n    }\n}\n\nexport default Scanner;\n\nconst delay = (ms) => new Promise((res) => setTimeout(res, ms));\n","import React, { Component } from \"react\";\nimport Scanner from \"./Scanner\";\nimport QrReader from \"react-qr-reader\";\nimport { Link } from \"react-router-dom\";\nimport \"./Scan.css\";\nimport \"../../pages/History.css\";\n\nclass Scan extends Component {\n    state = {\n        scanning: true,\n        status: \"\",\n        results: [],\n        usedCameraId: \"3f6fc4177028f25c3e8215f4444838450630b8d656c627ef511346545d37f302\",\n        devices: [],\n        reading: false, //false : barcode - true: qrcode\n        barcode: undefined,\n        bcProductId: undefined,\n        Quagga: undefined,\n        product: undefined,\n        online: window.navigator.onLine,\n    };\n\n    componentDidMount = () => {\n        window.addEventListener(\"offline\", this.updateNetwork);\n        window.addEventListener(\"online\", this.updateNetwork);\n    };\n\n    updateNetwork = () => {\n        this.setState({ online: window.navigator.onLine });\n    };\n\n    setQuagga = (quagga) => {\n        if (this.state.Quagga) {\n            this.state.Quagga.stop();\n        }\n        this.setState({ Quagga: quagga });\n    };\n\n    _onDetected = async (res) => {\n        if (res) {\n            console.log(res);\n            if (res.codeResult && res.codeResult.code) {\n                this.setState({\n                    results: [res],\n                    scanning: true,\n                    status: \"waiting\",\n                });\n                let response = await fetch(\n                    `https://world.openfoodfacts.org/api/v0/product/${res.codeResult.code}.json/`\n                );\n                let result = await response.json();\n                console.log(result);\n                if (result.status !== 0) {\n                    this.setState({\n                        scanning: true,\n                        status: \"found\",\n                        product: result,\n                        barcode: res.codeResult.code,\n                    });\n                    // this.props.showScanner(false);\n                    // if (this.state.Quagga) this.state.Quagga.stop();\n                    return true;\n                } else {\n                    this.setState(\n                        {\n                            scanning: true,\n                            status: \"not found\",\n                        },\n                        async () => {\n                            await delay(3000);\n                            this.setState({\n                                scanning: true,\n                                status: undefined,\n                            });\n                        }\n                    );\n\n                    return false;\n                }\n            }\n        }\n    };\n    // For QR CODE Scanner, not used\n    handleScan = (data) => {\n        if (data) {\n            let arr = data.split(\"/\");\n            if (arr.length > 1) {\n                this.setState({\n                    scanning: false,\n                    barcode: arr[4],\n                    bcProductId: arr[5],\n                    status: \"found\",\n                });\n            }\n            // if (this.state.Quagga) this.state.Quagga.stop();\n        }\n    };\n    handleError = (err) => {\n        console.error(err);\n    };\n\n    displayQrCode = () => {\n        if (this.state.status !== \"found\") {\n            return (\n                <QrReader\n                    delay={300}\n                    onError={this.handleError}\n                    onScan={this.handleScan}\n                    style={{ width: \"100%\" }}\n                    showViewFinder={false}\n                />\n            );\n        } else {\n            return <React.Fragment />;\n        }\n    };\n\n    displayBarCode = () => {\n        // if (this.state.status !== \"found\") {\n        return (\n            <React.Fragment>\n                {this.state.scanning ? (\n                    <Scanner\n                        onDetected={this._onDetected}\n                        setQuagga={this.setQuagga}\n                        usedCameraId={this.usedCameraId}\n                        capabilities={this.props.capabilities}\n                    />\n                ) : null}\n            </React.Fragment>\n        );\n        // } else {\n        //     return <React.Fragment />;\n        // }\n    };\n\n    switchReader = () => {\n        if (this.state.reading) this.setState({ reading: false });\n        else {\n            if (this.state.Quagga) this.state.Quagga.stop();\n            this.setState({ reading: true });\n        }\n    };\n\n    displayPopup = () => {\n        console.log(this.state.product);\n        let retour = <React.Fragment />;\n        let item = this.state.product?.product;\n        if (item) {\n            retour = (\n                <Link\n                    className=\"history-item\"\n                    to={\"/products/\" + this.state.product.code}\n                    onClick={() => {\n                        if (this.state.Quagga) this.state.Quagga.stop();\n                        this.props.showScanner(false);\n                    }}\n                >\n                    <div className=\"history-img-container\">\n                        <img src={item.image_url} alt=\"\" />\n                    </div>\n                    <div className=\"history-name-container\">\n                        <div className=\"history-name\">{item.product_name}</div>\n                        <div className=\"history-brand\">{item.brands}</div>\n                    </div>\n                    <div className=\"history-label-container\">\n                        <div style={{ color: getColor(item.ecoscore_score) }}>●</div>\n                        <div className=\"history-label\">\n                            {[\"a\", \"b\", \"c\", \"d\", \"e\"].indexOf(item.ecoscore_grade) == -1\n                                ? \"\"\n                                : item.ecoscore_grade}\n                        </div>\n                    </div>\n                    <div style={{ marginRight: \"10px\", color: \"rgb(41,72,102)\" }}>{\">\"}</div>\n                </Link>\n            );\n        } else if (this.state.status == \"waiting\") {\n            retour = (\n                <div className=\"history-item\">\n                    <div class=\"skeleton-8wwpnkj1sj9\"></div>\n                </div>\n            );\n        } else if (this.state.status == \"not found\") {\n            retour = (\n                <div className=\"history-item\">\n                    <div className=\"history-img-container\">\n                        <div className=\"grey-square\"></div>\n                    </div>\n                    <div className=\"history-name-container\">\n                        <div className=\"history-name\">Article non trouvé</div>\n                        <div className=\"history-brand\"></div>\n                    </div>\n                    <div className=\"history-label-container\"></div>\n                    <div style={{ marginRight: \"10px\", color: \"rgb(41,72,102)\" }}>{\">\"}</div>\n                </div>\n            );\n        }\n        return retour;\n    };\n\n    render() {\n        return (\n            <div\n                className={\n                    this.props.hideScannerAnimation\n                        ? \"code-reader-container hide-scanner\"\n                        : \"code-reader-container\"\n                }\n            >\n                {!this.state.online ? (\n                    <div className=\"offline-container\">\n                        {\" \"}\n                        <span style={{ color: \"red\" }}>●</span> Pas de connexion\n                    </div>\n                ) : (\n                    <React.Fragment />\n                )}\n                <span\n                    className=\"close material-icons\"\n                    onClick={() => {\n                        if (this.state.Quagga) this.state.Quagga.stop();\n\n                        this.props.showScanner(false);\n                    }}\n                >\n                    close\n                </span>\n                {this.displayBarCode()}\n                <div className=\"scan-result-container\">\n                    <div className=\"results\">{this.displayPopup()}</div>\n                </div>\n            </div>\n        );\n        //}\n    }\n}\n\nexport default Scan;\n\nfunction getColor(note) {\n    if (note > 67) {\n        return \"green\";\n    }\n    if (note <= 33) {\n        return \"red\";\n    }\n    return \"yellow\";\n}\n\nconst delay = (ms) => new Promise((res) => setTimeout(res, ms));\n\n// if (\n//     this.state.barcode &&\n//     this.state.bcProductId &&\n//     (this.props.barcode !== this.state.barcode ||\n//         this.props.bcProductId !== this.state.bcProductId)\n// ) {\n//     return (\n//         <Redirect to={\"/products/\" + this.state.barcode + \"/\" + this.state.bcProductId} />\n//     );\n// }\n// if (this.state.barcode && this.props.barcode !== this.state.barcode) {\n//     return <Redirect to={\"/products/\" + this.state.barcode} />;\n// } else {\n{\n    /* <div className=\"code-switch\" onClick={this.switchReader}>\n                        <div className=\"span-code-switch\">\n                            <span\n                                className={\n                                    this.state.reading ? \"material-icons\" : \"material-icons green\"\n                                }\n                            >\n                                view_week\n                            </span>\n                            <span>Barcode</span>\n                        </div>\n                        <Switch\n                            onChange={this.switchReader}\n                            uncheckedIcon={false}\n                            checkedIcon={false}\n                            checked={this.state.reading}\n                            onColor={\"#888\"}\n                            offColor={\"#888\"}\n                        />\n                        <div className=\"span-code-switch\">\n                            <span\n                                className={\n                                    !this.state.reading ? \"material-icons\" : \"material-icons green\"\n                                }\n                            >\n                                qr_code_scanner\n                            </span>\n                            <span>QR Code</span>\n                        </div>\n                    </div> */\n}\n{\n    /* {this.state.reading ? this.displayQrCode() : this.displayBarCode()} */\n}\n","import \"./Navbar.css\";\nimport React from \"react\";\nimport ButtonHistory from \"../Button/ButtonHistory\";\nimport ButtonProfil from \"../Button/ButtonProfil\";\nimport ButtonScan from \"../Button/ButtonScan\";\n// import Scan from \"../Scan/Scan\";\nimport Scan from \"../Scan/Scan\";\n// import { ScanSettings } from \"scandit-sdk\";\nimport { Link } from \"react-router-dom\";\n\nclass Navbar extends React.Component {\n    state = {\n        showScanner: false,\n        barcode: undefined,\n        bcProductId: undefined,\n        height: 0,\n        capabilities: undefined,\n        hideScannerAnimation: false,\n    };\n\n    componentDidMount = async () => {\n        this.updateWindowDimensions();\n        window.addEventListener(\"resize\", this.updateWindowDimensions);\n        try {\n            const queryString = window.location.search;\n            const urlParams = new URLSearchParams(queryString);\n            const camera = urlParams.get(\"camera\");\n            if (\n                navigator.getUserMedia ||\n                navigator.webkitGetUserMedia ||\n                navigator.mozGetUserMedia ||\n                navigator.msGetUserMedia\n            ) {\n                // On vient récupérer les flux vidéo existants\n                let devices = await navigator.mediaDevices\n                    .enumerateDevices()\n                    .then(function (devices) {\n                        return devices.filter((d) => d.kind === \"videoinput\");\n                    });\n\n                //On prend seulement les caméras arrière\n                //(toutes les caméra si caméra arrière non existante)\n                let videoDevices = devices.filter((d) => d.label.match(/back/) != null);\n                if (videoDevices.length === 0) {\n                    videoDevices = devices;\n                }\n                console.log(videoDevices);\n                // Get all camera capabilities\n                let capabilities = videoDevices.map(async (device) => {\n                    return await navigator.mediaDevices\n                        .getUserMedia({\n                            video: { deviceId: { exact: device.deviceId } },\n                        })\n                        .then(\n                            (stream) => {\n                                let a = stream.getVideoTracks().map((track) => {\n                                    console.log(track);\n                                    if (track.getCapabilities) {\n                                        return track.getCapabilities();\n                                    } else {\n                                        return [{}];\n                                    }\n                                });\n                                stream.getTracks().forEach((track) => track.stop());\n                                if (a && a.length > 0) return a[0];\n                                else return {};\n                            },\n                            (err) => console.log(err)\n                        );\n                });\n                let capa = await Promise.all(capabilities);\n                if (capa && capa.length > 0) {\n                    //On trie les capabilities pour mettre les meilleurs résolutions en premier\n                    capa.sort((a, b) => {\n                        if ((a.width.max + a.height.max) / 2 > (b.width.max + b.height.max) / 2)\n                            return -1;\n                        else return 1;\n                    });\n                }\n\n                if (capa[0]) {\n                    this.setState({ capabilities: capa });\n                } else this.setState({ capabilities: undefined });\n            } else {\n                this.setState({ capabilities: undefined });\n            }\n        } catch (err) {\n            this.setState({ capabilities: undefined });\n        }\n    };\n\n    componentWillUnmount() {\n        window.removeEventListener(\"resize\", this.updateWindowDimensions);\n    }\n\n    updateWindowDimensions = () => {\n        this.setState({ height: window.innerHeight });\n    };\n\n    handleScannerButton = (bool) => {\n        if (bool === false) {\n            this.setState({ hideScannerAnimation: true }, async () => {\n                await delay(300);\n                this.setState({ showScanner: bool, hideScannerAnimation: false });\n            });\n        } else {\n            this.setState({ showScanner: bool });\n        }\n    };\n\n    // handleBarcode = (res) => {\n    //     if (res) {\n    //         //détecté par barcode scanner\n    //         let arr = res.split(\"/\");\n    //         if (arr.length > 1) {\n    //             this.setState({\n    //                 barcode: arr[4],\n    //                 bcProductId: arr[5],\n    //                 showScanner: false,\n    //             });\n    //         } else {\n    //             this.setState({\n    //                 barcode: arr[0],\n    //                 showScanner: false,\n    //                 bcProductId: undefined,\n    //             });\n    //         }\n    //     }\n    // };\n\n    render = () => {\n        if (this.state.height < 550) {\n            return <React.Fragment />;\n        }\n        // if (\n        //     this.state.barcode &&\n        //     this.state.bcProductId &&\n        //     (this.props.barcode !== this.state.barcode ||\n        //         this.props.bcProductId !== this.state.bcProductId)\n        // ) {\n        //     return (\n        //         <Redirect to={\"/products/\" + this.state.barcode + \"/\" + this.state.bcProductId} />\n        //     );\n        // }\n\n        // if (this.state.barcode && this.props.barcode !== this.state.barcode) {\n        //     return <Redirect to={\"/products/\" + this.state.barcode} />;\n        // }\n\n        if (!this.state.showScanner) {\n            return (\n                <React.Fragment>\n                    <div className=\"navbar-container\">\n                        <Link\n                            to=\"/history\"\n                            className={\n                                window.location.pathname === \"/history\"\n                                    ? \"navbar-link navbar-text-left navbar-selected\"\n                                    : \"navbar-link navbar-text-left \"\n                            }\n                        >\n                            <ButtonHistory />\n                        </Link>\n                        <div onClick={() => this.handleScannerButton(true)}>\n                            <div className=\"navbar-circle\">\n                                <ButtonScan />\n                            </div>\n                        </div>\n                        <span className=\"navbar-scan-text\">Scan</span>\n                        <Link\n                            to=\"/profil\"\n                            className={\n                                window.location.pathname === \"/profil\"\n                                    ? \"navbar-link navbar-text-right navbar-selected\"\n                                    : \"navbar-link navbar-text-right \"\n                            }\n                        >\n                            <ButtonProfil />\n                        </Link>\n                    </div>\n                </React.Fragment>\n            );\n        } else {\n            return (\n                // <Scan\n                //     onCrossClicked={this.handleScannerButton}\n                //     // playSoundOnScan={true}\n                //     vibrateOnScan={true}\n                //     enableTorchToggle={true}\n                //     enablePinchToZoom={true}\n                //     enableCameraSwitcher={true}\n                //     guiStyle={\"viewfinder\"}\n                //     scanSettings={\n                //         new ScanSettings({\n                //             enabledSymbologies: [\n                //                 \"qr\",\n                //                 \"ean8\",\n                //                 \"ean13\",\n                //                 \"upca\",\n                //                 \"upce\",\n                //                 \"code128\",\n                //                 \"code39\",\n                //                 \"code93\",\n                //                 \"itf\",\n                //             ],\n                //             codeDuplicateFilter: 1000,\n                //         })\n                //     }\n                //     onScan={(scanResult) => {\n                //         //console.log(scanResult.barcodes[0].data);\n                //         this.handleBarcode(scanResult.barcodes[0].data);\n                //     }}\n                //     onError={(error) => {\n                //         console.error(error.message);\n                //     }}\n                // />\n                <Scan\n                    hideScannerAnimation={this.state.hideScannerAnimation}\n                    showScanner={this.handleScannerButton}\n                    history={this.props.history}\n                    capabilities={this.state.capabilities}\n                />\n            );\n        }\n    };\n}\n\nexport default Navbar;\n\nconst delay = (ms) => new Promise((res) => setTimeout(res, ms));\n"],"sourceRoot":""}