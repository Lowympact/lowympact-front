{"version":3,"sources":["components/Button/ButtonSignin.js","pages/Signin.js","assets/images/fruits-vegetables-basket-by-oblik-studio.svg","components/Install/UseShouldShowPrompt.js","components/Install/UseIosInstallPrompt.js","components/Install/UseWebInstallPrompt.js","components/Install/InstallPWA.js"],"names":["ButtonSignin","Signin","props","handleSubmit","e","preventDefault","state","errors","email","password","length","push","validate","setState","Connect","componentDidMount","Verify","isExpired","token","localStorage","getItem","decodedToken","jwt","decode","complete","dateNow","Date","payload","exp","getTime","redirect","fetch","method","headers","body","JSON","stringify","then","response","json","data","error","loginSuccessful","err","success","setItem","_id","onPasswordChange","passwordInput","value","emailInput","this","to","Fragment","Header","className","src","fruits","alt","onChange","ref","type","onClick","InstallPWA","Component","setInstallPromptSeenToday","promptName","today","moment","toISOString","getUserShouldBePromptedToInstall","daysToWaitBeforePromptingAgain","lastPrompt","getInstallPromptLastSeenAt","daysSinceLastPrompt","diff","isNaN","UseShouldShowPrompt","useState","userShouldBePromptedToInstall","setUserShouldBePromptedToInstall","handleUserSeeingInstallPrompt","isIOS","navigator","standalone","ua","window","userAgent","isIPad","match","isIPhone","UseIosInstallPrompt","useShouldShowPrompt","UseWebInstallPrompt","installPromptEvent","setInstallPromptEvent","useEffect","beforeInstallPromptHandler","event","addEventListener","removeEventListener","prompt","userChoice","choice","outcome","useIosInstallPrompt","iosInstallPrompt","handleIOSInstallDeclined","useWebInstallPrompt","webInstallPrompt","handleWebInstallDeclined","handleWebInstallAccepted","style","borderTopRightRadius","borderTopLeftRadius","backgroundColor","marginTop","width"],"mappings":"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","file":"static/js/12.427c86f7.chunk.js","sourcesContent":["import React from \"react\";\n\nfunction ButtonSignin() {\n  return (\n  <div>\n    Me connecter\n  </div>\n  );\n}\n\nexport default ButtonSignin;","import React, { Component } from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport ButtonSignin from \"../components/Button/ButtonSignin\";\nimport fruits from \"../assets/images/fruits-vegetables-basket-by-oblik-studio.svg\";\nimport Header from \"../components/Header/Header\";\nimport blob from \"../assets/images/bitmap.png\";\nimport \"./Login.css\";\nimport { Link } from \"react-router-dom\";\nimport jwt from \"jsonwebtoken\";\nimport InstallPWA from \"../components/Install/InstallPWA\";\n\nfunction validate(email, password) {\n    const errors = [];\n\n    if (email.length === 0) {\n        errors.push(<p>Saissez votre adresse e-mail</p>);\n    }\n    if (password.length === 0) {\n        errors.push(<p>Saissez votre mot de passe</p>);\n    }\n    return errors;\n}\n\nclass Signin extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            email: \"\",\n            password: \"\",\n            errors: [],\n            redirect: false,\n            loginSuccessful: null,\n        };\n    }\n\n    handleSubmit = (e) => {\n        e.preventDefault();\n        const { email, password } = this.state;\n        const errors = validate(email, password);\n        ////console.log(email, password, errors);\n        this.setState({ errors });\n        if (errors.length === 0) {\n            this.Connect();\n        }\n    };\n\n    componentDidMount = () => {\n        this.Verify();\n    };\n\n    Verify = () => {\n        let isExpired = true;\n        const token = localStorage.getItem(\"token\");\n        if (token) {\n            var decodedToken = jwt.decode(token, { complete: true });\n            var dateNow = new Date();\n            if (decodedToken.payload.exp >= dateNow.getTime() / 1000) {\n                isExpired = false;\n            }\n        }\n        if (isExpired === false) {\n            this.setState({ redirect: true }); // redirection vers la page login\n        }\n    };\n\n    Connect = () => {\n        fetch(`https://api.lowympact.fr/api/v1/users/login`, {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n                \"api-key\": \"99d8fb95-abdd-4885-bf6c-3a81d8874043\",\n\n                //'x-access-token': localStorage.getItem('token'),\n            },\n            body: JSON.stringify({\n                email: this.state.email,\n                password: this.state.password,\n            }),\n        })\n            .then((response) => response.json())\n            .then((data) => {\n                ////console.log(data);\n                if (data.error === \"No user found\") {\n                    this.setState({ loginSuccessful: false });\n                    let err = this.state.errors;\n                    err.push(<p>Utilisateur Inconnu</p>);\n                    this.setState({ errors: err });\n                } else if (data.error === \"Incorrect password\" || !data.success) {\n                    this.setState({ loginSuccessful: false });\n                    let err = this.state.errors;\n                    err.push(<p>Mot de passe Incorrect</p>);\n                    this.setState({ errors: err });\n                } else {\n                    // //console.log(data);\n                    localStorage.setItem(\"token\", data.token);\n                    localStorage.setItem(\"userId\", data._id);\n                    this.setState({ loginSuccessful: true, redirect: true });\n                    //this.props.history.goBack();\t// a ajouter pour être redirigé vers la page initialement\n                    // demandée. On doit cependant rediriger si la page demandée\n                    // était la page de login\n                }\n            });\n    };\n\n    onPasswordChange = () => {\n        this.setState({\n            password: this.passwordInput.value,\n            email: this.emailInput.value,\n        });\n    };\n\n    render() {\n        if (this.state.redirect) {\n            return <Redirect to=\"/history\" />;\n        }\n        return (\n            <React.Fragment>\n                <Link to=\"/login\">\n                    <Header />\n                </Link>\n                <div className=\"logo-fruits\">\n                    <img src={fruits} className=\"logo\" alt=\"Fruits\" />\n                </div>\n\n                <Link className=\"back-button\" to=\"/login\">\n                    {\"< Retour\"}\n                </Link>\n                <div className=\"signin-container\">\n                    <form className=\"forms\">\n                        <label>\n                            email\n                            <input\n                                className=\"input-forms\"\n                                value={this.state.email}\n                                onChange={this.onPasswordChange}\n                                ref={(ref) => (this.emailInput = ref)}\n                                type=\"email\"\n                            />\n                        </label>\n                        <label>\n                            mot de passe\n                            <input\n                                className=\"input-forms\"\n                                value={this.state.password}\n                                onChange={this.onPasswordChange}\n                                ref={(ref) => (this.passwordInput = ref)}\n                                type=\"password\"\n                            />\n                        </label>\n                    </form>\n                    <label className=\"errors-signin\">{this.state.errors}</label>\n                    <div className=\"button-signin\" onClick={this.handleSubmit}>\n                        <ButtonSignin />\n                    </div>\n                </div>\n                <InstallPWA />\n            </React.Fragment>\n        );\n    }\n}\nexport default Signin;\n","export default __webpack_public_path__ + \"static/media/fruits-vegetables-basket-by-oblik-studio.7d5e1c64.svg\";","import { useState } from \"react\";\nimport moment from \"moment\";\n\nconst getInstallPromptLastSeenAt = (promptName) => localStorage.getItem(promptName);\n\nconst setInstallPromptSeenToday = (promptName) => {\n    const today = moment().toISOString();\n    localStorage.setItem(promptName, today);\n};\n\nfunction getUserShouldBePromptedToInstall(promptName, daysToWaitBeforePromptingAgain) {\n    const lastPrompt = moment(getInstallPromptLastSeenAt(promptName));\n    const daysSinceLastPrompt = moment().diff(lastPrompt, \"days\");\n    return isNaN(daysSinceLastPrompt) || daysSinceLastPrompt > daysToWaitBeforePromptingAgain;\n}\n\nconst UseShouldShowPrompt = (promptName, daysToWaitBeforePromptingAgain = 30) => {\n    const [userShouldBePromptedToInstall, setUserShouldBePromptedToInstall] = useState(\n        getUserShouldBePromptedToInstall(promptName, daysToWaitBeforePromptingAgain)\n    );\n\n    const handleUserSeeingInstallPrompt = () => {\n        setUserShouldBePromptedToInstall(false);\n        setInstallPromptSeenToday(promptName);\n    };\n\n    return [userShouldBePromptedToInstall, handleUserSeeingInstallPrompt];\n};\nexport default UseShouldShowPrompt;\n","import useShouldShowPrompt from \"./UseShouldShowPrompt\";\n\nconst iosInstallPromptedAt = \"iosInstallPromptedAt\";\n\nconst isIOS = () => {\n    // @ts-ignore\n    if (navigator.standalone) {\n        //user has already installed the app\n        return false;\n    }\n    const ua = window.navigator.userAgent;\n    const isIPad = !!ua.match(/iPad/i);\n    const isIPhone = !!ua.match(/iPhone/i);\n    return isIPad || isIPhone;\n};\n\nconst UseIosInstallPrompt = () => {\n    const [userShouldBePromptedToInstall, handleUserSeeingInstallPrompt] =\n        useShouldShowPrompt(iosInstallPromptedAt);\n\n    return [isIOS() && userShouldBePromptedToInstall, handleUserSeeingInstallPrompt];\n};\nexport default UseIosInstallPrompt;\n","import { useState, useEffect } from \"react\";\nimport useShouldShowPrompt from \"./UseShouldShowPrompt\";\n\nconst webInstallPromptedAt = \"webInstallPromptedAt\";\n\nconst UseWebInstallPrompt = () => {\n    const [installPromptEvent, setInstallPromptEvent] = useState();\n    const [userShouldBePromptedToInstall, handleUserSeeingInstallPrompt] =\n        useShouldShowPrompt(webInstallPromptedAt);\n\n    useEffect(() => {\n        const beforeInstallPromptHandler = (event) => {\n            event.preventDefault();\n\n            // check if user has already been asked\n            if (userShouldBePromptedToInstall) {\n                // store the event for later use\n                setInstallPromptEvent(event);\n                localStorage.setItem(\"installPrompt\", event);\n            }\n        };\n        window.addEventListener(\"beforeinstallprompt\", beforeInstallPromptHandler);\n        return () => window.removeEventListener(\"beforeinstallprompt\", beforeInstallPromptHandler);\n    }, [userShouldBePromptedToInstall]);\n\n    const handleInstallDeclined = () => {\n        handleUserSeeingInstallPrompt();\n        setInstallPromptEvent(null);\n    };\n\n    const handleInstallAccepted = () => {\n        // show native prompt\n        prompt = localStorage.getItem(\"installPrompt\");\n        prompt.prompt();\n\n        // decide what to do after the user chooses\n        prompt.userChoice.then((choice) => {\n            // if the user declined, we don't want to show the prompt again\n            if (choice.outcome !== \"accepted\") {\n                handleUserSeeingInstallPrompt();\n            }\n            localStorage.getItem(\"installPrompt\", null);\n        });\n    };\n    return [installPromptEvent, handleInstallDeclined, handleInstallAccepted];\n};\nexport default UseWebInstallPrompt;\n","import React from \"react\";\nimport useIosInstallPrompt from \"./UseIosInstallPrompt\";\nimport useWebInstallPrompt from \"./UseWebInstallPrompt\";\nimport \"./InstallPWA.css\";\n\nconst InstallPWA = () => {\n    const [iosInstallPrompt, handleIOSInstallDeclined] = useIosInstallPrompt();\n    const [webInstallPrompt, handleWebInstallDeclined, handleWebInstallAccepted] =\n        useWebInstallPrompt();\n\n    if (!iosInstallPrompt && !webInstallPrompt) {\n        return null;\n    }\n    return (\n        <div className=\"install-popup\">\n            <div className=\"install-popup-wrapper\">\n                <img\n                    className=\"mx-auto\"\n                    style={{\n                        borderTopRightRadius: \"50%\",\n                        borderTopLeftRadius: \"50%\",\n                        backgroundColor: \"#fff\",\n                        marginTop: \"-50px\",\n                    }}\n                    width=\"100px\"\n                    src=\"pwa-512x512.png\"\n                    alt=\"Icon\"\n                />\n                <div>\n                    {iosInstallPrompt && (\n                        <>\n                            <div className=\"text-center\">\n                                <h3>Téléchargez l'application</h3>\n                            </div>\n                            <div className=\"text-center\">\n                                Cliquez sur {\"  \"}\n                                <span className=\"material-icons\">ios_share</span>\n                                {\"  \"}puis &quot;Ajouter à l'écran d'accueil&quot;\n                            </div>\n                            <div className=\"button-dissmiss\">\n                                <button onClick={handleIOSInstallDeclined}>Pas maintenant</button>\n                            </div>\n                        </>\n                    )}\n                    {webInstallPrompt && (\n                        <>\n                            <div className=\"text-center\">\n                                <h3>Ne passez plus à côté des alternatives durables</h3>\n                            </div>\n                            <div className=\"android-wrapper\">\n                                <button\n                                    className=\"install-button\"\n                                    onClick={handleWebInstallAccepted}\n                                >\n                                    Installer l'application\n                                </button>\n                                <button\n                                    className=\"dont-install-button\"\n                                    onClick={handleWebInstallDeclined}\n                                >\n                                    Pas maintenant\n                                </button>\n                            </div>\n                        </>\n                    )}\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default InstallPWA;\n"],"sourceRoot":""}