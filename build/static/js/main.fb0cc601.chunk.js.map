{
    "version": 3,
    "sources": [
        "assets/images/fruits-vegetables-basket-by-oblik-studio.svg",
        "components/Button/ButtonHistory.js",
        "components/Button/ButtonProfil.js",
        "components/Button/ButtonScan.js",
        "components/Scan/Scanner.js",
        "components/Scan/Scan.js",
        "components/Navbar/Navbar.js",
        "assets/images/logo.svg",
        "assets/images/bitmap.png",
        "components/Header/Header.js",
        "pages/History.js",
        "pages/Error404.js",
        "components/Button/ButtonCreateAccount.js",
        "components/Button/ButtonLogin.js",
        "components/Button/ButtonNoAccount.js",
        "pages/Login.js",
        "components/Traceability/leaflet-curve/leaflet.curve.js",
        "components/Traceability/leaflet-curve/Curve.js",
        "components/Traceability/Traceability.js",
        "components/Environnement/Alternatives.js",
        "components/Environnement/Origins.js",
        "components/Environnement/EmpreinteCarbone.js",
        "components/Environnement/Environnement.js",
        "pages/Product.js",
        "components/Labels/Labels.js",
        "pages/Profil.js",
        "components/Button/ButtonSignup.js",
        "pages/Signup.js",
        "components/Button/ButtonSignin.js",
        "pages/Signin.js",
        "components/Button/ButtonChangePassword.js",
        "assets/users/users.js",
        "pages/ProfileConfiguration.js",
        "components/Charts/DoughnutChartEcoScore.js",
        "components/Charts/BarChartCarbonImpact.js",
        "pages/Statistics.js",
        "App.js",
        "reportWebVitals.js",
        "index.js"
    ],
    "names": [
        "ButtonHistory",
        "className",
        "ButtonProfil",
        "ButtonScan",
        "Scanner",
        "state",
        "error",
        "usedCamera",
        "devices",
        "switchCamera",
        "num",
        "length",
        "setState",
        "Quagga",
        "stop",
        "QuaggaInit",
        "deviceId",
        "componentDidMount",
        "a",
        "navigator",
        "mediaDevices",
        "enumerateDevices",
        "then",
        "videoDevices",
        "forEach",
        "device",
        "kind",
        "push",
        "console",
        "log",
        "maxResolution",
        "i",
        "getUserMedia",
        "video",
        "exact",
        "stream",
        "getVideoTracks",
        "track",
        "capabilities",
        "getCapabilities",
        "height",
        "max",
        "label",
        "match",
        "usedCameraId",
        "getTracks",
        "err",
        "width",
        "init",
        "inputStream",
        "type",
        "constraints",
        "focusMode",
        "min",
        "aspectRatio",
        "locator",
        "patchSize",
        "halfSample",
        "locate",
        "area",
        "top",
        "right",
        "left",
        "bottom",
        "numOfWorkers",
        "window",
        "hardwareConcurrency",
        "decoder",
        "readers",
        "debug",
        "drawBoundingBox",
        "showFrequency",
        "drawScanline",
        "showPattern",
        "multiple",
        "singleChannel",
        "start",
        "props",
        "setQuagga",
        "onDetected",
        "_onDetected",
        "result",
        "offDetected",
        "this",
        "Fragment",
        "id",
        "onClick",
        "href",
        "Component",
        "Scan",
        "scanning",
        "status",
        "results",
        "reading",
        "barcode",
        "undefined",
        "bcProductId",
        "quagga",
        "_scan",
        "res",
        "codeResult",
        "code",
        "fetch",
        "response",
        "json",
        "showScanner",
        "handleScan",
        "data",
        "arr",
        "split",
        "handleError",
        "displayQrCode",
        "delay",
        "onError",
        "onScan",
        "style",
        "showViewFinder",
        "displayBarCode",
        "map",
        "switchReader",
        "redirect",
        "to",
        "onChange",
        "uncheckedIcon",
        "checkedIcon",
        "checked",
        "onColor",
        "offColor",
        "Navbar",
        "updateWindowDimensions",
        "innerHeight",
        "handleScannerButton",
        "bool",
        "render",
        "history",
        "location",
        "pathname",
        "addEventListener",
        "removeEventListener",
        "React",
        "Header",
        "src",
        "blob",
        "alt",
        "logo",
        "RenderHistoryItem",
        "labelColor",
        "item",
        "pathProduct",
        "name",
        "motion",
        "div",
        "initial",
        "opacity",
        "animate",
        "exit",
        "image",
        "brand",
        "color",
        "marginRight",
        "History",
        "loadLocalStorageHistory",
        "userId",
        "localStorage",
        "getItem",
        "token",
        "loadHistoryInformations",
        "method",
        "credentials",
        "headers",
        "Headers",
        "authorization",
        "items",
        "loading",
        "setItem",
        "JSON",
        "stringify",
        "parse",
        "itemList",
        "sort",
        "b",
        "Date",
        "date",
        "Object",
        "keys",
        "fruits",
        "Error404",
        "ButtonCreateAccount",
        "ButtonLogin",
        "ButtonNoAccount",
        "Login",
        "Verify",
        "queryString",
        "search",
        "urlParams",
        "URLSearchParams",
        "innerWidth",
        "get",
        "assign",
        "isExpired",
        "decodedToken",
        "jwt",
        "decode",
        "complete",
        "dateNow",
        "getTime",
        "payload",
        "exp",
        "L",
        "Curve",
        "Path",
        "extend",
        "options",
        "initialize",
        "path",
        "setOptions",
        "_initialUpdate",
        "_setPath",
        "getPath",
        "_coords",
        "setPath",
        "redraw",
        "getBounds",
        "_bounds",
        "_computeBounds",
        "lastPoint",
        "lastCommand",
        "coord",
        "bound",
        "LatLngBounds",
        "String",
        "lat",
        "latLng",
        "lng",
        "controlPoint1",
        "controlPoint2",
        "endPoint",
        "diffLat",
        "diffLng",
        "controlPoint",
        "getCenter",
        "_update",
        "_map",
        "_updatePath",
        "_renderer",
        "_updatecurve",
        "_project",
        "lastCoord",
        "curCommand",
        "curPoint",
        "_points",
        "latLngToLayerPoint",
        "curve",
        "SVG",
        "include",
        "layer",
        "_curvePointsToPath",
        "_path",
        "getTotalLength",
        "dashArray",
        "strokeDasharray",
        "strokeDashoffset",
        "points",
        "point",
        "str",
        "x",
        "y",
        "positions",
        "option",
        "getOptions",
        "fromProps",
        "toProps",
        "leafletElement",
        "setStyleIfChanged",
        "propTypes",
        "children",
        "PropTypes",
        "oneOfType",
        "arrayOf",
        "node",
        "object",
        "array",
        "isRequired",
        "withLeaflet",
        "Traceability",
        "zoom",
        "swiper",
        "currentIndex",
        "getMaterialIcon",
        "mode",
        "getTransportMode",
        "getTranslation",
        "displaySlides",
        "slides",
        "products",
        "product",
        "pastille",
        "TransportCO2Impact",
        "value",
        "transport",
        "productsOutput",
        "productName",
        "seller",
        "localisation",
        "city",
        "country",
        "buyer",
        "Math",
        "round",
        "dist",
        "handleMarkerClick",
        "latlng",
        "index",
        "elem",
        "document",
        "getElementsByClassName",
        "scrollIntoView",
        "behavior",
        "slideTo",
        "p",
        "getZoomRatio",
        "latitude",
        "longitude",
        "flyTo",
        "duration",
        "onSlideChange",
        "parseFloat",
        "long",
        "displayMarker",
        "markers",
        "icon",
        "icon2",
        "marker1",
        "lat1",
        "long1",
        "marker2",
        "lat2",
        "long2",
        "zIndex",
        "Icon",
        "iconUrl",
        "iconRetinaUrl",
        "iconSize",
        "Point",
        "Marker",
        "zIndexOffset",
        "position",
        "curves",
        "setAttribute",
        "getCurveOptions",
        "fill",
        "totalCO2Traceability",
        "toFixed",
        "Map",
        "center",
        "minZoom",
        "scrollWheelZoom",
        "dragging",
        "maxBounds",
        "maxBoundsViscosity",
        "ref",
        "getBottomRef",
        "whenCreated",
        "TileLayer",
        "attribution",
        "url",
        "spaceBetween",
        "slidesPerView",
        "centeredSlides",
        "activeIndex",
        "onSwiper",
        "toRadian",
        "degree",
        "PI",
        "origin",
        "destination",
        "distance",
        "lon1",
        "lon2",
        "deltaLat",
        "deltaLon",
        "pow",
        "sin",
        "cos",
        "asin",
        "sqrt",
        "getDistance",
        "latlng1",
        "latlng2",
        "offsetX",
        "offsetY",
        "r",
        "theta",
        "atan2",
        "r2",
        "theta2",
        "midpointX",
        "Alternatives",
        "ecoScore",
        "loadAlternatives",
        "componentDidUpdate",
        "lastProps",
        "ciqual_code",
        "alternatives",
        "success",
        "alternativesInfos",
        "c",
        "d",
        "renderListAlternatives",
        "listItems",
        "img_url",
        "RenderColor",
        "alternativesloop",
        "alternativesList",
        "alternatives_a",
        "alternatives_b",
        "alternatives_c",
        "alternatives_d",
        "eco_score",
        "alternatives_title",
        "labelLevel",
        "Origins",
        "polygon",
        "activeCountry",
        "getCountries",
        "setActiveCountry",
        "origins",
        "geo",
        "coordinates",
        "poly",
        "Polygon",
        "fillColor",
        "EmpreinteCarbone",
        "alea",
        "setAlea",
        "nb",
        "dataEcoScore",
        "agribalyse",
        "co2_total",
        "repartition",
        "percent",
        "co2_agriculture",
        "co2_transportation",
        "co2_packaging",
        "co2_processing",
        "co2_distribution",
        "co2_consumption",
        "equivalent",
        "getEquivalent",
        "circle",
        "co2",
        "Environnement",
        "materials",
        "getColor",
        "note",
        "getColorImpact",
        "getLabel",
        "getLabelImpact",
        "getLabelImpactPackaging",
        "getColorImpactPackaging",
        "displayPackagingDetailImpact",
        "adjustments",
        "packaging",
        "packagings",
        "material",
        "filter",
        "pos",
        "indexOf",
        "separator",
        "displayPackagingImpact",
        "Product",
        "params",
        "productImageUrl",
        "genericName",
        "connected",
        "productData",
        "cart",
        "countries",
        "isFlipping",
        "component",
        "bottomComponent",
        "loadCartInfo",
        "loadFromOpenFoodFacts",
        "loadProductInformations",
        "handleBarCodeUpdate",
        "traceability",
        "impact",
        "transportCO2Impact",
        "image_url",
        "product_name",
        "generic_name",
        "ecoscore_grade",
        "ecoscore_data",
        "origins_hierarchy",
        "saveHistory",
        "Authorization",
        "quantity",
        "element",
        "brands",
        "now",
        "body",
        "bcProductAddress",
        "addToCart",
        "ecoscore",
        "flip",
        "quantityDelta",
        "carbonImpact",
        "removeFromCart",
        "event",
        "imageFlip",
        "transform",
        "displayImage",
        "scoreClass",
        "handleChange",
        "newValue",
        "displayNavbar",
        "retour",
        "depth",
        "displayTranportImpact",
        "ms",
        "Promise",
        "setTimeout",
        "Profil",
        "disconnect",
        "clear",
        "displayConnectedProfil",
        "displayUnconnectedProfil",
        "ButtonSignup",
        "validEmail",
        "RegExp",
        "Signup",
        "userName",
        "email",
        "password",
        "confirmPassword",
        "errors",
        "submit",
        "signUser",
        "username",
        "_id",
        "handleSubmit",
        "e",
        "preventDefault",
        "validate",
        "displayErrors",
        "test",
        "evt",
        "target",
        "passwordConfirm",
        "ButtonSignin",
        "Signin",
        "Connect",
        "loginSuccessful",
        "onPasswordChange",
        "passwordInput",
        "emailInput",
        "ButtonChangePassword",
        "USERS",
        "ProfileConfiguration",
        "currentPassword",
        "newPassword",
        "user",
        "changeUserInfo",
        "loadUserInfo",
        "placeholder",
        "DoughnutChartEcoScore",
        "selectedSegment",
        "displayChart",
        "chart",
        "ecoScoreData",
        "cartedProduct",
        "title",
        "unknown",
        "lineWidth",
        "paddingAngle",
        "radius",
        "PieChart",
        "defaultProps",
        "animationDuration",
        "dataEntry",
        "percentage",
        "labelStyle",
        "fontSize",
        "fontFamily",
        "labelPosition",
        "segmentsStyle",
        "transition",
        "cursor",
        "segmentsShift",
        "monthNames",
        "BarChartCarbonImpact",
        "toolbar",
        "show",
        "dropShadow",
        "enabled",
        "blur",
        "plotOptions",
        "bar",
        "borderRadius",
        "horizontal",
        "xaxis",
        "categories",
        "labels",
        "fontColor",
        "text",
        "yaxis",
        "dataLabels",
        "noData",
        "colors",
        "grid",
        "lines",
        "carbonImpactData",
        "dataSize",
        "unit",
        "setHours",
        "setDate",
        "getDate",
        "getDay",
        "yearStart",
        "getFullYear",
        "ceil",
        "getMonth",
        "year",
        "monthNum",
        "toString",
        "series",
        "sortedData",
        "offset",
        "finalValue",
        "nbProducts",
        "Statistics",
        "scannedProduct",
        "loadUserData",
        "loadEcoScoreData",
        "loadCarbonImpactData",
        "typeAggregate",
        "statistics",
        "displayStats",
        "App",
        "AnimatePresence",
        "exitBeforeEnter",
        "reportWebVitals",
        "onPerfEntry",
        "Function",
        "getCLS",
        "getFID",
        "getFCP",
        "getLCP",
        "getTTFB",
        "ReactDOM",
        "StrictMode",
        "getElementById"
    ],
    "mappings": "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",
    "file": "static/js/main.fb0cc601.chunk.js",
    "sourcesContent": [
        "export default __webpack_public_path__ + \"static/media/fruits-vegetables-basket-by-oblik-studio.7d5e1c64.svg\";",
        "import \"./ButtonNavBar.css\";\n\nfunction ButtonHistory() {\n    return (\n        <div>\n            <div className=\"button-logo\">\n                <span className=\"material-icons\">history</span>\n            </div>\n            <div>Historique</div>\n        </div>\n    );\n}\n\nexport default ButtonHistory;\n",
        "function ButtonProfil() {\n    return (\n        <div>\n            <div>\n                <span className=\"material-icons\">person</span>\n            </div>\n            <div>Profil</div>\n        </div>\n    );\n}\n\nexport default ButtonProfil;\n",
        "import { React } from \"react\";\n\nfunction ButtonScan() {\n    return (\n        <div>\n            <div className=\"navbar-scan-icon\">\n                <span className=\"material-icons\">qr_code_scanner</span>\n            </div>\n        </div>\n    );\n}\n\nexport default ButtonScan;\n",
        "import React, { Component } from \"react\";\nimport Quagga from \"quagga\";\n\nclass Scanner extends Component {\n    state = {\n        error: false,\n        usedCamera: 0,\n        devices: [],\n    };\n\n    switchCamera = () => {\n        let num = this.state.usedCamera + 1;\n        if (num >= this.state.devices.length) {\n            num = 0;\n        }\n        this.setState({ usedCamera: num });\n        Quagga.stop();\n        this.QuaggaInit(this.state.devices[num].deviceId);\n    };\n\n    componentDidMount = async () => {\n        let usedCameraId;\n        const devices = await navigator.mediaDevices.enumerateDevices().then(function (devices) {\n            return devices;\n        });\n        let videoDevices = [];\n        devices.forEach((device) => {\n            if (device.kind === \"videoinput\") {\n                videoDevices.push(device);\n                // if (device.label.match(/back/) != null) {\n                //     ////console.log(\"Found video device: \" + JSON.stringify(device));\n                // }\n            }\n        });\n        // ALL  cameras\n        //console.log(videoDevices);\n        this.setState({ devices: videoDevices });\n\n        // open every video device and dump its characteristics\n        let maxResolution = -1;\n        for (let i in videoDevices) {\n            const device = videoDevices[i];\n            // //console.log(\"Opening video device \" + device.deviceId + \" (\" + device.label + \")\");\n\n            await navigator.mediaDevices\n                .getUserMedia({\n                    video: { deviceId: { exact: device.deviceId } },\n                })\n                .then(\n                    (stream) => {\n                        stream.getVideoTracks().forEach((track) => {\n                            const capabilities = track.getCapabilities();\n\n                            if (\n                                capabilities.height.max >= maxResolution &&\n                                device.label.match(/back/) != null\n                            ) {\n                                maxResolution = capabilities.height.max;\n                                usedCameraId = device.deviceId;\n                                this.setState({ usedCamera: i });\n                            }\n\n                            ////console.log(\"Track capabilities: \" + JSON.stringify(capabilities));\n                        });\n\n                        stream.getTracks().forEach((track) => track.stop());\n                    },\n                    (err) => //console.log(err)\n                );\n        }\n        this.QuaggaInit(usedCameraId);\n    };\n\n    QuaggaInit = (usedCameraId, width = 1920, height = 1080) => {\n        Quagga.init(\n            {\n                inputStream: {\n                    type: \"LiveStream\",\n                    constraints: {\n                        deviceId: usedCameraId,\n                        focusMode: \"continuous\",\n                        width: { min: width },\n                        height: { min: height },\n                        aspectRatio: {\n                            min: 1,\n                            max: 2,\n                        },\n                    },\n                },\n                locator: {\n                    patchSize: \"normal\",\n                    halfSample: false,\n                },\n                locate: false,\n                area: {\n                    top: \"25%\",\n                    right: \"25%\",\n                    left: \"25%\",\n                    bottom: \"25%\",\n                },\n                numOfWorkers: window.navigator.hardwareConcurrency || 2,\n                decoder: {\n                    readers: [\"ean_reader\"],\n                },\n                debug: {\n                    drawBoundingBox: true,\n                    showFrequency: true,\n                    drawScanline: true,\n                    showPattern: true,\n                },\n                multiple: false,\n                singleChannel: false,\n            },\n            (err) => {\n                if (err) {\n                    //console.log(err);\n                    if (width != 960 && height != 540) {\n                        this.QuaggaInit(usedCameraId, 960, 540);\n                    } else {\n                        this.setState({ error: true });\n                    }\n                    return false;\n                }\n                Quagga.start();\n            }\n        );\n        this.props.setQuagga(Quagga);\n        Quagga.onDetected(this._onDetected);\n    };\n\n    componentWillUnmount() {\n        Quagga.offDetected(this._onDetected);\n    }\n\n    _onDetected = async (result) => {\n        let stop = await this.props.onDetected(result);\n        //console.log(stop);\n        if (stop) {\n            Quagga.stop();\n        }\n    };\n\n    render() {\n        return (\n            <React.Fragment>\n                <div id=\"interactive\" className=\"viewport\" />\n                {this.state.devices?.length > 1 ? (\n                    <button className=\"code-switch-camera\" onClick={this.switchCamera}>\n                        <span className=\"material-icons\">cameraswitch</span>\n                        {this.state.usedCamera}\n                    </button>\n                ) : (\n                    <React.Fragment />\n                )}\n                {this.state.error ? (\n                    <div className=\"scan-error\">\n                        Il semblerait que votre caméra ne soit pas détectée. Essayez de changer de\n                        navigateur. Si le problème persiste, contactez-nous{\" \"}\n                        <a href=\"mailto:corentin.branchereau@insa-lyon.fr?Subject=Lowympact-camera not working\">\n                            via ce lien\n                        </a>\n                    </div>\n                ) : (\n                    <React.Fragment />\n                )}\n            </React.Fragment>\n        );\n    }\n}\n\nexport default Scanner;\n",
        "import React, { Component } from \"react\";\nimport Scanner from \"./Scanner\";\nimport QrReader from \"react-qr-reader\";\nimport Switch from \"react-switch\";\nimport { Redirect } from \"react-router-dom\";\n\nclass Scan extends Component {\n    state = {\n        scanning: true,\n        status: \"\",\n        results: [],\n        usedCameraId: \"3f6fc4177028f25c3e8215f4444838450630b8d656c627ef511346545d37f302\",\n        devices: [],\n        reading: 0, //false : barcode - true: qrcode\n        barcode: undefined,\n        bcProductId: undefined,\n        Quagga: undefined,\n    };\n\n    setQuagga = (quagga) => {\n        //console.log(quagga);\n        if (this.state.Quagga) {\n            this.state.Quagga.stop();\n        }\n        this.setState({ Quagga: quagga });\n    };\n\n    _scan = () => {\n        this.setState({ scanning: !this.state.scanning, status: \"\" });\n    };\n\n    _onDetected = async (res) => {\n        //console.log(res);\n        if (res) {\n            if (res.codeResult && res.codeResult.code) {\n                this.setState({\n                    results: [res],\n                    scanning: true,\n                    status: \"waiting\",\n                });\n                let response = await fetch(\n                    `https://world.openfoodfacts.org/api/v0/product/${res.codeResult.code}.json/`\n                );\n                let result = await response.json();\n                //console.log(result);\n                if (result.status !== 0) {\n                    this.setState({\n                        scanning: false,\n                        status: \"found\",\n                        barcode: res.codeResult.code,\n                    });\n                    this.props.showScanner(false);\n                    if (this.state.Quagga) this.state.Quagga.stop();\n                    return true;\n                } else {\n                    this.setState({\n                        scanning: true,\n                        status: \"not found\",\n                    });\n                    return false;\n                }\n            }\n        }\n    };\n\n    handleScan = (data) => {\n        if (data) {\n            let arr = data.split(\"/\");\n            if (arr.length > 1) {\n                this.setState({\n                    scanning: false,\n                    barcode: arr[4],\n                    bcProductId: arr[5],\n                    status: \"found\",\n                });\n            }\n            if (this.state.Quagga) this.state.Quagga.stop();\n        }\n    };\n    handleError = (err) => {\n        console.error(err);\n    };\n\n    displayQrCode = () => {\n        if (this.state.status !== \"found\") {\n            return (\n                <QrReader\n                    delay={300}\n                    onError={this.handleError}\n                    onScan={this.handleScan}\n                    style={{ width: \"100%\" }}\n                    showViewFinder={false}\n                />\n            );\n        } else {\n            return <React.Fragment />;\n        }\n    };\n\n    displayBarCode = () => {\n        if (this.state.status !== \"found\") {\n            return (\n                <React.Fragment>\n                    <div className=\"header\">\n                        <ul className=\"results\">\n                            {this.state.results.map((result, i) => (\n                                <div key={result.codeResult.code + i}>\n                                    {this.state.status === \"waiting\"\n                                        ? \"Vérification du code\" + result?.codeResult?.code\n                                        : \"\"}\n                                    {this.state.status === \"not found\"\n                                        ? \"code non trouvé, merci de réessayer\"\n                                        : \"\"}\n                                </div>\n                            ))}\n                        </ul>\n                    </div>\n                    {this.state.scanning ? (\n                        <Scanner\n                            onDetected={this._onDetected}\n                            setQuagga={this.setQuagga}\n                            usedCameraId={this.usedCameraId}\n                        />\n                    ) : null}\n                </React.Fragment>\n            );\n        } else {\n            return <React.Fragment />;\n        }\n    };\n\n    switchReader = () => {\n        if (this.state.reading) this.setState({ reading: false });\n        else {\n            if (this.state.Quagga) this.state.Quagga.stop();\n            this.setState({ reading: true });\n        }\n    };\n\n    render() {\n        //console.log(\"Results: \", this.state.results, this.state.redirect);\n        if (\n            this.state.barcode &&\n            this.state.bcProductId &&\n            (this.props.barcode !== this.state.barcode ||\n                this.props.bcProductId !== this.state.bcProductId)\n        ) {\n            return (\n                <Redirect to={\"/products/\" + this.state.barcode + \"/\" + this.state.bcProductId} />\n            );\n        }\n        if (this.state.barcode && this.props.barcode !== this.state.barcode) {\n            return <Redirect to={\"/products/\" + this.state.barcode} />;\n        } else {\n            return (\n                <div className=\"code-reader-container\">\n                    <span\n                        className=\"close\"\n                        onClick={() => {\n                            if (this.state.Quagga) this.state.Quagga.stop();\n\n                            this.props.showScanner(false);\n                        }}\n                    >\n                        &times;\n                    </span>\n                    <div className=\"code-switch\" onClick={this.switchReader}>\n                        <div className=\"span-code-switch\">\n                            <span\n                                className={\n                                    this.state.reading ? \"material-icons\" : \"material-icons green\"\n                                }\n                            >\n                                view_week\n                            </span>\n                            <span>Barcode</span>\n                        </div>\n                        <Switch\n                            onChange={this.switchReader}\n                            uncheckedIcon={false}\n                            checkedIcon={false}\n                            checked={this.state.reading}\n                            onColor={\"#888\"}\n                            offColor={\"#888\"}\n                        />\n                        <div className=\"span-code-switch\">\n                            <span\n                                className={\n                                    !this.state.reading ? \"material-icons\" : \"material-icons green\"\n                                }\n                            >\n                                qr_code_scanner\n                            </span>\n                            <span>QR Code</span>\n                        </div>\n                    </div>\n                    {this.state.reading ? this.displayQrCode() : this.displayBarCode()}\n                </div>\n            );\n        }\n    }\n}\n\nexport default Scan;\n",
        "import \"./Navbar.css\";\nimport React from \"react\";\nimport ButtonHistory from \"../Button/ButtonHistory\";\nimport ButtonProfil from \"../Button/ButtonProfil\";\nimport ButtonScan from \"../Button/ButtonScan\";\n// import Scan from \"../Scan/Scan\";\nimport Scan from \"../Scan/Scan\";\n// import { ScanSettings } from \"scandit-sdk\";\nimport { Link } from \"react-router-dom\";\n\nclass Navbar extends React.Component {\n    state = {\n        showScanner: false,\n        barcode: undefined,\n        bcProductId: undefined,\n        height: 0,\n    };\n\n    componentDidMount() {\n        this.updateWindowDimensions();\n        window.addEventListener(\"resize\", this.updateWindowDimensions);\n    }\n\n    componentWillUnmount() {\n        window.removeEventListener(\"resize\", this.updateWindowDimensions);\n    }\n\n    updateWindowDimensions = () => {\n        this.setState({ height: window.innerHeight });\n    };\n\n    handleScannerButton = (bool) => {\n        this.setState({ showScanner: bool });\n    };\n\n    // handleBarcode = (res) => {\n    //     if (res) {\n    //         //détecté par barcode scanner\n    //         let arr = res.split(\"/\");\n    //         if (arr.length > 1) {\n    //             this.setState({\n    //                 barcode: arr[4],\n    //                 bcProductId: arr[5],\n    //                 showScanner: false,\n    //             });\n    //         } else {\n    //             this.setState({\n    //                 barcode: arr[0],\n    //                 showScanner: false,\n    //                 bcProductId: undefined,\n    //             });\n    //         }\n    //     }\n    // };\n\n    render = () => {\n        if (this.state.height < 550) {\n            return <React.Fragment />;\n        }\n        // if (\n        //     this.state.barcode &&\n        //     this.state.bcProductId &&\n        //     (this.props.barcode !== this.state.barcode ||\n        //         this.props.bcProductId !== this.state.bcProductId)\n        // ) {\n        //     return (\n        //         <Redirect to={\"/products/\" + this.state.barcode + \"/\" + this.state.bcProductId} />\n        //     );\n        // }\n\n        // if (this.state.barcode && this.props.barcode !== this.state.barcode) {\n        //     return <Redirect to={\"/products/\" + this.state.barcode} />;\n        // }\n\n        if (!this.state.showScanner) {\n            return (\n                <React.Fragment>\n                    <div className=\"navbar-container\">\n                        <Link\n                            to=\"/history\"\n                            className={\n                                window.location.pathname === \"/history\"\n                                    ? \"navbar-link navbar-text-left navbar-selected\"\n                                    : \"navbar-link navbar-text-left \"\n                            }\n                        >\n                            <ButtonHistory />\n                        </Link>\n                        <div onClick={() => this.handleScannerButton(true)}>\n                            <div className=\"navbar-circle\">\n                                <ButtonScan />\n                            </div>\n                        </div>\n                        <span className=\"navbar-scan-text\">Scan</span>\n                        <Link\n                            to=\"/profil\"\n                            className={\n                                window.location.pathname === \"/profil\"\n                                    ? \"navbar-link navbar-text-right navbar-selected\"\n                                    : \"navbar-link navbar-text-right \"\n                            }\n                        >\n                            <ButtonProfil />\n                        </Link>\n                    </div>\n                </React.Fragment>\n            );\n        } else {\n            return (\n                // <Scan\n                //     onCrossClicked={this.handleScannerButton}\n                //     // playSoundOnScan={true}\n                //     vibrateOnScan={true}\n                //     enableTorchToggle={true}\n                //     enablePinchToZoom={true}\n                //     enableCameraSwitcher={true}\n                //     guiStyle={\"viewfinder\"}\n                //     scanSettings={\n                //         new ScanSettings({\n                //             enabledSymbologies: [\n                //                 \"qr\",\n                //                 \"ean8\",\n                //                 \"ean13\",\n                //                 \"upca\",\n                //                 \"upce\",\n                //                 \"code128\",\n                //                 \"code39\",\n                //                 \"code93\",\n                //                 \"itf\",\n                //             ],\n                //             codeDuplicateFilter: 1000,\n                //         })\n                //     }\n                //     onScan={(scanResult) => {\n                //         //console.log(scanResult.barcodes[0].data);\n                //         this.handleBarcode(scanResult.barcodes[0].data);\n                //     }}\n                //     onError={(error) => {\n                //         console.error(error.message);\n                //     }}\n                // />\n                <Scan showScanner={this.handleScannerButton} history={this.props.history} />\n            );\n        }\n    };\n}\n\nexport default Navbar;\n",
        "export default __webpack_public_path__ + \"static/media/logo.b235ef42.svg\";",
        "export default __webpack_public_path__ + \"static/media/bitmap.6f490d5b.png\";",
        "import './Header.css';\nimport logo from '../../assets/images/logo.svg';\nimport blob from \"../../assets/images/bitmap.png\";\n\nfunction Header() {\n  return (\n    <div>\n      <div>\n\t\t\t\t\t\t<img src={blob} className=\"blob-top\" alt=\"Blob\" />\n\t\t\t\t</div>\n        <div>\n          <img src={blob} className=\"blob-left\" alt=\"Blob\" />\n        </div>\n        <div>\n          <img src={blob} className=\"blob-right\" alt=\"Blob\" />\n        </div>\n      <div className=\"header-container\">\n        <img src={logo} className=\"header-logo\" alt=\"Logo\"/>\n        <span>Lowympact</span>\n      </div>\n    </div>\n  );\n}\n\nexport default Header;",
        "import { React, Component, Fragment } from \"react\";\nimport fruits from \"../assets/images/fruits-vegetables-basket-by-oblik-studio.svg\";\nimport Navbar from \"../components/Navbar/Navbar\";\nimport Header from \"../components/Header/Header\";\nimport \"./History.css\";\n// import { ITEMS } from \"../assets/scanned/items\";\nimport { Link } from \"react-router-dom\";\nimport { motion } from \"framer-motion\";\n\nfunction RenderHistoryItem({ item }) {\n    var labelColor;\n    if (item.label === \"d\" || item.label === \"e\") {\n        labelColor = \"red\";\n    } else if (item.label === \"c\") {\n        labelColor = \"yellow\";\n    } else if (item.label === \"a\" || item.label === \"b\") {\n        labelColor = \"green\";\n    }\n\n    var pathProduct = \"/products/\" + item.barcode;\n    if (item.bcProductId) {\n        pathProduct += \"/\" + item.bcProductId;\n    }\n    pathProduct += \"?cart=no\";\n\n    // Mock Soutenance\n    if (item.barcode === \"80135463\") {\n        item.name = \"Nutella 200g\";\n    }\n\n    return (\n        <motion.div initial={{ opacity: 0 }} animate={{ opacity: 1 }} exit={{ opacity: 0 }}>\n            <Link className=\"history-item\" to={pathProduct}>\n                <div className=\"history-img-container\">\n                    <img src={item.image} alt=\"\" />\n                </div>\n                <div className=\"history-name-container\">\n                    <div className=\"history-name\">{item.name}</div>\n                    <div className=\"history-brand\">{item.brand}</div>\n                </div>\n                <div className=\"history-label-container\">\n                    <div style={{ color: labelColor }}>●</div>\n                    <div className=\"history-label\">\n                        {item.label == \"not-applicable\" ? \"\" : item.label}\n                    </div>\n                </div>\n                <div style={{ marginRight: \"10px\", color: \"rgb(41,72,102)\" }}>{\">\"}</div>\n            </Link>\n        </motion.div>\n    );\n}\n\nclass History extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            items: undefined,\n            loading: true,\n            userId: undefined,\n        };\n    }\n\n    componentDidMount = () => {\n        this.loadLocalStorageHistory();\n        let userId = localStorage.getItem(\"userId\");\n        let token = localStorage.getItem(\"token\");\n        if (userId && token) {\n            this.setState({ userId: userId });\n            // this.loadHistoryInformations(userId);\n        }\n    };\n\n    loadHistoryInformations = (userId) => {\n        fetch(\n            `https://api.lowympact.fr/api/v1/users/${userId}/history`,\n            // `http://localhost:8080/api/v1/users/${userId}/history`,\n\n            {\n                method: \"get\",\n                credentials: \"include\",\n                headers: new Headers({\n                    authorization: localStorage.getItem(\"token\"),\n                    \"Content-Type\": \"application/json\",\n                    \"api-key\": \"99d8fb95-abdd-4885-bf6c-3a81d8874043\",\n                }),\n            }\n        )\n            .then((response) => response.json())\n            .then((res) => {\n                //console.log(res);\n\n                this.setState({\n                    items: res?.data,\n                    loading: false,\n                });\n                localStorage.setItem(\"local_history\", JSON.stringify(res?.data));\n            });\n    };\n\n    loadLocalStorageHistory = () => {\n        let history = JSON.parse(localStorage.getItem(\"local_history\"));\n        this.setState({\n            items: history,\n            loading: false,\n        });\n\n        if (!history) {\n            let userId = localStorage.getItem(\"userId\");\n            let token = localStorage.getItem(\"token\");\n            if (userId && token) {\n                this.setState({\n                    loading: true,\n                });\n                this.loadHistoryInformations(userId);\n            }\n        }\n    };\n\n    render() {\n        if (this.state.items) {\n            let itemList = <Fragment />;\n            if (!this.loading) {\n                itemList = this.state.items\n                    .sort((a, b) => {\n                        if (Date.parse(new Date(a.date)) < Date.parse(new Date(b.date))) {\n                            return 1;\n                        } else {\n                            return -1;\n                        }\n                        // else return true;\n                    })\n                    .map((item) => {\n                        return (\n                            <div key={item.id}>\n                                <RenderHistoryItem item={item} />\n                            </div>\n                        );\n                    });\n            } else {\n                itemList = (\n                    <div className=\"loader\">\n                        <img src=\"/images/utils/loading.gif\" alt=\"\" />\n                    </div>\n                );\n            }\n\n            if (Object.keys(this.state.items).length === 0)\n                return (\n                    <div>\n                        <Header />\n                        <Navbar />\n                        <motion.div\n                            className=\"App\"\n                            initial={{ opacity: 0 }}\n                            animate={{ opacity: 1 }}\n                            exit={{ opacity: 0 }}\n                        >\n                            <div>\n                                <img src={fruits} className=\"logo\" alt=\"Fruits\" />\n                                <p className=\"logo-text\">Commence à scanner des produits !</p>\n                            </div>\n                        </motion.div>\n                    </div>\n                );\n            else\n                return (\n                    <div>\n                        <div className=\"screen\">\n                            <div className=\"screen-title\">{itemList}</div>\n                        </div>\n                        <Header />\n                        <Navbar />\n                    </div>\n                );\n        } else {\n            let image = (\n                <div>\n                    <img src={fruits} className=\"logo\" alt=\"Fruits\" />\n                    <p className=\"logo-text\">Commence à scanner des produits !</p>\n                </div>\n            );\n            if (this.state.loading) {\n                image = (\n                    <div className=\"loader\">\n                        <img src=\"/images/utils/loading.gif\" alt=\"\" />\n                    </div>\n                );\n            }\n            return (\n                <div>\n                    <Header />\n                    <Navbar />\n                    <motion.div\n                        className=\"App\"\n                        initial={{ opacity: 0 }}\n                        animate={{ opacity: 1 }}\n                        exit={{ opacity: 0 }}\n                    >\n                        {image}\n                    </motion.div>\n                </div>\n            );\n        }\n    }\n}\n\nexport default History;\n",
        "import logo from \"../assets/images/logo.svg\";\nimport { Link } from \"react-router-dom\";\n\nfunction Error404() {\n\treturn (\n\t\t<div className=\"App\">\n\t\t\t<header className=\"App-header\">\n\t\t\t\t<img src={logo} className=\"logo\" alt=\"logo\" />\n\t\t\t\t<h1>Erreur 404</h1>\n\t\t\t\t<Link to=\"/\">Retourner à l'accueil</Link>\n\t\t\t</header>\n\t\t</div>\n\t);\n}\n\nexport default Error404;\n",
        "import '../../pages/Login.css';\nfunction ButtonCreateAccount() {\n    return (\n      <div>\n        Créer un compte\n      </div>\n    );\n  }\n  export default ButtonCreateAccount;\n",
        "\nfunction ButtonLogin() {\n    return (\n      <div>\n        Me connecter\n      </div>\n    );\n  }\n  export default ButtonLogin;",
        "function ButtonNoAccount() {\n\treturn <div>Continuer sans compte {\">\"}</div>;\n}\nexport default ButtonNoAccount;\n",
        "import React from \"react\";\nimport logo from \"../assets/images/logo.svg\";\nimport fruits from \"../assets/images/fruits-vegetables-basket-by-oblik-studio.svg\";\nimport \"./Login.css\";\nimport ButtonCreateAccount from \"../components/Button/ButtonCreateAccount\";\nimport ButtonLogin from \"../components/Button/ButtonLogin\";\nimport { Link } from \"react-router-dom\";\nimport ButtonNoAccount from \"../components/Button/ButtonNoAccount\";\nimport jwt from \"jsonwebtoken\";\nimport { motion } from \"framer-motion\";\n\nclass Login extends React.Component {\n    componentDidMount = () => {\n        this.Verify();\n        const queryString = window.location.search;\n        const urlParams = new URLSearchParams(queryString);\n\n        if (window.innerWidth > 1200 && urlParams.get(\"from\") != \"website\") {\n            window.location.assign(\"https://lowympact.fr\");\n        }\n    };\n\n    Verify = () => {\n        let isExpired = true;\n        const token = localStorage.getItem(\"token\");\n        if (token) {\n            var decodedToken = jwt.decode(token, { complete: true });\n            var dateNow = new Date();\n            //console.log(decodedToken, dateNow.getTime() / 1000);\n            if (decodedToken.payload.exp >= dateNow.getTime() / 1000) {\n                isExpired = false;\n            }\n        }\n        if (isExpired === false) {\n            //console.log(\"here\");\n            this.props.history.push(`/history`); // redirection vers la page login\n        }\n    };\n    render = () => {\n        return (\n            <motion.div exit={{ opacity: 0 }}>\n                <div className=\"login-logo\">\n                    <img src={logo} className=\"logo\" alt=\"Logo\" />\n                </div>\n                <div className=\"login-lowympact\">Lowympact</div>\n                <Link to=\"/signup\" className=\"button-account\">\n                    <ButtonCreateAccount />\n                </Link>\n                <Link to=\"/signin\" className=\"button-connect\">\n                    <ButtonLogin />\n                </Link>\n                <Link to=\"/history\" className=\"button-no-account\">\n                    <ButtonNoAccount />\n                </Link>\n                <div className=\"logo-fruits\">\n                    <img src={fruits} className=\"logo\" alt=\"Fruits\" />\n                </div>\n            </motion.div>\n        );\n    };\n}\nexport default Login;\n",
        "import L from \"leaflet\";\n\nL.Curve = L.Path.extend({\n\toptions: {},\n\n\tinitialize: function (path, options) {\n\t\t//1\n\t\tL.setOptions(this, options);\n\t\tthis._initialUpdate = true;\n\t\tthis._setPath(path);\n\t},\n\n\tgetPath: function () {\n\t\treturn this._coords;\n\t},\n\n\tsetPath: function (path, options) {\n\t\tthis._initialUpdate = true;\n\t\tthis._setPath(path);\n\t\treturn this.redraw();\n\t},\n\n\tgetBounds: function () {\n\t\treturn this._bounds;\n\t},\n\n\t_setPath: function (path) {\n\t\t//2\n\t\tthis._coords = path;\n\t\tthis._bounds = this._computeBounds();\n\t},\n\n\t_computeBounds: function () {\n\t\t//3\n\t\tvar bound = new L.LatLngBounds();\n\t\tvar lastPoint;\n\t\tvar lastCommand;\n\t\tvar coord;\n\t\tfor (var i = 0; i < this._coords.length; i++) {\n\t\t\tcoord = this._coords[i];\n\t\t\tif (typeof coord == \"string\" || coord instanceof String) {\n\t\t\t\tlastCommand = coord;\n\t\t\t} else if (lastCommand == \"H\") {\n\t\t\t\tbound.extend([lastPoint.lat, coord[0]]);\n\t\t\t\tlastPoint = new L.latLng(lastPoint.lat, coord[0]);\n\t\t\t} else if (lastCommand == \"V\") {\n\t\t\t\tbound.extend([coord[0], lastPoint.lng]);\n\t\t\t\tlastPoint = new L.latLng(coord[0], lastPoint.lng);\n\t\t\t} else if (lastCommand == \"C\") {\n\t\t\t\tvar controlPoint1 = new L.latLng(coord[0], coord[1]);\n\t\t\t\tcoord = this._coords[++i];\n\t\t\t\tvar controlPoint2 = new L.latLng(coord[0], coord[1]);\n\t\t\t\tcoord = this._coords[++i];\n\t\t\t\tvar endPoint = new L.latLng(coord[0], coord[1]);\n\n\t\t\t\tbound.extend(controlPoint1);\n\t\t\t\tbound.extend(controlPoint2);\n\t\t\t\tbound.extend(endPoint);\n\n\t\t\t\tendPoint.controlPoint1 = controlPoint1;\n\t\t\t\tendPoint.controlPoint2 = controlPoint2;\n\t\t\t\tlastPoint = endPoint;\n\t\t\t} else if (lastCommand == \"S\") {\n\t\t\t\tvar controlPoint2 = new L.latLng(coord[0], coord[1]);\n\t\t\t\tcoord = this._coords[++i];\n\t\t\t\tvar endPoint = new L.latLng(coord[0], coord[1]);\n\n\t\t\t\tvar controlPoint1 = lastPoint;\n\t\t\t\tif (lastPoint.controlPoint2) {\n\t\t\t\t\tvar diffLat = lastPoint.lat - lastPoint.controlPoint2.lat;\n\t\t\t\t\tvar diffLng = lastPoint.lng - lastPoint.controlPoint2.lng;\n\t\t\t\t\tcontrolPoint1 = new L.latLng(\n\t\t\t\t\t\tlastPoint.lat + diffLat,\n\t\t\t\t\t\tlastPoint.lng + diffLng\n\t\t\t\t\t);\n\t\t\t\t}\n\n\t\t\t\tbound.extend(controlPoint1);\n\t\t\t\tbound.extend(controlPoint2);\n\t\t\t\tbound.extend(endPoint);\n\n\t\t\t\tendPoint.controlPoint1 = controlPoint1;\n\t\t\t\tendPoint.controlPoint2 = controlPoint2;\n\t\t\t\tlastPoint = endPoint;\n\t\t\t} else if (lastCommand == \"Q\") {\n\t\t\t\tvar controlPoint = new L.latLng(coord[0], coord[1]);\n\t\t\t\tcoord = this._coords[++i];\n\t\t\t\tvar endPoint = new L.latLng(coord[0], coord[1]);\n\n\t\t\t\tbound.extend(controlPoint);\n\t\t\t\tbound.extend(endPoint);\n\n\t\t\t\tendPoint.controlPoint = controlPoint;\n\t\t\t\tlastPoint = endPoint;\n\t\t\t} else if (lastCommand == \"T\") {\n\t\t\t\tvar endPoint = new L.latLng(coord[0], coord[1]);\n\n\t\t\t\tvar controlPoint = lastPoint;\n\t\t\t\tif (lastPoint.controlPoint) {\n\t\t\t\t\tvar diffLat = lastPoint.lat - lastPoint.controlPoint.lat;\n\t\t\t\t\tvar diffLng = lastPoint.lng - lastPoint.controlPoint.lng;\n\t\t\t\t\tcontrolPoint = new L.latLng(\n\t\t\t\t\t\tlastPoint.lat + diffLat,\n\t\t\t\t\t\tlastPoint.lng + diffLng\n\t\t\t\t\t);\n\t\t\t\t}\n\n\t\t\t\tbound.extend(controlPoint);\n\t\t\t\tbound.extend(endPoint);\n\n\t\t\t\tendPoint.controlPoint = controlPoint;\n\t\t\t\tlastPoint = endPoint;\n\t\t\t} else {\n\t\t\t\tbound.extend(coord);\n\t\t\t\tlastPoint = new L.latLng(coord[0], coord[1]);\n\t\t\t}\n\t\t}\n\t\treturn bound;\n\t},\n\n\t//TODO: use a centroid algorithm instead\n\tgetCenter: function () {\n\t\treturn this._bounds.getCenter();\n\t},\n\n\t_update: function () {\n\t\t//5\n\t\tif (!this._map) {\n\t\t\treturn;\n\t\t}\n\t\tthis._updatePath();\n\t},\n\n\t_updatePath: function () {\n\t\t//6\n\t\tthis._renderer._updatecurve(this);\n\t},\n\n\t_project: function () {\n\t\t//4\n\t\tvar coord, lastCoord, curCommand, curPoint;\n\n\t\tthis._points = [];\n\n\t\tfor (var i = 0; i < this._coords.length; i++) {\n\t\t\tcoord = this._coords[i];\n\t\t\tif (typeof coord == \"string\" || coord instanceof String) {\n\t\t\t\tthis._points.push(coord);\n\t\t\t\tcurCommand = coord;\n\t\t\t} else {\n\t\t\t\tswitch (coord.length) {\n\t\t\t\t\tcase 2:\n\t\t\t\t\t\tcurPoint = this._map.latLngToLayerPoint(coord);\n\t\t\t\t\t\tlastCoord = coord;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 1:\n\t\t\t\t\t\tif (curCommand == \"H\") {\n\t\t\t\t\t\t\tcurPoint = this._map.latLngToLayerPoint([\n\t\t\t\t\t\t\t\tlastCoord[0],\n\t\t\t\t\t\t\t\tcoord[0],\n\t\t\t\t\t\t\t]);\n\t\t\t\t\t\t\tlastCoord = [lastCoord[0], coord[0]];\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tcurPoint = this._map.latLngToLayerPoint([\n\t\t\t\t\t\t\t\tcoord[0],\n\t\t\t\t\t\t\t\tlastCoord[1],\n\t\t\t\t\t\t\t]);\n\t\t\t\t\t\t\tlastCoord = [coord[0], lastCoord[1]];\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tthis._points.push(curPoint);\n\t\t\t}\n\t\t}\n\t},\n});\n\nL.curve = function (path, options) {\n\treturn new L.Curve(path, options);\n};\n\nL.SVG.include({\n\t//7\n\t_updatecurve: function (layer) {\n\t\tthis._setPath(layer, this._curvePointsToPath(layer._points));\n\t\tif (layer.options.animate) {\n\t\t\tvar path = layer._path;\n\t\t\tvar length = path.getTotalLength();\n\n\t\t\tif (!layer.options.dashArray) {\n\t\t\t\tpath.style.strokeDasharray = length + \" \" + length;\n\t\t\t}\n\n\t\t\tif (layer._initialUpdate) {\n\t\t\t\tpath.animate(\n\t\t\t\t\t[{ strokeDashoffset: length }, { strokeDashoffset: 0 }],\n\t\t\t\t\tlayer.options.animate\n\t\t\t\t);\n\t\t\t\tlayer._initialUpdate = false;\n\t\t\t}\n\t\t}\n\t},\n\n\t_curvePointsToPath: function (points) {\n\t\tvar point,\n\t\t\tcurCommand,\n\t\t\tstr = \"\";\n\t\tfor (var i = 0; i < points.length; i++) {\n\t\t\tpoint = points[i];\n\t\t\tif (typeof point == \"string\" || point instanceof String) {\n\t\t\t\tcurCommand = point;\n\t\t\t\tstr += curCommand;\n\t\t\t} else {\n\t\t\t\tswitch (curCommand) {\n\t\t\t\t\tcase \"H\":\n\t\t\t\t\t\tstr += point.x + \" \";\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"V\":\n\t\t\t\t\t\tstr += point.y + \" \";\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tstr += point.x + \",\" + point.y + \" \";\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn str || \"M0 0\";\n\t},\n});\n",
        "// import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Path, withLeaflet } from \"react-leaflet\";\nimport { curve } from \"./leaflet.curve\";\nimport L from \"leaflet\";\n\nclass Curve extends Path {\n\tcreateLeafletElement(props) {\n\t\tconst { positions, option, ...options } = props;\n\t\treturn L.curve(positions, option, this.getOptions(options));\n\t}\n\n\tupdateLeafletElement(fromProps, toProps) {\n\t\tif (toProps.positions !== fromProps.positions) {\n\t\t\tthis.leafletElement.setPath(toProps.positions);\n\t\t}\n\t\tthis.setStyleIfChanged(fromProps, toProps);\n\t}\n}\n\nCurve.propTypes = {\n\tchildren: PropTypes.oneOfType([\n\t\tPropTypes.arrayOf(PropTypes.node),\n\t\tPropTypes.node,\n\t]),\n\toption: PropTypes.object,\n\tpositions: PropTypes.array.isRequired,\n};\n\nexport default withLeaflet(Curve);\n\n/*\n  componentWillMount() {\n    super.componentWillMount();\n    const { positions, ...options } = this.props\n    this.leafletElement = L.curve(positions, this.getOptions(options))\n  }*/\n",
        "import React from \"react\";\nimport { Map, TileLayer, Marker } from \"react-leaflet\";\nimport \"./Traceability.css\";\nimport { Swiper, SwiperSlide } from \"swiper/react\";\nimport { Curve } from \"./leaflet-curve\";\nimport L from \"leaflet\";\n// Import Swiper styles\nimport \"swiper/swiper-bundle.css\";\n\nclass Traceability extends React.Component {\n    map = undefined;\n    state = {\n        zoom: 12,\n        swiper: undefined,\n        currentIndex: 0,\n        map: undefined,\n    };\n\n    getMaterialIcon = (mode) => {\n        switch (mode) {\n            case \"Charette\":\n                return \"directions_bike\";\n            case \"Plane\":\n                return \"flight_takeoff\";\n            case \"Train\":\n                return \"train\";\n            case \"Boat\":\n                return \"directions_boat_filled\";\n            case \"Truck\":\n                return \"local_shipping\";\n            default:\n                return \"nature_people\";\n        }\n    };\n\n    getTransportMode = (mode) => {\n        switch (mode) {\n            case \"Charette\":\n                return \"vélo\";\n            case \"Plane\":\n                return \"avion\";\n            case \"Train\":\n                return \"train\";\n            case \"Boat\":\n                return \"bateau\";\n            case \"Truck\":\n                return \"camion\";\n            default:\n                return mode;\n        }\n    };\n    getTranslation = (mode) => {\n        switch (mode) {\n            case \"maker\":\n                return \"Fabricant\";\n            case \"productor\":\n                return \"Producteur\";\n            case \"shop\":\n                return \"Revendeur\";\n            default:\n                return mode;\n        }\n    };\n\n    displaySlides = () => {\n        let slides = <React.Fragment />;\n        if (this.props.products) {\n            slides = this.props.products.map((product) => {\n                let pastille = \"product-slide-pastille past-green\";\n                if (product.TransportCO2Impact?.value > 10) {\n                    pastille = \"product-slide-pastille past-orange\";\n                }\n                if (product.TransportCO2Impact?.value > 100) {\n                    pastille = \"product-slide-pastille past-red\";\n                }\n\n                return (\n                    <SwiperSlide>\n                        <div className=\"product-slide-container\">\n                            <div className=\"product-slide-icon\">\n                                <span className=\"material-icons\">\n                                    {this.getMaterialIcon(product.transport)}\n                                </span>\n\n                                <div className=\"product-slide-name\">\n                                    <span className=\"product-slide-name-product\">\n                                        {product.productsOutput[0].productName}\n                                    </span>\n                                    <span className=\"product-slide-name-transport\">\n                                        Transport en {this.getTransportMode(product.transport)}\n                                    </span>\n                                </div>\n                            </div>\n                            <div className=\"product-slide-origin-wrapper\">\n                                <div className=\"product-transport-ui\">\n                                    <div className=\"transport-ui-circle\"></div>\n                                    <div className=\"transport-ui-tiret\"></div>\n                                    <div className=\"transport-ui-circle circle-bis\"></div>\n                                </div>\n                                <div className=\"product-slide-transport-container\">\n                                    <div className=\"product-slide-bigname\">\n                                        <span>\n                                            {product.seller.localisation.city},{\" \"}\n                                            {product.seller.localisation.country}\n                                        </span>\n                                    </div>\n                                    <div className=\"product-slide-lowername2\">\n                                        {this.getTranslation(product.seller?.type)}\n                                        {\": \"}\n                                        {product.seller?.name}\n                                    </div>\n\n                                    <div className=\"product-slide-bigname bigname-lower\">\n                                        <span>\n                                            {product.buyer.localisation.city},{\" \"}\n                                            {product.buyer.localisation.country}\n                                        </span>\n                                    </div>\n                                    <div className=\"product-slide-lowername2\">\n                                        {this.getTranslation(product.buyer?.type)}\n                                        {\": \"}\n                                        {product.buyer?.name}\n                                    </div>\n                                </div>\n                            </div>\n                            <div className=\"product-slide-arrow\">{\">\"}</div>\n                            <div className=\"product-slide-consumption\">\n                                <div className={pastille}></div>\n                                <div>{Math.round(product.dist.value)} km </div>\n                                <div>\n                                    {product.TransportCO2Impact?.value > 1\n                                        ? Math.round(product.TransportCO2Impact?.value)\n                                        : \"< 1\"}{\" \"}\n                                    kg CO2{\" \"}\n                                </div>\n                            </div>\n                        </div>\n                    </SwiperSlide>\n                );\n            });\n        }\n        return slides;\n    };\n\n    handleMarkerClick = (latlng, index) => {\n        // window.scrollTo({ top: \"8000px\", behavior: \"smooth\" });\n        let elem = document.getElementsByClassName(\"swiper-container\");\n        if (elem[0]) {\n            elem[0].scrollIntoView({ behavior: \"smooth\" });\n        }\n\n        if (index >= this.props.products?.length) {\n            this.state.swiper.slideTo(index - 1, 500);\n        } else {\n            this.state.swiper.slideTo(index, 500);\n        }\n        let zoom = 5;\n        if (this.props.products && this.props.products[index]) {\n            let p = this.props.products[index];\n\n            zoom = getZoomRatio(\n                [p.buyer.localisation.latitude, p.buyer.localisation.longitude],\n                [p.seller.localisation.latitude, p.seller.localisation.longitude]\n            );\n        }\n\n        this.map.leafletElement.flyTo(latlng, zoom, { duration: 0.5 });\n    };\n\n    onSlideChange = (index) => {\n        this.setState({ currentIndex: index });\n        let zoom = 5;\n        if (this.props.products && this.props.products[index]) {\n            let p = this.props.products[index];\n\n            zoom = getZoomRatio(\n                [p.buyer.localisation.latitude, p.buyer.localisation.longitude],\n                [p.seller.localisation.latitude, p.seller.localisation.longitude]\n            );\n\n            let lat =\n                (parseFloat(p.seller.localisation.latitude) +\n                    parseFloat(p.buyer.localisation.latitude)) /\n                2;\n            let long =\n                (parseFloat(p.seller.localisation.longitude) +\n                    parseFloat(p.buyer.localisation.longitude)) /\n                2;\n\n            this.map.leafletElement.flyTo([lat, long], zoom, { duration: 0.5 });\n        }\n    };\n\n    displayMarker = () => {\n        let markers = <React.Fragment />;\n        if (this.props.products) {\n            markers = this.props.products.map((product, i) => {\n                let marker1 = <React.Fragment />;\n                let lat1 = parseFloat(product?.buyer?.localisation?.latitude);\n                let long1 = parseFloat(product?.buyer?.localisation?.longitude);\n                let marker2 = <React.Fragment />;\n                let lat2 = parseFloat(product?.seller?.localisation?.latitude);\n                let long2 = parseFloat(product?.seller?.localisation?.longitude);\n                let icon;\n                let icon2;\n                let zIndex = 0;\n                if (i === this.state.currentIndex) {\n                    icon = new L.Icon({\n                        iconUrl: \"/images/utils/map.png\", //require('../../images/logo/logo.svg'),\n                        iconRetinaUrl: \"/images/utils/map.png\", //\"/images/images_volume/1-l.png\", //require('../../images/logo/logo.svg'),\n                        iconSize: new L.Point(32, 32),\n                        className: \"leaflet-mark-icon\",\n                    });\n                    icon2 = new L.Icon({\n                        iconUrl: \"/images/utils/map.png\", //require('../../images/logo/logo.svg'),\n                        iconRetinaUrl: \"/images/utils/map3.png\", //\"/images/images_volume/1-l.png\", //require('../../images/logo/logo.svg'),\n                        iconSize: new L.Point(32, 32),\n                        className: \"leaflet-mark-icon\",\n                    });\n                    zIndex = 5;\n                } else {\n                    icon = new L.Icon({\n                        iconUrl: \"/images/utils/map2.png\", //require('../../images/logo/logo.svg'),\n                        iconRetinaUrl: \"/images/utils/map2.png\", //\"/images/images_volume/1-l.png\", //require('../../images/logo/logo.svg'),\n                        iconSize: new L.Point(25, 25),\n                        className: \"leaflet-mark-icon\",\n                    });\n                    icon2 = new L.Icon({\n                        iconUrl: \"/images/utils/map2.png\", //require('../../images/logo/logo.svg'),\n                        iconRetinaUrl: \"/images/utils/map2.png\", //\"/images/images_volume/1-l.png\", //require('../../images/logo/logo.svg'),\n                        iconSize: new L.Point(25, 25),\n                        className: \"leaflet-mark-icon\",\n                    });\n                }\n\n                if (lat1 && long1) {\n                    marker1 = (\n                        <Marker\n                            zIndexOffset={zIndex}\n                            icon={icon}\n                            position={[lat1, long1]}\n                            onClick={() =>\n                                this.handleMarkerClick(\n                                    [\n                                        parseFloat(product.buyer.localisation.latitude),\n                                        parseFloat(product.buyer.localisation.longitude),\n                                    ],\n                                    i + 1\n                                )\n                            }\n                        >\n                            {/* <Popup>{product.buyer.name}</Popup> */}\n                        </Marker>\n                    );\n                }\n                if (lat2 && long2) {\n                    marker2 = (\n                        <Marker\n                            zIndexOffset={zIndex}\n                            icon={icon2}\n                            position={[lat2, long2]}\n                            onClick={() =>\n                                this.handleMarkerClick(\n                                    [\n                                        parseFloat(product.seller.localisation.latitude),\n                                        parseFloat(product.seller.localisation.longitude),\n                                    ],\n                                    i\n                                )\n                            }\n                        >\n                            {/* <Popup>{product.seller.name}</Popup> */}\n                        </Marker>\n                    );\n                }\n\n                let color = \"#1b3044\";\n                let curves = document.getElementsByClassName(\"leaflet-interactive\");\n\n                if (curves && curves[i] && i === this.state.currentIndex) {\n                    curves[i].setAttribute(\"stroke\", \"#78be95\");\n                } else if (curves && curves[i]) {\n                    curves[i].setAttribute(\"stroke\", \"#1b3044\");\n                }\n\n                return (\n                    <React.Fragment>\n                        <div className=\"test\">\n                            <Curve\n                                positions={getCurveOptions(lat2, long2, lat1, long1)}\n                                option={{\n                                    color: color,\n                                    fill: false,\n                                    // animate: animate,\n                                    delay: 5000,\n                                }}\n                            />\n                        </div>\n                        {marker1}\n                        {marker2}\n                    </React.Fragment>\n                );\n            });\n        }\n        return markers;\n    };\n\n    render = () => {\n        return (\n            <div className=\"tracability-container\">\n                <div className=\"product-CO2-total-tracability-container\">\n                    <span className=\"product-CO2-total-tracability\">\n                        Impact total carbone :&nbsp;\n                        <span className=\"carbon-total-number\">\n                            {parseFloat(this.props.totalCO2Traceability).toFixed(1)}\n                        </span>\n                        kg CO2 soit &nbsp;\n                        <span className=\"carbon-total-number\">\n                            {parseFloat(\n                                ((this.props.totalCO2Traceability * 0.05) / 11.0) * 1000.0\n                            ).toFixed(1)}\n                        </span>\n                        kms parcourus en voiture\n                    </span>\n                </div>\n\n                <Map\n                    center={[51.505, -0.09]}\n                    zoom={1}\n                    minZoom={1}\n                    scrollWheelZoom={true}\n                    dragging={false}\n                    maxBounds={[\n                        [-90, -180],\n                        [90, 180],\n                    ]}\n                    maxBoundsViscosity={1}\n                    ref={(ref) => {\n                        this.map = ref;\n                        this.props.getBottomRef(ref);\n                    }}\n                    whenCreated={(map) => this.setState({ map })}\n                >\n                    <TileLayer\n                        attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a>'\n                        url=\"https://stamen-tiles-{s}.a.ssl.fastly.net/toner-background/{z}/{x}/{y}{r}.png\" //'https://maps.wikimedia.org/osm-intl/{z}/{x}/{y}{r}.png' //'https://{s}.tile.osm.org/{z}/{x}/{y}.png'\n                    />\n\n                    {this.displayMarker()}\n                </Map>\n                <Swiper\n                    spaceBetween={10}\n                    slidesPerView={1.2}\n                    centeredSlides={true}\n                    onSlideChange={(i) => this.onSlideChange(i.activeIndex)}\n                    onSwiper={(swiper) => this.setState({ swiper: swiper })}\n                >\n                    {this.displaySlides()}\n                </Swiper>\n            </div>\n        );\n    };\n}\n\nexport default Traceability;\n\nfunction getDistance(origin, destination) {\n    // return distance in meters\n    var lon1 = toRadian(origin[1]),\n        lat1 = toRadian(origin[0]),\n        lon2 = toRadian(destination[1]),\n        lat2 = toRadian(destination[0]);\n\n    var deltaLat = lat2 - lat1;\n    var deltaLon = lon2 - lon1;\n\n    var a =\n        Math.pow(Math.sin(deltaLat / 2), 2) +\n        Math.cos(lat1) * Math.cos(lat2) * Math.pow(Math.sin(deltaLon / 2), 2);\n    var c = 2 * Math.asin(Math.sqrt(a));\n    // var EARTH_RADIUS = 6371;\n    return c; //* EARTH_RADIUS * 1000;\n}\n\nfunction toRadian(degree) {\n    return (degree * Math.PI) / 180;\n}\n\nfunction getZoomRatio(origin, destination) {\n    var distance = getDistance(origin, destination);\n\n    return 9 - Math.sqrt(distance * 150);\n}\n\nfunction getCurveOptions(lat1, long1, lat2, long2) {\n    var latlng1 = [lat1, long1],\n        latlng2 = [lat2, long2];\n\n    var offsetX = latlng2[1] - latlng1[1],\n        offsetY = latlng2[0] - latlng1[0];\n\n    var r = Math.sqrt(Math.pow(offsetX, 2) + Math.pow(offsetY, 2)),\n        theta = Math.atan2(offsetY, offsetX);\n\n    var thetaOffset = 3.14 / 10;\n\n    var r2 = r / 2 / Math.cos(thetaOffset),\n        theta2 = theta + thetaOffset;\n\n    var midpointX = r2 * Math.cos(theta2) + latlng1[1],\n        midpointY = r2 * Math.sin(theta2) + latlng1[0];\n\n    var midpointLatLng = [midpointY, midpointX];\n\n    return [\"M\", latlng1, \"Q\", midpointLatLng, latlng2];\n}\n\n// function getChildElementIndex(node) {\n//     return Array.prototype.indexOf.call(node.parentNode.children, node);\n// }\n",
        "import React from \"react\";\nimport { Swiper, SwiperSlide } from \"swiper/react\";\nimport \"swiper/swiper-bundle.css\";\n\nclass Alternatives extends React.Component {\n    state = {\n        swiper: undefined,\n    };\n\n    componentDidMount = () => {\n        if (this.props.ecoScore) {\n            this.loadAlternatives(this.props.ecoScore);\n        }\n    };\n\n    componentDidUpdate = (lastProps) => {\n        if (lastProps.ciqual_code !== this.props.ciqual_code) {\n            if (this.props.ciqual_code) {\n                this.loadAlternatives(this.props.ciqual_code);\n            }\n        }\n    };\n\n    loadAlternatives = (code) => {\n        //console.log(code);\n        this.setState({ alternatives: \"loading\" });\n        fetch(`https://api.lowympact.fr/api/v1/alternatives/${code}`)\n            .then((response) => response.json())\n            .then((res) => {\n                //console.log(res);\n                if (res.success && res.data?.alternativesInfos) {\n                    if (\n                        res.data?.alternativesInfos?.a?.length == 0 &&\n                        res.data?.alternativesInfos?.b?.length == 0 &&\n                        res.data?.alternativesInfos?.c?.length == 0 &&\n                        res.data?.alternativesInfos?.d?.length == 0\n                    ) {\n                        this.setState({ alternatives: undefined });\n                    } else {\n                        this.setState({ alternatives: res.data.alternativesInfos });\n                    }\n                } else {\n                    this.setState({ alternatives: undefined });\n                }\n            });\n    };\n\n    renderListAlternatives = (listItems) => {\n        var res = <React.Fragment></React.Fragment>;\n        res = listItems.map((item) => {\n            var pathProduct = \"/products/\" + item.id;\n            // Mock Front\n            if (item.id === \"8001505005707\") {\n                pathProduct += \"/24\";\n            }\n\n            if (item.id !== this.props.barcode) {\n                return (\n                    <SwiperSlide key={item.id}>\n                        <a href={pathProduct} className=\"product-alternative\">\n                            <div>\n                                <img\n                                    src={item.img_url}\n                                    className=\"product-alternative-image\"\n                                    alt=\"\"\n                                />\n                            </div>\n                            <div className=\"product-alternative-text\">\n                                <label className=\"product-alternative-title\">{item.name}</label>\n                                <label className=\"product-alternative-brand\">{}</label>\n                                <RenderColor item={item} />\n                            </div>\n                            <div className=\"product-alternative-fleche\">{\">\"}</div>\n                        </a>\n                    </SwiperSlide>\n                );\n            } else {\n                return <React.Fragment></React.Fragment>;\n            }\n        });\n\n        return res;\n    };\n\n    alternativesloop = () => {\n        var alternativesList = <React.Fragment></React.Fragment>;\n        if (\n            this.state.alternatives &&\n            this.state.alternatives !== \"loading\" &&\n            this.state.alternatives !== \"\"\n        ) {\n            var alternatives_a = <React.Fragment></React.Fragment>;\n            var alternatives_b = <React.Fragment></React.Fragment>;\n            var alternatives_c = <React.Fragment></React.Fragment>;\n            var alternatives_d = <React.Fragment></React.Fragment>;\n\n            this.state.alternatives.a.sort(function (a, b) {\n                return b.eco_score - a.eco_score;\n            });\n\n            this.state.alternatives.b.sort(function (a, b) {\n                return b.eco_score - a.eco_score;\n            });\n            this.state.alternatives.c.sort(function (a, b) {\n                return b.eco_score - a.eco_score;\n            });\n            this.state.alternatives.d.sort(function (a, b) {\n                return b.eco_score - a.eco_score;\n            });\n\n            switch (this.props.ecoScore) {\n                case \"a\":\n                    break;\n                case \"b\":\n                    alternatives_a = this.renderListAlternatives(this.state.alternatives.a);\n                    break;\n                case \"c\":\n                    alternatives_a = this.renderListAlternatives(this.state.alternatives.a);\n                    alternatives_b = this.renderListAlternatives(this.state.alternatives.b);\n                    break;\n                case \"d\":\n                    alternatives_a = this.renderListAlternatives(this.state.alternatives.a);\n                    alternatives_b = this.renderListAlternatives(this.state.alternatives.b);\n                    alternatives_c = this.renderListAlternatives(this.state.alternatives.c);\n                    break;\n                case \"e\":\n                    alternatives_a = this.renderListAlternatives(this.state.alternatives.a);\n                    alternatives_b = this.renderListAlternatives(this.state.alternatives.b);\n                    alternatives_c = this.renderListAlternatives(this.state.alternatives.c);\n                    alternatives_d = this.renderListAlternatives(this.state.alternatives.d);\n                    break;\n                default:\n                    break;\n            }\n\n            alternativesList = (\n                <React.Fragment>\n                    {alternatives_a} {alternatives_b} {alternatives_c} {alternatives_d}\n                </React.Fragment>\n            );\n        }\n\n        return alternativesList;\n    };\n\n    render = () => {\n        var alternatives_title = \"\";\n        if (!this.state.alternatives) {\n            alternatives_title = \"Pas d'alternatives disponible\";\n        } else {\n            if (this.state.alternatives === \"loading\") {\n                alternatives_title = \"Chargement des alternatives ...\";\n            } else {\n                alternatives_title = \"Alternatives\";\n            }\n        }\n        return (\n            <React.Fragment>\n                <span className=\"title-part-environnement\">{alternatives_title}</span>\n                {this.state.alternatives &&\n                this.state.alternatives !== \"loading\" &&\n                this.state.alternatives !== \"\" ? (\n                    <Swiper\n                        spaceBetween={0}\n                        slidesPerView={1}\n                        centeredSlides={true}\n                        onSwiper={(swiper) => this.setState({ swiper: swiper })}\n                    >\n                        {this.alternativesloop()}\n                    </Swiper>\n                ) : (\n                    <React.Fragment />\n                )}\n            </React.Fragment>\n        );\n    };\n}\n\nexport default Alternatives;\n\nfunction RenderColor({ item }) {\n    var labelColor;\n    var labelLevel;\n    if (item.eco_score <= 33) {\n        labelColor = \"red\";\n        labelLevel = \"Mauvais\";\n    } else if (item.eco_score > 33 && item.eco_score < 67) {\n        labelColor = \"yellow\";\n        labelLevel = \"Moyen\";\n    } else {\n        labelColor = \"green\";\n        labelLevel = \"Bonne\";\n    }\n    return (\n        <div className=\"product-alternative-label-position\">\n            <div className=\"product-alternative-label\">\n                <div style={{ color: labelColor }}>●</div>\n                <div className=\"product-alternative-label-text\">{item.eco_score}/100</div>\n            </div>\n            <div className=\"product-alternative-label-level \">{labelLevel}</div>\n        </div>\n    );\n}\n",
        "import React from \"react\";\nimport { Map, TileLayer, Polygon } from \"react-leaflet\";\n\nclass Origins extends React.Component {\n    state = {\n        polygon: [],\n        activeCountry: \"\",\n    };\n\n    componentDidMount = () => {\n        this.getCountries();\n    };\n\n    setActiveCountry = (country) => {\n        //console.log(country);\n        this.setState({ activeCountry: country });\n    };\n\n    getCountries = () => {\n        this.props.origins?.map((origin) => {\n            if (origin !== \"en:ghana\") {\n                fetch(`https://api.lowympact.fr/api/v1/countries/${origin}`)\n                    .then((res) => res.json())\n                    .then((res) => {\n                        let polygon = this.state.polygon;\n                        //console.log(res);\n                        if (res.success && res.data?.country) {\n                            polygon.push({\n                                geo: res.data.country.coordinates,\n                                name: res.data.country.name,\n                            });\n                            this.setState({\n                                polygon: polygon,\n                                activeCountry:\n                                    this.state.activeCountry + res.data.country.name + \", \",\n                            });\n                        }\n                    });\n            }\n            return true;\n        });\n    };\n\n    render = () => {\n        if (this.state.polygon.length === 0) return <React.Fragment />;\n        else {\n            return (\n                <div className=\"environnement-map-container\">\n                    <div className=\"product-co2-impact-header\">\n                        <div className=\"product-co2-impact-logo\">\n                            <div className=\"material-icons icon-label-co2-impact\">place</div>\n                        </div>\n                        <div className=\"product-co2-impact-title\">\n                            <div className=\"product-co2-impact-title-text\">\n                                Provenance des ingrédients\n                            </div>\n                            <div className=\"product-co2-impact-title-label\">\n                                Pays d'origine : {this.state.activeCountry}\n                            </div>\n                        </div>\n                    </div>\n\n                    <Map\n                        center={[51.505, -0.09]}\n                        zoom={-1}\n                        minZoom={0}\n                        className=\"environnement-map\"\n                        scrollWheelZoom={true}\n                        dragging={false}\n                        maxBounds={[\n                            [-90, -180],\n                            [90, 180],\n                        ]}\n                        maxBoundsViscosity={1}\n                        whenCreated={(map) => this.setState({ map })}\n                    >\n                        <TileLayer\n                            attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a>'\n                            url=\"https://stamen-tiles-{s}.a.ssl.fastly.net/toner-background/{z}/{x}/{y}{r}.png\" //'https://maps.wikimedia.org/osm-intl/{z}/{x}/{y}{r}.png' //'https://{s}.tile.osm.org/{z}/{x}/{y}.png'\n                        />\n                        {this.state.polygon.map((poly, i) => {\n                            if (poly)\n                                return (\n                                    <Polygon\n                                        onClick={() => this.setActiveCountry(poly.name)}\n                                        color={\"color:white\"}\n                                        fillColor={\n                                            this.activeCountry === poly.name ? \"blue\" : \"green\"\n                                        }\n                                        opacity={\"1\"}\n                                        positions={poly.geo}\n                                        key={i}\n                                    />\n                                );\n                            else return <React.Fragment />;\n                        })}\n                    </Map>\n                </div>\n            );\n        }\n    };\n}\n\nexport default Origins;\n",
        "import React from \"react\";\n\nclass EmpreinteCarbone extends React.Component {\n    state = {\n        alea: 3,\n    };\n\n    setAlea = (nb) => {\n        // this.setState({ alea: Math.floor(Math.random() * 11) });\n        let alea = this.state.alea + nb;\n        if (alea > 11) alea = 0;\n        if (alea < 0) alea = 11;\n        this.setState({ alea: alea });\n    };\n\n    render = () => {\n        if (this.props.dataEcoScore?.agribalyse?.co2_total) {\n            let repartition = [\n                {\n                    image: \"agriculture\",\n                    name: \"Agriculture\",\n                    percent: (\n                        (parseFloat(this.props.dataEcoScore?.agribalyse?.co2_agriculture) * 100) /\n                        parseFloat(this.props.dataEcoScore?.agribalyse?.co2_total)\n                    ).toFixed(0),\n                },\n                {\n                    image: \"local_shipping\",\n                    name: \"Transport\",\n                    percent: (\n                        (parseFloat(this.props.dataEcoScore?.agribalyse?.co2_transportation) *\n                            100) /\n                        parseFloat(this.props.dataEcoScore?.agribalyse?.co2_total)\n                    ).toFixed(0),\n                },\n                {\n                    image: \"view_in_ar\",\n                    name: \"Emballage\",\n                    percent: (\n                        (parseFloat(this.props.dataEcoScore?.agribalyse?.co2_packaging) * 100) /\n                        parseFloat(this.props.dataEcoScore?.agribalyse?.co2_total)\n                    ).toFixed(0),\n                },\n                {\n                    image: \"transform\",\n                    name: \"Transformation\",\n                    percent: (\n                        (parseFloat(this.props.dataEcoScore?.agribalyse?.co2_processing) * 100) /\n                        parseFloat(this.props.dataEcoScore?.agribalyse?.co2_total)\n                    ).toFixed(0),\n                },\n                {\n                    image: \"store\",\n                    name: \"Distribution\",\n                    percent: (\n                        (parseFloat(this.props.dataEcoScore?.agribalyse?.co2_distribution) * 100) /\n                        parseFloat(this.props.dataEcoScore?.agribalyse?.co2_total)\n                    ).toFixed(0),\n                },\n                {\n                    image: \"microwave\",\n                    name: \"Consommation\",\n                    percent: (\n                        (parseFloat(this.props.dataEcoScore?.agribalyse?.co2_consumption) * 100) /\n                        parseFloat(this.props.dataEcoScore?.agribalyse?.co2_total)\n                    ).toFixed(0),\n                },\n            ];\n            repartition = repartition.map((i) => {\n                return (\n                    <div className=\"empreinte-single\">\n                        <div className=\"material-icons\">{i.image}</div>\n                        <div className=\"name\">{i.name} : </div>\n                        <div className=\"pourcent\">{i.percent} %</div>\n                    </div>\n                );\n            });\n\n            let equivalent = getEquivalent(\n                parseFloat(this.props.dataEcoScore?.agribalyse?.co2_total),\n                this.state.alea\n            );\n\n            let circle = \"cmauve\";\n            if (this.props.dataEcoScore?.agribalyse?.co2_total < 15) circle = \"cred\";\n            if (this.props.dataEcoScore?.agribalyse?.co2_total < 7) circle = \"corange\";\n            if (this.props.dataEcoScore?.agribalyse?.co2_total < 3) circle = \"cgreen\";\n            if (this.props.dataEcoScore?.agribalyse?.co2_total < 1) circle = \"cdarkgreen\";\n            return (\n                <React.Fragment>\n                    <div className=\"empreinte-carbone-container\">\n                        <div className=\"empreinte-carbone-header\">\n                            <div className=\"header-text\">\n                                <div className=\"header-main\">Empreinte Carbone</div>\n                                <div className=\"header-small\">source : ADEME</div>\n                            </div>\n                            <div className=\"empreinte-carbone-number\">\n                                <span>\n                                    {parseFloat(\n                                        this.props.dataEcoScore?.agribalyse?.co2_total\n                                    ).toFixed(2)}\n                                    kg CO2e\n                                </span>\n                                <div className={\"circle \" + circle}></div>\n                            </div>\n                        </div>\n                        <div className=\"empreinte-carbone-equivalent\">\n                            <div className=\"icon-container\">\n                                <div className=\"material-icons\">\n                                    <img\n                                        src={`/images/alternatives/${equivalent[1]}`}\n                                        alt=\"alternative\"\n                                    />\n                                </div>\n                            </div>\n                            <div className=\"equivalent-container\">\n                                <div className=\"text-small\">Soit l'équivalent...</div>\n                                <div className=\"text-big\">{equivalent[0]}</div>\n                            </div>\n                        </div>\n                        <div className=\"arrow\">\n                            <div className=\"material-icons\" onClick={() => this.setAlea(1)}>\n                                arrow_back_ios\n                            </div>\n                            <div className=\"material-icons\" onClick={() => this.setAlea(-1)}>\n                                arrow_forward_ios\n                            </div>\n                        </div>\n                    </div>\n\n                    <div className=\"empreinte-carbone-container no-margin-container\">\n                        <div className=\"empreinte-carbone-header\">\n                            <div className=\"header-text\">\n                                <div className=\"header-main\">\n                                    Répartition de l'empreinte Carbone\n                                </div>\n                                <div className=\"header-small\">\n                                    selon les différentes étapes du cycle de vie\n                                </div>\n                            </div>\n                            {/* <div className=\"empreinte-carbone-number\">\n                                <span>\n                                    {parseFloat(\n                                        this.props.dataEcoScore?.agribalyse?.co2_total\n                                    ).toFixed(2)}\n                                    kg CO2e\n                                </span>\n                                <div className=\"circle\"></div>\n                            </div> */}\n                        </div>\n                        <div className=\"empreinte-carbone-repartition\">{repartition}</div>\n                    </div>\n                </React.Fragment>\n            );\n        } else {\n            return <React.Fragment />;\n        }\n    };\n}\n\nexport default EmpreinteCarbone;\n\nfunction getEquivalent(co2, alea) {\n    switch (alea) {\n        case 0:\n            return [\n                \"De la production de \" +\n                    (co2 / 0.0046).toFixed(0) +\n                    \" feuilles de papier blanc 80g\",\n                \"paper.png\",\n            ];\n        case 1:\n            return [\n                \"De la production de \" +\n                    (co2 / 0.6).toFixed(1) +\n                    \" kg de pommes de terre en France\",\n                \"potatoe.png\",\n            ];\n        case 2:\n            return [\n                \"De la production de \" + (co2 / 0.53).toFixed(1) + \" kg de fraises en France\",\n                \"strawberry.png\",\n            ];\n        case 3:\n            return [\n                \"De \" + (co2 / 0.193).toFixed(1) + \" km parcourus par une personne en voiture\",\n                \"car.svg\",\n            ];\n        case 4:\n            return [\n                \"De \" + (co2 / 0.137).toFixed(1) + \" km parcourus par une personne en Bus de ville\",\n                \"bus.svg\",\n            ];\n        case 5:\n            return [\n                \"De \" +\n                    (co2 / 0.019).toFixed(0) +\n                    \" e-mails envoyés contenant une pièce jointe d'1mo\",\n                \"mail.svg\",\n            ];\n        case 6:\n            return [\n                \"De \" +\n                    (co2 / 0.5).toFixed(1) +\n                    \" jour(s) d'éclairage d'une ampoule à incandescence\",\n                \"light.svg\",\n            ];\n        case 7:\n            return [\n                \"De \" +\n                    (co2 / 0.24).toFixed(1) +\n                    \" heures de chauffage au gaz d'un appartement moyen de 70m²\",\n                \"appartment.svg\",\n            ];\n        case 8:\n            return [\n                \"De la production de \" +\n                    ((co2 * 1000) / 33.8).toFixed(0) +\n                    \" grammes de steak haché de boeuf cru\",\n                \"steak.png\",\n            ];\n        case 9:\n            return [\n                \"De \" +\n                    (co2 / 0.083).toFixed(1) +\n                    \" jours d'éclairage d'une ampoule basse consommation\",\n                \"light.svg\",\n            ];\n        case 10:\n            return [\n                \"De \" +\n                    (co2 / 0.105).toFixed(1) +\n                    \" kilomètres parcourus en Trotinette électrique (en France)\",\n                \"trotinette.png\",\n            ];\n        case 11:\n            return [\n                \"D'une personne parcourant \" +\n                    (co2 / 0.3).toFixed(0) * 100 +\n                    \" kilomètres en TGV (en France)\",\n                \"train.png\",\n            ];\n        default:\n            return [\n                \"De \" +\n                    (co2 / 0.105).toFixed(1) +\n                    \" kilomètres parcourus en Trotinette électrique (en France)\",\n                \"trotinette.png\",\n            ];\n    }\n}\n",
        "import React from \"react\";\nimport Alternatives from \"./Alternatives\";\nimport Origins from \"./Origins\";\nimport \"./Environnement.css\";\nimport EmpreinteCarbone from \"./EmpreinteCarbone\";\n\nclass Environnement extends React.Component {\n    state = {\n        width: undefined,\n        materials: [],\n    };\n\n    getColor = (note) => {\n        if (note > 67) {\n            return \"green\";\n        }\n        if (note <= 33) {\n            return \"red\";\n        }\n        return \"yellow\";\n    };\n\n    getColorImpact = (note) => {\n        if (note > 70) {\n            return \"green\";\n        }\n        if (note <= 40) {\n            return \"red\";\n        }\n        return \"yellow\";\n    };\n\n    getLabel = (note) => {\n        if (note > 67) {\n            return \"Bon\";\n        }\n        if (note <= 33) {\n            return \"Mauvais\";\n        }\n        return \"Moyen\";\n    };\n\n    getLabelImpact = (note) => {\n        if (note > 60) {\n            return \"Impact fort\";\n        }\n        if (note <= 30) {\n            return \"Impact faible\";\n        }\n        return \"Impact moyen\";\n    };\n\n    getLabelImpactPackaging = (note) => {\n        if (note > 2) {\n            return \"Impact faible\";\n        }\n        if (note < -2) {\n            return \"Impact fort\";\n        }\n        return \"Impact moyen\";\n    };\n\n    getColorImpactPackaging = (note) => {\n        if (note > 2) {\n            return \"green\";\n        }\n        if (note < -2) {\n            return \"red\";\n        }\n        return \"yellow\";\n    };\n\n    componentDidMount() {\n        this.updateWindowDimensions();\n        window.addEventListener(\"resize\", this.updateWindowDimensions);\n    }\n\n    componentWillUnmount() {\n        window.removeEventListener(\"resize\", this.updateWindowDimensions);\n    }\n\n    updateWindowDimensions = () => {\n        this.setState({ width: window.innerWidth });\n    };\n\n    displayPackagingDetailImpact = () => {\n        let res = <React.Fragment></React.Fragment>;\n\n        if (this.props.dataEcoScore?.adjustments?.packaging?.packagings) {\n            var materials = [];\n            let slides = <React.Fragment></React.Fragment>;\n\n            this.props.dataEcoScore?.adjustments?.packaging?.packagings.map((data) => {\n                if (data?.material.split(\":\")[1] !== \"unknown\") {\n                    materials.push(data?.material.split(\":\")[1]);\n                }\n                return true;\n            });\n\n            slides = materials\n                .filter(function (item, pos) {\n                    return materials.indexOf(item) === pos;\n                })\n                .map((data) => {\n                    var separator = \"\";\n                    if (materials.indexOf(data) < materials.length - 1) {\n                        separator = \" ; \";\n                    }\n                    return (\n                        <React.Fragment key={data}>\n                            <span>\n                                {data} {separator}\n                            </span>\n                        </React.Fragment>\n                    );\n                });\n\n            if (materials.length > 0) {\n                res = (\n                    <React.Fragment>\n                        <div className=\"product-co2-impact-content\">\n                            <div className=\"product-packaging-impact-content-details-text\">\n                                Matériaux utilisés : &nbsp;{slides}\n                            </div>\n                        </div>\n                    </React.Fragment>\n                );\n            } else {\n                res = (\n                    <React.Fragment>\n                        <div className=\"product-co2-impact-content\">\n                            <div className=\"product-packaging-impact-content-details-text\">\n                                Matériaux utilisés : &nbsp; Inconnu\n                            </div>\n                        </div>\n                    </React.Fragment>\n                );\n            }\n        }\n\n        return res;\n    };\n\n    displayPackagingImpact = () => {\n        let res = <React.Fragment></React.Fragment>;\n\n        if (this.props.dataEcoScore?.adjustments?.packaging?.value) {\n            return (\n                <div className=\"product-co2-impact-container\">\n                    <div className=\"product-co2-impact-header\">\n                        <div className=\"product-co2-impact-logo\">\n                            <div className=\"material-icons icon-label-co2-impact\">view_in_ar</div>\n                        </div>\n                        <div className=\"product-co2-impact-title\">\n                            <div className=\"product-co2-impact-title-text\">\n                                Impact de l'emballage\n                            </div>\n                            <div className=\"product-co2-impact-title-label\">\n                                {this.getLabelImpactPackaging(\n                                    this.props.dataEcoScore?.adjustments?.packaging?.value\n                                )}\n                            </div>\n                        </div>\n                        <div\n                            className=\"product-transport-impact-color-label\"\n                            style={{\n                                color: this.getColorImpactPackaging(\n                                    this.props.dataEcoScore?.adjustments?.packaging?.value\n                                ),\n                            }}\n                        >\n                            ●\n                        </div>\n                    </div>\n                    {this.displayPackagingDetailImpact()}\n                </div>\n            );\n        } else {\n            return res;\n        }\n    };\n\n    render = () => {\n        if (this.props.barcode) {\n            return (\n                <React.Fragment>\n                    <EmpreinteCarbone dataEcoScore={this.props.dataEcoScore} />\n\n                    {this.props.origins ? (\n                        <Origins origins={this.props.origins} />\n                    ) : (\n                        <React.Fragment />\n                    )}\n                    {this.displayPackagingImpact()}\n\n                    <Alternatives\n                        barcode={this.props.barcode}\n                        ecoScore={this.props.ecoScore}\n                        ciqual_code={this.props.dataEcoScore?.agribalyse?.code}\n                    />\n                </React.Fragment>\n            );\n        } else {\n            return <React.Fragment></React.Fragment>;\n        }\n    };\n}\n\nexport default Environnement;\n",
        "import React from \"react\";\nimport Navbar from \"../components/Navbar/Navbar\";\nimport Traceability from \"../components/Traceability/Traceability\";\nimport Environnement from \"../components/Environnement/Environnement\";\nimport Labels from \"../components/Labels/Labels\";\nimport \"./Product.css\";\nimport { Link } from \"react-router-dom\";\nimport jwt from \"jsonwebtoken\";\n\nclass Product extends React.Component {\n    state = {\n        barcode: this.props.match.params.barcode,\n        bcProductId: this.props.match.params.bcProductId,\n        product: undefined,\n        productImageUrl: undefined,\n        productName: undefined,\n        genericName: undefined,\n        ecoScore: undefined,\n        dataEcoScore: undefined,\n        value: 0,\n        connected: false,\n        productData: undefined,\n        userId: undefined,\n        cart: 0,\n        totalCO2Traceability: undefined,\n        countries: [],\n    };\n\n    isFlipping = false;\n\n    //for scrolling\n    getBottomRef = (component) => {\n        this.bottomComponent = component;\n    };\n\n    componentDidMount = () => {\n        this.Verify();\n        let userId = localStorage.getItem(\"userId\");\n        if (userId) {\n            this.setState({ userId: userId });\n            this.loadCartInfo(userId);\n        }\n        this.loadFromOpenFoodFacts(this.props.match.params.barcode);\n        if (this.props.match.params.bcProductId) {\n            this.loadProductInformations(\n                this.props.match.params.barcode,\n                this.props.match.params.bcProductId\n            );\n        }\n    };\n\n    handleBarCodeUpdate = () => {\n        if (this.state.barcode !== this.props.match.params.barcode) {\n            this.setState({\n                barcode: this.props.match.params.barcode,\n                bcProductId: this.props.match.params.bcProductId,\n            });\n            this.loadFromOpenFoodFacts(this.props.match.params.barcode);\n            if (this.props.match.params.bcProductId) {\n                this.loadProductInformations(\n                    this.props.match.params.barcode,\n                    this.props.match.params.bcProductId\n                );\n            }\n        }\n    };\n\n    Verify = () => {\n        let isExpired = true;\n        const token = localStorage.getItem(\"token\");\n        if (token) {\n            var decodedToken = jwt.decode(token, { complete: true });\n            var dateNow = new Date();\n            if (decodedToken.payload.exp >= dateNow.getTime() / 1000) {\n                isExpired = false;\n            }\n        }\n        if (isExpired === false) {\n            this.setState({ connected: true });\n        }\n    };\n\n    loadProductInformations = (barcode, bcProductId) => {\n        fetch(\n            `https://api.lowympact.fr/api/v1/products/${barcode}?bcProductId=${bcProductId}`,\n            // `http://localhost:8080/api/v1/products/${barcode}?bcProductId=${bcProductId}`,\n            {\n                method: \"get\",\n                credentials: \"include\",\n                headers: new Headers({\n                    \"api-key\": \"99d8fb95-abdd-4885-bf6c-3a81d8874043\",\n                    \"Content-Type\": \"application/json\",\n                }),\n            }\n        )\n            .then((response) => response.json())\n            .then((res) => {\n                this.setState({\n                    products: res?.data?.traceability,\n                    impact: res?.data?.impact,\n                    totalCO2Traceability: res?.data?.transportCO2Impact,\n                });\n            });\n    };\n\n    loadFromOpenFoodFacts = (barcode) => {\n        let dataEcoScore;\n\n        fetch(`https://world.openfoodfacts.org/api/v0/product/${barcode}.json/`)\n            .then((response) => response.json())\n            .then((res) => {\n                let productImageUrl = res?.product?.image_url;\n                let productName = res?.product?.product_name;\n                let genericName = res?.product?.generic_name;\n                let ecoScore = res?.product?.ecoscore_grade;\n\n                dataEcoScore = res?.product?.ecoscore_data;\n\n                //console.log(res);\n                let origins = res?.product?.origins_hierarchy;\n                if (origins && origins != \"\") {\n                    this.setState({ origins: origins });\n                }\n\n                if (res?.product) {\n                    this.setState({ productData: res.product });\n                }\n\n                if (productImageUrl) {\n                    this.setState({ productImageUrl: productImageUrl });\n                }\n                if (productName) {\n                    this.setState({ productName: productName });\n                }\n                if (genericName) {\n                    this.setState({ genericName: genericName });\n                }\n                if (\n                    ecoScore &&\n                    (ecoScore === \"a\" ||\n                        ecoScore === \"b\" ||\n                        ecoScore === \"c\" ||\n                        ecoScore === \"d\" ||\n                        ecoScore === \"e\")\n                ) {\n                    this.setState({ ecoScore: ecoScore });\n                }\n                if (dataEcoScore) {\n                    this.setState({ dataEcoScore: dataEcoScore });\n                }\n                if (res.status === 1) {\n                    this.saveHistory();\n                }\n\n                // Mock Soutenance\n                if (barcode === \"80135463\") {\n                    this.setState({ productName: \"Nutella 200g\" });\n                }\n\n                var scoreSearch = \"a\";\n\n                switch (res.product?.ecoscore_grade) {\n                    case \"b\":\n                        scoreSearch = \"a\";\n                        break;\n                    case \"c\":\n                        scoreSearch = \"b\";\n                        break;\n                    case \"d\":\n                        scoreSearch = \"c\";\n                        break;\n                    case \"e\":\n                        scoreSearch = \"c\";\n                        break;\n\n                    default:\n                        break;\n                }\n            });\n    };\n\n    // Get if a connected user already added this item in this cart in the past 2 hours\n    loadCartInfo = (userId) => {\n        if (userId && this.state.barcode) {\n            fetch(\n                `https://api.lowympact.fr/api/v1/users/${userId}/cart/${this.state.barcode}?bcProductAddress=${this.state.bcProductId}`,\n                // `http://localhost:8080/api/v1/users/${this.state.userId}/history`,\n                {\n                    method: \"get\",\n                    credentials: \"include\",\n                    headers: new Headers({\n                        Authorization: localStorage.getItem(\"token\"),\n                        \"api-key\": \"99d8fb95-abdd-4885-bf6c-3a81d8874043\",\n                        \"Content-Type\": \"application/json\",\n                    }),\n                }\n            )\n                .then((response) => response.json())\n                .then((res) => {\n                    //console.log(res);\n                    if (res.success) {\n                        this.setState({ cart: res.data?.quantity });\n                    }\n                });\n        }\n    };\n\n    saveHistory = async () => {\n        const queryString = window.location.search;\n        const urlParams = new URLSearchParams(queryString);\n        const add = urlParams.get(\"cart\");\n        if (add !== \"no\") {\n            await delay(2000);\n\n            let history = JSON.parse(localStorage.getItem(\"local_history\"));\n            let exist = null;\n            if (history) {\n                history = history?.filter(\n                    (element) =>\n                        !(\n                            element.barcode == this.state.barcode &&\n                            element.bcProductId == this.state.bcProductId\n                        )\n                );\n            } else {\n                history = [];\n            }\n\n            history.push({\n                barcode: this.state.barcode,\n                bcProductId: this.state.bcProductId,\n                brand: this.state.productData.brands,\n                image: this.state.productImageUrl,\n                label: this.state.ecoScore,\n                name: this.state.productName,\n                date: Date.now(),\n            });\n            localStorage.setItem(\"local_history\", JSON.stringify(history));\n\n            if (this.state.userId) {\n                fetch(\n                    `https://api.lowympact.fr/api/v1/users/${this.state.userId}/history`,\n                    // `http://localhost:8080/api/v1/users/${this.state.userId}/history`,\n                    {\n                        method: \"put\",\n                        credentials: \"include\",\n                        headers: new Headers({\n                            Authorization: localStorage.getItem(\"token\"),\n                            \"api-key\": \"99d8fb95-abdd-4885-bf6c-3a81d8874043\",\n                            \"Content-Type\": \"application/json\",\n                        }),\n                        body: JSON.stringify({\n                            barcode: this.state.barcode,\n                            bcProductAddress: this.state.bcProductId,\n                        }),\n                    }\n                )\n                    .then((response) => response.json())\n                    .then((res) => {\n                        //console.log(res);\n                    });\n            }\n        }\n    };\n\n    addToCart = () => {\n        if (this.state.barcode && this.state.cart >= 0) {\n            let co2 = -1;\n            if (this.state.dataEcoScore?.agribalyse?.co2_total) {\n                co2 = parseFloat(this.state.dataEcoScore?.agribalyse?.co2_total);\n            }\n\n            let ecoscore = \"unkown\";\n            if (this.state.ecoScore) {\n                ecoscore = this.state.ecoScore;\n            }\n            this.flip();\n            fetch(\n                `https://api.lowympact.fr/api/v1/users/${this.state.userId}/cart`,\n                // `http://localhost:8080/api/v1/users/${this.state.userId}/cart`,\n                {\n                    method: \"put\",\n                    credentials: \"include\",\n                    headers: new Headers({\n                        Authorization: localStorage.getItem(\"token\"),\n                        \"api-key\": \"99d8fb95-abdd-4885-bf6c-3a81d8874043\",\n                        \"Content-Type\": \"application/json\",\n                    }),\n                    body: JSON.stringify({\n                        barcode: this.state.barcode,\n                        bcProductAddress: this.state.bcProductId,\n                        quantityDelta: 1,\n                        ecoscore: ecoscore,\n                        carbonImpact: co2,\n                    }),\n                }\n            )\n                .then((response) => response.json())\n                .then((res) => {\n                    //console.log(res);\n                    if (res.success) {\n                        this.setState({ cart: this.state.cart + 1 });\n                    }\n                });\n        }\n    };\n\n    removeFromCart = () => {\n        if (this.state.barcode && this.state.cart > 0) {\n            this.flip();\n            let co2 = -1;\n            if (this.state.dataEcoScore?.agribalyse?.co2_total) {\n                co2 = parseFloat(this.state.dataEcoScore?.agribalyse?.co2_total);\n            }\n            let ecoscore = \"unkown\";\n            if (this.state.ecoScore) {\n                ecoscore = this.state.ecoScore;\n            }\n            fetch(\n                `https://api.lowympact.fr/api/v1/users/${this.state.userId}/cart`,\n                // `http://localhost:8080/api/v1/users/${this.state.userId}/cart`,\n                {\n                    method: \"put\",\n                    credentials: \"include\",\n                    headers: new Headers({\n                        Authorization: localStorage.getItem(\"token\"),\n                        \"api-key\": \"99d8fb95-abdd-4885-bf6c-3a81d8874043\",\n                        \"Content-Type\": \"application/json\",\n                    }),\n                    body: JSON.stringify({\n                        barcode: this.state.barcode,\n                        bcProductAddress: this.state.bcProductId,\n                        quantityDelta: -1,\n                        ecoscore: ecoscore,\n                        carbonImpact: co2,\n                    }),\n                }\n            )\n                .then((response) => response.json())\n                .then((res) => {\n                    //console.log(res);\n                    if (res.success) {\n                        this.setState({ cart: this.state.cart - 1 });\n                    }\n                });\n        }\n    };\n\n    flip = async (event) => {\n        // if (!this.isFlipping) {\n        // \tthis.isFlipping = true;\n        // \tawait delay(500);\n        //console.log(this.imageFlip.style.transform);\n        if (this.imageFlip && !this.state.isFlipping) {\n            if (this.imageFlip.style.transform === \"rotateY(360deg)\") {\n                this.imageFlip.style.transform = \"rotateY(0deg)\";\n            } else {\n                this.imageFlip.style.transform = \"rotateY(360deg)\";\n            }\n        }\n        // await delay(1000);\n        // this.isFlipping = false;\n        // }\n    };\n\n    displayImage = () => {\n        this.handleBarCodeUpdate();\n\n        let image = <React.Fragment />;\n        let productName = <React.Fragment />;\n        let genericName = <React.Fragment />;\n        let ecoScore = <React.Fragment />;\n        if (this.state.productImageUrl) {\n            image = (\n                <img src={this.state.productImageUrl} className=\"product-image\" alt=\"produit\" />\n            );\n        }\n\n        if (this.state.productName) {\n            productName = <div className=\"product-name\">{this.state.productName}</div>;\n        }\n        if (this.state.ecoScore) {\n            let scoreClass = \"color_score_\" + this.state.ecoScore;\n            ecoScore = (\n                <div className=\"product-ecoscore-image\">\n                    <span className={\"circle-score \" + scoreClass}>⬤ </span>\n                    EcoScore :<span className=\"uppercase \">{\" \" + this.state.ecoScore}</span>\n                </div>\n            );\n        } else if (this.state.genericName) {\n            genericName = <div className=\"product-generic-name\">{this.state.genericName}</div>;\n        }\n        return (\n            <React.Fragment>\n                {this.state.userId ? (\n                    <div\n                        className={this.state.cart > 0 ? \"add-to-cart green\" : \"add-to-cart\"}\n                        onClick={this.addToCart}\n                    >\n                        <span className=\"cart-count\">\n                            {this.state.cart > 0 ? this.state.cart : \"\"}\n                        </span>\n                        <span className=\"material-icons\">add_shopping_cart</span>\n                    </div>\n                ) : (\n                    <React.Fragment />\n                )}\n                {this.state.cart > 0 ? (\n                    <div className=\"remove-from-cart\" onClick={this.removeFromCart}>\n                        <span className=\"material-icons\">remove_shopping_cart</span>\n                    </div>\n                ) : (\n                    <React.Fragment />\n                )}\n                {image}\n                {productName}\n                <div className=\"product-bottom-image-div\">\n                    {genericName}\n                    {ecoScore}\n                </div>\n            </React.Fragment>\n        );\n    };\n\n    handleChange = (event, newValue) => {\n        this.setState({ value: newValue });\n        if (newValue === 1) {\n            let elem = document.getElementsByClassName(\"swiper-container\");\n            if (elem[0]) {\n                elem[0].scrollIntoView({ behavior: \"smooth\" });\n            }\n        }\n    };\n\n    displayNavbar = () => {\n        let retour = <React.Fragment />;\n        if (this.state.bcProductId) {\n            retour = (\n                <div className=\"product-navbar-container\">\n                    <button\n                        className={\n                            this.state.value === 0\n                                ? \"product-navbar-button selected\"\n                                : \"product-navbar-button\"\n                        }\n                        onClick={() => this.handleChange(\"\", 0)}\n                    >\n                        Environnement\n                    </button>\n                    <button\n                        className={\n                            this.state.value === 1\n                                ? \"product-navbar-button selected\"\n                                : \"product-navbar-button\"\n                        }\n                        onClick={() => this.handleChange(\"\", 1)}\n                    >\n                        Traçabilité\n                    </button>\n                    <div\n                        className={\n                            this.state.value === 0\n                                ? \"navbar-under nav-left\"\n                                : \"navbar-under nav-right\"\n                        }\n                    ></div>\n                </div>\n            );\n        }\n        return retour;\n    };\n\n    render = () => {\n        //tri des produits\n        let products = this.state.products?.sort((a, b) => {\n            if (a.depth > b.depth) return -1;\n            else return 1;\n        });\n        return (\n            <React.Fragment>\n                <div className=\"product-page-container\">\n                    <div className=\"product-header-container\">\n                        <div className=\"product-history-link\">\n                            <Link to=\"/history\"> {\"<\"} Historique</Link>\n                        </div>\n                        <img\n                            className=\"product-bitmap-image\"\n                            src=\"/images/utils/bitmap.png\"\n                            alt=\"\"\n                        />\n                    </div>\n                    <div\n                        className=\"product-image-container\"\n                        // onClick={this.flip}\n                        ref={(ref) => (this.imageFlip = ref)}\n                    >\n                        {this.displayImage()}\n                    </div>\n\n                    {this.displayNavbar()}\n\n                    {/* <AppBar position=\"static\">\n\t\t\t\t\t\t<Tabs\n\t\t\t\t\t\t\tvalue={this.state.value}\n\t\t\t\t\t\t\tonChange={this.handleChange}\n\t\t\t\t\t\t\taria-label=\"simple tabs example\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<Tab label=\"Traçabilité\" />\n\t\t\t\t\t\t\t<Tab label=\"Environnement\" />\n\t\t\t\t\t\t</Tabs>\n\t\t\t\t\t</AppBar>\n\t\t\t\t\t<TabPanel value={this.state.value} index={0}></TabPanel>\n\t\t\t\t\t<TabPanel value={this.state.value} index={1}>\n\t\t\t\t</TabPanel> */}\n                    {this.state.value === 0 ? (\n                        <Environnement\n                            dataEcoScore={this.state.dataEcoScore}\n                            ecoScore={this.state.ecoScore}\n                            origins={this.state.origins}\n                            displayTranportImpact={\n                                this.props.match.params.bcProductId !== null &&\n                                this.props.match.params.bcProductId !== undefined\n                            }\n                            barcode={this.props.match.params.barcode}\n                        ></Environnement>\n                    ) : (\n                        <div className=\"product-bottom-container\">\n                            <Traceability\n                                products={products}\n                                getBottomRef={this.getBottomRef}\n                                totalCO2Traceability={this.state.totalCO2Traceability}\n                            />\n                        </div>\n                    )}\n                    <Navbar\n                        barcode={this.props.match.params.barcode}\n                        bcProductId={this.props.match.params.bcProductId}\n                    />\n                </div>\n            </React.Fragment>\n        );\n    };\n}\n\nexport default Product;\n\nconst delay = (ms) => new Promise((res) => setTimeout(res, ms));\n",
        "import React from \"react\";\n\nimport \"swiper/swiper-bundle.css\";\nimport \"./Labels.css\";\n\nclass Labels extends React.Component {\n    displaySpecies = () => {\n        if (this.props.dataEcoScore?.adjustments?.threatened_species?.length === 0) {\n            return <div></div>;\n        } else {\n            if (this.props.dataEcoScore?.adjustments?.threatened_species?.value < 0) {\n                return (\n                    <div>\n                        <div className=\"labels-container-bad\">\n                            <span className=\"material-icons\">warning_amber</span>\n                            {this.props.dataEcoScore?.adjustments?.threatened_species?.ingredient}\n                        </div>\n                    </div>\n                );\n            } else {\n                return (\n                    <div>\n                        <div className=\"labels-container-good\">\n                            <span className=\"material-icons\">task_alt</span>\n                            {this.props.dataEcoScore?.adjustments?.threatened_species?.ingredient}\n                        </div>\n                    </div>\n                );\n            }\n        }\n    };\n\n    displaySpecies = () => {\n        if (!this.props.dataEcoScore?.adjustments?.threatened_species?.ingredient) {\n            return <div></div>;\n        } else {\n            if (this.props.dataEcoScore?.adjustments?.threatened_species?.value < 0) {\n                return (\n                    <div>\n                        <div className=\"labels-container-bad\">\n                            <span className=\"material-icons\">warning_amber</span>\n                            {this.props.dataEcoScore?.adjustments?.threatened_species?.ingredient}\n                        </div>\n                    </div>\n                );\n            } else {\n                return (\n                    <div>\n                        <div className=\"labels-container-good\">\n                            <span className=\"material-icons\">task_alt</span>\n                            {this.props.dataEcoScore?.adjustments?.threatened_species?.ingredient}\n                        </div>\n                    </div>\n                );\n            }\n        }\n    };\n\n    displayProduction = () => {\n        if (!this.props.dataEcoScore?.adjustments?.production_system?.label) {\n            return <div></div>;\n        } else {\n            if (this.props.dataEcoScore?.adjustments?.production_system?.value < 0) {\n                return (\n                    <div>\n                        <div className=\"labels-container-bad\">\n                            <span className=\"material-icons\">warning_amber</span>\n                            {this.props.dataEcoScore?.adjustments?.production_system?.label}\n                        </div>\n                    </div>\n                );\n            } else {\n                return (\n                    <div>\n                        <div className=\"labels-container-good\">\n                            <span className=\"material-icons\">task_alt</span>\n                            {this.props.dataEcoScore?.adjustments?.production_system?.label}\n                        </div>\n                    </div>\n                );\n            }\n        }\n    };\n\n    render() {\n        if (\n            this.props.dataEcoScore?.adjustments?.threatened_species?.length !== 0 &&\n            this.props.dataEcoScore?.adjustments?.production_system?.label\n        ) {\n            return (\n                <div>\n                    <h1>Labels</h1>\n\n                    <div className=\"labels-container\">\n                        {this.displaySpecies()}\n                        {this.displayProduction()}\n                    </div>\n                </div>\n            );\n        } else {\n            return <React.Fragment />;\n        }\n    }\n}\n\nexport default Labels;\n",
        "import React from \"react\";\nimport Navbar from \"../components/Navbar/Navbar\";\nimport Header from \"../components/Header/Header\";\nimport \"./Profil.css\";\nimport { Link } from \"react-router-dom\";\nimport jwt from \"jsonwebtoken\";\nimport { motion } from \"framer-motion\";\n\nclass Profil extends React.Component {\n    state = {\n        connected: false,\n    };\n\n    disconnect = () => {\n        localStorage.clear();\n        this.props.history.push(\"/login\");\n    };\n\n    componentDidMount = () => {\n        this.Verify();\n    };\n\n    Verify = () => {\n        let isExpired = true;\n        const token = localStorage.getItem(\"token\");\n        if (token) {\n            var decodedToken = jwt.decode(token, { complete: true });\n            var dateNow = new Date();\n            if (decodedToken.payload.exp >= dateNow.getTime() / 1000) {\n                isExpired = false;\n            }\n        }\n        if (isExpired === false) {\n            this.setState({ connected: true }); // redirection vers la page login\n        }\n    };\n\n    displayConnectedProfil = () => {\n        return (\n            <React.Fragment>\n                <h2 className=\"profil-title\">Bienvenue sur ton profil!</h2>\n                <Link to=\"/stats\" className=\"profil-button\">\n                    Statistiques\n                </Link>\n                <Link to=\"/configuration\" className=\"profil-button\">\n                    Configuration\n                </Link>\n                <div onClick={this.disconnect} className=\"profil-button\">\n                    Déconnecter\n                </div>\n            </React.Fragment>\n        );\n    };\n\n    displayUnconnectedProfil = () => {\n        return (\n            <React.Fragment>\n                <h2 className=\"profil-title\">Non connecté</h2>\n                <p>Connecte toi pour que ton historique soit sauvegardé !</p>\n                <Link to=\"/login\" className=\"profil-button\">\n                    Me Connecter\n                </Link>\n            </React.Fragment>\n        );\n    };\n\n    render() {\n        return (\n            <div>\n                <Link to=\"/\">\n                    <Header />\n                </Link>\n                <motion.div\n                    initial={{ opacity: 0 }}\n                    animate={{ opacity: 1 }}\n                    exit={{ opacity: 0 }}\n                    className=\"profil-screen\"\n                >\n                    <div className=\"profil-picture\">\n                        <div className=\"material-icons\">person</div>\n                    </div>\n                    {this.state.connected\n                        ? this.displayConnectedProfil()\n                        : this.displayUnconnectedProfil()}\n                </motion.div>\n                <Navbar />\n            </div>\n        );\n    }\n}\n\nexport default Profil;\n",
        "import React from \"react\";\n\nfunction ButtonSignup() {\n  return (\n  <div>\n    Créer mon compte\n  </div>\n  );\n}\n\nexport default ButtonSignup;",
        "import React, { Component } from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport ButtonSignup from \"../components/Button/ButtonSignup\";\nimport fruits from \"../assets/images/fruits-vegetables-basket-by-oblik-studio.svg\";\nimport Header from \"../components/Header/Header\";\nimport \"./Login.css\";\nimport { Link } from \"react-router-dom\";\n\nexport const validEmail = new RegExp(\"^[a-zA-Z0-9._:$!%-]+@[a-zA-Z0-9.-]+.[a-zA-Z]$\");\n\nclass Signup extends Component {\n    state = {\n        userName: \"\",\n        email: \"\",\n        password: \"\",\n        confirmPassword: \"\",\n        errors: [],\n        redirect: false,\n        submit: false,\n    };\n\n    validate() {\n        var errors = [];\n        if (this.state.userName.length === 0) {\n            errors.push(\"Saissez votre nom\");\n        }\n        if (this.state.email.length === 0) {\n            errors.push(\"Saissez votre adresse e-mail\");\n        }\n        if (validEmail.test(this.state.email) === false) {\n            errors.push(\"Saissez une adresse e-mail valide\");\n        }\n        if (this.state.password.length < 6) {\n            errors.push(\"Entre un mot de passe. 6 caràcteres minimum requis\");\n        }\n        if (this.state.password !== this.state.confirmPassword) {\n            errors.push(\"Les mots de passe ne correspondent pas\");\n        }\n        this.setState({ errors: errors });\n        return errors;\n    }\n\n    signUser = async () => {\n        let errors = await fetch(`https://api.lowympact.fr/api/v1/users/`, {\n            method: \"post\",\n            credentials: \"include\",\n            headers: new Headers({\n                \"api-key\": \"99d8fb95-abdd-4885-bf6c-3a81d8874043\",\n                \"Content-Type\": \"application/json\",\n            }),\n            body: JSON.stringify({\n                username: this.state.userName,\n                email: this.state.email,\n                password: this.state.password,\n            }),\n        })\n            .then((response) => response.json())\n            .then((res) => {\n                //console.log(res);\n                let errors = [];\n\n                if (!res.success) {\n                    errors.push(\"Il y a déjà un compte avec ce mail ou une erreur réseau.\");\n                } else {\n                    localStorage.setItem(\"token\", res.token);\n                    localStorage.setItem(\"userId\", res._id);\n                    this.props.history.push(\"/history\");\n                }\n                this.setState({ errors: errors });\n                return errors;\n            });\n        return errors;\n    };\n\n    handleSubmit = async (e) => {\n        e.preventDefault();\n        let errors = this.validate();\n        ////console.log(\"errors: \" + errors);\n        if (errors.length === 0) {\n            errors = await this.signUser();\n        }\n        if (errors.length === 0) {\n            this.setState({ redirect: true });\n        }\n    };\n\n    displayErrors = () => {\n        let errors = <React.Fragment></React.Fragment>;\n        errors = this.state.errors.map((error) => {\n            return <p>{error}</p>;\n        });\n        return errors;\n    };\n\n    render() {\n        if (this.state.redirect) {\n            return <Redirect to=\"/history\" />;\n        }\n        ////console.log(\"render\");\n        return (\n            <React.Fragment>\n                <Link to=\"/login\">\n                    <Header />\n                </Link>\n                <div className=\"logo-fruits\">\n                    <img src={fruits} className=\"logo\" alt=\"Fruits\" />\n                </div>\n                <Link className=\"back-button\" to=\"/login\">\n                    {\"< Retour\"}\n                </Link>\n                <div className=\"signup-container\">\n                    <form className=\"forms\">\n                        <label>\n                            nom\n                            <input\n                                className=\"input-forms\"\n                                value={this.state.userName}\n                                onChange={(evt) =>\n                                    this.setState({\n                                        userName: evt.target.value,\n                                    })\n                                }\n                                type=\"text\"\n                            />\n                        </label>\n                        <label>\n                            email\n                            <input\n                                className=\"input-forms\"\n                                value={this.state.email}\n                                onChange={(evt) => this.setState({ email: evt.target.value })}\n                                type=\"email\"\n                            />\n                        </label>\n                        <label>\n                            mot de passe\n                            <input\n                                className=\"input-forms\"\n                                value={this.state.password}\n                                onChange={(evt) =>\n                                    this.setState({\n                                        password: evt.target.value,\n                                    })\n                                }\n                                type=\"password\"\n                            />\n                        </label>\n                        <label>\n                            confirmer mot de passe\n                            <input\n                                className=\"input-forms\"\n                                value={this.state.passwordConfirm}\n                                onChange={(evt) =>\n                                    this.setState({\n                                        confirmPassword: evt.target.value,\n                                    })\n                                }\n                                type=\"password\"\n                            />\n                        </label>\n                    </form>\n                    <label className=\"errors-signup\">{this.displayErrors()}</label>\n                    <div className=\"button-signup\" onClick={this.handleSubmit}>\n                        <ButtonSignup />\n                    </div>\n                </div>\n            </React.Fragment>\n        );\n    }\n}\nexport default Signup;\n",
        "import React from \"react\";\n\nfunction ButtonSignin() {\n  return (\n  <div>\n    Me connecter\n  </div>\n  );\n}\n\nexport default ButtonSignin;",
        "import React, { Component } from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport ButtonSignin from \"../components/Button/ButtonSignin\";\nimport fruits from \"../assets/images/fruits-vegetables-basket-by-oblik-studio.svg\";\nimport Header from \"../components/Header/Header\";\nimport blob from \"../assets/images/bitmap.png\";\nimport \"./Login.css\";\nimport { Link } from \"react-router-dom\";\nimport jwt from \"jsonwebtoken\";\n\nfunction validate(email, password) {\n    const errors = [];\n\n    if (email.length === 0) {\n        errors.push(<p>Saissez votre adresse e-mail</p>);\n    }\n    if (password.length === 0) {\n        errors.push(<p>Saissez votre mot de passe</p>);\n    }\n    return errors;\n}\n\nclass Signin extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            email: \"\",\n            password: \"\",\n            errors: [],\n            redirect: false,\n            loginSuccessful: null,\n        };\n    }\n\n    handleSubmit = (e) => {\n        e.preventDefault();\n        const { email, password } = this.state;\n        const errors = validate(email, password);\n        ////console.log(email, password, errors);\n        this.setState({ errors });\n        if (errors.length === 0) {\n            this.Connect();\n        }\n    };\n\n    componentDidMount = () => {\n        this.Verify();\n    };\n\n    Verify = () => {\n        let isExpired = true;\n        const token = localStorage.getItem(\"token\");\n        if (token) {\n            var decodedToken = jwt.decode(token, { complete: true });\n            var dateNow = new Date();\n            if (decodedToken.payload.exp >= dateNow.getTime() / 1000) {\n                isExpired = false;\n            }\n        }\n        if (isExpired === false) {\n            this.setState({ redirect: true }); // redirection vers la page login\n        }\n    };\n\n    Connect = () => {\n        fetch(`https://api.lowympact.fr/api/v1/users/login`, {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n                \"api-key\": \"99d8fb95-abdd-4885-bf6c-3a81d8874043\",\n\n                //'x-access-token': localStorage.getItem('token'),\n            },\n            body: JSON.stringify({\n                email: this.state.email,\n                password: this.state.password,\n            }),\n        })\n            .then((response) => response.json())\n            .then((data) => {\n                ////console.log(data);\n                if (data.error === \"No user found\") {\n                    this.setState({ loginSuccessful: false });\n                    let err = this.state.errors;\n                    err.push(<p>Utilisateur Inconnu</p>);\n                    this.setState({ errors: err });\n                } else if (data.error === \"Incorrect password\" || !data.success) {\n                    this.setState({ loginSuccessful: false });\n                    let err = this.state.errors;\n                    err.push(<p>Mot de passe Incorrect</p>);\n                    this.setState({ errors: err });\n                } else {\n                    // //console.log(data);\n                    localStorage.setItem(\"token\", data.token);\n                    localStorage.setItem(\"userId\", data._id);\n                    this.setState({ loginSuccessful: true, redirect: true });\n                    //this.props.history.goBack();\t// a ajouter pour être redirigé vers la page initialement\n                    // demandée. On doit cependant rediriger si la page demandée\n                    // était la page de login\n                }\n            });\n    };\n\n    onPasswordChange = () => {\n        this.setState({\n            password: this.passwordInput.value,\n            email: this.emailInput.value,\n        });\n    };\n\n    render() {\n        if (this.state.redirect) {\n            return <Redirect to=\"/history\" />;\n        }\n        return (\n            <React.Fragment>\n                <Link to=\"/login\">\n                    <Header />\n                </Link>\n                <div className=\"logo-fruits\">\n                    <img src={fruits} className=\"logo\" alt=\"Fruits\" />\n                </div>\n\n                <Link className=\"back-button\" to=\"/login\">\n                    {\"< Retour\"}\n                </Link>\n                <div className=\"signin-container\">\n                    <form className=\"forms\">\n                        <label>\n                            email\n                            <input\n                                className=\"input-forms\"\n                                value={this.state.email}\n                                onChange={this.onPasswordChange}\n                                ref={(ref) => (this.emailInput = ref)}\n                                type=\"email\"\n                            />\n                        </label>\n                        <label>\n                            mot de passe\n                            <input\n                                className=\"input-forms\"\n                                value={this.state.password}\n                                onChange={this.onPasswordChange}\n                                ref={(ref) => (this.passwordInput = ref)}\n                                type=\"password\"\n                            />\n                        </label>\n                    </form>\n                    <label className=\"errors-signin\">{this.state.errors}</label>\n                    <div className=\"button-signin\" onClick={this.handleSubmit}>\n                        <ButtonSignin />\n                    </div>\n                </div>\n            </React.Fragment>\n        );\n    }\n}\nexport default Signin;\n",
        "import React from \"react\";\n\nfunction ButtonChangePassword() {\n  return (\n  <div>\n    Changer mot de passe\n  </div>\n  );\n}\n\nexport default ButtonChangePassword;",
        "export const USERS =\n    {\n        id: 0,\n        email: \"bububu@bababa.com\",\n        password: \"123456\"\n    };",
        "import React, { Component } from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport ButtonChangePassword from \"../components/Button/ButtonChangePassword\";\nimport fruits from \"../assets/images/fruits-vegetables-basket-by-oblik-studio.svg\";\nimport Header from \"../components/Header/Header\";\nimport Navbar from \"../components/Navbar/Navbar\";\nimport \"./ProfileConfiguration.css\";\nimport { USERS } from \"../assets/users/users\";\nimport jwt from \"jsonwebtoken\";\nimport { Link } from \"react-router-dom\";\n\nfunction validate(newPassword, confirmPassword) {\n    const errors = [];\n    if (newPassword.length < 6) {\n        errors.push(<p>Entre un mot de passe. 6 caractères minimum requis</p>);\n    }\n    if (newPassword !== confirmPassword) {\n        errors.push(<p>Les mots de passe ne correspondent pas</p>);\n    }\n    return errors;\n}\n\nclass ProfileConfiguration extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            user: USERS,\n            currentPassword: \"\",\n            newPassword: \"\",\n            confirmPassword: \"\",\n            errors: [],\n            redirect: false,\n        };\n    }\n\n    handleChange = (e) => {\n        e.preventDefault();\n        const { currentPassword, newPassword, confirmPassword } = this.state;\n        const errors = validate(newPassword, confirmPassword);\n        //console.log(this.state.user.email, currentPassword, newPassword, confirmPassword, errors);\n        this.setState({ errors });\n        if (errors.length === 0) {\n            this.changeUserInfo(this.state.user._id, currentPassword, newPassword);\n        }\n    };\n\n    changeUserInfo = (userId, currentPassword, newPassword) => {\n        //console.log(\"hey\");\n        fetch(\n            `https://api.lowympact.fr/api/v1/users/${userId}`,\n            // `http://localhost:8080/api/v1/users/login`,\n            {\n                method: \"PUT\",\n                headers: {\n                    \"Content-Type\": \"application/json\",\n                    \"api-key\": \"99d8fb95-abdd-4885-bf6c-3a81d8874043\",\n                    authorization: localStorage.getItem(\"token\"),\n                },\n                body: JSON.stringify({\n                    currentPassword: currentPassword,\n                    newPassword: newPassword,\n                }),\n            }\n        )\n            .then((response) => response.json())\n            .then((res) => {\n                //console.log(res);\n                if (res.success === false) {\n                    this.setState({\n                        errors: [...this.state.errors, res.error],\n                    });\n                } else {\n                    this.setState({ redirect: true });\n                }\n            });\n    };\n\n    Verify = () => {\n        let isExpired = true;\n        const token = localStorage.getItem(\"token\");\n        if (token) {\n            var decodedToken = jwt.decode(token, { complete: true });\n            var dateNow = new Date();\n            if (decodedToken.payload.exp >= dateNow.getTime() / 1000) {\n                isExpired = false;\n            }\n        }\n        if (isExpired === true) {\n            this.setState({ redirect: true }); // redirection vers la page login\n        }\n    };\n\n    componentDidMount = () => {\n        this.Verify();\n        let userId = localStorage.getItem(\"userId\");\n        if (userId) {\n            this.loadUserInfo(userId);\n        }\n    };\n\n    loadUserInfo = (userId) => {\n        fetch(\n            `https://api.lowympact.fr/api/v1/users/${userId}`,\n            // `http://localhost:8080/api/v1/users/login`,\n            {\n                method: \"GET\",\n                headers: {\n                    \"Content-Type\": \"application/json\",\n                    \"api-key\": \"99d8fb95-abdd-4885-bf6c-3a81d8874043\",\n                    authorization: localStorage.getItem(\"token\"),\n                },\n            }\n        )\n            .then((response) => response.json())\n            .then((res) => {\n                //console.log(res);\n\n                this.setState({ user: res.data });\n            });\n    };\n\n    render() {\n        if (this.state.redirect) {\n            return <Redirect to=\"/profil\" />;\n        }\n        //console.log(this.state.redirect);\n        return (\n            <div className=\"screen\">\n                <Link to=\"/\">\n                    <Header />\n                </Link>\n                <Navbar />\n                <div className=\"logo-fruits\">\n                    <img src={fruits} className=\"logo\" alt=\"Fruits\" />\n                </div>\n                <Link className=\"back-button\" to=\"/profil\">\n                    {\"< Retour\"}\n                </Link>\n                <div className=\"configuration-screen-title\"></div>\n                <div className=\"errors-change-password\">{this.state.errors}</div>\n                <div className=\"configuration-container\">\n                    <div className=\"configuration-email-block\">\n                        <div>email</div>\n                        <div>{this.state.user.email}</div>\n                    </div>\n                    <form className=\"configuration-form\">\n                        <label>\n                            {/* Mot de passe actuel */}\n                            <input\n                                placeholder=\"mot de passe actuel\"\n                                className=\"input-forms\"\n                                value={this.state.currentPassword}\n                                onChange={(evt) =>\n                                    this.setState({\n                                        currentPassword: evt.target.value,\n                                    })\n                                }\n                                type=\"password\"\n                            />\n                        </label>\n                        <label>\n                            {/* Nouveau mot de passe */}\n                            <input\n                                value={this.state.newPassword}\n                                className=\"input-forms\"\n                                onChange={(evt) =>\n                                    this.setState({\n                                        newPassword: evt.target.value,\n                                    })\n                                }\n                                type=\"password\"\n                                placeholder=\"nouveau mot de passe\"\n                            />\n                        </label>\n                        <label>\n                            {/* Confirmation de mot de passe */}\n                            <input\n                                placeholder=\"confirmation de mdp\"\n                                className=\"input-forms\"\n                                value={this.state.confirmPassword}\n                                onChange={(evt) =>\n                                    this.setState({\n                                        confirmPassword: evt.target.value,\n                                    })\n                                }\n                                type=\"password\"\n                            />\n                        </label>\n                        <Link className=\"button-change-password\" onClick={this.handleChange} to=\"\">\n                            <ButtonChangePassword />\n                        </Link>\n                    </form>\n                </div>\n            </div>\n        );\n    }\n}\nexport default ProfileConfiguration;\n",
        "import React from \"react\";\nimport { Swiper, SwiperSlide } from \"swiper/react\";\n// Import Swiper styles\nimport \"swiper/swiper-bundle.css\";\n\n//Import Pie Chart\nimport { PieChart } from \"react-minimal-pie-chart\";\n\nimport fruits from \"../../assets/images/fruits-vegetables-basket-by-oblik-studio.svg\";\nimport { motion } from \"framer-motion\";\n\nclass DoughnutChartEcoScore extends React.Component {\n    state = {\n        swiper: undefined,\n        selectedSegment: undefined,\n    };\n\n    displayChart = () => {\n        let chart = <React.Fragment></React.Fragment>;\n        if (this.props.ecoScoreData && this.props.cartedProduct > 0) {\n            let data = [\n                {\n                    title: \"EcoScore A\",\n                    value: this.props.ecoScoreData.a,\n                    color: \"#1e8f4f\",\n                },\n                {\n                    title: \"EcoScore B\",\n                    value: this.props.ecoScoreData.b,\n                    color: \"#5fad0c\",\n                },\n                {\n                    title: \"EcoScore C\",\n                    value: this.props.ecoScoreData.c,\n                    color: \"#ecb10f\",\n                },\n                {\n                    title: \"EcoScore D\",\n                    value: this.props.ecoScoreData.d,\n                    color: \"#ff6f1e\",\n                },\n                {\n                    title: \"EcoScore E\",\n                    value: this.props.ecoScoreData.e,\n                    color: \"#df1e1f\",\n                },\n                {\n                    title: \"EcoScore Inconnu\",\n                    value: this.props.ecoScoreData.unknown,\n                    color: \"#000000\",\n                },\n            ];\n            chart = (\n                <PieChart\n                    data={data}\n                    lineWidth={30}\n                    paddingAngle={1}\n                    radius={PieChart.defaultProps.radius - 3}\n                    animate\n                    animationDuration={700}\n                    label={({ dataEntry }) => `${Math.round(dataEntry.percentage)}%`}\n                    labelStyle={(index) =>\n                        index == this.state.selectedSegment\n                            ? {\n                                  fontSize: \"6px\",\n                                  fontFamily: \"comfortaa\",\n                                  fill: data[index].color,\n                              }\n                            : {\n                                  fontSize: \"0px\",\n                                  fontFamily: \"comfortaa\",\n                                  fill: data[index].color,\n                              }\n                    }\n                    labelPosition={60}\n                    segmentsStyle={{\n                        transition: \"stroke .3s ease-out\",\n                        cursor: \"pointer\",\n                    }}\n                    segmentsShift={(index) => (index == this.state.selectedSegment ? 3 : 0)}\n                    onClick={(event, index) => {\n                        if (index == this.state.selectedSegment) {\n                            this.setState({ selectedSegment: undefined });\n                            this.state.swiper.slideTo(0, 500);\n                        } else {\n                            this.setState({ selectedSegment: index });\n                            this.state.swiper.slideTo(index + 1, 500);\n                        }\n                    }}\n                />\n            );\n        } else {\n            chart = (\n                <motion.div\n                    className=\"stats-no-product\"\n                    initial={{ opacity: 0 }}\n                    animate={{ opacity: 1 }}\n                    exit={{ opacity: 0 }}\n                >\n                    <div>\n                        <img src={fruits} className=\"logo\" alt=\"Fruits\" />\n                        <p className=\"logo-text\">Commence à scanner des produits !</p>\n                    </div>\n                </motion.div>\n            );\n        }\n        return chart;\n    };\n\n    onSlideChange = (index) => {\n        if (index == 0) {\n            this.setState({ selectedSegment: undefined });\n        } else {\n            this.setState({ selectedSegment: index - 1 });\n        }\n    };\n\n    displaySlides = () => {\n        let slides = <React.Fragment></React.Fragment>;\n        if (this.props.ecoScoreData && this.props.cartedProduct > 0) {\n            slides = (\n                <React.Fragment>\n                    <SwiperSlide>\n                        <div className=\"stats-slider\">\n                            <img\n                                className=\"stats-ecoscore-full\"\n                                src=\"/images/utils/ecoScoreFull.png\"\n                                alt=\"\"\n                            />\n                        </div>\n                    </SwiperSlide>\n                    <SwiperSlide>\n                        <div className=\"stats-slider\">\n                            <span className=\"stats-slider-text\">\n                                {\">\"} EcoScore A : {this.props.ecoScoreData.a}{\" \"}\n                                {this.props.ecoScoreData.a > 1 ? \" produits\" : \" produit\"}\n                            </span>\n                            <img\n                                className=\"stats-ecoscore-image\"\n                                src=\"/images/utils/ecoScoreA.png\"\n                                alt=\"\"\n                            />\n                        </div>\n                    </SwiperSlide>\n                    <SwiperSlide>\n                        <div className=\"stats-slider\">\n                            <span className=\"stats-slider-text\">\n                                {\">\"} EcoScore B : {this.props.ecoScoreData.b}{\" \"}\n                                {this.props.ecoScoreData.b > 1 ? \" produits\" : \" produit\"}\n                            </span>\n                            <img\n                                className=\"stats-ecoscore-image\"\n                                src=\"/images/utils/ecoScoreB.png\"\n                                alt=\"\"\n                            />\n                        </div>\n                    </SwiperSlide>\n                    <SwiperSlide>\n                        <div className=\"stats-slider\">\n                            <span className=\"stats-slider-text\">\n                                {\">\"} EcoScore C : {this.props.ecoScoreData.c}{\" \"}\n                                {this.props.ecoScoreData.c > 1 ? \" produits\" : \" produit\"}\n                            </span>\n                            <img\n                                className=\"stats-ecoscore-image\"\n                                src=\"/images/utils/ecoScoreC.png\"\n                                alt=\"\"\n                            />\n                        </div>\n                    </SwiperSlide>\n                    <SwiperSlide>\n                        <div className=\"stats-slider\">\n                            <span className=\"stats-slider-text\">\n                                {\">\"} EcoScore D : {this.props.ecoScoreData.d}{\" \"}\n                                {this.props.ecoScoreData.d > 1 ? \" produits\" : \" produit\"}\n                            </span>\n                            <img\n                                className=\"stats-ecoscore-image\"\n                                src=\"/images/utils/ecoScoreD.png\"\n                                alt=\"\"\n                            />\n                        </div>\n                    </SwiperSlide>\n                    <SwiperSlide>\n                        <div className=\"stats-slider\">\n                            <span className=\"stats-slider-text\">\n                                {\">\"} EcoScore E : {this.props.ecoScoreData.e}{\" \"}\n                                {this.props.ecoScoreData.e > 1 ? \" produits\" : \" produit\"}\n                            </span>\n                            <img\n                                className=\"stats-ecoscore-image\"\n                                src=\"/images/utils/ecoScoreE.png\"\n                                alt=\"\"\n                            />\n                        </div>\n                    </SwiperSlide>\n                    <SwiperSlide>\n                        <div className=\"stats-slider\">\n                            <span className=\"stats-slider-text\">\n                                {\">\"} EcoScore Inconnu : {this.props.ecoScoreData.unknown}{\" \"}\n                                {this.props.ecoScoreData.unknown > 1 ? \" produits\" : \" produit\"}\n                            </span>\n                        </div>\n                    </SwiperSlide>\n                </React.Fragment>\n            );\n        }\n        return slides;\n    };\n\n    render = () => {\n        return (\n            <React.Fragment>\n                <div className=\"stats-chart-pie\">{this.displayChart()}</div>\n                <div className=\"stats-chart-slider\">\n                    <Swiper\n                        spaceBetween={0}\n                        slidesPerView={1}\n                        centeredSlides={true}\n                        onSlideChange={(i) => this.onSlideChange(i.activeIndex)}\n                        onSwiper={(swiper) => this.setState({ swiper: swiper })}\n                    >\n                        {this.displaySlides()}\n                    </Swiper>\n                </div>\n            </React.Fragment>\n        );\n    };\n}\n\nexport default DoughnutChartEcoScore;\n",
        "import React from \"react\";\nimport { Swiper, SwiperSlide } from \"swiper/react\";\n// Import Swiper styles\nimport \"swiper/swiper-bundle.css\";\n\n//Import Bar Chart\nimport Chart from \"react-apexcharts\";\n\nimport fruits from \"../../assets/images/fruits-vegetables-basket-by-oblik-studio.svg\";\nimport { motion } from \"framer-motion\";\n\nconst monthNames = [\n    \"Janvier\",\n    \"Février\",\n    \"Mars\",\n    \"Avril\",\n    \"Mai\",\n    \"Juin\",\n    \"Juillet\",\n    \"Août\",\n    \"Septembre\",\n    \"Octobre\",\n    \"Novembre\",\n    \"Décembre\",\n];\n\nclass BarChartCarbonImpact extends React.Component {\n    state = {\n        selectedSegment: 0,\n        options: {\n            chart: {\n                toolbar: {\n                    show: false,\n                },\n                dropShadow: {\n                    enabled: true,\n                    top: 0,\n                    left: 0,\n                    blur: 2,\n                    opacity: 0.5,\n                },\n            },\n            plotOptions: {\n                bar: {\n                    borderRadius: 5,\n                    horizontal: true,\n                },\n            },\n            xaxis: {\n                categories: [\"Janvier\", \"Février\", \"Mars\", \"Avril\", \"Mai\"],\n                labels: {\n                    style: {\n                        fontSize: \"12px\",\n                        fontFamily: \"Comfortaa\",\n                        fontColor: \"#1b3044\",\n                    },\n                },\n                title: {\n                    text: \"CO₂ équivalent (kg)\",\n                    style: {\n                        fontSize: \"12px\",\n                        fontFamily: \"Comfortaa\",\n                        fontColor: \"#1b3044\",\n                    },\n                },\n            },\n            yaxis: {\n                labels: {\n                    style: {\n                        fontSize: \"12px\",\n                        fontFamily: \"Comfortaa\",\n                        fontColor: \"#1b3044\",\n                    },\n                },\n            },\n            dataLabels: {\n                enabled: true,\n                style: {\n                    fontSize: \"10px\",\n                    fontFamily: \"Comfortaa\",\n                },\n            },\n            noData: {\n                text: \"Chargement...\",\n            },\n            fill: {\n                colors: [\"#ff914d\"],\n            },\n            grid: {\n                xaxis: {\n                    lines: {\n                        show: true,\n                    },\n                },\n                yaxis: {\n                    lines: {\n                        show: false,\n                    },\n                },\n            },\n        },\n    };\n\n    displayChart = () => {\n        let chart = <React.Fragment></React.Fragment>;\n        if (this.props.carbonImpactData && this.props.cartedProduct > 0) {\n            let dataSize = this.props.carbonImpactData.data.length;\n            let xaxis = [];\n            let now;\n\n            switch (this.props.carbonImpactData.unit) {\n                case \"weekly\":\n                    let d = new Date();\n                    d.setHours(0, 0, 0, 0);\n                    d.setDate(d.getDate() + 4 - (d.getDay() || 7));\n                    let yearStart = new Date(d.getFullYear(), 0, 1);\n                    now = Math.ceil(((d - yearStart) / 86400000 + 1) / 7);\n                    for (let i = dataSize - 1; i >= 0; i--) {\n                        xaxis.push(\"Semaine \" + (now - i));\n                    }\n                    break;\n                case \"monthly\":\n                    now = new Date().getMonth();\n                    let year = new Date().getFullYear();\n                    for (let i = dataSize - 1; i >= 0; i--) {\n                        let monthNum = now - i;\n                        if (monthNum < 0) {\n                            xaxis.push(monthNames[monthNum + 12] + \" \" + (year - 1));\n                        } else {\n                            xaxis.push(monthNames[monthNum] + \" \" + year);\n                        }\n                    }\n                    break;\n                case \"yearly\":\n                    now = new Date().getFullYear();\n                    for (let i = dataSize - 1; i >= 0; i--) {\n                        xaxis.push((now - i).toString());\n                    }\n                    break;\n                default:\n                    now = new Date().getFullYear();\n                    for (let i = dataSize - 1; i >= 0; i--) {\n                        xaxis.push((now - i).toString());\n                    }\n                    break;\n            }\n            this.state.options.xaxis.categories = xaxis;\n\n            let series = [\n                {\n                    name: \"CO₂ équivalent (kg)\",\n                    data: [],\n                },\n            ];\n\n            let sortedData = this.props.carbonImpactData.data;\n            sortedData.sort((a, b) => (a.offset > b.offset ? 1 : -1));\n\n            for (let i = 0; i < sortedData.length; i++) {\n                let finalValue =\n                    this.state.selectedSegment === 0\n                        ? sortedData[i].impact.toFixed(2)\n                        : (sortedData[i].impact / sortedData[i].nbProducts).toFixed(2);\n                series[0].data.push(finalValue);\n            }\n\n            chart = (\n                <React.Fragment>\n                    <div className=\"stats-chart-bar\">\n                        <Chart\n                            options={this.state.options}\n                            series={series}\n                            type=\"bar\"\n                            height={350}\n                        ></Chart>\n                    </div>\n                </React.Fragment>\n            );\n        } else {\n            chart = (\n                <motion.div\n                    className=\"stats-no-product\"\n                    initial={{ opacity: 0 }}\n                    animate={{ opacity: 1 }}\n                    exit={{ opacity: 0 }}\n                >\n                    <div>\n                        <img src={fruits} className=\"logo\" alt=\"Fruits\" />\n                        <p className=\"logo-text\">Commence à scanner des produits !</p>\n                    </div>\n                </motion.div>\n            );\n        }\n        return chart;\n    };\n\n    onSlideChange = (index) => {\n        this.setState({ selectedSegment: this.state.selectedSegment === 0 ? 1 : 0 });\n    };\n\n    displaySlides = () => {\n        let slides = <React.Fragment></React.Fragment>;\n        if (this.props.carbonImpactData && this.props.cartedProduct > 0) {\n            slides = (\n                <React.Fragment>\n                    <SwiperSlide>\n                        <div className=\"stats-slider\">\n                            <span className=\"stats-slider-text\">{\">\"} Impact Carbone total</span>\n                        </div>\n                    </SwiperSlide>\n                    <SwiperSlide>\n                        <div className=\"stats-slider\">\n                            <span className=\"stats-slider-text\">\n                                {\">\"} Impact Carbone par produit\n                            </span>\n                        </div>\n                    </SwiperSlide>\n                </React.Fragment>\n            );\n        }\n        return slides;\n    };\n\n    render = () => {\n        return (\n            <React.Fragment>\n                {this.displayChart()}\n                <div className=\"stats-chart-slider\">\n                    <Swiper\n                        spaceBetween={0}\n                        slidesPerView={1}\n                        centeredSlides={true}\n                        onSlideChange={(i) => this.onSlideChange(i.activeIndex)}\n                        onSwiper={(swiper) => this.setState({ swiper: swiper })}\n                    >\n                        {this.displaySlides()}\n                    </Swiper>\n                </div>\n            </React.Fragment>\n        );\n    };\n}\n\nexport default BarChartCarbonImpact;\n",
        "import React from \"react\";\nimport Navbar from \"../components/Navbar/Navbar\";\nimport DoughnutChartEcoScore from \"../components/Charts/DoughnutChartEcoScore\";\nimport BarChartCarbonImpact from \"../components/Charts/BarChartCarbonImpact\";\nimport \"./Product.css\";\nimport { Link } from \"react-router-dom\";\nimport jwt from \"jsonwebtoken\";\n\nclass Statistics extends React.Component {\n    state = {\n        ecoScoreData: undefined,\n        carbonImpactData: undefined,\n        username: undefined,\n        scannedProduct: undefined,\n        cartedProduct: undefined,\n        userId: undefined,\n        value: 0,\n    };\n\n    Verify = () => {\n        let isExpired = true;\n        const token = localStorage.getItem(\"token\");\n        if (token) {\n            var decodedToken = jwt.decode(token, { complete: true });\n            var dateNow = new Date();\n            if (decodedToken.payload.exp >= dateNow.getTime() / 1000) {\n                isExpired = false;\n            }\n        }\n        if (isExpired === false) {\n            this.setState({ connected: true });\n        }\n    };\n\n    componentDidMount = () => {\n        this.Verify();\n        let userId = localStorage.getItem(\"userId\");\n        if (userId) {\n            this.setState({ userId: userId });\n        }\n        this.loadUserData(userId);\n        this.loadEcoScoreData(userId, \"fromBeginning\");\n        this.loadCarbonImpactData(userId, \"fromBeginning\");\n    };\n\n    loadUserData = (userId) => {\n        fetch(\n            `https://api.lowympact.fr/api/v1/users/${userId}`,\n            // `http://localhost:8080/api/v1/users/${userId}`,\n            {\n                method: \"get\",\n                credentials: \"include\",\n                headers: new Headers({\n                    authorization: localStorage.getItem(\"token\"),\n                    \"api-key\": \"99d8fb95-abdd-4885-bf6c-3a81d8874043\",\n                    \"Content-Type\": \"application/json\",\n                }),\n            }\n        )\n            .then((response) => response.json())\n            .then((res) => {\n                //console.log(res);\n                this.setState({\n                    username: res?.data?.username,\n                    scannedProduct: res?.scannedProduct,\n                    cartedProduct: res?.cartedProduct,\n                });\n            });\n    };\n\n    loadEcoScoreData = (userId, typeAggregate) => {\n        fetch(\n            `https://api.lowympact.fr/api/v1/users/${userId}/statistics?typeStatistic=ecoscore&typeAggregate=${typeAggregate}`,\n            // `http://localhost:8080/api/v1/users/${userId}/statistics?typeStatistic=ecoscore&typeAggregate=${typeAggregate}`,\n            {\n                method: \"get\",\n                credentials: \"include\",\n                headers: new Headers({\n                    authorization: localStorage.getItem(\"token\"),\n                    \"api-key\": \"99d8fb95-abdd-4885-bf6c-3a81d8874043\",\n                    \"Content-Type\": \"application/json\",\n                }),\n            }\n        )\n            .then((response) => response.json())\n            .then((res) => {\n                //console.log(res);\n                this.setState({\n                    ecoScoreData: res?.statistics?.ecoscore,\n                });\n            });\n    };\n\n    loadCarbonImpactData = (userId, typeAggregate) => {\n        fetch(\n            `https://api.lowympact.fr/api/v1/users/${userId}/statistics?typeStatistic=carbonImpact&typeAggregate=${typeAggregate}`,\n            // `http://localhost:8080/api/v1/users/${userId}/statistics?typeStatistic=carbonImpact&typeAggregate=${typeAggregate}`,\n            {\n                method: \"get\",\n                credentials: \"include\",\n                headers: new Headers({\n                    authorization: localStorage.getItem(\"token\"),\n                    \"api-key\": \"99d8fb95-abdd-4885-bf6c-3a81d8874043\",\n                    \"Content-Type\": \"application/json\",\n                }),\n            }\n        )\n            .then((response) => response.json())\n            .then((res) => {\n                //console.log(res);\n                this.setState({\n                    carbonImpactData: res?.statistics?.carbonImpact,\n                });\n            });\n    };\n\n    displayStats = () => {\n        let scannedProduct = <React.Fragment />;\n        let cartedProduct = <React.Fragment />;\n\n        if (this.state.scannedProduct !== undefined) {\n            scannedProduct = (\n                <div className=\"stats-header-text\">\n                    <span className={\"circle-stats color_score_stats\"}>⬤ </span>\n                    {this.state.scannedProduct > 1 ? \"Produits scannés :\" : \"Produit scanné :\"}\n                    <span className=\"uppercase \"> {this.state.scannedProduct}</span>\n                </div>\n            );\n        }\n\n        if (this.state.cartedProduct !== undefined) {\n            cartedProduct = (\n                <div className=\"stats-header-text\">\n                    <span className={\"circle-stats color_score_stats\"}>⬤ </span>\n                    {this.state.cartedProduct > 1 ? \"Produits achetés :\" : \"Produit acheté :\"}\n                    <span className=\"uppercase \"> {this.state.cartedProduct}</span>\n                </div>\n            );\n        }\n\n        return (\n            <React.Fragment>\n                {scannedProduct}\n                {cartedProduct}\n            </React.Fragment>\n        );\n    };\n\n    handleChange = (event, newValue) => {\n        this.setState({ value: newValue });\n    };\n\n    displayNavbar = () => {\n        let retour = (\n            <div className=\"stats-navbar-container\">\n                <button\n                    className={\n                        this.state.value === 0\n                            ? \"stats-navbar-button selected\"\n                            : \"stats-navbar-button\"\n                    }\n                    onClick={() => this.handleChange(\"\", 0)}\n                >\n                    EcoScore\n                </button>\n                <button\n                    className={\n                        this.state.value === 1\n                            ? \"stats-navbar-button selected\"\n                            : \"stats-navbar-button\"\n                    }\n                    onClick={() => this.handleChange(\"\", 1)}\n                >\n                    Impact Carbone\n                </button>\n                <div\n                    className={\n                        this.state.value === 0 ? \"navbar-under nav-left\" : \"navbar-under nav-right\"\n                    }\n                ></div>\n            </div>\n        );\n        return retour;\n    };\n\n    render = () => {\n        return (\n            <React.Fragment>\n                <div className=\"stats-page-container\">\n                    <div className=\"stats-header-container\">\n                        <div className=\"stats-profil-link\">\n                            <Link to=\"/profil\"> {\"<\"} Profil</Link>\n                        </div>\n                        <img className=\"stats-bitmap-image\" src=\"/images/utils/bitmap.png\" alt=\"\" />\n                    </div>\n\n                    <div className=\"stats-welcome\">\n                        <span className=\"stats-welcome-text\">\n                            {this.state.username\n                                ? this.state.username + \", voici ton récapitulatif Lowympact...\"\n                                : \"\"}\n                        </span>\n                    </div>\n\n                    <div className=\"stats-text-container\">{this.displayStats()}</div>\n\n                    {this.displayNavbar()}\n\n                    {this.state.value === 0 ? (\n                        <DoughnutChartEcoScore\n                            ecoScoreData={this.state.ecoScoreData}\n                            scannedProduct={this.state.scannedProduct}\n                            cartedProduct={this.state.cartedProduct}\n                        ></DoughnutChartEcoScore>\n                    ) : (\n                        <BarChartCarbonImpact\n                            carbonImpactData={this.state.carbonImpactData}\n                            scannedProduct={this.state.scannedProduct}\n                            cartedProduct={this.state.cartedProduct}\n                        ></BarChartCarbonImpact>\n                    )}\n\n                    <Navbar />\n                </div>\n            </React.Fragment>\n        );\n    };\n}\n\nexport default Statistics;\n\nconst delay = (ms) => new Promise((res) => setTimeout(res, ms));\n",
        "import React, { Component } from \"react\";\nimport { BrowserRouter as Router, Route, Redirect, Switch } from \"react-router-dom\";\nimport { AnimatePresence } from \"framer-motion\";\n\nimport \"./App.css\";\nimport History from \"./pages/History\";\nimport Error404 from \"./pages/Error404\";\nimport Login from \"./pages/Login\";\nimport Product from \"./pages/Product\";\nimport Profil from \"./pages/Profil\";\nimport Signup from \"./pages/Signup\";\nimport Signin from \"./pages/Signin\";\nimport ProfileConfiguration from \"./pages/ProfileConfiguration\";\nimport Statistics from \"./pages/Statistics\";\n\nclass App extends Component {\n    render() {\n        return (\n            <Router>\n                <AnimatePresence exitBeforeEnter={true}>\n                    <Switch>\n                        {/* Front Pages */}\n                        <Route path=\"/history\" component={History} exact key={1} />\n                        <Route path=\"/profil\" component={Profil} exact key={2} />\n                        <Route path=\"/login\" component={Login} exact />\n                        <Route path=\"/\" component={Login} exact key={1} />\n                        <Route path=\"/products/:barcode/:bcProductId\" component={Product} exact />\n                        <Route path=\"/products/:barcode\" component={Product} exact />\n                        <Route path=\"/signup\" component={Signup} exact />\n                        <Route path=\"/signin\" component={Signin} exact />\n                        <Route path=\"/configuration\" component={ProfileConfiguration} exact />\n                        <Route path=\"/stats\" component={Statistics} exact />\n                        {/* Errors Pages */}\n                        <Route path=\"/error404\" component={Error404} />\n                        <Redirect to=\"/error404\" />\n                        {/* <Route path=\"/MAINTENANCE\" component={ Maintenance } /> */}\n                    </Switch>\n                </AnimatePresence>\n                {/* </Suspense> */}\n            </Router>\n        );\n    }\n}\n\nexport default App;\n",
        "const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n",
        "import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"
    ],
    "sourceRoot": ""
}
