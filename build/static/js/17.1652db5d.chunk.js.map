{"version":3,"sources":["pages/Profil.js"],"names":["Profil","state","connected","disconnect","localStorage","removeItem","props","history","push","componentDidMount","Verify","isExpired","token","getItem","decodedToken","jwt","decode","complete","dateNow","Date","payload","exp","getTime","setState","displayConnectedProfil","Fragment","className","to","onClick","displayUnconnectedProfil","this","React","Component"],"mappings":"6NAOMA,E,4MACFC,MAAQ,CACJC,WAAW,G,EAGfC,WAAa,WACTC,aAAaC,WAAW,SACxBD,aAAaC,WAAW,UACxB,EAAKC,MAAMC,QAAQC,KAAK,W,EAG5BC,kBAAoB,WAChB,EAAKC,U,EAGTA,OAAS,WACL,IAAIC,GAAY,EACVC,EAAQR,aAAaS,QAAQ,SACnC,GAAID,EAAO,CACP,IAAIE,EAAeC,IAAIC,OAAOJ,EAAO,CAAEK,UAAU,IAC7CC,EAAU,IAAIC,KACdL,EAAaM,QAAQC,KAAOH,EAAQI,UAAY,MAChDX,GAAY,IAGF,IAAdA,GACA,EAAKY,SAAS,CAAErB,WAAW,K,EAInCsB,uBAAyB,WACrB,OACI,eAAC,IAAMC,SAAP,WACI,oBAAIC,UAAU,eAAd,uCACA,cAAC,IAAD,CAAMC,GAAG,SAASD,UAAU,gBAA5B,0BAGA,cAAC,IAAD,CAAMC,GAAG,QAAQD,UAAU,gBAA3B,iCAGA,cAAC,IAAD,CAAMC,GAAG,iBAAiBD,UAAU,gBAApC,2BAGA,sBAAKE,QAAS,EAAKzB,WAAYuB,UAAU,2BAAzC,UACI,qBAAKA,UAAU,iBAAf,oBACA,sD,EAMhBG,yBAA2B,WACvB,OACI,eAAC,IAAMJ,SAAP,WACI,oBAAIC,UAAU,eAAd,6BACA,0FACA,cAAC,IAAD,CAAMC,GAAG,SAASD,UAAU,gBAA5B,8B,4CAOZ,WACI,OACI,gCACI,cAAC,IAAD,CAAMC,GAAG,IAAT,SACI,cAAC,IAAD,MAEJ,sBAAKD,UAAU,gBAAf,UACI,qBAAKA,UAAU,iBAAf,SACI,qBAAKA,UAAU,iBAAf,sBAEHI,KAAK7B,MAAMC,UACN4B,KAAKN,yBACLM,KAAKD,8BAEf,cAAC,IAAD,W,GA7EKE,IAAMC,WAmFZhC,a","file":"static/js/17.1652db5d.chunk.js","sourcesContent":["import React from \"react\";\nimport Navbar from \"../components/Navbar/Navbar\";\nimport Header from \"../components/Header/Header\";\nimport \"./Profil.css\";\nimport { Link } from \"react-router-dom\";\nimport jwt from \"jsonwebtoken\";\n\nclass Profil extends React.Component {\n    state = {\n        connected: false,\n    };\n\n    disconnect = () => {\n        localStorage.removeItem(\"token\");\n        localStorage.removeItem(\"userId\");\n        this.props.history.push(\"/login\");\n    };\n\n    componentDidMount = () => {\n        this.Verify();\n    };\n\n    Verify = () => {\n        let isExpired = true;\n        const token = localStorage.getItem(\"token\");\n        if (token) {\n            var decodedToken = jwt.decode(token, { complete: true });\n            var dateNow = new Date();\n            if (decodedToken.payload.exp >= dateNow.getTime() / 1000) {\n                isExpired = false;\n            }\n        }\n        if (isExpired === false) {\n            this.setState({ connected: true }); // redirection vers la page login\n        }\n    };\n\n    displayConnectedProfil = () => {\n        return (\n            <React.Fragment>\n                <h2 className=\"profil-title\">Bienvenue sur ton profil!</h2>\n                <Link to=\"/stats\" className=\"profil-button\">\n                    Statistiques\n                </Link>\n                <Link to=\"/avis\" className=\"profil-button\">\n                    Donnez votre avis !\n                </Link>\n                <Link to=\"/configuration\" className=\"profil-button\">\n                    Configuration\n                </Link>\n                <div onClick={this.disconnect} className=\"profil-button-disconnect\">\n                    <div className=\"material-icons\">logout</div>\n                    <p>Déconnexion</p>\n                </div>\n            </React.Fragment>\n        );\n    };\n\n    displayUnconnectedProfil = () => {\n        return (\n            <React.Fragment>\n                <h2 className=\"profil-title\">Non connecté</h2>\n                <p>Connecte toi pour que ton historique soit sauvegardé !</p>\n                <Link to=\"/login\" className=\"profil-button\">\n                    Me Connecter\n                </Link>\n            </React.Fragment>\n        );\n    };\n\n    render() {\n        return (\n            <div>\n                <Link to=\"/\">\n                    <Header />\n                </Link>\n                <div className=\"profil-screen\">\n                    <div className=\"profil-picture\">\n                        <div className=\"material-icons\">person</div>\n                    </div>\n                    {this.state.connected\n                        ? this.displayConnectedProfil()\n                        : this.displayUnconnectedProfil()}\n                </div>\n                <Navbar />\n            </div>\n        );\n    }\n}\n\nexport default Profil;\n"],"sourceRoot":""}