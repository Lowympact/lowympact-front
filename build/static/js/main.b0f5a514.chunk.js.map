{"version":3,"sources":["assets/images/fruits-vegetables-basket-by-oblik-studio.svg","components/Button/ButtonHistory.js","components/Button/ButtonProfil.js","components/Button/ButtonScan.js","components/Scan/Scan.js","components/Test/Scanner.js","components/Test/Scan_home.js","components/Navbar/Navbar.js","assets/images/logo.svg","assets/images/bitmap.png","components/Header/Header.js","pages/History.js","pages/Error404.js","components/Button/ButtonCreateAccount.js","components/Button/ButtonLogin.js","components/Button/ButtonNoAccount.js","pages/Login.js","components/Traceability/leaflet-curve/leaflet.curve.js","components/Traceability/leaflet-curve/Curve.js","components/Traceability/Traceability.js","components/Environnement/Alternatives.js","components/Environnement/Origins.js","components/Environnement/EmpreinteCarbone.js","components/Environnement/Environnement.js","pages/Product.js","components/Labels/Labels.js","pages/Profil.js","components/Button/ButtonSignup.js","pages/Signup.js","components/Button/ButtonSignin.js","pages/Signin.js","components/Button/ButtonChangePassword.js","assets/users/users.js","pages/ProfileConfiguration.js","components/Charts/DoughnutChartEcoScore.js","components/Charts/BarChartCarbonImpact.js","pages/Statistics.js","App.js","reportWebVitals.js","index.js"],"names":["ButtonHistory","className","class","ButtonProfil","ButtonScan","configurationPromise","configure","engineLocation","catch","error","alert","style","position","top","bottom","left","right","margin","maxWidth","maxHeight","Scan","props","ref","React","createRef","then","ScanditSDKBarcodePicker","create","current","barcodePicker","onScan","on","onError","this","destroy","prevProps","JSON","stringify","scanSettings","applyScanSettings","visible","setVisible","AnimatePresence","exitBeforeEnter","motion","div","id","initial","animate","transition","duration","exit","onClick","onCrossClicked","Component","Scanner","componentDidMount","a","navigator","mediaDevices","enumerateDevices","devices","videoDevices","forEach","device","kind","label","match","push","maxResolution","i","getUserMedia","video","deviceId","exact","stream","getVideoTracks","track","capabilities","getCapabilities","height","max","usedCameraId","getTracks","stop","err","console","log","Quagga","init","inputStream","type","constraints","focusMode","width","min","aspectRatio","locator","patchSize","halfSample","locate","area","numOfWorkers","window","hardwareConcurrency","decoder","readers","debug","drawBoundingBox","showFrequency","drawScanline","showPattern","multiple","singleChannel","start","setQuagga","onDetected","_onDetected","result","offDetected","Fragment","Scan_home","state","scanning","status","results","reading","barcode","undefined","bcProductId","quagga","setState","_scan","res","codeResult","code","fetch","response","json","handleScan","data","arr","split","length","handleError","displayQrCode","delay","showViewFinder","displayBarCode","map","switchReader","redirect","to","onChange","uncheckedIcon","checkedIcon","checked","onColor","offColor","Navbar","showScanner","updateWindowDimensions","innerHeight","handleScannerButton","bool","handleBarcode","render","vibrateOnScan","enableTorchToggle","enablePinchToZoom","enableCameraSwitcher","guiStyle","ScanSettings","enabledSymbologies","codeDuplicateFilter","scanResult","barcodes","message","location","pathname","addEventListener","removeEventListener","Header","src","blob","alt","logo","RenderHistoryItem","labelColor","item","pathProduct","name","opacity","image","brand","color","marginRight","History","userId","localStorage","getItem","token","loadHistoryInformations","loadLocalStorageHistory","method","credentials","headers","Headers","authorization","items","loading","history","parse","itemList","Object","keys","fruits","Error404","ButtonCreateAccount","ButtonLogin","ButtonNoAccount","Login","Verify","queryString","search","urlParams","URLSearchParams","innerWidth","get","assign","isExpired","decodedToken","jwt","decode","complete","dateNow","Date","getTime","payload","exp","L","Curve","Path","extend","options","initialize","path","setOptions","_initialUpdate","_setPath","getPath","_coords","setPath","redraw","getBounds","_bounds","_computeBounds","lastPoint","lastCommand","coord","bound","LatLngBounds","String","lat","latLng","lng","controlPoint1","controlPoint2","endPoint","diffLat","diffLng","controlPoint","getCenter","_update","_map","_updatePath","_renderer","_updatecurve","_project","lastCoord","curCommand","curPoint","_points","latLngToLayerPoint","curve","SVG","include","layer","_curvePointsToPath","_path","getTotalLength","dashArray","strokeDasharray","strokeDashoffset","points","point","str","x","y","positions","option","getOptions","fromProps","toProps","leafletElement","setStyleIfChanged","propTypes","children","PropTypes","oneOfType","arrayOf","node","object","array","isRequired","withLeaflet","Traceability","zoom","swiper","currentIndex","getMaterialIcon","mode","getTransportMode","getTranslation","displaySlides","slides","products","product","pastille","TransportCO2Impact","value","transport","productsOutput","productName","seller","localisation","city","country","buyer","Math","round","dist","handleMarkerClick","latlng","index","elem","document","getElementsByClassName","scrollIntoView","behavior","slideTo","p","getZoomRatio","latitude","longitude","flyTo","onSlideChange","parseFloat","long","displayMarker","markers","icon","icon2","marker1","lat1","long1","marker2","lat2","long2","zIndex","Icon","iconUrl","iconRetinaUrl","iconSize","Point","Marker","zIndexOffset","curves","setAttribute","getCurveOptions","fill","totalCO2Traceability","toFixed","Map","center","minZoom","scrollWheelZoom","dragging","maxBounds","maxBoundsViscosity","getBottomRef","whenCreated","TileLayer","attribution","url","spaceBetween","slidesPerView","centeredSlides","activeIndex","onSwiper","toRadian","degree","PI","origin","destination","distance","lon1","lon2","deltaLat","deltaLon","pow","sin","cos","asin","sqrt","getDistance","latlng1","latlng2","offsetX","offsetY","r","theta","atan2","r2","theta2","midpointX","Alternatives","renderListAlternatives","listItems","href","img_url","RenderColor","alternativesloop","alternativesList","alternatives","alternatives_a","alternatives_b","alternatives_c","alternatives_d","sort","b","eco_score","c","d","ecoScore","alternatives_title","labelLevel","Origins","polygon","activeCountry","getCountries","setActiveCountry","origins","success","geo","coordinates","poly","Polygon","fillColor","EmpreinteCarbone","alea","setAlea","dataEcoScore","agribalyse","co2_total","repartition","percent","co2_agriculture","co2_transportation","co2_packaging","co2_processing","co2_distribution","co2_consumption","equivalent","getEquivalent","circle","co2","Environnement","showTransport","materials","getColor","note","getColorImpact","getLabel","getLabelImpact","getLabelImpactPackaging","getColorImpactPackaging","displayCO2Repartition","pourcentage","nbKg","percentage","strokeWidth","fontSize","primaryColor","displayRepartitionAllItems","html_agriculture","html_transport","html_consommation","html_distribution","html_packaging","html_processing","html_total","handleShowTransport","displayTransportImpact","agribalyse_CO2","transportation_score","transport_final_indicator","n","adjustments","origins_of_ingredients","value_fr","co2_impact_html","transportation_score_html","displayTranportImpact","displayPackagingDetailImpact","packaging","packagings","material","filter","pos","indexOf","separator","displayPackagingImpact","Product","params","productImageUrl","genericName","connected","productData","cart","countries","isFlipping","component","bottomComponent","loadHistory","loadFromOpenFoodFacts","loadProductInformations","handleBarCodeUpdate","traceability","impact","transportCO2Impact","loadAlternatives","score","alternativesInfos","image_url","product_name","generic_name","ecoscore_grade","ecoscore_data","origins_hierarchy","saveHistory","scoreSearch","categories_properties","Authorization","quantity","body","bcProductAddress","exist","find","element","brands","setItem","addToCart","ecoscore","flip","quantityDelta","carbonImpact","removeFromCart","event","imageFlip","transform","displayImage","scoreClass","handleChange","newValue","displayNavbar","retour","depth","ms","Promise","setTimeout","Profil","disconnect","clear","displayConnectedProfil","displayUnconnectedProfil","ButtonSignup","validEmail","RegExp","Signup","userName","email","password","confirmPassword","errors","submit","signUser","username","_id","handleSubmit","e","preventDefault","validate","displayErrors","test","evt","target","passwordConfirm","ButtonSignin","Signin","Connect","loginSuccessful","onPasswordChange","passwordInput","emailInput","ButtonChangePassword","USERS","ProfileConfiguration","currentPassword","newPassword","user","changeUserInfo","loadUserInfo","placeholder","DoughnutChartEcoScore","selectedSegment","displayChart","chart","ecoScoreData","cartedProduct","title","unknown","lineWidth","paddingAngle","radius","PieChart","defaultProps","animationDuration","dataEntry","labelStyle","fontFamily","labelPosition","segmentsStyle","cursor","segmentsShift","monthNames","BarChartCarbonImpact","toolbar","show","dropShadow","enabled","blur","plotOptions","bar","borderRadius","horizontal","xaxis","categories","labels","fontColor","text","yaxis","dataLabels","noData","colors","grid","lines","carbonImpactData","now","dataSize","unit","setHours","setDate","getDate","getDay","yearStart","getFullYear","ceil","getMonth","year","monthNum","toString","series","sortedData","offset","finalValue","nbProducts","Statistics","scannedProduct","loadUserData","loadEcoScoreData","loadCarbonImpactData","typeAggregate","statistics","displayStats","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.b0f5a514.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/fruits-vegetables-basket-by-oblik-studio.7d5e1c64.svg\";","import \"./ButtonNavBar.css\";\n\nfunction ButtonHistory() {\n\treturn (\n\t\t<div>\n\t\t\t<div className=\"button-logo\">\n\t\t\t\t<span class=\"material-icons\">history</span>\n\t\t\t</div>\n\t\t\t<div>Historique</div>\n\t\t</div>\n\t);\n}\n\nexport default ButtonHistory;\n","function ButtonProfil() {\n\treturn (\n\t\t<div>\n\t\t\t<div>\n\t\t\t\t<span class=\"material-icons\">person</span>\n\t\t\t</div>\n\t\t\t<div>Profil</div>\n\t\t</div>\n\t);\n}\n\nexport default ButtonProfil;\n","import { React } from \"react\";\n\nfunction ButtonScan() {\n\treturn (\n\t\t<div>\n\t\t\t<div className=\"navbar-scan-icon\">\n\t\t\t\t<span class=\"material-icons\">qr_code_scanner</span>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nexport default ButtonScan;\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport {\n\tconfigure,\n\tBarcodePicker as ScanditSDKBarcodePicker,\n} from \"scandit-sdk\";\nimport \"./Scan.css\";\nimport { motion, AnimatePresence } from \"framer-motion\";\n\n// Configure the library and activate it with a license key\nconst configurationPromise = configure(\n\t\"ASHf6Cx7DGz5BbkR5RWee94Ezm55DtkCAFB5HoNVQLhPf8gUhk8ypmZ72tbfAdIo33/I2gZR9pcXcdBwQGyYu69PkahqLA0dEEN5WFtpVEjMfQMiBhwmRWIJQgn+E54DiwJm/5CjsV1+Uy7AJWXnvrLiuwxG2D/b7b1QoPFJfkKp2OSreWJXnV/kJ+rtqFyNOu2wQb5Rq5IFXOU/tnjlTvJp8Kxl4jezOVoWlQZreaLKfxfBforPArJErC16cldrqFULYUdsPqb4Vn27hWUmPQTfaX/SbeDCl1h++IPmcvRpzwM9hY0ti7zzfhBKg3TgEYTMiPUipakmM21mU92xYjA9kmKO6bOjzY4XqyrWBUzv/C1TwJfK1aZDDLH8BOmqqJILi2Ty9fN84y09vBgv0dfXhQa3Q0/UW0Hnv0Xge2am3RY5dmE6pfWaxYyA3fDj920DpnlUNcAsfdErnvpZz8H1eftw6D2w3ps6q3jNFc/CTkALFZOk9Sy2u+lOfzvjKrcz5d1yoSo1sVhFsLWNUoaoHTP6NPnQaawC1YwPRp90T+2yNfx+iESAhn3qfn2pOEpBG0rHdZNLLj1yeNJU9Pjt7dznNeCJwG2SzSQvPZU5HzLuIu+siWjUPStB9WWMfVluWN3opv+ReRWBjBsaRFPBmit6LNbRk3QLT6To50yVZg8Zy1NuDFUoE+Ms2ytVn9fs30n1DeNYJLCWjQJ4ktQaz2mIFTOFvRVrJqPkTBwzOaAjWoPxOr097hga8bRhPAqV6ir7ojSffUeCjL/jmp1x1uSE4OaQe3Y32oC0XOVJqA==\",\n\t{\n\t\tengineLocation: \"https://cdn.jsdelivr.net/npm/scandit-sdk@5.x/build/\",\n\t}\n).catch((error) => {\n\talert(error);\n});\n\nconst style = {\n\tposition: \"absolute\",\n\ttop: \"0\",\n\tbottom: \"0\",\n\tleft: \"0\",\n\tright: \"0\",\n\tmargin: \"auto\",\n\tmaxWidth: \"1280px\",\n\tmaxHeight: \"80%\",\n};\n\nclass Scan extends Component {\n\tstatic propTypes = {\n\t\tvisible: PropTypes.bool,\n\t\tplaySoundOnScan: PropTypes.bool,\n\t\tvibrateOnScan: PropTypes.bool,\n\t\tscanningPaused: PropTypes.bool,\n\t\tguiStyle: PropTypes.string,\n\t\tvideoFit: PropTypes.string,\n\t\tscanSettings: PropTypes.object,\n\t\tenableCameraSwitcher: PropTypes.bool,\n\t\tenableTorchToggle: PropTypes.bool,\n\t\tenableTapToFocus: PropTypes.bool,\n\t\tenablePinchToZoom: PropTypes.bool,\n\t\taccessCamera: PropTypes.bool,\n\t\tcamera: PropTypes.object,\n\t\tcameraSettings: PropTypes.object,\n\t\ttargetScanningFPS: PropTypes.number,\n\t\tonScan: PropTypes.func,\n\t\tonError: PropTypes.func,\n\t};\n\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.ref = React.createRef();\n\t}\n\n\tcomponentDidMount() {\n\t\tconfigurationPromise.then(() => {\n\t\t\tScanditSDKBarcodePicker.create(this.ref.current, this.props).then(\n\t\t\t\t(barcodePicker) => {\n\t\t\t\t\tthis.barcodePicker = barcodePicker;\n\n\t\t\t\t\tif (this.props.onScan != null) {\n\t\t\t\t\t\tbarcodePicker.on(\"scan\", this.props.onScan);\n\t\t\t\t\t}\n\t\t\t\t\tif (this.props.onError != null) {\n\t\t\t\t\t\tbarcodePicker.on(\"scanError\", this.props.onError);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t);\n\t\t});\n\t}\n\n\tcomponentWillUnmount() {\n\t\tif (this.barcodePicker != null) {\n\t\t\tthis.barcodePicker.destroy();\n\t\t}\n\t}\n\n\tcomponentDidUpdate(prevProps) {\n\t\t// These are just some examples of how to react to some possible property changes\n\n\t\tif (\n\t\t\tJSON.stringify(prevProps.scanSettings) !==\n\t\t\tJSON.stringify(this.props.scanSettings)\n\t\t) {\n\t\t\tthis.barcodePicker.applyScanSettings(this.props.scanSettings);\n\t\t}\n\n\t\tif (prevProps.visible !== this.props.visible) {\n\t\t\tthis.barcodePicker.setVisible(this.props.visible);\n\t\t}\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<AnimatePresence exitBeforeEnter={true}>\n\t\t\t\t<motion.div\n\t\t\t\t\tid=\"background-scan\"\n\t\t\t\t\tinitial={{ bottom: \"-1000px\" }}\n\t\t\t\t\tanimate={{ bottom: \"0px\" }}\n\t\t\t\t\ttransition={{ duration: 0.5 }}\n\t\t\t\t\texit={{ bottom: \"-1000px\" }}\n\t\t\t\t>\n\t\t\t\t\t<div ref={this.ref} style={style} />\n\t\t\t\t\t<span\n\t\t\t\t\t\tclass=\"close\"\n\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\tthis.props.onCrossClicked(false);\n\t\t\t\t\t\t}}\n\t\t\t\t\t>\n\t\t\t\t\t\t&times;\n\t\t\t\t\t</span>\n\t\t\t\t\t<div id=\"scandit-barcode-picker\"></div>\n\t\t\t\t</motion.div>\n\t\t\t</AnimatePresence>\n\t\t);\n\t}\n}\n\nexport default Scan;\n","import React, { Component } from \"react\";\nimport Quagga from \"quagga\";\n\nclass Scanner extends Component {\n    componentDidMount = async () => {\n        let usedCameraId;\n        const devices = await navigator.mediaDevices.enumerateDevices();\n        let videoDevices = [];\n        devices.forEach((device) => {\n            if (device.kind == \"videoinput\") {\n                if (device.label.match(/back/) != null) {\n                    //console.log(\"Found video device: \" + JSON.stringify(device));\n                    videoDevices.push(device);\n                }\n            }\n        });\n\n        // open every video device and dump its characteristics\n\n        let maxResolution = -1;\n        for (let i in videoDevices) {\n            const device = videoDevices[i];\n            // console.log(\"Opening video device \" + device.deviceId + \" (\" + device.label + \")\");\n\n            let stream;\n            const streaming = await navigator.mediaDevices\n                .getUserMedia({\n                    video: { deviceId: { exact: device.deviceId } },\n                })\n                .then(\n                    (stream) => {\n                        stream.getVideoTracks().forEach((track) => {\n                            const capabilities = track.getCapabilities();\n\n                            if (capabilities.height.max >= maxResolution) {\n                                maxResolution = capabilities.height.max;\n                                usedCameraId = device.deviceId;\n                            }\n\n                            //console.log(\"Track capabilities: \" + JSON.stringify(capabilities));\n                        });\n\n                        stream.getTracks().forEach((track) => track.stop());\n                    },\n                    (err) => console.log(err)\n                );\n        }\n\n        Quagga.init(\n            {\n                inputStream: {\n                    type: \"LiveStream\",\n                    constraints: {\n                        deviceId: usedCameraId,\n                        focusMode: \"continuous\",\n                        width: { min: 1920 },\n                        height: { min: 1080 },\n                        aspectRatio: {\n                            min: 1,\n                            max: 2,\n                        },\n                    },\n                },\n                locator: {\n                    patchSize: \"normal\",\n                    halfSample: false,\n                },\n                locate: false,\n                area: {\n                    top: \"25%\",\n                    right: \"25%\",\n                    left: \"25%\",\n                    bottom: \"25%\",\n                },\n                numOfWorkers: window.navigator.hardwareConcurrency || 2,\n                decoder: {\n                    readers: [\"ean_reader\"],\n                },\n                debug: {\n                    drawBoundingBox: true,\n                    showFrequency: true,\n                    drawScanline: true,\n                    showPattern: true,\n                },\n                multiple: false,\n                singleChannel: false,\n            },\n            function (err) {\n                if (err) {\n                    return console.log(err);\n                }\n                Quagga.start();\n            }\n        );\n        this.props.setQuagga(Quagga);\n        Quagga.onDetected(this._onDetected);\n    };\n\n    componentWillUnmount() {\n        Quagga.offDetected(this._onDetected);\n    }\n\n    _onDetected = async (result) => {\n        let stop = await this.props.onDetected(result);\n        console.log(stop);\n        if (stop) {\n            Quagga.stop();\n        }\n    };\n\n    render() {\n        return (\n            <React.Fragment>\n                <div id=\"interactive\" className=\"viewport\" />\n            </React.Fragment>\n        );\n    }\n}\n\nexport default Scanner;\n","import React, { Component } from \"react\";\nimport Scanner from \"./Scanner\";\nimport QrReader from \"react-qr-reader\";\nimport Switch from \"react-switch\";\nimport { Redirect } from \"react-router-dom\";\n\nclass Scan_home extends Component {\n    state = {\n        scanning: true,\n        status: \"\",\n        results: [],\n        usedCameraId: \"3f6fc4177028f25c3e8215f4444838450630b8d656c627ef511346545d37f302\",\n        devices: [],\n        reading: 0,\n        barcode: undefined,\n        bcProductId: undefined,\n        Quagga: undefined,\n    };\n\n    setQuagga = (quagga) => {\n        console.log(quagga);\n        if (this.state.Quagga) {\n            this.state.Quagga.stop();\n        }\n        this.setState({ Quagga: quagga });\n    };\n\n    _scan = () => {\n        this.setState({ scanning: !this.state.scanning, status: \"\" });\n    };\n\n    _onDetected = async (res) => {\n        console.log(res);\n        if (res) {\n            if (res.codeResult && res.codeResult.code) {\n                this.setState({\n                    results: [res],\n                    scanning: true,\n                    status: \"waiting\",\n                });\n                let response = await fetch(\n                    `https://world.openfoodfacts.org/api/v0/product/${res.codeResult.code}.json/`\n                );\n                let result = await response.json();\n                console.log(result);\n                if (result.status !== 0) {\n                    this.setState({\n                        scanning: false,\n                        status: \"found\",\n                        barcode: res.codeResult.code,\n                    });\n                    return true;\n                } else {\n                    this.setState({\n                        scanning: true,\n                        status: \"not found\",\n                    });\n                    return false;\n                }\n                // .then((response) => response.json())\n                //     .then((result) => {\n                //         console.log(result);\n                //         if (result.status !== 0) {\n                //             this.setState({\n                //                 scanning: false,\n                //                 status: \"found\",\n                //                 barcode: res.codeResult.code,\n                //             });\n                //         } else {\n                //             this.setState({\n                //                 scanning: true,\n                //                 status: \"not found\",\n                //             });\n                //         }\n                //     });\n            }\n        }\n    };\n\n    handleScan = (data) => {\n        if (data) {\n            let arr = data.split(\"/\");\n            if (arr.length > 1) {\n                this.setState({\n                    scanning: false,\n                    barcode: arr[4],\n                    bcProductId: arr[5],\n                    status: \"found\",\n                });\n            }\n            this.state.Quagga.stop();\n        }\n    };\n    handleError = (err) => {\n        console.error(err);\n    };\n\n    displayQrCode = () => {\n        if (this.state.status !== \"found\") {\n            return (\n                <QrReader\n                    delay={300}\n                    onError={this.handleError}\n                    onScan={this.handleScan}\n                    style={{ width: \"100%\" }}\n                    showViewFinder={false}\n                />\n            );\n        } else {\n            return <React.Fragment />;\n        }\n    };\n\n    displayBarCode = () => {\n        if (this.state.status !== \"found\") {\n            return (\n                <React.Fragment>\n                    <div className=\"header\">\n                        {this.state.scanning ? \"true\" : \"false\"}\n                        {/* {this.state.devices?.length > 4 ? (\n                            <button className=\"code-switch-camera\" onClick={this.switchCamera}>\n                                <span className=\"material-icons\">cameraswitch</span>\n                                {this.state.usedCamera}\n                            </button>\n                        ) : (\n                            <React.Fragment />\n                        )} */}\n                        <ul className=\"results\">\n                            {this.state.results.map((result, i) => (\n                                <div key={result.codeResult.code + i}>\n                                    {this.state.status === \"waiting\"\n                                        ? \"Vérification du code\" + result?.codeResult?.code\n                                        : \"\"}\n                                    {this.state.status === \"not found\"\n                                        ? \"code non trouvé, merci de réessayer\"\n                                        : \"\"}\n                                </div>\n                            ))}\n                        </ul>\n                    </div>\n                    {this.state.scanning ? (\n                        <Scanner\n                            onDetected={this._onDetected}\n                            setQuagga={this.setQuagga}\n                            usedCameraId={this.usedCameraId}\n                        />\n                    ) : null}\n                </React.Fragment>\n            );\n        } else {\n            return <React.Fragment />;\n        }\n    };\n\n    switchReader = () => {\n        if (this.state.reading) this.setState({ reading: false });\n        else this.setState({ reading: true });\n    };\n\n    render() {\n        console.log(\"Results: \", this.state.results, this.state.redirect);\n        if (\n            this.state.barcode &&\n            this.state.bcProductId &&\n            (this.props.barcode !== this.state.barcode ||\n                this.props.bcProductId !== this.state.bcProductId)\n        ) {\n            return (\n                <Redirect to={\"/products/\" + this.state.barcode + \"/\" + this.state.bcProductId} />\n            );\n        }\n        if (this.state.barcode && this.props.barcode !== this.state.barcode) {\n            return <Redirect to={\"/products/\" + this.state.barcode} />;\n        } else {\n            return (\n                <div className=\"code-reader-container\">\n                    <span\n                        class=\"close\"\n                        onClick={() => {\n                            this.props?.onCrossClicked(false);\n                        }}\n                    >\n                        &times;\n                    </span>\n                    <div className=\"code-switch\" onClick={this.switchReader}>\n                        <div className=\"span-code-switch\">\n                            <span\n                                className={\n                                    this.state.reading ? \"material-icons\" : \"material-icons green\"\n                                }\n                            >\n                                view_week\n                            </span>\n                            <span>Barcode</span>\n                        </div>\n                        <Switch\n                            onChange={this.switchReader}\n                            uncheckedIcon={false}\n                            checkedIcon={false}\n                            checked={this.state.reading}\n                            onColor={\"#888\"}\n                            offColor={\"#888\"}\n                        />\n                        <div className=\"span-code-switch\">\n                            <span\n                                className={\n                                    !this.state.reading ? \"material-icons\" : \"material-icons green\"\n                                }\n                            >\n                                qr_code_scanner\n                            </span>\n                            <span>QR Code</span>\n                        </div>\n                    </div>\n                    {this.state.reading ? this.displayQrCode() : this.displayBarCode()}\n                </div>\n            );\n        }\n    }\n}\n\nexport default Scan_home;\n","import \"./Navbar.css\";\nimport React from \"react\";\nimport ButtonHistory from \"../Button/ButtonHistory\";\nimport ButtonProfil from \"../Button/ButtonProfil\";\nimport ButtonScan from \"../Button/ButtonScan\";\nimport Scan from \"../Scan/Scan\";\nimport Scan_home from \"../Test/Scan_home\";\nimport { ScanSettings } from \"scandit-sdk\";\nimport { Redirect, Link } from \"react-router-dom\";\n\nclass Navbar extends React.Component {\n    state = {\n        showScanner: false,\n        barcode: undefined,\n        bcProductId: undefined,\n        height: 0,\n    };\n\n    componentDidMount() {\n        this.updateWindowDimensions();\n        window.addEventListener(\"resize\", this.updateWindowDimensions);\n    }\n\n    componentWillUnmount() {\n        window.removeEventListener(\"resize\", this.updateWindowDimensions);\n    }\n\n    updateWindowDimensions = () => {\n        this.setState({ height: window.innerHeight });\n    };\n\n    handleScannerButton = (bool) => {\n        this.setState({ showScanner: bool });\n    };\n\n    handleBarcode = (res) => {\n        if (res) {\n            //détecté par barcode scanner\n            let arr = res.split(\"/\");\n            if (arr.length > 1) {\n                this.setState({\n                    barcode: arr[4],\n                    bcProductId: arr[5],\n                    showScanner: false,\n                });\n            } else {\n                this.setState({\n                    barcode: arr[0],\n                    showScanner: false,\n                    bcProductId: undefined,\n                });\n            }\n        }\n    };\n\n    render = () => {\n        if (this.state.height < 550) {\n            return <React.Fragment />;\n        }\n        if (\n            this.state.barcode &&\n            this.state.bcProductId &&\n            (this.props.barcode !== this.state.barcode ||\n                this.props.bcProductId !== this.state.bcProductId)\n        ) {\n            return (\n                <Redirect to={\"/products/\" + this.state.barcode + \"/\" + this.state.bcProductId} />\n            );\n        }\n\n        if (this.state.barcode && this.props.barcode !== this.state.barcode) {\n            return <Redirect to={\"/products/\" + this.state.barcode} />;\n        }\n\n        if (!this.state.showScanner) {\n            return (\n                <React.Fragment>\n                    <div className=\"navbar-container\">\n                        <Link\n                            to=\"/history\"\n                            className={\n                                window.location.pathname == \"/history\"\n                                    ? \"navbar-link navbar-text-left navbar-selected\"\n                                    : \"navbar-link navbar-text-left \"\n                            }\n                        >\n                            <ButtonHistory />\n                        </Link>\n                        <div onClick={() => this.handleScannerButton(true)}>\n                            <div className=\"navbar-circle\">\n                                <ButtonScan />\n                            </div>\n                        </div>\n                        <span className=\"navbar-scan-text\">Scan</span>\n                        <Link\n                            to=\"/profil\"\n                            className={\n                                window.location.pathname == \"/profil\"\n                                    ? \"navbar-link navbar-text-right navbar-selected\"\n                                    : \"navbar-link navbar-text-right \"\n                            }\n                        >\n                            <ButtonProfil />\n                        </Link>\n                    </div>\n                </React.Fragment>\n            );\n        } else {\n            return (\n                <Scan\n                    onCrossClicked={this.handleScannerButton}\n                    // playSoundOnScan={true}\n                    vibrateOnScan={true}\n                    enableTorchToggle={true}\n                    enablePinchToZoom={true}\n                    enableCameraSwitcher={true}\n                    guiStyle={\"viewfinder\"}\n                    scanSettings={\n                        new ScanSettings({\n                            enabledSymbologies: [\n                                \"qr\",\n                                \"ean8\",\n                                \"ean13\",\n                                \"upca\",\n                                \"upce\",\n                                \"code128\",\n                                \"code39\",\n                                \"code93\",\n                                \"itf\",\n                            ],\n                            codeDuplicateFilter: 1000,\n                        })\n                    }\n                    onScan={(scanResult) => {\n                        console.log(scanResult.barcodes[0].data);\n                        this.handleBarcode(scanResult.barcodes[0].data);\n                    }}\n                    onError={(error) => {\n                        console.error(error.message);\n                    }}\n                />\n                // <Scan_home onCrossClicked={this.handleScannerButton} history={this.props.history} />\n            );\n        }\n    };\n}\n\nexport default Navbar;\n","export default __webpack_public_path__ + \"static/media/logo.b235ef42.svg\";","export default __webpack_public_path__ + \"static/media/bitmap.6f490d5b.png\";","import './Header.css';\nimport logo from '../../assets/images/logo.svg';\nimport blob from \"../../assets/images/bitmap.png\";\n\nfunction Header() {\n  return (\n    <div>\n      <div>\n\t\t\t\t\t\t<img src={blob} className=\"blob-top\" alt=\"Blob\" />\n\t\t\t\t</div>\n        <div>\n          <img src={blob} className=\"blob-left\" alt=\"Blob\" />\n        </div>\n        <div>\n          <img src={blob} className=\"blob-right\" alt=\"Blob\" />\n        </div>\n      <div className=\"header-container\">\n        <img src={logo} className=\"header-logo\" alt=\"Logo\"/>\n        <span>Lowympact</span>\n      </div>\n    </div>\n  );\n}\n\nexport default Header;","import { React, Component, Fragment } from \"react\";\nimport fruits from \"../assets/images/fruits-vegetables-basket-by-oblik-studio.svg\";\nimport Navbar from \"../components/Navbar/Navbar\";\nimport Header from \"../components/Header/Header\";\nimport \"./History.css\";\n// import { ITEMS } from \"../assets/scanned/items\";\nimport { Link } from \"react-router-dom\";\nimport { motion } from \"framer-motion\";\n\nfunction RenderHistoryItem({ item }) {\n    var labelColor;\n    if (item.label === \"d\" || item.label === \"e\") {\n        labelColor = \"red\";\n    } else if (item.label === \"c\") {\n        labelColor = \"yellow\";\n    } else if (item.label === \"a\" || item.label === \"b\") {\n        labelColor = \"green\";\n    }\n\n    var pathProduct = \"/products/\" + item.barcode;\n    if (item.bcProductId) {\n        pathProduct += \"/\" + item.bcProductId;\n    }\n\n    // Mock Soutenance\n    if (item.barcode === \"80135463\") {\n        item.name = \"Nutella 200g\";\n    }\n\n    return (\n        <motion.div initial={{ opacity: 0 }} animate={{ opacity: 1 }} exit={{ opacity: 0 }}>\n            <Link className=\"history-item\" to={pathProduct}>\n                <div className=\"history-img-container\">\n                    <img src={item.image} alt=\"\" />\n                </div>\n                <div className=\"history-name-container\">\n                    <div className=\"history-name\">{item.name}</div>\n                    <div className=\"history-brand\">{item.brand}</div>\n                </div>\n                <div className=\"history-label-container\">\n                    <div style={{ color: labelColor }}>●</div>\n                    <div className=\"history-label\">\n                        {item.label == \"not-applicable\" ? \"\" : item.label}\n                    </div>\n                </div>\n                <div style={{ marginRight: \"10px\", color: \"rgb(41,72,102)\" }}>{\">\"}</div>\n            </Link>\n        </motion.div>\n    );\n}\n\nclass History extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            items: undefined,\n            loading: true,\n            userId: undefined,\n        };\n    }\n\n    componentDidMount = () => {\n        let userId = localStorage.getItem(\"userId\");\n        let token = localStorage.getItem(\"token\");\n        if (userId && token) {\n            this.setState({ userId: userId });\n            this.loadHistoryInformations(userId);\n        } else {\n            this.loadLocalStorageHistory(userId);\n        }\n    };\n\n    loadHistoryInformations = (userId) => {\n        fetch(\n            `https://api.lowympact.fr/api/v1/users/${userId}/history`,\n            // `http://localhost:8080/api/v1/users/${userId}/history`,\n\n            {\n                method: \"get\",\n                credentials: \"include\",\n                headers: new Headers({\n                    authorization: localStorage.getItem(\"token\"),\n                    \"Content-Type\": \"application/json\",\n                    \"api-key\": \"99d8fb95-abdd-4885-bf6c-3a81d8874043\",\n                }),\n            }\n        )\n            .then((response) => response.json())\n            .then((res) => {\n                console.log(res);\n\n                this.setState({\n                    items: res?.data,\n                    loading: false,\n                });\n            });\n    };\n\n    loadLocalStorageHistory = () => {\n        let history = JSON.parse(localStorage.getItem(\"local_history\"));\n        this.setState({\n            items: history,\n            loading: false,\n        });\n    };\n\n    render() {\n        if (this.state.items) {\n            let itemList = <Fragment />;\n            if (!this.loading) {\n                itemList = this.state.items.map((item) => {\n                    return (\n                        <div key={item.id}>\n                            <RenderHistoryItem item={item} />\n                        </div>\n                    );\n                });\n            } else {\n                itemList = (\n                    <div className=\"loader\">\n                        <img src=\"/images/utils/loading.gif\" alt=\"\" />\n                    </div>\n                );\n            }\n\n            if (Object.keys(this.state.items).length === 0)\n                return (\n                    <div>\n                        <Header />\n                        <Navbar />\n                        <motion.div\n                            className=\"App\"\n                            initial={{ opacity: 0 }}\n                            animate={{ opacity: 1 }}\n                            exit={{ opacity: 0 }}\n                        >\n                            <div>\n                                <img src={fruits} className=\"logo\" alt=\"Fruits\" />\n                                <p className=\"logo-text\">Commence à scanner des produits !</p>\n                            </div>\n                        </motion.div>\n                    </div>\n                );\n            else\n                return (\n                    <div>\n                        <div className=\"screen\">\n                            <div className=\"screen-title\"></div>\n                            {itemList}\n                        </div>\n                        <Header />\n                        <Navbar />\n                    </div>\n                );\n        } else {\n            let image = (\n                <div>\n                    <img src={fruits} className=\"logo\" alt=\"Fruits\" />\n                    <p className=\"logo-text\">Commence à scanner des produits !</p>\n                </div>\n            );\n            if (this.state.loading) {\n                image = (\n                    <div className=\"loader\">\n                        <img src=\"/images/utils/loading.gif\" alt=\"\" />\n                    </div>\n                );\n            }\n            return (\n                <div>\n                    <Header />\n                    <Navbar />\n                    <motion.div\n                        className=\"App\"\n                        initial={{ opacity: 0 }}\n                        animate={{ opacity: 1 }}\n                        exit={{ opacity: 0 }}\n                    >\n                        {image}\n                    </motion.div>\n                </div>\n            );\n        }\n    }\n}\n\nexport default History;\n","import logo from \"../assets/images/logo.svg\";\nimport { Link } from \"react-router-dom\";\n\nfunction Error404() {\n\treturn (\n\t\t<div className=\"App\">\n\t\t\t<header className=\"App-header\">\n\t\t\t\t<img src={logo} className=\"logo\" alt=\"logo\" />\n\t\t\t\t<h1>Erreur 404</h1>\n\t\t\t\t<Link to=\"/\">Retourner à l'accueil</Link>\n\t\t\t</header>\n\t\t</div>\n\t);\n}\n\nexport default Error404;\n","import '../../pages/Login.css';\nfunction ButtonCreateAccount() {\n    return (\n      <div>\n        Créer un compte\n      </div>\n    );\n  }\n  export default ButtonCreateAccount;\n","\nfunction ButtonLogin() {\n    return (\n      <div>\n        Me connecter\n      </div>\n    );\n  }\n  export default ButtonLogin;","function ButtonNoAccount() {\n\treturn <div>Continuer sans compte {\">\"}</div>;\n}\nexport default ButtonNoAccount;\n","import React from \"react\";\nimport logo from \"../assets/images/logo.svg\";\nimport fruits from \"../assets/images/fruits-vegetables-basket-by-oblik-studio.svg\";\nimport \"./Login.css\";\nimport ButtonCreateAccount from \"../components/Button/ButtonCreateAccount\";\nimport ButtonLogin from \"../components/Button/ButtonLogin\";\nimport { Link } from \"react-router-dom\";\nimport ButtonNoAccount from \"../components/Button/ButtonNoAccount\";\nimport jwt from \"jsonwebtoken\";\nimport { motion } from \"framer-motion\";\n\nclass Login extends React.Component {\n    componentDidMount = () => {\n        this.Verify();\n        const queryString = window.location.search;\n        const urlParams = new URLSearchParams(queryString);\n\n        if (window.innerWidth > 1200 && urlParams.get(\"from\") != \"website\") {\n            window.location.assign(\"https://web.lowympact.fr\");\n        }\n    };\n\n    Verify = () => {\n        let isExpired = true;\n        const token = localStorage.getItem(\"token\");\n        if (token) {\n            var decodedToken = jwt.decode(token, { complete: true });\n            var dateNow = new Date();\n            console.log(decodedToken, dateNow.getTime() / 1000);\n            if (decodedToken.payload.exp >= dateNow.getTime() / 1000) {\n                isExpired = false;\n            }\n        }\n        if (isExpired === false) {\n            console.log(\"here\");\n            this.props.history.push(`/history`); // redirection vers la page login\n        }\n    };\n    render = () => {\n        return (\n            <motion.div exit={{ opacity: 0 }}>\n                <div className=\"login-logo\">\n                    <img src={logo} className=\"logo\" alt=\"Logo\" />\n                </div>\n                <div className=\"login-lowympact\">Lowympact</div>\n                <Link to=\"/signup\" className=\"button-account\">\n                    <ButtonCreateAccount />\n                </Link>\n                <Link to=\"/signin\" className=\"button-connect\">\n                    <ButtonLogin />\n                </Link>\n                <Link to=\"/history\" className=\"button-no-account\">\n                    <ButtonNoAccount />\n                </Link>\n                <div className=\"logo-fruits\">\n                    <img src={fruits} className=\"logo\" alt=\"Fruits\" />\n                </div>\n            </motion.div>\n        );\n    };\n}\nexport default Login;\n","import L from \"leaflet\";\n\nL.Curve = L.Path.extend({\n\toptions: {},\n\n\tinitialize: function (path, options) {\n\t\t//1\n\t\tL.setOptions(this, options);\n\t\tthis._initialUpdate = true;\n\t\tthis._setPath(path);\n\t},\n\n\tgetPath: function () {\n\t\treturn this._coords;\n\t},\n\n\tsetPath: function (path, options) {\n\t\tthis._initialUpdate = true;\n\t\tthis._setPath(path);\n\t\treturn this.redraw();\n\t},\n\n\tgetBounds: function () {\n\t\treturn this._bounds;\n\t},\n\n\t_setPath: function (path) {\n\t\t//2\n\t\tthis._coords = path;\n\t\tthis._bounds = this._computeBounds();\n\t},\n\n\t_computeBounds: function () {\n\t\t//3\n\t\tvar bound = new L.LatLngBounds();\n\t\tvar lastPoint;\n\t\tvar lastCommand;\n\t\tvar coord;\n\t\tfor (var i = 0; i < this._coords.length; i++) {\n\t\t\tcoord = this._coords[i];\n\t\t\tif (typeof coord == \"string\" || coord instanceof String) {\n\t\t\t\tlastCommand = coord;\n\t\t\t} else if (lastCommand == \"H\") {\n\t\t\t\tbound.extend([lastPoint.lat, coord[0]]);\n\t\t\t\tlastPoint = new L.latLng(lastPoint.lat, coord[0]);\n\t\t\t} else if (lastCommand == \"V\") {\n\t\t\t\tbound.extend([coord[0], lastPoint.lng]);\n\t\t\t\tlastPoint = new L.latLng(coord[0], lastPoint.lng);\n\t\t\t} else if (lastCommand == \"C\") {\n\t\t\t\tvar controlPoint1 = new L.latLng(coord[0], coord[1]);\n\t\t\t\tcoord = this._coords[++i];\n\t\t\t\tvar controlPoint2 = new L.latLng(coord[0], coord[1]);\n\t\t\t\tcoord = this._coords[++i];\n\t\t\t\tvar endPoint = new L.latLng(coord[0], coord[1]);\n\n\t\t\t\tbound.extend(controlPoint1);\n\t\t\t\tbound.extend(controlPoint2);\n\t\t\t\tbound.extend(endPoint);\n\n\t\t\t\tendPoint.controlPoint1 = controlPoint1;\n\t\t\t\tendPoint.controlPoint2 = controlPoint2;\n\t\t\t\tlastPoint = endPoint;\n\t\t\t} else if (lastCommand == \"S\") {\n\t\t\t\tvar controlPoint2 = new L.latLng(coord[0], coord[1]);\n\t\t\t\tcoord = this._coords[++i];\n\t\t\t\tvar endPoint = new L.latLng(coord[0], coord[1]);\n\n\t\t\t\tvar controlPoint1 = lastPoint;\n\t\t\t\tif (lastPoint.controlPoint2) {\n\t\t\t\t\tvar diffLat = lastPoint.lat - lastPoint.controlPoint2.lat;\n\t\t\t\t\tvar diffLng = lastPoint.lng - lastPoint.controlPoint2.lng;\n\t\t\t\t\tcontrolPoint1 = new L.latLng(\n\t\t\t\t\t\tlastPoint.lat + diffLat,\n\t\t\t\t\t\tlastPoint.lng + diffLng\n\t\t\t\t\t);\n\t\t\t\t}\n\n\t\t\t\tbound.extend(controlPoint1);\n\t\t\t\tbound.extend(controlPoint2);\n\t\t\t\tbound.extend(endPoint);\n\n\t\t\t\tendPoint.controlPoint1 = controlPoint1;\n\t\t\t\tendPoint.controlPoint2 = controlPoint2;\n\t\t\t\tlastPoint = endPoint;\n\t\t\t} else if (lastCommand == \"Q\") {\n\t\t\t\tvar controlPoint = new L.latLng(coord[0], coord[1]);\n\t\t\t\tcoord = this._coords[++i];\n\t\t\t\tvar endPoint = new L.latLng(coord[0], coord[1]);\n\n\t\t\t\tbound.extend(controlPoint);\n\t\t\t\tbound.extend(endPoint);\n\n\t\t\t\tendPoint.controlPoint = controlPoint;\n\t\t\t\tlastPoint = endPoint;\n\t\t\t} else if (lastCommand == \"T\") {\n\t\t\t\tvar endPoint = new L.latLng(coord[0], coord[1]);\n\n\t\t\t\tvar controlPoint = lastPoint;\n\t\t\t\tif (lastPoint.controlPoint) {\n\t\t\t\t\tvar diffLat = lastPoint.lat - lastPoint.controlPoint.lat;\n\t\t\t\t\tvar diffLng = lastPoint.lng - lastPoint.controlPoint.lng;\n\t\t\t\t\tcontrolPoint = new L.latLng(\n\t\t\t\t\t\tlastPoint.lat + diffLat,\n\t\t\t\t\t\tlastPoint.lng + diffLng\n\t\t\t\t\t);\n\t\t\t\t}\n\n\t\t\t\tbound.extend(controlPoint);\n\t\t\t\tbound.extend(endPoint);\n\n\t\t\t\tendPoint.controlPoint = controlPoint;\n\t\t\t\tlastPoint = endPoint;\n\t\t\t} else {\n\t\t\t\tbound.extend(coord);\n\t\t\t\tlastPoint = new L.latLng(coord[0], coord[1]);\n\t\t\t}\n\t\t}\n\t\treturn bound;\n\t},\n\n\t//TODO: use a centroid algorithm instead\n\tgetCenter: function () {\n\t\treturn this._bounds.getCenter();\n\t},\n\n\t_update: function () {\n\t\t//5\n\t\tif (!this._map) {\n\t\t\treturn;\n\t\t}\n\t\tthis._updatePath();\n\t},\n\n\t_updatePath: function () {\n\t\t//6\n\t\tthis._renderer._updatecurve(this);\n\t},\n\n\t_project: function () {\n\t\t//4\n\t\tvar coord, lastCoord, curCommand, curPoint;\n\n\t\tthis._points = [];\n\n\t\tfor (var i = 0; i < this._coords.length; i++) {\n\t\t\tcoord = this._coords[i];\n\t\t\tif (typeof coord == \"string\" || coord instanceof String) {\n\t\t\t\tthis._points.push(coord);\n\t\t\t\tcurCommand = coord;\n\t\t\t} else {\n\t\t\t\tswitch (coord.length) {\n\t\t\t\t\tcase 2:\n\t\t\t\t\t\tcurPoint = this._map.latLngToLayerPoint(coord);\n\t\t\t\t\t\tlastCoord = coord;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 1:\n\t\t\t\t\t\tif (curCommand == \"H\") {\n\t\t\t\t\t\t\tcurPoint = this._map.latLngToLayerPoint([\n\t\t\t\t\t\t\t\tlastCoord[0],\n\t\t\t\t\t\t\t\tcoord[0],\n\t\t\t\t\t\t\t]);\n\t\t\t\t\t\t\tlastCoord = [lastCoord[0], coord[0]];\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tcurPoint = this._map.latLngToLayerPoint([\n\t\t\t\t\t\t\t\tcoord[0],\n\t\t\t\t\t\t\t\tlastCoord[1],\n\t\t\t\t\t\t\t]);\n\t\t\t\t\t\t\tlastCoord = [coord[0], lastCoord[1]];\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tthis._points.push(curPoint);\n\t\t\t}\n\t\t}\n\t},\n});\n\nL.curve = function (path, options) {\n\treturn new L.Curve(path, options);\n};\n\nL.SVG.include({\n\t//7\n\t_updatecurve: function (layer) {\n\t\tthis._setPath(layer, this._curvePointsToPath(layer._points));\n\t\tif (layer.options.animate) {\n\t\t\tvar path = layer._path;\n\t\t\tvar length = path.getTotalLength();\n\n\t\t\tif (!layer.options.dashArray) {\n\t\t\t\tpath.style.strokeDasharray = length + \" \" + length;\n\t\t\t}\n\n\t\t\tif (layer._initialUpdate) {\n\t\t\t\tpath.animate(\n\t\t\t\t\t[{ strokeDashoffset: length }, { strokeDashoffset: 0 }],\n\t\t\t\t\tlayer.options.animate\n\t\t\t\t);\n\t\t\t\tlayer._initialUpdate = false;\n\t\t\t}\n\t\t}\n\t},\n\n\t_curvePointsToPath: function (points) {\n\t\tvar point,\n\t\t\tcurCommand,\n\t\t\tstr = \"\";\n\t\tfor (var i = 0; i < points.length; i++) {\n\t\t\tpoint = points[i];\n\t\t\tif (typeof point == \"string\" || point instanceof String) {\n\t\t\t\tcurCommand = point;\n\t\t\t\tstr += curCommand;\n\t\t\t} else {\n\t\t\t\tswitch (curCommand) {\n\t\t\t\t\tcase \"H\":\n\t\t\t\t\t\tstr += point.x + \" \";\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"V\":\n\t\t\t\t\t\tstr += point.y + \" \";\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tstr += point.x + \",\" + point.y + \" \";\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn str || \"M0 0\";\n\t},\n});\n","// import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Path, withLeaflet } from \"react-leaflet\";\nimport { curve } from \"./leaflet.curve\";\nimport L from \"leaflet\";\n\nclass Curve extends Path {\n\tcreateLeafletElement(props) {\n\t\tconst { positions, option, ...options } = props;\n\t\treturn L.curve(positions, option, this.getOptions(options));\n\t}\n\n\tupdateLeafletElement(fromProps, toProps) {\n\t\tif (toProps.positions !== fromProps.positions) {\n\t\t\tthis.leafletElement.setPath(toProps.positions);\n\t\t}\n\t\tthis.setStyleIfChanged(fromProps, toProps);\n\t}\n}\n\nCurve.propTypes = {\n\tchildren: PropTypes.oneOfType([\n\t\tPropTypes.arrayOf(PropTypes.node),\n\t\tPropTypes.node,\n\t]),\n\toption: PropTypes.object,\n\tpositions: PropTypes.array.isRequired,\n};\n\nexport default withLeaflet(Curve);\n\n/*\n  componentWillMount() {\n    super.componentWillMount();\n    const { positions, ...options } = this.props\n    this.leafletElement = L.curve(positions, this.getOptions(options))\n  }*/\n","import React from \"react\";\nimport { Map, TileLayer, Marker } from \"react-leaflet\";\nimport \"./Traceability.css\";\nimport { Swiper, SwiperSlide } from \"swiper/react\";\nimport { Curve } from \"./leaflet-curve\";\nimport L from \"leaflet\";\n// Import Swiper styles\nimport \"swiper/swiper-bundle.css\";\n\nclass Traceability extends React.Component {\n    map = undefined;\n    state = {\n        zoom: 12,\n        swiper: undefined,\n        currentIndex: 0,\n        map: undefined,\n    };\n\n    getMaterialIcon = (mode) => {\n        switch (mode) {\n            case \"Charette\":\n                return \"directions_bike\";\n            case \"Plane\":\n                return \"flight_takeoff\";\n            case \"Train\":\n                return \"train\";\n            case \"Boat\":\n                return \"directions_boat_filled\";\n            case \"Truck\":\n                return \"local_shipping\";\n            default:\n                return \"nature_people\";\n        }\n    };\n\n    getTransportMode = (mode) => {\n        switch (mode) {\n            case \"Charette\":\n                return \"vélo\";\n            case \"Plane\":\n                return \"avion\";\n            case \"Train\":\n                return \"train\";\n            case \"Boat\":\n                return \"bateau\";\n            case \"Truck\":\n                return \"camion\";\n            default:\n                return mode;\n        }\n    };\n    getTranslation = (mode) => {\n        switch (mode) {\n            case \"maker\":\n                return \"Fabricant\";\n            case \"productor\":\n                return \"Producteur\";\n            case \"shop\":\n                return \"Revendeur\";\n            default:\n                return mode;\n        }\n    };\n\n    displaySlides = () => {\n        let slides = <React.Fragment />;\n        if (this.props.products) {\n            slides = this.props.products.map((product) => {\n                let pastille = \"product-slide-pastille past-green\";\n                if (product.TransportCO2Impact?.value > 10) {\n                    pastille = \"product-slide-pastille past-orange\";\n                }\n                if (product.TransportCO2Impact?.value > 100) {\n                    pastille = \"product-slide-pastille past-red\";\n                }\n\n                return (\n                    <SwiperSlide>\n                        <div className=\"product-slide-container\">\n                            <div className=\"product-slide-icon\">\n                                <span class=\"material-icons\">\n                                    {this.getMaterialIcon(product.transport)}\n                                </span>\n\n                                <div className=\"product-slide-name\">\n                                    <span className=\"product-slide-name-product\">\n                                        {product.productsOutput[0].productName}\n                                    </span>\n                                    <span className=\"product-slide-name-transport\">\n                                        Transport en {this.getTransportMode(product.transport)}\n                                    </span>\n                                </div>\n                            </div>\n                            <div className=\"product-slide-origin-wrapper\">\n                                <div className=\"product-transport-ui\">\n                                    <div className=\"transport-ui-circle\"></div>\n                                    <div className=\"transport-ui-tiret\"></div>\n                                    <div className=\"transport-ui-circle circle-bis\"></div>\n                                </div>\n                                <div className=\"product-slide-transport-container\">\n                                    <div className=\"product-slide-bigname\">\n                                        <span>\n                                            {product.seller.localisation.city},{\" \"}\n                                            {product.seller.localisation.country}\n                                        </span>\n                                    </div>\n                                    <div className=\"product-slide-lowername2\">\n                                        {this.getTranslation(product.seller?.type)}\n                                        {\": \"}\n                                        {product.seller?.name}\n                                    </div>\n\n                                    <div className=\"product-slide-bigname bigname-lower\">\n                                        <span>\n                                            {product.buyer.localisation.city},{\" \"}\n                                            {product.buyer.localisation.country}\n                                        </span>\n                                    </div>\n                                    <div className=\"product-slide-lowername2\">\n                                        {this.getTranslation(product.buyer?.type)}\n                                        {\": \"}\n                                        {product.buyer?.name}\n                                    </div>\n                                </div>\n                            </div>\n                            <div className=\"product-slide-arrow\">{\">\"}</div>\n                            <div className=\"product-slide-consumption\">\n                                <div className={pastille}></div>\n                                <div>{Math.round(product.dist.value)} km </div>\n                                <div>\n                                    {product.TransportCO2Impact?.value > 1\n                                        ? Math.round(product.TransportCO2Impact?.value)\n                                        : \"< 1\"}{\" \"}\n                                    kg CO2{\" \"}\n                                </div>\n                            </div>\n                        </div>\n                    </SwiperSlide>\n                );\n            });\n        }\n        return slides;\n    };\n\n    handleMarkerClick = (latlng, index) => {\n        // window.scrollTo({ top: \"8000px\", behavior: \"smooth\" });\n        let elem = document.getElementsByClassName(\"swiper-container\");\n        if (elem[0]) {\n            elem[0].scrollIntoView({ behavior: \"smooth\" });\n        }\n\n        if (index >= this.props.products?.length) {\n            this.state.swiper.slideTo(index - 1, 500);\n        } else {\n            this.state.swiper.slideTo(index, 500);\n        }\n        let zoom = 5;\n        if (this.props.products && this.props.products[index]) {\n            let p = this.props.products[index];\n\n            zoom = getZoomRatio(\n                [p.buyer.localisation.latitude, p.buyer.localisation.longitude],\n                [p.seller.localisation.latitude, p.seller.localisation.longitude]\n            );\n        }\n\n        this.map.leafletElement.flyTo(latlng, zoom, { duration: 0.5 });\n    };\n\n    onSlideChange = (index) => {\n        this.setState({ currentIndex: index });\n        let zoom = 5;\n        if (this.props.products && this.props.products[index]) {\n            let p = this.props.products[index];\n\n            zoom = getZoomRatio(\n                [p.buyer.localisation.latitude, p.buyer.localisation.longitude],\n                [p.seller.localisation.latitude, p.seller.localisation.longitude]\n            );\n\n            let lat =\n                (parseFloat(p.seller.localisation.latitude) +\n                    parseFloat(p.buyer.localisation.latitude)) /\n                2;\n            let long =\n                (parseFloat(p.seller.localisation.longitude) +\n                    parseFloat(p.buyer.localisation.longitude)) /\n                2;\n\n            this.map.leafletElement.flyTo([lat, long], zoom, { duration: 0.5 });\n        }\n    };\n\n    displayMarker = () => {\n        let markers = <React.Fragment />;\n        if (this.props.products) {\n            markers = this.props.products.map((product, i) => {\n                let marker1 = <React.Fragment />;\n                let lat1 = parseFloat(product?.buyer?.localisation?.latitude);\n                let long1 = parseFloat(product?.buyer?.localisation?.longitude);\n                let marker2 = <React.Fragment />;\n                let lat2 = parseFloat(product?.seller?.localisation?.latitude);\n                let long2 = parseFloat(product?.seller?.localisation?.longitude);\n                let icon;\n                let icon2;\n                let zIndex = 0;\n                if (i === this.state.currentIndex) {\n                    icon = new L.Icon({\n                        iconUrl: \"/images/utils/map.png\", //require('../../images/logo/logo.svg'),\n                        iconRetinaUrl: \"/images/utils/map.png\", //\"/images/images_volume/1-l.png\", //require('../../images/logo/logo.svg'),\n                        iconSize: new L.Point(32, 32),\n                        className: \"leaflet-mark-icon\",\n                    });\n                    icon2 = new L.Icon({\n                        iconUrl: \"/images/utils/map.png\", //require('../../images/logo/logo.svg'),\n                        iconRetinaUrl: \"/images/utils/map3.png\", //\"/images/images_volume/1-l.png\", //require('../../images/logo/logo.svg'),\n                        iconSize: new L.Point(32, 32),\n                        className: \"leaflet-mark-icon\",\n                    });\n                    zIndex = 5;\n                } else {\n                    icon = new L.Icon({\n                        iconUrl: \"/images/utils/map2.png\", //require('../../images/logo/logo.svg'),\n                        iconRetinaUrl: \"/images/utils/map2.png\", //\"/images/images_volume/1-l.png\", //require('../../images/logo/logo.svg'),\n                        iconSize: new L.Point(25, 25),\n                        className: \"leaflet-mark-icon\",\n                    });\n                    icon2 = new L.Icon({\n                        iconUrl: \"/images/utils/map2.png\", //require('../../images/logo/logo.svg'),\n                        iconRetinaUrl: \"/images/utils/map2.png\", //\"/images/images_volume/1-l.png\", //require('../../images/logo/logo.svg'),\n                        iconSize: new L.Point(25, 25),\n                        className: \"leaflet-mark-icon\",\n                    });\n                }\n\n                if (lat1 && long1) {\n                    marker1 = (\n                        <Marker\n                            zIndexOffset={zIndex}\n                            icon={icon}\n                            position={[lat1, long1]}\n                            onClick={() =>\n                                this.handleMarkerClick(\n                                    [\n                                        parseFloat(product.buyer.localisation.latitude),\n                                        parseFloat(product.buyer.localisation.longitude),\n                                    ],\n                                    i + 1\n                                )\n                            }\n                        >\n                            {/* <Popup>{product.buyer.name}</Popup> */}\n                        </Marker>\n                    );\n                }\n                if (lat2 && long2) {\n                    marker2 = (\n                        <Marker\n                            zIndexOffset={zIndex}\n                            icon={icon2}\n                            position={[lat2, long2]}\n                            onClick={() =>\n                                this.handleMarkerClick(\n                                    [\n                                        parseFloat(product.seller.localisation.latitude),\n                                        parseFloat(product.seller.localisation.longitude),\n                                    ],\n                                    i\n                                )\n                            }\n                        >\n                            {/* <Popup>{product.seller.name}</Popup> */}\n                        </Marker>\n                    );\n                }\n\n                let color = \"#1b3044\";\n                let curves = document.getElementsByClassName(\"leaflet-interactive\");\n\n                if (curves && curves[i] && i === this.state.currentIndex) {\n                    curves[i].setAttribute(\"stroke\", \"#78be95\");\n                } else if (curves && curves[i]) {\n                    curves[i].setAttribute(\"stroke\", \"#1b3044\");\n                }\n\n                return (\n                    <React.Fragment>\n                        <div className=\"test\">\n                            <Curve\n                                positions={getCurveOptions(lat2, long2, lat1, long1)}\n                                option={{\n                                    color: color,\n                                    fill: false,\n                                    // animate: animate,\n                                    delay: 5000,\n                                }}\n                            />\n                        </div>\n                        {marker1}\n                        {marker2}\n                    </React.Fragment>\n                );\n            });\n        }\n        return markers;\n    };\n\n    render = () => {\n        return (\n            <div className=\"tracability-container\">\n                <div className=\"product-CO2-total-tracability-container\">\n                    <span className=\"product-CO2-total-tracability\">\n                        Impact total carbone :&nbsp;\n                        <span className=\"carbon-total-number\">\n                            {parseFloat(this.props.totalCO2Traceability).toFixed(1)}\n                        </span>\n                        kg CO2 soit &nbsp;\n                        <span className=\"carbon-total-number\">\n                            {parseFloat(\n                                ((this.props.totalCO2Traceability * 0.05) / 11.0) * 1000.0\n                            ).toFixed(1)}\n                        </span>\n                        kms parcourus en voiture\n                    </span>\n                </div>\n\n                <Map\n                    center={[51.505, -0.09]}\n                    zoom={1}\n                    minZoom={1}\n                    scrollWheelZoom={true}\n                    dragging={false}\n                    maxBounds={[\n                        [-90, -180],\n                        [90, 180],\n                    ]}\n                    maxBoundsViscosity={1}\n                    ref={(ref) => {\n                        this.map = ref;\n                        this.props.getBottomRef(ref);\n                    }}\n                    whenCreated={(map) => this.setState({ map })}\n                >\n                    <TileLayer\n                        attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a>'\n                        url=\"https://stamen-tiles-{s}.a.ssl.fastly.net/toner-background/{z}/{x}/{y}{r}.png\" //'https://maps.wikimedia.org/osm-intl/{z}/{x}/{y}{r}.png' //'https://{s}.tile.osm.org/{z}/{x}/{y}.png'\n                    />\n\n                    {this.displayMarker()}\n                </Map>\n                <Swiper\n                    spaceBetween={10}\n                    slidesPerView={1.2}\n                    centeredSlides={true}\n                    onSlideChange={(i) => this.onSlideChange(i.activeIndex)}\n                    onSwiper={(swiper) => this.setState({ swiper: swiper })}\n                >\n                    {this.displaySlides()}\n                </Swiper>\n            </div>\n        );\n    };\n}\n\nexport default Traceability;\n\nfunction getDistance(origin, destination) {\n    // return distance in meters\n    var lon1 = toRadian(origin[1]),\n        lat1 = toRadian(origin[0]),\n        lon2 = toRadian(destination[1]),\n        lat2 = toRadian(destination[0]);\n\n    var deltaLat = lat2 - lat1;\n    var deltaLon = lon2 - lon1;\n\n    var a =\n        Math.pow(Math.sin(deltaLat / 2), 2) +\n        Math.cos(lat1) * Math.cos(lat2) * Math.pow(Math.sin(deltaLon / 2), 2);\n    var c = 2 * Math.asin(Math.sqrt(a));\n    var EARTH_RADIUS = 6371;\n    return c; //* EARTH_RADIUS * 1000;\n}\n\nfunction toRadian(degree) {\n    return (degree * Math.PI) / 180;\n}\n\nfunction getZoomRatio(origin, destination) {\n    var distance = getDistance(origin, destination);\n\n    return 9 - Math.sqrt(distance * 150);\n}\n\nfunction getCurveOptions(lat1, long1, lat2, long2) {\n    var latlng1 = [lat1, long1],\n        latlng2 = [lat2, long2];\n\n    var offsetX = latlng2[1] - latlng1[1],\n        offsetY = latlng2[0] - latlng1[0];\n\n    var r = Math.sqrt(Math.pow(offsetX, 2) + Math.pow(offsetY, 2)),\n        theta = Math.atan2(offsetY, offsetX);\n\n    var thetaOffset = 3.14 / 10;\n\n    var r2 = r / 2 / Math.cos(thetaOffset),\n        theta2 = theta + thetaOffset;\n\n    var midpointX = r2 * Math.cos(theta2) + latlng1[1],\n        midpointY = r2 * Math.sin(theta2) + latlng1[0];\n\n    var midpointLatLng = [midpointY, midpointX];\n\n    return [\"M\", latlng1, \"Q\", midpointLatLng, latlng2];\n}\n\nfunction getChildElementIndex(node) {\n    return Array.prototype.indexOf.call(node.parentNode.children, node);\n}\n","import React from \"react\";\nimport { Swiper, SwiperSlide } from \"swiper/react\";\nimport \"swiper/swiper-bundle.css\";\n\nclass Alternatives extends React.Component {\n    state = {\n        swiper: undefined,\n    };\n\n    renderListAlternatives = (listItems) => {\n        var res = <React.Fragment></React.Fragment>;\n        res = listItems.map((item) => {\n            var pathProduct = \"/products/\" + item.id;\n            // Mock Front\n            if (item.id === \"8001505005707\") {\n                pathProduct += \"/24\";\n            }\n\n            if (item.id !== this.props.barcode) {\n                return (\n                    <SwiperSlide key={item.id}>\n                        <a href={pathProduct} className=\"product-alternative\">\n                            <div>\n                                <img\n                                    src={item.img_url}\n                                    className=\"product-alternative-image\"\n                                    alt=\"\"\n                                />\n                            </div>\n                            <div className=\"product-alternative-text\">\n                                <label className=\"product-alternative-title\">{item.name}</label>\n                                <label className=\"product-alternative-brand\">{}</label>\n                                <RenderColor item={item} />\n                            </div>\n                            <div className=\"product-alternative-fleche\">{\">\"}</div>\n                        </a>\n                    </SwiperSlide>\n                );\n            } else {\n                return <React.Fragment></React.Fragment>;\n            }\n        });\n\n        return res;\n    };\n\n    alternativesloop = () => {\n        var alternativesList = <React.Fragment></React.Fragment>;\n\n        if (\n            this.props.alternatives &&\n            this.props.alternatives != \"loading\" &&\n            this.props.alternatives != \"\"\n        ) {\n            var alternatives_a = <React.Fragment></React.Fragment>;\n            var alternatives_b = <React.Fragment></React.Fragment>;\n            var alternatives_c = <React.Fragment></React.Fragment>;\n            var alternatives_d = <React.Fragment></React.Fragment>;\n\n            this.props.alternatives.a.sort(function (a, b) {\n                return b.eco_score - a.eco_score;\n            });\n\n            this.props.alternatives.b.sort(function (a, b) {\n                return b.eco_score - a.eco_score;\n            });\n            this.props.alternatives.c.sort(function (a, b) {\n                return b.eco_score - a.eco_score;\n            });\n            this.props.alternatives.d.sort(function (a, b) {\n                return b.eco_score - a.eco_score;\n            });\n\n            switch (this.props.ecoScore) {\n                case \"a\":\n                    break;\n                case \"b\":\n                    alternatives_a = this.renderListAlternatives(this.props.alternatives.a);\n                    break;\n                case \"c\":\n                    alternatives_a = this.renderListAlternatives(this.props.alternatives.a);\n                    alternatives_b = this.renderListAlternatives(this.props.alternatives.b);\n                    break;\n                case \"d\":\n                    alternatives_a = this.renderListAlternatives(this.props.alternatives.a);\n                    alternatives_b = this.renderListAlternatives(this.props.alternatives.b);\n                    alternatives_c = this.renderListAlternatives(this.props.alternatives.c);\n                    break;\n                case \"e\":\n                    alternatives_a = this.renderListAlternatives(this.props.alternatives.a);\n                    alternatives_b = this.renderListAlternatives(this.props.alternatives.b);\n                    alternatives_c = this.renderListAlternatives(this.props.alternatives.c);\n                    alternatives_d = this.renderListAlternatives(this.props.alternatives.d);\n                    break;\n                default:\n            }\n\n            alternativesList = (\n                <React.Fragment>\n                    {alternatives_a} {alternatives_b} {alternatives_c} {alternatives_d}\n                </React.Fragment>\n            );\n        }\n\n        return alternativesList;\n    };\n\n    render = () => {\n        var alternatives_title = \"\";\n\n        if (this.props.alternatives === \"\") {\n            alternatives_title = \"Pas d'alternatives disponible\";\n        } else {\n            if (this.props.alternatives === \"loading\") {\n                alternatives_title = \"Chargement des alternatives ...\";\n            } else {\n                alternatives_title = \"Alternatives\";\n            }\n        }\n        return (\n            <React.Fragment>\n                <span className=\"title-part-environnement\">{alternatives_title}</span>\n                {this.props.alternatives &&\n                this.props.alternatives != \"loading\" &&\n                this.props.alternatives != \"\" ? (\n                    <Swiper\n                        spaceBetween={0}\n                        slidesPerView={1}\n                        centeredSlides={true}\n                        onSwiper={(swiper) => this.setState({ swiper: swiper })}\n                    >\n                        {this.alternativesloop()}\n                    </Swiper>\n                ) : (\n                    <React.Fragment />\n                )}\n            </React.Fragment>\n        );\n    };\n}\n\nexport default Alternatives;\n\nfunction RenderColor({ item }) {\n    var labelColor;\n    var labelLevel;\n    if (item.eco_score <= 33) {\n        labelColor = \"red\";\n        labelLevel = \"Mauvais\";\n    } else if (item.eco_score > 33 && item.eco_score < 67) {\n        labelColor = \"yellow\";\n        labelLevel = \"Moyen\";\n    } else {\n        labelColor = \"green\";\n        labelLevel = \"Bonne\";\n    }\n    return (\n        <div className=\"product-alternative-label-position\">\n            <div className=\"product-alternative-label\">\n                <div style={{ color: labelColor }}>●</div>\n                <div className=\"product-alternative-label-text\">{item.eco_score}/100</div>\n            </div>\n            <div className=\"product-alternative-label-level \">{labelLevel}</div>\n        </div>\n    );\n}\n","import React from \"react\";\nimport { Map, TileLayer, Marker, Polygon } from \"react-leaflet\";\nimport L from \"leaflet\";\n\nclass Origins extends React.Component {\n    state = {\n        polygon: [],\n        activeCountry: \"\",\n    };\n\n    componentDidMount = () => {\n        this.getCountries();\n    };\n\n    setActiveCountry = (country) => {\n        console.log(country);\n        this.setState({ activeCountry: country });\n    };\n\n    getCountries = () => {\n        this.props.origins?.map((origin) => {\n            if (origin != \"en:ghana\") {\n                fetch(`https://api.lowympact.fr/api/v1/countries/${origin}`)\n                    .then((res) => res.json())\n                    .then((res) => {\n                        let polygon = this.state.polygon;\n                        console.log(res);\n                        if (res.success && res.data?.country) {\n                            polygon.push({\n                                geo: res.data.country.coordinates,\n                                name: res.data.country.name,\n                            });\n                            this.setState({\n                                polygon: polygon,\n                                activeCountry:\n                                    this.state.activeCountry + res.data.country.name + \", \",\n                            });\n                        }\n                    });\n            }\n        });\n    };\n\n    render = () => {\n        if (this.state.polygon.length == 0) return <React.Fragment />;\n        else {\n            return (\n                <div className=\"environnement-map-container\">\n                    <div className=\"product-co2-impact-header\">\n                        <div className=\"product-co2-impact-logo\">\n                            <div className=\"material-icons icon-label-co2-impact\">place</div>\n                        </div>\n                        <div className=\"product-co2-impact-title\">\n                            <div className=\"product-co2-impact-title-text\">\n                                Provenance des ingrédients\n                            </div>\n                            <div className=\"product-co2-impact-title-label\">\n                                Pays d'origine : {this.state.activeCountry}\n                            </div>\n                        </div>\n                    </div>\n\n                    <Map\n                        center={[51.505, -0.09]}\n                        zoom={-1}\n                        minZoom={0}\n                        className=\"environnement-map\"\n                        scrollWheelZoom={true}\n                        dragging={false}\n                        maxBounds={[\n                            [-90, -180],\n                            [90, 180],\n                        ]}\n                        maxBoundsViscosity={1}\n                        whenCreated={(map) => this.setState({ map })}\n                    >\n                        <TileLayer\n                            attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a>'\n                            url=\"https://stamen-tiles-{s}.a.ssl.fastly.net/toner-background/{z}/{x}/{y}{r}.png\" //'https://maps.wikimedia.org/osm-intl/{z}/{x}/{y}{r}.png' //'https://{s}.tile.osm.org/{z}/{x}/{y}.png'\n                        />\n                        {this.state.polygon.map((poly, i) => {\n                            if (poly)\n                                return (\n                                    <Polygon\n                                        onClick={() => this.setActiveCountry(poly.name)}\n                                        color={\"color:white\"}\n                                        fillColor={\n                                            this.activeCountry == poly.name ? \"blue\" : \"green\"\n                                        }\n                                        opacity={\"1\"}\n                                        positions={poly.geo}\n                                        key={i}\n                                    />\n                                );\n                        })}\n                    </Map>\n                </div>\n            );\n        }\n    };\n}\n\nexport default Origins;\n","import React from \"react\";\n\nclass EmpreinteCarbone extends React.Component {\n    state = {\n        alea: 3,\n    };\n\n    setAlea = () => {\n        // this.setState({ alea: Math.floor(Math.random() * 11) });\n        let alea = this.state.alea + 1;\n        if (alea > 11) alea = 0;\n        this.setState({ alea: alea });\n    };\n\n    render = () => {\n        if (this.props.dataEcoScore?.agribalyse?.co2_total) {\n            console.log(this.props.dataEcoScore);\n            let repartition = [\n                {\n                    image: \"agriculture\",\n                    name: \"Agriculture\",\n                    percent: (\n                        (parseFloat(this.props.dataEcoScore?.agribalyse?.co2_agriculture) * 100) /\n                        parseFloat(this.props.dataEcoScore?.agribalyse?.co2_total)\n                    ).toFixed(0),\n                },\n                {\n                    image: \"local_shipping\",\n                    name: \"Transport\",\n                    percent: (\n                        (parseFloat(this.props.dataEcoScore?.agribalyse?.co2_transportation) *\n                            100) /\n                        parseFloat(this.props.dataEcoScore?.agribalyse?.co2_total)\n                    ).toFixed(0),\n                },\n                {\n                    image: \"view_in_ar\",\n                    name: \"Emballage\",\n                    percent: (\n                        (parseFloat(this.props.dataEcoScore?.agribalyse?.co2_packaging) * 100) /\n                        parseFloat(this.props.dataEcoScore?.agribalyse?.co2_total)\n                    ).toFixed(0),\n                },\n                {\n                    image: \"transform\",\n                    name: \"Transformation\",\n                    percent: (\n                        (parseFloat(this.props.dataEcoScore?.agribalyse?.co2_processing) * 100) /\n                        parseFloat(this.props.dataEcoScore?.agribalyse?.co2_total)\n                    ).toFixed(0),\n                },\n                {\n                    image: \"store\",\n                    name: \"Distribution\",\n                    percent: (\n                        (parseFloat(this.props.dataEcoScore?.agribalyse?.co2_distribution) * 100) /\n                        parseFloat(this.props.dataEcoScore?.agribalyse?.co2_total)\n                    ).toFixed(0),\n                },\n                {\n                    image: \"microwave\",\n                    name: \"Consommation\",\n                    percent: (\n                        (parseFloat(this.props.dataEcoScore?.agribalyse?.co2_consumption) * 100) /\n                        parseFloat(this.props.dataEcoScore?.agribalyse?.co2_total)\n                    ).toFixed(0),\n                },\n            ];\n            repartition = repartition.map((i) => {\n                return (\n                    <div className=\"empreinte-single\">\n                        <div className=\"material-icons\">{i.image}</div>\n                        <div className=\"name\">{i.name} : </div>\n                        <div className=\"pourcent\">{i.percent} %</div>\n                    </div>\n                );\n            });\n\n            let equivalent = getEquivalent(\n                parseFloat(this.props.dataEcoScore?.agribalyse?.co2_total),\n                this.state.alea\n            );\n\n            let circle = \"cmauve\";\n            if (this.props.dataEcoScore?.agribalyse?.co2_total < 15) circle = \"cred\";\n            if (this.props.dataEcoScore?.agribalyse?.co2_total < 7) circle = \"corange\";\n            if (this.props.dataEcoScore?.agribalyse?.co2_total < 3) circle = \"cgreen\";\n            if (this.props.dataEcoScore?.agribalyse?.co2_total < 1) circle = \"cdarkgreen\";\n            return (\n                <React.Fragment>\n                    <div className=\"empreinte-carbone-container\">\n                        <div className=\"empreinte-carbone-header\">\n                            <div className=\"header-text\">\n                                <div className=\"header-main\">Empreinte Carbone</div>\n                                <div className=\"header-small\">source : ADEME</div>\n                            </div>\n                            <div className=\"empreinte-carbone-number\">\n                                <span>\n                                    {parseFloat(\n                                        this.props.dataEcoScore?.agribalyse?.co2_total\n                                    ).toFixed(2)}\n                                    kg CO2e\n                                </span>\n                                <div className={\"circle \" + circle}></div>\n                            </div>\n                        </div>\n                        <div className=\"empreinte-carbone-equivalent\">\n                            <div className=\"icon-container\">\n                                <div className=\"material-icons\">\n                                    <img src={`/images/alternatives/${equivalent[1]}`} />\n                                </div>\n                            </div>\n                            <div className=\"equivalent-container\">\n                                <div className=\"text-small\">Soit l'équivalent...</div>\n                                <div className=\"text-big\">{equivalent[0]}</div>\n                            </div>\n                        </div>\n                        <div className=\"arrow\" onClick={this.setAlea}>\n                            <div className=\"material-icons\">refresh</div>\n                        </div>\n                    </div>\n\n                    <div className=\"empreinte-carbone-container\">\n                        <div className=\"empreinte-carbone-header\">\n                            <div className=\"header-text\">\n                                <div className=\"header-main\">\n                                    Répartition de l'empreinte Carbone\n                                </div>\n                                <div className=\"header-small\">\n                                    selon les différentes étapes du cycle de vie\n                                </div>\n                            </div>\n                            {/* <div className=\"empreinte-carbone-number\">\n                                <span>\n                                    {parseFloat(\n                                        this.props.dataEcoScore?.agribalyse?.co2_total\n                                    ).toFixed(2)}\n                                    kg CO2e\n                                </span>\n                                <div className=\"circle\"></div>\n                            </div> */}\n                        </div>\n                        <div className=\"empreinte-carbone-repartition\">{repartition}</div>\n                    </div>\n                </React.Fragment>\n            );\n        } else {\n            return <React.Fragment />;\n        }\n    };\n}\n\nexport default EmpreinteCarbone;\n\nfunction getEquivalent(co2, alea) {\n    switch (alea) {\n        case 0:\n            return [\n                \"De la production de \" +\n                    (co2 / 0.0046).toFixed(0) +\n                    \" feuilles de papier blanc 80g\",\n                \"paper.png\",\n            ];\n        case 1:\n            return [\n                \"De la production de \" +\n                    (co2 / 0.6).toFixed(1) +\n                    \" kg de pomme de terres en France\",\n                \"potatoe.png\",\n            ];\n        case 2:\n            return [\n                \"De la production de \" + (co2 / 0.53).toFixed(1) + \" kg de fraises en France\",\n                \"strawberry.png\",\n            ];\n        case 3:\n            return [\n                \"De \" + (co2 / 0.193).toFixed(1) + \" km parcourus par une personne en voiture\",\n                \"car.svg\",\n            ];\n        case 4:\n            return [\n                \"De \" + (co2 / 0.137).toFixed(1) + \" km parcourus par une personne en Bus de ville\",\n                \"bus.svg\",\n            ];\n        case 5:\n            return [\n                \"De \" +\n                    (co2 / 0.019).toFixed(0) +\n                    \" e-mails envoyés contenant une pièce jointe d'1mo\",\n                \"mail.svg\",\n            ];\n        case 6:\n            return [\n                \"De \" +\n                    (co2 / 0.5).toFixed(1) +\n                    \" jour(s) d'éclairage d'une ampoule à incandescence\",\n                \"light.svg\",\n            ];\n        case 7:\n            return [\n                \"De \" +\n                    (co2 / 0.083).toFixed(1) +\n                    \" jours d'éclairage d'une ampoule basse consommation\",\n                \"light.svg\",\n            ];\n        case 8:\n            return [\n                \"De \" +\n                    (co2 / 0.24).toFixed(1) +\n                    \" heures de chauffage au gaz d'un appartement moyen de 70m²\",\n                \"appartment.svg\",\n            ];\n        case 9:\n            return [\n                \"De la production de \" +\n                    ((co2 * 100) / 33.8).toFixed(0) +\n                    \" grammes de steak haché de boeuf cru\",\n                \"steak.png\",\n            ];\n        case 10:\n            return [\n                \"De \" +\n                    (co2 / 0.105).toFixed(1) +\n                    \" kilomètres parcourus en Trotinette électrique (en France)\",\n                \"trotinette.png\",\n            ];\n        case 11:\n            return [\n                \"D'une personne parcourant \" +\n                    (co2 / 0.3).toFixed(0) * 100 +\n                    \" kilomètres en TGV (en France)\",\n                \"train.png\",\n            ];\n        default:\n            return [\n                \"De \" +\n                    (co2 / 0.105).toFixed(1) +\n                    \" kilomètres parcourus en Trotinette électrique (en France)\",\n                \"trotinette.png\",\n            ];\n    }\n}\n","import React from \"react\";\nimport Alternatives from \"./Alternatives\";\nimport { CircleProgress } from \"react-gradient-progress\";\nimport Origins from \"./Origins\";\nimport \"./Environnement.css\";\nimport EmpreinteCarbone from \"./EmpreinteCarbone\";\n\nclass Environnement extends React.Component {\n    state = {\n        swiper: undefined,\n        currentIndex: 0,\n        width: undefined,\n        showTransport: false,\n        materials: [],\n    };\n\n    getMaterialIcon = (mode) => {\n        switch (mode) {\n            case \"Transformation\":\n                return \"transform\";\n            case \"Arrow\":\n                if (this.state.showTransport) return \"arrow_drop_up\";\n                else return \"arrow_drop_down\";\n            case \"Consommation\":\n                return \"microwave\";\n            case \"Distribution\":\n                return \"store\";\n            case \"Recyclable\":\n                return \"check_circle_outline\";\n            case \"Non recyclable\":\n                return \"highlight_off\";\n            case \"Truck\":\n                return \"local_shipping\";\n            case \"Packaging\":\n                return \"inventory_2\";\n            case \"Agriculture\":\n                return \"agriculture\";\n            case \"Transport\":\n                return \"local_shipping\";\n            default:\n                return \"view_in_ar\";\n        }\n    };\n\n    getColor = (note) => {\n        if (note > 67) {\n            return \"green\";\n        }\n        if (note <= 33) {\n            return \"red\";\n        }\n        return \"yellow\";\n    };\n\n    getColorImpact = (note) => {\n        if (note > 70) {\n            return \"green\";\n        }\n        if (note <= 40) {\n            return \"red\";\n        }\n        return \"yellow\";\n    };\n\n    getLabel = (note) => {\n        if (note > 67) {\n            return \"Bon\";\n        }\n        if (note <= 33) {\n            return \"Mauvais\";\n        }\n        return \"Moyen\";\n    };\n\n    getLabelImpact = (note) => {\n        if (note > 60) {\n            return \"Impact fort\";\n        }\n        if (note <= 30) {\n            return \"Impact faible\";\n        }\n        return \"Impact moyen\";\n    };\n\n    getLabelImpactPackaging = (note) => {\n        if (note > 2) {\n            return \"Impact faible\";\n        }\n        if (note < -2) {\n            return \"Impact fort\";\n        }\n        return \"Impact moyen\";\n    };\n\n    getColorImpactPackaging = (note) => {\n        if (note > 2) {\n            return \"green\";\n        }\n        if (note < -2) {\n            return \"red\";\n        }\n        return \"yellow\";\n    };\n\n    componentDidMount() {\n        this.updateWindowDimensions();\n        window.addEventListener(\"resize\", this.updateWindowDimensions);\n    }\n\n    componentWillUnmount() {\n        window.removeEventListener(\"resize\", this.updateWindowDimensions);\n    }\n\n    updateWindowDimensions = () => {\n        this.setState({ width: window.innerWidth });\n    };\n\n    displayCO2Repartition = (pourcentage, nbKg, type) => {\n        return (\n            <div className=\"product-co2-impact-container\">\n                <div className=\"product-co2-impact-header\">\n                    <div className=\"product-co2-impact-logo\">\n                        <div className=\"material-icons icon-label-co2-impact\">\n                            {this.getMaterialIcon(type)}\n                        </div>\n                    </div>\n                    <div className=\"product-co2-impact-title\">\n                        <div className=\"product-co2-impact-title-text\">CO2 {type}</div>\n                        <div className=\"product-co2-impact-title-label\">Répartition</div>\n                    </div>\n                </div>\n                <div className=\"product-co2-impact-content\">\n                    <div className=\"product-transport-impact-content-details-text\">\n                        {parseFloat(nbKg).toFixed(3)}kg C02 eq/kg produit\n                    </div>\n                    <div className=\"product-co2-impact-content-progress\">\n                        <CircleProgress\n                            percentage={parseFloat(pourcentage * 100).toFixed(1)}\n                            strokeWidth={window.innerWidth * (1.0 / 60.0)}\n                            width={window.innerWidth * (1.0 / 5.0)}\n                            fontSize={window.innerWidth * (1.0 / 25.0)}\n                            primaryColor={[\"#FF3333\", \"#33FF63\"]}\n                        />\n                    </div>\n                </div>\n            </div>\n        );\n    };\n\n    displayRepartitionAllItems = () => {\n        var html_agriculture = <React.Fragment></React.Fragment>;\n        var html_transport = <React.Fragment></React.Fragment>;\n        var html_consommation = <React.Fragment></React.Fragment>;\n        var html_distribution = <React.Fragment></React.Fragment>;\n        var html_packaging = <React.Fragment></React.Fragment>;\n        var html_processing = <React.Fragment></React.Fragment>;\n        var html_total = <React.Fragment></React.Fragment>;\n\n        if (this.props.dataEcoScore?.agribalyse?.co2_agriculture) {\n            html_agriculture = this.displayCO2Repartition(\n                this.props.dataEcoScore?.agribalyse?.co2_agriculture /\n                    this.props.dataEcoScore?.agribalyse?.co2_total,\n                this.props.dataEcoScore?.agribalyse?.co2_agriculture,\n                \"Agriculture\"\n            );\n        }\n        if (this.props.dataEcoScore?.agribalyse?.co2_transportation) {\n            html_transport = this.displayCO2Repartition(\n                this.props.dataEcoScore?.agribalyse?.co2_transportation /\n                    this.props.dataEcoScore?.agribalyse?.co2_total,\n                this.props.dataEcoScore?.agribalyse?.co2_transportation,\n                \"Transport\"\n            );\n        }\n\n        if (this.props.dataEcoScore?.agribalyse?.co2_consumption) {\n            html_consommation = this.displayCO2Repartition(\n                this.props.dataEcoScore?.agribalyse?.co2_consumption /\n                    this.props.dataEcoScore?.agribalyse?.co2_total,\n                this.props.dataEcoScore?.agribalyse?.co2_consumption,\n                \"Consommation\"\n            );\n        }\n\n        if (this.props.dataEcoScore?.agribalyse?.co2_distribution) {\n            html_distribution = this.displayCO2Repartition(\n                this.props.dataEcoScore?.agribalyse?.co2_distribution /\n                    this.props.dataEcoScore?.agribalyse?.co2_total,\n                this.props.dataEcoScore?.agribalyse?.co2_distribution,\n                \"Distribution\"\n            );\n        }\n\n        if (this.props.dataEcoScore?.agribalyse?.co2_packaging) {\n            html_packaging = this.displayCO2Repartition(\n                this.props.dataEcoScore?.agribalyse?.co2_packaging /\n                    this.props.dataEcoScore?.agribalyse?.co2_total,\n                this.props.dataEcoScore?.agribalyse?.co2_packaging,\n                \"Emballage\"\n            );\n        }\n\n        if (this.props.dataEcoScore?.agribalyse?.co2_processing) {\n            html_processing = this.displayCO2Repartition(\n                this.props.dataEcoScore?.agribalyse?.co2_processing /\n                    this.props.dataEcoScore?.agribalyse?.co2_total,\n                this.props.dataEcoScore?.agribalyse?.co2_processing,\n                \"Transformation\"\n            );\n        }\n\n        if (this.props.dataEcoScore?.agribalyse?.co2_total) {\n            html_total = (\n                <span className=\"product-CO2-total\">\n                    Impact carbone générique :&nbsp;\n                    <span className=\"carbon-total-number\">\n                        {parseFloat(this.props.dataEcoScore?.agribalyse?.co2_total).toFixed(3)}\n                    </span>\n                    kg C02 eq/kg produit\n                </span>\n            );\n        }\n\n        let res = (\n            <React.Fragment>\n                {html_total}\n                {html_agriculture}\n                {html_transport}\n                {html_consommation}\n                {html_distribution}\n                {html_packaging}\n                {html_processing}\n            </React.Fragment>\n        );\n\n        return res;\n    };\n\n    handleShowTransport = () => {\n        this.setState({ showTransport: !this.state.showTransport });\n    };\n\n    displayTransportImpact = () => {\n        let res = <React.Fragment></React.Fragment>;\n\n        var agribalyse_CO2 = undefined;\n        var transportation_score = undefined;\n        var transport_final_indicator = undefined;\n        var n = 0;\n\n        if (this.props.dataEcoScore?.agribalyse?.co2_transportation) {\n            agribalyse_CO2 = 0.5 * this.props.dataEcoScore?.agribalyse?.co2_transportation;\n            n += 1;\n        }\n\n        if (this.props.dataEcoScore?.adjustments?.origins_of_ingredients?.value_fr) {\n            transportation_score =\n                0.5 +\n                this.props.dataEcoScore?.adjustments?.origins_of_ingredients?.value_fr *\n                    (-1.0 / 40.0);\n            n += 1;\n        }\n        if (n > 0) {\n            if (!agribalyse_CO2) {\n                agribalyse_CO2 = 0;\n            }\n            if (!transportation_score) {\n                transportation_score = 0;\n            }\n            transport_final_indicator = (agribalyse_CO2 + transportation_score) / n;\n            if (transport_final_indicator > 1) {\n                transport_final_indicator = 1;\n            }\n            if (transport_final_indicator < 0) {\n                transport_final_indicator = 0;\n            }\n        }\n\n        let co2_impact_html = <React.Fragment></React.Fragment>;\n        let transportation_score_html = <React.Fragment></React.Fragment>;\n\n        if (agribalyse_CO2 > 0) {\n            co2_impact_html = (\n                <div className=\"product-transport-impact-content-details-text\">\n                    {parseFloat(this.props.dataEcoScore?.agribalyse?.co2_transportation).toFixed(3)}\n                    kg C02 eq/kg produit\n                </div>\n            );\n        }\n\n        if (transportation_score > 0) {\n            transportation_score_html = (\n                <div className=\"product-transport-impact-content-details-score\">\n                    Score environnemental du transport vers la France :\n                    <span\n                        style={{\n                            color: this.getColorImpact(100 - transportation_score * 100),\n                        }}\n                    >\n                        {Math.round(99 - transportation_score * 100)}\n                    </span>\n                    /100\n                </div>\n            );\n        }\n\n        if (!this.props.displayTranportImpact && transport_final_indicator) {\n            transport_final_indicator = Math.round(transport_final_indicator * 100);\n            return (\n                <div\n                    className=\"product-transport-impact-container\"\n                    onClick={this.handleShowTransport}\n                >\n                    <div className=\"product-transport-impact-header\">\n                        <div className=\"product-transport-impact-logo\">\n                            <div className=\"material-icons icon-label-transport-impact\">\n                                {this.getMaterialIcon(\"Truck\")}\n                            </div>\n                        </div>\n                        <div className=\"product-transport-impact-title\">\n                            <div className=\"product-transport-impact-title-text\">\n                                Impact du transport\n                            </div>\n                            <div className=\"product-transport-impact-title-label\">\n                                {this.getLabelImpact(transport_final_indicator)}\n                            </div>\n                        </div>\n                        <div\n                            className=\"product-transport-impact-color-label\"\n                            style={{\n                                color: this.getColorImpact(100 - transport_final_indicator),\n                            }}\n                        >\n                            ●\n                        </div>\n                    </div>\n                    <div className=\"arrow-container\">\n                        <div className=\"material-icons icon-label-arrow\">\n                            {this.getMaterialIcon(\"Arrow\")}\n                        </div>\n                    </div>\n\n                    <div\n                        className={\n                            this.state.showTransport ? \"animation-appear\" : \"animation-disappear\"\n                        }\n                    >\n                        <div className=\"product-transport-impact-content\">\n                            <div className=\"product-transport-impact-content-text\">\n                                Score total :\n                            </div>\n                            <div className=\"product-transport-impact-content-progress\">\n                                <CircleProgress\n                                    percentage={100 - transport_final_indicator}\n                                    strokeWidth={window.innerWidth * (1.0 / 50.0)}\n                                    width={window.innerWidth * (1.0 / 4.0)}\n                                    fontSize={0}\n                                    primaryColor={[\"#33FF63\", \"#FF3333\"]}\n                                />\n                                <span className=\"impact-percentage-progressBar\">\n                                    {100 - transport_final_indicator}/100\n                                </span>\n                            </div>\n                        </div>\n                        <div className=\"product-transport-impact-content-details\">\n                            {co2_impact_html}\n                            {transportation_score_html}\n                        </div>\n                    </div>\n                </div>\n            );\n        }\n\n        return res;\n    };\n\n    displayPackagingDetailImpact = () => {\n        let res = <React.Fragment></React.Fragment>;\n\n        if (this.props.dataEcoScore?.adjustments?.packaging?.packagings) {\n            var materials = [];\n            let slides = <React.Fragment></React.Fragment>;\n\n            this.props.dataEcoScore?.adjustments?.packaging?.packagings.map((data) => {\n                if (data?.material.split(\":\")[1] != \"unknown\") {\n                    materials.push(data?.material.split(\":\")[1]);\n                }\n            });\n\n            slides = materials\n                .filter(function (item, pos) {\n                    return materials.indexOf(item) == pos;\n                })\n                .map((data) => {\n                    var separator = \"\";\n                    if (materials.indexOf(data) < materials.length - 1) {\n                        separator = \" ; \";\n                    }\n                    return (\n                        <React.Fragment>\n                            <span>\n                                {data} {separator}\n                            </span>\n                        </React.Fragment>\n                    );\n                });\n\n            if (materials.length > 0) {\n                res = (\n                    <React.Fragment>\n                        <div className=\"product-co2-impact-content\">\n                            <div className=\"product-packaging-impact-content-details-text\">\n                                Matériaux utilisés : &nbsp;{slides}\n                            </div>\n                        </div>\n                    </React.Fragment>\n                );\n            } else {\n                res = (\n                    <React.Fragment>\n                        <div className=\"product-co2-impact-content\">\n                            <div className=\"product-packaging-impact-content-details-text\">\n                                Matériaux utilisés : &nbsp; Inconnu\n                            </div>\n                        </div>\n                    </React.Fragment>\n                );\n            }\n        }\n\n        return res;\n    };\n\n    displayPackagingImpact = () => {\n        let res = <React.Fragment></React.Fragment>;\n\n        if (this.props.dataEcoScore?.adjustments?.packaging?.value) {\n            return (\n                <div className=\"product-co2-impact-container\">\n                    <div className=\"product-co2-impact-header\">\n                        <div className=\"product-co2-impact-logo\">\n                            <div className=\"material-icons icon-label-co2-impact\">\n                                {this.getMaterialIcon(\"\")}\n                            </div>\n                        </div>\n                        <div className=\"product-co2-impact-title\">\n                            <div className=\"product-co2-impact-title-text\">\n                                Impact de l'emballage\n                            </div>\n                            <div className=\"product-co2-impact-title-label\">\n                                {this.getLabelImpactPackaging(\n                                    this.props.dataEcoScore?.adjustments?.packaging?.value\n                                )}\n                            </div>\n                        </div>\n                        <div\n                            className=\"product-transport-impact-color-label\"\n                            style={{\n                                color: this.getColorImpactPackaging(\n                                    this.props.dataEcoScore?.adjustments?.packaging?.value\n                                ),\n                            }}\n                        >\n                            ●\n                        </div>\n                    </div>\n                    {this.displayPackagingDetailImpact()}\n                </div>\n            );\n        } else {\n            return res;\n        }\n    };\n\n    render = () => {\n        if (this.props.barcode) {\n            return (\n                <React.Fragment>\n                    <EmpreinteCarbone dataEcoScore={this.props.dataEcoScore} />\n                    {/* {this.displayTransportImpact()} */}\n                    {this.props.origins ? (\n                        <Origins origins={this.props.origins} />\n                    ) : (\n                        <React.Fragment />\n                    )}\n                    {this.displayPackagingImpact()}\n                    {/* {this.displayRepartitionAllItems()} */}\n\n                    <Alternatives\n                        barcode={this.props.barcode}\n                        alternatives={this.props.alternatives}\n                        ecoScore={this.props.ecoScore}\n                    />\n                </React.Fragment>\n            );\n        } else {\n            return <React.Fragment></React.Fragment>;\n        }\n    };\n}\n\nexport default Environnement;\n","import React from \"react\";\nimport Navbar from \"../components/Navbar/Navbar\";\nimport Traceability from \"../components/Traceability/Traceability\";\nimport Environnement from \"../components/Environnement/Environnement\";\nimport Labels from \"../components/Labels/Labels\";\nimport \"./Product.css\";\nimport { Link } from \"react-router-dom\";\nimport jwt from \"jsonwebtoken\";\n\nclass Product extends React.Component {\n    state = {\n        barcode: this.props.match.params.barcode,\n        bcProductId: this.props.match.params.bcProductId,\n        product: undefined,\n        productImageUrl: undefined,\n        productName: undefined,\n        genericName: undefined,\n        ecoScore: undefined,\n        dataEcoScore: undefined,\n        value: 0,\n        connected: false,\n        productData: undefined,\n        userId: undefined,\n        cart: 0,\n        totalCO2Traceability: undefined,\n        alternatives: undefined,\n        countries: [],\n    };\n\n    isFlipping = false;\n\n    //for scrolling\n    getBottomRef = (component) => {\n        this.bottomComponent = component;\n    };\n\n    componentDidMount = () => {\n        this.Verify();\n        let userId = localStorage.getItem(\"userId\");\n        if (userId) {\n            this.setState({ userId: userId });\n            this.loadHistory(userId);\n        }\n        this.loadFromOpenFoodFacts(this.props.match.params.barcode);\n        if (this.props.match.params.bcProductId) {\n            this.loadProductInformations(\n                this.props.match.params.barcode,\n                this.props.match.params.bcProductId\n            );\n        }\n    };\n\n    handleBarCodeUpdate = () => {\n        if (this.state.barcode !== this.props.match.params.barcode) {\n            this.setState({\n                barcode: this.props.match.params.barcode,\n                bcProductId: this.props.match.params.bcProductId,\n            });\n            this.loadFromOpenFoodFacts(this.props.match.params.barcode);\n            if (this.props.match.params.bcProductId) {\n                this.loadProductInformations(\n                    this.props.match.params.barcode,\n                    this.props.match.params.bcProductId\n                );\n            }\n        }\n    };\n\n    Verify = () => {\n        let isExpired = true;\n        const token = localStorage.getItem(\"token\");\n        if (token) {\n            var decodedToken = jwt.decode(token, { complete: true });\n            var dateNow = new Date();\n            if (decodedToken.payload.exp >= dateNow.getTime() / 1000) {\n                isExpired = false;\n            }\n        }\n        if (isExpired === false) {\n            this.setState({ connected: true });\n        }\n    };\n\n    loadProductInformations = (barcode, bcProductId) => {\n        fetch(\n            `https://api.lowympact.fr/api/v1/products/${barcode}?bcProductId=${bcProductId}`,\n            // `http://localhost:8080/api/v1/products/${barcode}?bcProductId=${bcProductId}`,\n            {\n                method: \"get\",\n                credentials: \"include\",\n                headers: new Headers({\n                    \"api-key\": \"99d8fb95-abdd-4885-bf6c-3a81d8874043\",\n                    \"Content-Type\": \"application/json\",\n                }),\n            }\n        )\n            .then((response) => response.json())\n            .then((res) => {\n                this.setState({\n                    products: res?.data?.traceability,\n                    impact: res?.data?.impact,\n                    totalCO2Traceability: res?.data?.transportCO2Impact,\n                });\n            });\n    };\n\n    loadAlternatives = (code, score) => {\n        this.setState({ alternatives: \"loading\" });\n        fetch(`https://api.lowympact.fr/api/v1/alternatives/${code}`)\n            .then((response) => response.json())\n            .then((res) => {\n                if (res.success && res.data?.alternativesInfos) {\n                    if (\n                        res.data?.alternativesInfos?.a?.length == 0 &&\n                        res.data?.alternativesInfos?.b?.length == 0 &&\n                        res.data?.alternativesInfos?.c?.length == 0 &&\n                        res.data?.alternativesInfos?.d?.length == 0\n                    ) {\n                        this.setState({ alternatives: \"\" });\n                    } else {\n                        this.setState({ alternatives: res.data.alternativesInfos });\n                    }\n                } else {\n                    this.setState({ alternatives: \"\" });\n                }\n            });\n    };\n\n    loadFromOpenFoodFacts = (barcode) => {\n        let dataEcoScore;\n\n        fetch(`https://world.openfoodfacts.org/api/v0/product/${barcode}.json/`)\n            .then((response) => response.json())\n            .then((res) => {\n                let productImageUrl = res?.product?.image_url;\n                let productName = res?.product?.product_name;\n                let genericName = res?.product?.generic_name;\n                let ecoScore = res?.product?.ecoscore_grade;\n\n                dataEcoScore = res?.product?.ecoscore_data;\n\n                console.log(res);\n                let origins = res?.product?.origins_hierarchy;\n                if (origins && origins != \"\") {\n                    this.setState({ origins: origins });\n                }\n\n                if (res?.product) {\n                    this.setState({ productData: res.product });\n                }\n\n                if (productImageUrl) {\n                    this.setState({ productImageUrl: productImageUrl });\n                }\n                if (productName) {\n                    this.setState({ productName: productName });\n                }\n                if (genericName) {\n                    this.setState({ genericName: genericName });\n                }\n                if (\n                    ecoScore &&\n                    (ecoScore === \"a\" ||\n                        ecoScore === \"b\" ||\n                        ecoScore === \"c\" ||\n                        ecoScore === \"d\" ||\n                        ecoScore === \"e\")\n                ) {\n                    this.setState({ ecoScore: ecoScore });\n                }\n                if (dataEcoScore) {\n                    this.setState({ dataEcoScore: dataEcoScore });\n                }\n                if (res.status === 1) {\n                    this.saveHistory();\n                }\n\n                // Mock Soutenance\n                if (barcode === \"80135463\") {\n                    this.setState({ productName: \"Nutella 200g\" });\n                }\n\n                var scoreSearch = \"a\";\n\n                switch (res.product?.ecoscore_grade) {\n                    case \"b\":\n                        scoreSearch = \"a\";\n                        break;\n                    case \"c\":\n                        scoreSearch = \"b\";\n                        break;\n                    case \"d\":\n                        scoreSearch = \"c\";\n                        break;\n                    case \"e\":\n                        scoreSearch = \"c\";\n                        break;\n\n                    default:\n                        break;\n                }\n\n                if (res.product?.ecoscore_grade != \"a\") {\n                    this.loadAlternatives(\n                        res.product.categories_properties[\"ciqual_food_code:en\"],\n                        scoreSearch\n                    );\n                } else {\n                    this.setState({ alternatives: \"\" });\n                }\n            });\n    };\n\n    loadHistory = (userId) => {\n        if (userId && this.state.barcode && this.state.bcProductId) {\n            fetch(\n                `https://api.lowympact.fr/api/v1/users/${userId}/cart/${this.state.barcode}?bcProductAddress=${this.state.bcProductId}`,\n                // `http://localhost:8080/api/v1/users/${this.state.userId}/history`,\n                {\n                    method: \"get\",\n                    credentials: \"include\",\n                    headers: new Headers({\n                        Authorization: localStorage.getItem(\"token\"),\n                        \"api-key\": \"99d8fb95-abdd-4885-bf6c-3a81d8874043\",\n                        \"Content-Type\": \"application/json\",\n                    }),\n                }\n            )\n                .then((response) => response.json())\n                .then((res) => {\n                    if (res.success) {\n                        this.setState({ cart: res.data?.quantity });\n                    }\n                });\n        }\n    };\n\n    saveHistory = async () => {\n        await delay(2000);\n\n        if (!this.state.connected) {\n            let history = JSON.parse(localStorage.getItem(\"local_history\"));\n            let exist = null;\n            if (history) {\n                exist = history?.find(\n                    (element) =>\n                        element.barcode === this.state.barcode &&\n                        element.bcProductId == this.state.bcProductId\n                );\n            } else {\n                history = [];\n            }\n\n            if (!exist || exist?.length === 0) {\n                history.push({\n                    barcode: this.state.barcode,\n                    bcProductId: this.state.bcProductId,\n                    brand: this.state.productData.brands,\n                    image: this.state.productImageUrl,\n                    label: this.state.ecoScore,\n                    name: this.state.productName,\n                });\n                localStorage.setItem(\"local_history\", JSON.stringify(history));\n            }\n        } else if (this.state.userId) {\n            fetch(\n                `https://api.lowympact.fr/api/v1/users/${this.state.userId}/history`,\n                // `http://localhost:8080/api/v1/users/${this.state.userId}/history`,\n                {\n                    method: \"put\",\n                    credentials: \"include\",\n                    headers: new Headers({\n                        Authorization: localStorage.getItem(\"token\"),\n                        \"api-key\": \"99d8fb95-abdd-4885-bf6c-3a81d8874043\",\n                        \"Content-Type\": \"application/json\",\n                    }),\n                    body: JSON.stringify({\n                        barcode: this.state.barcode,\n                        bcProductAddress: this.state.bcProductId,\n                    }),\n                }\n            )\n                .then((response) => response.json())\n                .then((res) => {\n                    console.log(res);\n                });\n        }\n    };\n\n    addToCart = () => {\n        if (this.state.barcode && this.state.cart >= 0) {\n            let co2 = -1;\n            if (this.state.dataEcoScore?.agribalyse?.co2_total) {\n                co2 = parseFloat(this.state.dataEcoScore?.agribalyse?.co2_total);\n            }\n\n            let ecoscore = \"unkown\";\n            if (this.state.ecoScore) {\n                ecoscore = this.state.ecoScore;\n            }\n            this.flip();\n            fetch(\n                `https://api.lowympact.fr/api/v1/users/${this.state.userId}/cart`,\n                // `http://localhost:8080/api/v1/users/${this.state.userId}/cart`,\n                {\n                    method: \"put\",\n                    credentials: \"include\",\n                    headers: new Headers({\n                        Authorization: localStorage.getItem(\"token\"),\n                        \"api-key\": \"99d8fb95-abdd-4885-bf6c-3a81d8874043\",\n                        \"Content-Type\": \"application/json\",\n                    }),\n                    body: JSON.stringify({\n                        barcode: this.state.barcode,\n                        bcProductAddress: this.state.bcProductId,\n                        quantityDelta: 1,\n                        ecoscore: ecoscore,\n                        carbonImpact: co2,\n                    }),\n                }\n            )\n                .then((response) => response.json())\n                .then((res) => {\n                    console.log(res);\n                    if (res.success) {\n                        this.setState({ cart: this.state.cart + 1 });\n                    }\n                });\n        }\n    };\n\n    removeFromCart = () => {\n        if (this.state.barcode && this.state.cart > 0) {\n            this.flip();\n            let co2 = -1;\n            if (this.state.dataEcoScore?.agribalyse?.co2_total) {\n                co2 = parseFloat(this.state.dataEcoScore?.agribalyse?.co2_total);\n            }\n            let ecoscore = \"unkown\";\n            if (this.state.ecoScore) {\n                ecoscore = this.state.ecoScore;\n            }\n            fetch(\n                `https://api.lowympact.fr/api/v1/users/${this.state.userId}/cart`,\n                // `http://localhost:8080/api/v1/users/${this.state.userId}/cart`,\n                {\n                    method: \"put\",\n                    credentials: \"include\",\n                    headers: new Headers({\n                        Authorization: localStorage.getItem(\"token\"),\n                        \"api-key\": \"99d8fb95-abdd-4885-bf6c-3a81d8874043\",\n                        \"Content-Type\": \"application/json\",\n                    }),\n                    body: JSON.stringify({\n                        barcode: this.state.barcode,\n                        bcProductAddress: this.state.bcProductId,\n                        quantityDelta: -1,\n                        ecoscore: ecoscore,\n                        carbonImpact: co2,\n                    }),\n                }\n            )\n                .then((response) => response.json())\n                .then((res) => {\n                    console.log(res);\n                    if (res.success) {\n                        this.setState({ cart: this.state.cart - 1 });\n                    }\n                });\n        }\n    };\n\n    flip = async (event) => {\n        // if (!this.isFlipping) {\n        // \tthis.isFlipping = true;\n        // \tawait delay(500);\n        console.log(this.imageFlip.style.transform);\n        if (this.imageFlip && !this.state.isFlipping) {\n            if (this.imageFlip.style.transform === \"rotateY(360deg)\") {\n                this.imageFlip.style.transform = \"rotateY(0deg)\";\n            } else {\n                this.imageFlip.style.transform = \"rotateY(360deg)\";\n            }\n        }\n        // await delay(1000);\n        // this.isFlipping = false;\n        // }\n    };\n\n    displayImage = () => {\n        this.handleBarCodeUpdate();\n\n        let image = <React.Fragment />;\n        let productName = <React.Fragment />;\n        let genericName = <React.Fragment />;\n        let ecoScore = <React.Fragment />;\n        if (this.state.productImageUrl) {\n            image = (\n                <img src={this.state.productImageUrl} className=\"product-image\" alt=\"produit\" />\n            );\n        }\n\n        if (this.state.productName) {\n            productName = <div className=\"product-name\">{this.state.productName}</div>;\n        }\n        if (this.state.ecoScore) {\n            let scoreClass = \"color_score_\" + this.state.ecoScore;\n            ecoScore = (\n                <div className=\"product-ecoscore-image\">\n                    <span className={\"circle-score \" + scoreClass}>⬤ </span>\n                    EcoScore :<span className=\"uppercase \">{\" \" + this.state.ecoScore}</span>\n                </div>\n            );\n        } else if (this.state.genericName) {\n            genericName = <div className=\"product-generic-name\">{this.state.genericName}</div>;\n        }\n        return (\n            <React.Fragment>\n                {this.state.userId ? (\n                    <div\n                        className={this.state.cart > 0 ? \"add-to-cart green\" : \"add-to-cart\"}\n                        onClick={this.addToCart}\n                    >\n                        <span className=\"cart-count\">\n                            {this.state.cart > 0 ? this.state.cart : \"\"}\n                        </span>\n                        <span class=\"material-icons\">add_shopping_cart</span>\n                    </div>\n                ) : (\n                    <React.Fragment />\n                )}\n                {this.state.cart > 0 ? (\n                    <div className=\"remove-from-cart\" onClick={this.removeFromCart}>\n                        <span class=\"material-icons\">remove_shopping_cart</span>\n                    </div>\n                ) : (\n                    <React.Fragment />\n                )}\n                {image}\n                {productName}\n                <div className=\"product-bottom-image-div\">\n                    {genericName}\n                    {ecoScore}\n                </div>\n            </React.Fragment>\n        );\n    };\n\n    handleChange = (event, newValue) => {\n        this.setState({ value: newValue });\n        if (newValue === 1) {\n            let elem = document.getElementsByClassName(\"swiper-container\");\n            if (elem[0]) {\n                elem[0].scrollIntoView({ behavior: \"smooth\" });\n            }\n        }\n    };\n\n    displayNavbar = () => {\n        let retour = <React.Fragment />;\n        if (this.state.bcProductId) {\n            retour = (\n                <div className=\"product-navbar-container\">\n                    <button\n                        className={\n                            this.state.value === 0\n                                ? \"product-navbar-button selected\"\n                                : \"product-navbar-button\"\n                        }\n                        onClick={() => this.handleChange(\"\", 0)}\n                    >\n                        Environnement\n                    </button>\n                    <button\n                        className={\n                            this.state.value === 1\n                                ? \"product-navbar-button selected\"\n                                : \"product-navbar-button\"\n                        }\n                        onClick={() => this.handleChange(\"\", 1)}\n                    >\n                        Traçabilité\n                    </button>\n                    <div\n                        className={\n                            this.state.value === 0\n                                ? \"navbar-under nav-left\"\n                                : \"navbar-under nav-right\"\n                        }\n                    ></div>\n                </div>\n            );\n        }\n        return retour;\n    };\n\n    render = () => {\n        //tri des produits\n        let products = this.state.products?.sort((a, b) => {\n            if (a.depth > b.depth) return -1;\n            else return 1;\n        });\n        return (\n            <React.Fragment>\n                <div className=\"product-page-container\">\n                    <div className=\"product-header-container\">\n                        <div className=\"product-history-link\">\n                            <Link to=\"/history\"> {\"<\"} Historique</Link>\n                        </div>\n                        <img\n                            className=\"product-bitmap-image\"\n                            src=\"/images/utils/bitmap.png\"\n                            alt=\"\"\n                        />\n                    </div>\n                    <div\n                        className=\"product-image-container\"\n                        // onClick={this.flip}\n                        ref={(ref) => (this.imageFlip = ref)}\n                    >\n                        {this.displayImage()}\n                    </div>\n\n                    {this.displayNavbar()}\n\n                    {/* <AppBar position=\"static\">\n\t\t\t\t\t\t<Tabs\n\t\t\t\t\t\t\tvalue={this.state.value}\n\t\t\t\t\t\t\tonChange={this.handleChange}\n\t\t\t\t\t\t\taria-label=\"simple tabs example\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<Tab label=\"Traçabilité\" />\n\t\t\t\t\t\t\t<Tab label=\"Environnement\" />\n\t\t\t\t\t\t</Tabs>\n\t\t\t\t\t</AppBar>\n\t\t\t\t\t<TabPanel value={this.state.value} index={0}></TabPanel>\n\t\t\t\t\t<TabPanel value={this.state.value} index={1}>\n\t\t\t\t</TabPanel> */}\n                    {this.state.value === 0 ? (\n                        <Environnement\n                            dataEcoScore={this.state.dataEcoScore}\n                            ecoScore={this.state.ecoScore}\n                            origins={this.state.origins}\n                            displayTranportImpact={\n                                this.props.match.params.bcProductId !== null &&\n                                this.props.match.params.bcProductId !== undefined\n                            }\n                            barcode={this.props.match.params.barcode}\n                            alternatives={this.state.alternatives}\n                        ></Environnement>\n                    ) : (\n                        <div className=\"product-bottom-container\">\n                            <Traceability\n                                products={products}\n                                getBottomRef={this.getBottomRef}\n                                totalCO2Traceability={this.state.totalCO2Traceability}\n                            />\n                        </div>\n                    )}\n                    <Navbar\n                        barcode={this.props.match.params.barcode}\n                        bcProductId={this.props.match.params.bcProductId}\n                    />\n                </div>\n            </React.Fragment>\n        );\n    };\n}\n\nexport default Product;\n\nconst delay = (ms) => new Promise((res) => setTimeout(res, ms));\n","import React from \"react\";\nimport { Swiper, SwiperSlide } from \"swiper/react\";\n// Import Swiper styles\nimport \"swiper/swiper-bundle.css\";\nimport \"./Labels.css\";\n\nclass Labels extends React.Component {\n\tdisplaySpecies = () => {\n\t\tif (\n\t\t\tthis.props.dataEcoScore?.adjustments?.threatened_species?.length ===\n\t\t\t0\n\t\t) {\n\t\t\treturn <div></div>;\n\t\t} else {\n\t\t\tif (\n\t\t\t\tthis.props.dataEcoScore?.adjustments?.threatened_species\n\t\t\t\t\t?.value < 0\n\t\t\t) {\n\t\t\t\treturn (\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<div className=\"labels-container-bad\">\n\t\t\t\t\t\t\t<span class=\"material-icons\">warning_amber</span>\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tthis.props.dataEcoScore?.adjustments\n\t\t\t\t\t\t\t\t\t?.threatened_species?.ingredient\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\treturn (\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<div className=\"labels-container-good\">\n\t\t\t\t\t\t\t<span class=\"material-icons\">task_alt</span>\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tthis.props.dataEcoScore?.adjustments\n\t\t\t\t\t\t\t\t\t?.threatened_species?.ingredient\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t};\n\n\tdisplaySpecies = () => {\n\t\tif (\n\t\t\t!this.props.dataEcoScore?.adjustments?.threatened_species\n\t\t\t\t?.ingredient\n\t\t) {\n\t\t\treturn <div></div>;\n\t\t} else {\n\t\t\tif (\n\t\t\t\tthis.props.dataEcoScore?.adjustments?.threatened_species\n\t\t\t\t\t?.value < 0\n\t\t\t) {\n\t\t\t\treturn (\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<div className=\"labels-container-bad\">\n\t\t\t\t\t\t\t<span class=\"material-icons\">warning_amber</span>\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tthis.props.dataEcoScore?.adjustments\n\t\t\t\t\t\t\t\t\t?.threatened_species?.ingredient\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\treturn (\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<div className=\"labels-container-good\">\n\t\t\t\t\t\t\t<span class=\"material-icons\">task_alt</span>\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tthis.props.dataEcoScore?.adjustments\n\t\t\t\t\t\t\t\t\t?.threatened_species?.ingredient\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t};\n\n\tdisplayProduction = () => {\n\t\tif (!this.props.dataEcoScore?.adjustments?.production_system?.label) {\n\t\t\treturn <div></div>;\n\t\t} else {\n\t\t\tif (\n\t\t\t\tthis.props.dataEcoScore?.adjustments?.production_system?.value <\n\t\t\t\t0\n\t\t\t) {\n\t\t\t\treturn (\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<div className=\"labels-container-bad\">\n\t\t\t\t\t\t\t<span class=\"material-icons\">warning_amber</span>\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tthis.props.dataEcoScore?.adjustments\n\t\t\t\t\t\t\t\t\t?.production_system?.label\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\treturn (\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<div className=\"labels-container-good\">\n\t\t\t\t\t\t\t<span class=\"material-icons\">task_alt</span>\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tthis.props.dataEcoScore?.adjustments\n\t\t\t\t\t\t\t\t\t?.production_system?.label\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t};\n\n\trender() {\n\t\tif (\n\t\t\tthis.props.dataEcoScore?.adjustments?.threatened_species?.length !=\n\t\t\t\t0 &&\n\t\t\tthis.props.dataEcoScore?.adjustments?.production_system?.label\n\t\t) {\n\t\t\treturn (\n\t\t\t\t<div>\n\t\t\t\t\t<h1>Labels</h1>\n\n\t\t\t\t\t<div className=\"labels-container\">\n\t\t\t\t\t\t{this.displaySpecies()}\n\t\t\t\t\t\t{this.displayProduction()}\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t);\n\t\t} else {\n\t\t\treturn <React.Fragment />;\n\t\t}\n\t}\n}\n\nexport default Labels;\n","import React from \"react\";\nimport Navbar from \"../components/Navbar/Navbar\";\nimport Header from \"../components/Header/Header\";\nimport \"./Profil.css\";\nimport { Link } from \"react-router-dom\";\nimport jwt from \"jsonwebtoken\";\nimport { motion } from \"framer-motion\";\n\nclass Profil extends React.Component {\n    state = {\n        connected: false,\n    };\n\n    disconnect = () => {\n        localStorage.clear();\n        this.props.history.push(\"/login\");\n    };\n\n    componentDidMount = () => {\n        this.Verify();\n    };\n\n    Verify = () => {\n        let isExpired = true;\n        const token = localStorage.getItem(\"token\");\n        if (token) {\n            var decodedToken = jwt.decode(token, { complete: true });\n            var dateNow = new Date();\n            if (decodedToken.payload.exp >= dateNow.getTime() / 1000) {\n                isExpired = false;\n            }\n        }\n        if (isExpired === false) {\n            this.setState({ connected: true }); // redirection vers la page login\n        }\n    };\n\n    displayConnectedProfil = () => {\n        return (\n            <React.Fragment>\n                <h2 className=\"profil-title\">Bienvenue sur ton profil!</h2>\n                <Link to=\"/stats\" className=\"profil-button\">\n                    Statistiques\n                </Link>\n                <Link to=\"/configuration\" className=\"profil-button\">\n                    Configuration\n                </Link>\n                <div onClick={this.disconnect} className=\"profil-button\">\n                    Déconnecter\n                </div>\n            </React.Fragment>\n        );\n    };\n\n    displayUnconnectedProfil = () => {\n        return (\n            <React.Fragment>\n                <h2 className=\"profil-title\">Non connecté</h2>\n                <p>Connecte toi pour que ton historique soit sauvegardé !</p>\n                <Link to=\"/login\" className=\"profil-button\">\n                    Me Connecter\n                </Link>\n            </React.Fragment>\n        );\n    };\n\n    render() {\n        return (\n            <div>\n                <Link to=\"/\">\n                    <Header />\n                </Link>\n                <motion.div\n                    initial={{ opacity: 0 }}\n                    animate={{ opacity: 1 }}\n                    exit={{ opacity: 0 }}\n                    className=\"profil-screen\"\n                >\n                    <div className=\"profil-picture\">\n                        <div class=\"material-icons\">person</div>\n                    </div>\n                    {this.state.connected\n                        ? this.displayConnectedProfil()\n                        : this.displayUnconnectedProfil()}\n                </motion.div>\n                <Navbar />\n            </div>\n        );\n    }\n}\n\nexport default Profil;\n","import React from \"react\";\n\nfunction ButtonSignup() {\n  return (\n  <div>\n    Créer mon compte\n  </div>\n  );\n}\n\nexport default ButtonSignup;","import React, { Component } from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport ButtonSignup from \"../components/Button/ButtonSignup\";\nimport fruits from \"../assets/images/fruits-vegetables-basket-by-oblik-studio.svg\";\nimport Header from \"../components/Header/Header\";\nimport \"./Login.css\";\nimport { Link } from \"react-router-dom\";\n\nexport const validEmail = new RegExp(\"^[a-zA-Z0-9._:$!%-]+@[a-zA-Z0-9.-]+.[a-zA-Z]$\");\n\nclass Signup extends Component {\n    state = {\n        userName: \"\",\n        email: \"\",\n        password: \"\",\n        confirmPassword: \"\",\n        errors: [],\n        redirect: false,\n        submit: false,\n    };\n\n    validate() {\n        var errors = [];\n        if (this.state.userName.length === 0) {\n            errors.push(\"Saissez votre nom\");\n        }\n        if (this.state.email.length === 0) {\n            errors.push(\"Saissez votre adresse e-mail\");\n        }\n        if (validEmail.test(this.state.email) === false) {\n            errors.push(\"Saissez une adresse e-mail valide\");\n        }\n        if (this.state.password.length < 6) {\n            errors.push(\"Entre un mot de passe. 6 caràcteres minimum requis\");\n        }\n        if (this.state.password !== this.state.confirmPassword) {\n            errors.push(\"Les mots de passe ne correspondent pas\");\n        }\n        this.setState({ errors: errors });\n        return errors;\n    }\n\n    signUser = async () => {\n        let errors = await fetch(`https://api.lowympact.fr/api/v1/users/`, {\n            method: \"post\",\n            credentials: \"include\",\n            headers: new Headers({\n                \"api-key\": \"99d8fb95-abdd-4885-bf6c-3a81d8874043\",\n                \"Content-Type\": \"application/json\",\n            }),\n            body: JSON.stringify({\n                username: this.state.userName,\n                email: this.state.email,\n                password: this.state.password,\n            }),\n        })\n            .then((response) => response.json())\n            .then((res) => {\n                console.log(res);\n                let errors = [];\n\n                if (!res.success) {\n                    errors.push(\"Il y a déjà un compte avec ce mail ou une erreur réseau.\");\n                } else {\n                    localStorage.setItem(\"token\", res.token);\n                    localStorage.setItem(\"userId\", res._id);\n                    this.props.history.push(\"/history\");\n                }\n                this.setState({ errors: errors });\n                return errors;\n            });\n        return errors;\n    };\n\n    handleSubmit = async (e) => {\n        e.preventDefault();\n        let errors = this.validate();\n        //console.log(\"errors: \" + errors);\n        if (errors.length === 0) {\n            errors = await this.signUser();\n        }\n        if (errors.length === 0) {\n            this.setState({ redirect: true });\n        }\n    };\n\n    displayErrors = () => {\n        let errors = <React.Fragment></React.Fragment>;\n        errors = this.state.errors.map((error) => {\n            return <p>{error}</p>;\n        });\n        return errors;\n    };\n\n    render() {\n        if (this.state.redirect) {\n            return <Redirect to=\"/history\" />;\n        }\n        //console.log(\"render\");\n        return (\n            <React.Fragment>\n                <Link to=\"/login\">\n                    <Header />\n                </Link>\n                <div className=\"logo-fruits\">\n                    <img src={fruits} className=\"logo\" alt=\"Fruits\" />\n                </div>\n                <Link className=\"back-button\" to=\"/login\">\n                    {\"< Retour\"}\n                </Link>\n                <div className=\"signup-container\">\n                    <form className=\"forms\">\n                        <label>\n                            nom\n                            <input\n                                className=\"input-forms\"\n                                value={this.state.userName}\n                                onChange={(evt) =>\n                                    this.setState({\n                                        userName: evt.target.value,\n                                    })\n                                }\n                                type=\"text\"\n                            />\n                        </label>\n                        <label>\n                            email\n                            <input\n                                className=\"input-forms\"\n                                value={this.state.email}\n                                onChange={(evt) => this.setState({ email: evt.target.value })}\n                                type=\"email\"\n                            />\n                        </label>\n                        <label>\n                            mot de passe\n                            <input\n                                className=\"input-forms\"\n                                value={this.state.password}\n                                onChange={(evt) =>\n                                    this.setState({\n                                        password: evt.target.value,\n                                    })\n                                }\n                                type=\"password\"\n                            />\n                        </label>\n                        <label>\n                            confirmer mot de passe\n                            <input\n                                className=\"input-forms\"\n                                value={this.state.passwordConfirm}\n                                onChange={(evt) =>\n                                    this.setState({\n                                        confirmPassword: evt.target.value,\n                                    })\n                                }\n                                type=\"password\"\n                            />\n                        </label>\n                    </form>\n                    <label className=\"errors-signup\">{this.displayErrors()}</label>\n                    <div className=\"button-signup\" onClick={this.handleSubmit}>\n                        <ButtonSignup />\n                    </div>\n                </div>\n            </React.Fragment>\n        );\n    }\n}\nexport default Signup;\n","import React from \"react\";\n\nfunction ButtonSignin() {\n  return (\n  <div>\n    Me connecter\n  </div>\n  );\n}\n\nexport default ButtonSignin;","import React, { Component } from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport ButtonSignin from \"../components/Button/ButtonSignin\";\nimport fruits from \"../assets/images/fruits-vegetables-basket-by-oblik-studio.svg\";\nimport Header from \"../components/Header/Header\";\nimport blob from \"../assets/images/bitmap.png\";\nimport \"./Login.css\";\nimport { Link } from \"react-router-dom\";\nimport jwt from \"jsonwebtoken\";\n\nfunction validate(email, password) {\n    const errors = [];\n\n    if (email.length === 0) {\n        errors.push(<p>Saissez votre adresse e-mail</p>);\n    }\n    if (password.length === 0) {\n        errors.push(<p>Saissez votre mot de passe</p>);\n    }\n    return errors;\n}\n\nclass Signin extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            email: \"\",\n            password: \"\",\n            errors: [],\n            redirect: false,\n            loginSuccessful: null,\n        };\n    }\n\n    handleSubmit = (e) => {\n        e.preventDefault();\n        const { email, password } = this.state;\n        const errors = validate(email, password);\n        //console.log(email, password, errors);\n        this.setState({ errors });\n        if (errors.length === 0) {\n            this.Connect();\n        }\n    };\n\n    componentDidMount = () => {\n        this.Verify();\n    };\n\n    Verify = () => {\n        let isExpired = true;\n        const token = localStorage.getItem(\"token\");\n        if (token) {\n            var decodedToken = jwt.decode(token, { complete: true });\n            var dateNow = new Date();\n            if (decodedToken.payload.exp >= dateNow.getTime() / 1000) {\n                isExpired = false;\n            }\n        }\n        if (isExpired === false) {\n            this.setState({ redirect: true }); // redirection vers la page login\n        }\n    };\n\n    Connect = () => {\n        fetch(`https://api.lowympact.fr/api/v1/users/login`, {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n                \"api-key\": \"99d8fb95-abdd-4885-bf6c-3a81d8874043\",\n\n                //'x-access-token': localStorage.getItem('token'),\n            },\n            body: JSON.stringify({\n                email: this.state.email,\n                password: this.state.password,\n            }),\n        })\n            .then((response) => response.json())\n            .then((data) => {\n                //console.log(data);\n                if (data.error === \"No user found\") {\n                    this.setState({ loginSuccessful: false });\n                    let err = this.state.errors;\n                    err.push(<p>Utilisateur Inconnu</p>);\n                    this.setState({ errors: err });\n                } else if (data.error === \"Incorrect password\" || !data.success) {\n                    this.setState({ loginSuccessful: false });\n                    let err = this.state.errors;\n                    err.push(<p>Mot de passe Incorrect</p>);\n                    this.setState({ errors: err });\n                } else {\n                    // console.log(data);\n                    localStorage.setItem(\"token\", data.token);\n                    localStorage.setItem(\"userId\", data._id);\n                    this.setState({ loginSuccessful: true, redirect: true });\n                    //this.props.history.goBack();\t// a ajouter pour être redirigé vers la page initialement\n                    // demandée. On doit cependant rediriger si la page demandée\n                    // était la page de login\n                }\n            });\n    };\n\n    onPasswordChange = () => {\n        this.setState({\n            password: this.passwordInput.value,\n            email: this.emailInput.value,\n        });\n    };\n\n    render() {\n        if (this.state.redirect) {\n            return <Redirect to=\"/history\" />;\n        }\n        return (\n            <React.Fragment>\n                <Link to=\"/login\">\n                    <Header />\n                </Link>\n                <div className=\"logo-fruits\">\n                    <img src={fruits} className=\"logo\" alt=\"Fruits\" />\n                </div>\n\n                <Link className=\"back-button\" to=\"/login\">\n                    {\"< Retour\"}\n                </Link>\n                <div className=\"signin-container\">\n                    <form className=\"forms\">\n                        <label>\n                            email\n                            <input\n                                className=\"input-forms\"\n                                value={this.state.email}\n                                onChange={this.onPasswordChange}\n                                ref={(ref) => (this.emailInput = ref)}\n                                type=\"email\"\n                            />\n                        </label>\n                        <label>\n                            mot de passe\n                            <input\n                                className=\"input-forms\"\n                                value={this.state.password}\n                                onChange={this.onPasswordChange}\n                                ref={(ref) => (this.passwordInput = ref)}\n                                type=\"password\"\n                            />\n                        </label>\n                    </form>\n                    <label className=\"errors-signin\">{this.state.errors}</label>\n                    <div className=\"button-signin\" onClick={this.handleSubmit}>\n                        <ButtonSignin />\n                    </div>\n                </div>\n            </React.Fragment>\n        );\n    }\n}\nexport default Signin;\n","import React from \"react\";\n\nfunction ButtonChangePassword() {\n  return (\n  <div>\n    Changer mot de passe\n  </div>\n  );\n}\n\nexport default ButtonChangePassword;","export const USERS =\n    {\n        id: 0,\n        email: \"bububu@bababa.com\",\n        password: \"123456\"\n    };","import React, { Component } from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport ButtonChangePassword from \"../components/Button/ButtonChangePassword\";\nimport fruits from \"../assets/images/fruits-vegetables-basket-by-oblik-studio.svg\";\nimport Header from \"../components/Header/Header\";\nimport Navbar from \"../components/Navbar/Navbar\";\nimport \"./ProfileConfiguration.css\";\nimport { USERS } from \"../assets/users/users\";\nimport jwt from \"jsonwebtoken\";\nimport { Link } from \"react-router-dom\";\n\nfunction validate(newPassword, confirmPassword) {\n    const errors = [];\n    if (newPassword.length < 6) {\n        errors.push(<p>Entre un mot de passe. 6 caractères minimum requis</p>);\n    }\n    if (newPassword !== confirmPassword) {\n        errors.push(<p>Les mots de passe ne correspondent pas</p>);\n    }\n    return errors;\n}\n\nclass ProfileConfiguration extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            user: USERS,\n            currentPassword: \"\",\n            newPassword: \"\",\n            confirmPassword: \"\",\n            errors: [],\n            redirect: false,\n        };\n    }\n\n    handleChange = (e) => {\n        e.preventDefault();\n        const { currentPassword, newPassword, confirmPassword } = this.state;\n        const errors = validate(newPassword, confirmPassword);\n        console.log(this.state.user.email, currentPassword, newPassword, confirmPassword, errors);\n        this.setState({ errors });\n        if (errors.length === 0) {\n            this.changeUserInfo(this.state.user._id, currentPassword, newPassword);\n        }\n    };\n\n    changeUserInfo = (userId, currentPassword, newPassword) => {\n        console.log(\"hey\");\n        fetch(\n            `https://api.lowympact.fr/api/v1/users/${userId}`,\n            // `http://localhost:8080/api/v1/users/login`,\n            {\n                method: \"PUT\",\n                headers: {\n                    \"Content-Type\": \"application/json\",\n                    \"api-key\": \"99d8fb95-abdd-4885-bf6c-3a81d8874043\",\n                    authorization: localStorage.getItem(\"token\"),\n                },\n                body: JSON.stringify({\n                    currentPassword: currentPassword,\n                    newPassword: newPassword,\n                }),\n            }\n        )\n            .then((response) => response.json())\n            .then((res) => {\n                console.log(res);\n                if (res.success === false) {\n                    this.setState({\n                        errors: [...this.state.errors, res.error],\n                    });\n                } else {\n                    this.setState({ redirect: true });\n                }\n            });\n    };\n\n    Verify = () => {\n        let isExpired = true;\n        const token = localStorage.getItem(\"token\");\n        if (token) {\n            var decodedToken = jwt.decode(token, { complete: true });\n            var dateNow = new Date();\n            if (decodedToken.payload.exp >= dateNow.getTime() / 1000) {\n                isExpired = false;\n            }\n        }\n        if (isExpired === true) {\n            this.setState({ redirect: true }); // redirection vers la page login\n        }\n    };\n\n    componentDidMount = () => {\n        this.Verify();\n        let userId = localStorage.getItem(\"userId\");\n        if (userId) {\n            this.loadUserInfo(userId);\n        }\n    };\n\n    loadUserInfo = (userId) => {\n        fetch(\n            `https://api.lowympact.fr/api/v1/users/${userId}`,\n            // `http://localhost:8080/api/v1/users/login`,\n            {\n                method: \"GET\",\n                headers: {\n                    \"Content-Type\": \"application/json\",\n                    \"api-key\": \"99d8fb95-abdd-4885-bf6c-3a81d8874043\",\n                    authorization: localStorage.getItem(\"token\"),\n                },\n            }\n        )\n            .then((response) => response.json())\n            .then((res) => {\n                console.log(res);\n\n                this.setState({ user: res.data });\n            });\n    };\n\n    render() {\n        if (this.state.redirect) {\n            return <Redirect to=\"/profil\" />;\n        }\n        console.log(this.state.redirect);\n        return (\n            <div className=\"screen\">\n                <Link to=\"/\">\n                    <Header />\n                </Link>\n                <Navbar />\n                <div className=\"logo-fruits\">\n                    <img src={fruits} className=\"logo\" alt=\"Fruits\" />\n                </div>\n                <Link className=\"back-button\" to=\"/profil\">\n                    {\"< Retour\"}\n                </Link>\n                <div className=\"configuration-screen-title\"></div>\n                <div className=\"errors-change-password\">{this.state.errors}</div>\n                <div className=\"configuration-container\">\n                    <div className=\"configuration-email-block\">\n                        <div>email</div>\n                        <div>{this.state.user.email}</div>\n                    </div>\n                    <form className=\"configuration-form\">\n                        <label>\n                            {/* Mot de passe actuel */}\n                            <input\n                                placeholder=\"mot de passe actuel\"\n                                className=\"input-forms\"\n                                value={this.state.currentPassword}\n                                onChange={(evt) =>\n                                    this.setState({\n                                        currentPassword: evt.target.value,\n                                    })\n                                }\n                                type=\"password\"\n                            />\n                        </label>\n                        <label>\n                            {/* Nouveau mot de passe */}\n                            <input\n                                value={this.state.newPassword}\n                                className=\"input-forms\"\n                                onChange={(evt) =>\n                                    this.setState({\n                                        newPassword: evt.target.value,\n                                    })\n                                }\n                                type=\"password\"\n                                placeholder=\"nouveau mot de passe\"\n                            />\n                        </label>\n                        <label>\n                            {/* Confirmation de mot de passe */}\n                            <input\n                                placeholder=\"confirmation de mdp\"\n                                className=\"input-forms\"\n                                value={this.state.confirmPassword}\n                                onChange={(evt) =>\n                                    this.setState({\n                                        confirmPassword: evt.target.value,\n                                    })\n                                }\n                                type=\"password\"\n                            />\n                        </label>\n                        <Link className=\"button-change-password\" onClick={this.handleChange} to=\"\">\n                            <ButtonChangePassword />\n                        </Link>\n                    </form>\n                </div>\n            </div>\n        );\n    }\n}\nexport default ProfileConfiguration;\n","import React from \"react\";\nimport { Swiper, SwiperSlide } from \"swiper/react\";\n// Import Swiper styles\nimport \"swiper/swiper-bundle.css\";\n\n//Import Pie Chart\nimport { PieChart } from \"react-minimal-pie-chart\";\n\nimport fruits from \"../../assets/images/fruits-vegetables-basket-by-oblik-studio.svg\";\nimport { motion } from \"framer-motion\";\n\nclass DoughnutChartEcoScore extends React.Component {\n    state = {\n        swiper: undefined,\n        selectedSegment: undefined,\n    };\n\n    displayChart = () => {\n        let chart = <React.Fragment></React.Fragment>;\n        if (this.props.ecoScoreData && this.props.cartedProduct > 0) {\n            let data = [\n                {\n                    title: \"EcoScore A\",\n                    value: this.props.ecoScoreData.a,\n                    color: \"#1e8f4f\",\n                },\n                {\n                    title: \"EcoScore B\",\n                    value: this.props.ecoScoreData.b,\n                    color: \"#5fad0c\",\n                },\n                {\n                    title: \"EcoScore C\",\n                    value: this.props.ecoScoreData.c,\n                    color: \"#ecb10f\",\n                },\n                {\n                    title: \"EcoScore D\",\n                    value: this.props.ecoScoreData.d,\n                    color: \"#ff6f1e\",\n                },\n                {\n                    title: \"EcoScore E\",\n                    value: this.props.ecoScoreData.e,\n                    color: \"#df1e1f\",\n                },\n                {\n                    title: \"EcoScore Inconnu\",\n                    value: this.props.ecoScoreData.unknown,\n                    color: \"#000000\",\n                },\n            ];\n            chart = (\n                <PieChart\n                    data={data}\n                    lineWidth={30}\n                    paddingAngle={1}\n                    radius={PieChart.defaultProps.radius - 3}\n                    animate\n                    animationDuration={700}\n                    label={({ dataEntry }) => `${Math.round(dataEntry.percentage)}%`}\n                    labelStyle={(index) =>\n                        index === this.state.selectedSegment\n                            ? {\n                                  fontSize: \"6px\",\n                                  fontFamily: \"comfortaa\",\n                                  fill: data[index].color,\n                              }\n                            : {\n                                  fontSize: \"0px\",\n                                  fontFamily: \"comfortaa\",\n                                  fill: data[index].color,\n                              }\n                    }\n                    labelPosition={60}\n                    segmentsStyle={{\n                        transition: \"stroke .3s ease-out\",\n                        cursor: \"pointer\",\n                    }}\n                    segmentsShift={(index) => (index === this.state.selectedSegment ? 3 : 0)}\n                    onClick={(event, index) => {\n                        if (index === this.state.selectedSegment) {\n                            this.setState({ selectedSegment: undefined });\n                            this.state.swiper.slideTo(0, 500);\n                        } else {\n                            this.setState({ selectedSegment: index });\n                            this.state.swiper.slideTo(index + 1, 500);\n                        }\n                    }}\n                />\n            );\n        } else {\n            chart = (\n                <motion.div\n                    className=\"stats-no-product\"\n                    initial={{ opacity: 0 }}\n                    animate={{ opacity: 1 }}\n                    exit={{ opacity: 0 }}\n                >\n                    <div>\n                        <img src={fruits} className=\"logo\" alt=\"Fruits\" />\n                        <p className=\"logo-text\">Commence à scanner des produits !</p>\n                    </div>\n                </motion.div>\n            );\n        }\n        return chart;\n    };\n\n    onSlideChange = (index) => {\n        if (index === 0) {\n            this.setState({ selectedSegment: undefined });\n        } else {\n            this.setState({ selectedSegment: index - 1 });\n        }\n    };\n\n    displaySlides = () => {\n        let slides = <React.Fragment></React.Fragment>;\n        if (this.props.ecoScoreData && this.props.cartedProduct > 0) {\n            slides = (\n                <React.Fragment>\n                    <SwiperSlide>\n                        <div className=\"stats-slider\">\n                            <img\n                                className=\"stats-ecoscore-full\"\n                                src=\"/images/utils/ecoScoreFull.png\"\n                                alt=\"\"\n                            />\n                        </div>\n                    </SwiperSlide>\n                    <SwiperSlide>\n                        <div className=\"stats-slider\">\n                            <span className=\"stats-slider-text\">\n                                {\">\"} EcoScore A : {this.props.ecoScoreData.a}{\" \"}\n                                {this.props.ecoScoreData.a > 1 ? \" produits\" : \" produit\"}\n                            </span>\n                            <img\n                                className=\"stats-ecoscore-image\"\n                                src=\"/images/utils/ecoScoreA.png\"\n                                alt=\"\"\n                            />\n                        </div>\n                    </SwiperSlide>\n                    <SwiperSlide>\n                        <div className=\"stats-slider\">\n                            <span className=\"stats-slider-text\">\n                                {\">\"} EcoScore B : {this.props.ecoScoreData.b}{\" \"}\n                                {this.props.ecoScoreData.b > 1 ? \" produits\" : \" produit\"}\n                            </span>\n                            <img\n                                className=\"stats-ecoscore-image\"\n                                src=\"/images/utils/ecoScoreB.png\"\n                                alt=\"\"\n                            />\n                        </div>\n                    </SwiperSlide>\n                    <SwiperSlide>\n                        <div className=\"stats-slider\">\n                            <span className=\"stats-slider-text\">\n                                {\">\"} EcoScore C : {this.props.ecoScoreData.c}{\" \"}\n                                {this.props.ecoScoreData.c > 1 ? \" produits\" : \" produit\"}\n                            </span>\n                            <img\n                                className=\"stats-ecoscore-image\"\n                                src=\"/images/utils/ecoScoreC.png\"\n                                alt=\"\"\n                            />\n                        </div>\n                    </SwiperSlide>\n                    <SwiperSlide>\n                        <div className=\"stats-slider\">\n                            <span className=\"stats-slider-text\">\n                                {\">\"} EcoScore D : {this.props.ecoScoreData.d}{\" \"}\n                                {this.props.ecoScoreData.d > 1 ? \" produits\" : \" produit\"}\n                            </span>\n                            <img\n                                className=\"stats-ecoscore-image\"\n                                src=\"/images/utils/ecoScoreD.png\"\n                                alt=\"\"\n                            />\n                        </div>\n                    </SwiperSlide>\n                    <SwiperSlide>\n                        <div className=\"stats-slider\">\n                            <span className=\"stats-slider-text\">\n                                {\">\"} EcoScore E : {this.props.ecoScoreData.e}{\" \"}\n                                {this.props.ecoScoreData.e > 1 ? \" produits\" : \" produit\"}\n                            </span>\n                            <img\n                                className=\"stats-ecoscore-image\"\n                                src=\"/images/utils/ecoScoreE.png\"\n                                alt=\"\"\n                            />\n                        </div>\n                    </SwiperSlide>\n                    <SwiperSlide>\n                        <div className=\"stats-slider\">\n                            <span className=\"stats-slider-text\">\n                                {\">\"} EcoScore Inconnu : {this.props.ecoScoreData.unknown}{\" \"}\n                                {this.props.ecoScoreData.unknown > 1 ? \" produits\" : \" produit\"}\n                            </span>\n                        </div>\n                    </SwiperSlide>\n                </React.Fragment>\n            );\n        }\n        return slides;\n    };\n\n    render = () => {\n        return (\n            <React.Fragment>\n                <div className=\"stats-chart-pie\">{this.displayChart()}</div>\n                <div className=\"stats-chart-slider\">\n                    <Swiper\n                        spaceBetween={0}\n                        slidesPerView={1}\n                        centeredSlides={true}\n                        onSlideChange={(i) => this.onSlideChange(i.activeIndex)}\n                        onSwiper={(swiper) => this.setState({ swiper: swiper })}\n                    >\n                        {this.displaySlides()}\n                    </Swiper>\n                </div>\n            </React.Fragment>\n        );\n    };\n}\n\nexport default DoughnutChartEcoScore;\n","import React from \"react\";\nimport { Swiper, SwiperSlide } from \"swiper/react\";\n// Import Swiper styles\nimport \"swiper/swiper-bundle.css\";\n\n//Import Bar Chart\nimport Chart from \"react-apexcharts\";\n\nimport fruits from \"../../assets/images/fruits-vegetables-basket-by-oblik-studio.svg\";\nimport { motion } from \"framer-motion\";\n\nconst monthNames = [\n    \"Janvier\",\n    \"Février\",\n    \"Mars\",\n    \"Avril\",\n    \"Mai\",\n    \"Juin\",\n    \"Juillet\",\n    \"Août\",\n    \"Septembre\",\n    \"Octobre\",\n    \"Novembre\",\n    \"Décembre\",\n];\n\nclass BarChartCarbonImpact extends React.Component {\n    state = {\n        selectedSegment: 0,\n        options: {\n            chart: {\n                toolbar: {\n                    show: false,\n                },\n                dropShadow: {\n                    enabled: true,\n                    top: 0,\n                    left: 0,\n                    blur: 2,\n                    opacity: 0.5,\n                },\n            },\n            plotOptions: {\n                bar: {\n                    borderRadius: 5,\n                    horizontal: true,\n                },\n            },\n            xaxis: {\n                categories: [\"Janvier\", \"Février\", \"Mars\", \"Avril\", \"Mai\"],\n                labels: {\n                    style: {\n                        fontSize: \"12px\",\n                        fontFamily: \"Comfortaa\",\n                        fontColor: \"#1b3044\",\n                    },\n                },\n                title: {\n                    text: \"CO₂ équivalent (kg)\",\n                    style: {\n                        fontSize: \"12px\",\n                        fontFamily: \"Comfortaa\",\n                        fontColor: \"#1b3044\",\n                    },\n                },\n            },\n            yaxis: {\n                labels: {\n                    style: {\n                        fontSize: \"12px\",\n                        fontFamily: \"Comfortaa\",\n                        fontColor: \"#1b3044\",\n                    },\n                },\n            },\n            dataLabels: {\n                enabled: true,\n                style: {\n                    fontSize: \"10px\",\n                    fontFamily: \"Comfortaa\",\n                },\n            },\n            noData: {\n                text: \"Chargement...\",\n            },\n            fill: {\n                colors: [\"#ff914d\"],\n            },\n            grid: {\n                xaxis: {\n                    lines: {\n                        show: true,\n                    },\n                },\n                yaxis: {\n                    lines: {\n                        show: false,\n                    },\n                },\n            },\n        },\n    };\n\n    displayChart = () => {\n        let chart = <React.Fragment></React.Fragment>;\n        if (this.props.carbonImpactData && this.props.cartedProduct > 0) {\n            let dataSize = this.props.carbonImpactData.data.length;\n            let xaxis = [];\n            let now;\n\n            switch (this.props.carbonImpactData.unit) {\n                case \"weekly\":\n                    let d = new Date();\n                    d.setHours(0, 0, 0, 0);\n                    d.setDate(d.getDate() + 4 - (d.getDay() || 7));\n                    let yearStart = new Date(d.getFullYear(), 0, 1);\n                    now = Math.ceil(((d - yearStart) / 86400000 + 1) / 7);\n                    for (let i = dataSize - 1; i >= 0; i--) {\n                        xaxis.push(\"Semaine \" + (now - i));\n                    }\n                    break;\n                case \"monthly\":\n                    now = new Date().getMonth();\n                    let year = new Date().getFullYear();\n                    for (let i = dataSize - 1; i >= 0; i--) {\n                        let monthNum = now - i;\n                        if (monthNum < 0) {\n                            xaxis.push(monthNames[monthNum + 12] + \" \" + (year - 1));\n                        } else {\n                            xaxis.push(monthNames[monthNum] + \" \" + year);\n                        }\n                    }\n                    break;\n                case \"yearly\":\n                    now = new Date().getFullYear();\n                    for (let i = dataSize - 1; i >= 0; i--) {\n                        xaxis.push((now - i).toString());\n                    }\n                    break;\n            }\n\n            this.state.options.xaxis.categories = xaxis;\n\n            let series = [\n                {\n                    name: \"CO₂ équivalent (kg)\",\n                    data: [],\n                },\n            ];\n\n            let sortedData = this.props.carbonImpactData.data;\n            console.log(sortedData);\n            sortedData.sort((a, b) => (a.offset > b.offset ? 1 : -1));\n            console.log(sortedData);\n\n            for (let i = 0; i < sortedData.length; i++) {\n                let finalValue =\n                    this.state.selectedSegment === 0\n                        ? sortedData[i].impact.toFixed(2)\n                        : (sortedData[i].impact / sortedData[i].nbProducts).toFixed(2);\n                series[0].data.push(finalValue);\n            }\n\n            chart = (\n                <React.Fragment>\n                    <div className=\"stats-chart-bar\">\n                        <Chart\n                            options={this.state.options}\n                            series={series}\n                            type=\"bar\"\n                            height={350}\n                        ></Chart>\n                    </div>\n                </React.Fragment>\n            );\n        } else {\n            chart = (\n                <motion.div\n                    className=\"stats-no-product\"\n                    initial={{ opacity: 0 }}\n                    animate={{ opacity: 1 }}\n                    exit={{ opacity: 0 }}\n                >\n                    <div>\n                        <img src={fruits} className=\"logo\" alt=\"Fruits\" />\n                        <p className=\"logo-text\">Commence à scanner des produits !</p>\n                    </div>\n                </motion.div>\n            );\n        }\n        return chart;\n    };\n\n    onSlideChange = (index) => {\n        this.setState({ selectedSegment: this.state.selectedSegment === 0 ? 1 : 0 });\n    };\n\n    displaySlides = () => {\n        let slides = <React.Fragment></React.Fragment>;\n        if (this.props.carbonImpactData && this.props.cartedProduct > 0) {\n            slides = (\n                <React.Fragment>\n                    <SwiperSlide>\n                        <div className=\"stats-slider\">\n                            <span className=\"stats-slider-text\">{\">\"} Impact Carbone total</span>\n                        </div>\n                    </SwiperSlide>\n                    <SwiperSlide>\n                        <div className=\"stats-slider\">\n                            <span className=\"stats-slider-text\">\n                                {\">\"} Impact Carbone par produit\n                            </span>\n                        </div>\n                    </SwiperSlide>\n                </React.Fragment>\n            );\n        }\n        return slides;\n    };\n\n    render = () => {\n        return (\n            <React.Fragment>\n                {this.displayChart()}\n                <div className=\"stats-chart-slider\">\n                    <Swiper\n                        spaceBetween={0}\n                        slidesPerView={1}\n                        centeredSlides={true}\n                        onSlideChange={(i) => this.onSlideChange(i.activeIndex)}\n                        onSwiper={(swiper) => this.setState({ swiper: swiper })}\n                    >\n                        {this.displaySlides()}\n                    </Swiper>\n                </div>\n            </React.Fragment>\n        );\n    };\n}\n\nexport default BarChartCarbonImpact;\n","import React from \"react\";\nimport Navbar from \"../components/Navbar/Navbar\";\nimport DoughnutChartEcoScore from \"../components/Charts/DoughnutChartEcoScore\";\nimport BarChartCarbonImpact from \"../components/Charts/BarChartCarbonImpact\";\nimport \"./Product.css\";\nimport { Link } from \"react-router-dom\";\nimport jwt from \"jsonwebtoken\";\n\nclass Statistics extends React.Component {\n    state = {\n        ecoScoreData: undefined,\n        carbonImpactData: undefined,\n        username: undefined,\n        scannedProduct: undefined,\n        cartedProduct: undefined,\n        userId: undefined,\n        value: 0,\n    };\n\n    Verify = () => {\n        let isExpired = true;\n        const token = localStorage.getItem(\"token\");\n        if (token) {\n            var decodedToken = jwt.decode(token, { complete: true });\n            var dateNow = new Date();\n            if (decodedToken.payload.exp >= dateNow.getTime() / 1000) {\n                isExpired = false;\n            }\n        }\n        if (isExpired === false) {\n            this.setState({ connected: true });\n        }\n    };\n\n    componentDidMount = () => {\n        this.Verify();\n        let userId = localStorage.getItem(\"userId\");\n        if (userId) {\n            this.setState({ userId: userId });\n        }\n        this.loadUserData(userId);\n        this.loadEcoScoreData(userId, \"fromBeginning\");\n        this.loadCarbonImpactData(userId, \"fromBeginning\");\n    };\n\n    loadUserData = (userId) => {\n        fetch(\n            `https://api.lowympact.fr/api/v1/users/${userId}`,\n            // `http://localhost:8080/api/v1/users/${userId}`,\n            {\n                method: \"get\",\n                credentials: \"include\",\n                headers: new Headers({\n                    authorization: localStorage.getItem(\"token\"),\n                    \"api-key\": \"99d8fb95-abdd-4885-bf6c-3a81d8874043\",\n                    \"Content-Type\": \"application/json\",\n                }),\n            }\n        )\n            .then((response) => response.json())\n            .then((res) => {\n                console.log(res);\n                this.setState({\n                    username: res?.data?.username,\n                    scannedProduct: res?.scannedProduct,\n                    cartedProduct: res?.cartedProduct,\n                });\n            });\n    };\n\n    loadEcoScoreData = (userId, typeAggregate) => {\n        fetch(\n            `https://api.lowympact.fr/api/v1/users/${userId}/statistics?typeStatistic=ecoscore&typeAggregate=${typeAggregate}`,\n            // `http://localhost:8080/api/v1/users/${userId}/statistics?typeStatistic=ecoscore&typeAggregate=${typeAggregate}`,\n            {\n                method: \"get\",\n                credentials: \"include\",\n                headers: new Headers({\n                    authorization: localStorage.getItem(\"token\"),\n                    \"api-key\": \"99d8fb95-abdd-4885-bf6c-3a81d8874043\",\n                    \"Content-Type\": \"application/json\",\n                }),\n            }\n        )\n            .then((response) => response.json())\n            .then((res) => {\n                console.log(res);\n                this.setState({\n                    ecoScoreData: res?.statistics?.ecoscore,\n                });\n            });\n    };\n\n    loadCarbonImpactData = (userId, typeAggregate) => {\n        fetch(\n            `https://api.lowympact.fr/api/v1/users/${userId}/statistics?typeStatistic=carbonImpact&typeAggregate=${typeAggregate}`,\n            // `http://localhost:8080/api/v1/users/${userId}/statistics?typeStatistic=carbonImpact&typeAggregate=${typeAggregate}`,\n            {\n                method: \"get\",\n                credentials: \"include\",\n                headers: new Headers({\n                    authorization: localStorage.getItem(\"token\"),\n                    \"api-key\": \"99d8fb95-abdd-4885-bf6c-3a81d8874043\",\n                    \"Content-Type\": \"application/json\",\n                }),\n            }\n        )\n            .then((response) => response.json())\n            .then((res) => {\n                console.log(res);\n                this.setState({\n                    carbonImpactData: res?.statistics?.carbonImpact,\n                });\n            });\n    };\n\n    displayStats = () => {\n        let scannedProduct = <React.Fragment />;\n        let cartedProduct = <React.Fragment />;\n\n        if (this.state.scannedProduct !== undefined) {\n            scannedProduct = (\n                <div className=\"stats-header-text\">\n                    <span className={\"circle-stats color_score_stats\"}>⬤ </span>\n                    {this.state.scannedProduct > 1 ? \"Produits scannés :\" : \"Produit scanné :\"}\n                    <span className=\"uppercase \"> {this.state.scannedProduct}</span>\n                </div>\n            );\n        }\n\n        if (this.state.cartedProduct !== undefined) {\n            cartedProduct = (\n                <div className=\"stats-header-text\">\n                    <span className={\"circle-stats color_score_stats\"}>⬤ </span>\n                    {this.state.cartedProduct > 1 ? \"Produits achetés :\" : \"Produit acheté :\"}\n                    <span className=\"uppercase \"> {this.state.cartedProduct}</span>\n                </div>\n            );\n        }\n\n        return (\n            <React.Fragment>\n                {scannedProduct}\n                {cartedProduct}\n            </React.Fragment>\n        );\n    };\n\n    handleChange = (event, newValue) => {\n        this.setState({ value: newValue });\n    };\n\n    displayNavbar = () => {\n        let retour = (\n            <div className=\"stats-navbar-container\">\n                <button\n                    className={\n                        this.state.value === 0\n                            ? \"stats-navbar-button selected\"\n                            : \"stats-navbar-button\"\n                    }\n                    onClick={() => this.handleChange(\"\", 0)}\n                >\n                    EcoScore\n                </button>\n                <button\n                    className={\n                        this.state.value === 1\n                            ? \"stats-navbar-button selected\"\n                            : \"stats-navbar-button\"\n                    }\n                    onClick={() => this.handleChange(\"\", 1)}\n                >\n                    Impact Carbone\n                </button>\n                <div\n                    className={\n                        this.state.value === 0 ? \"navbar-under nav-left\" : \"navbar-under nav-right\"\n                    }\n                ></div>\n            </div>\n        );\n        return retour;\n    };\n\n    render = () => {\n        return (\n            <React.Fragment>\n                <div className=\"stats-page-container\">\n                    <div className=\"stats-header-container\">\n                        <div className=\"stats-profil-link\">\n                            <Link to=\"/profil\"> {\"<\"} Profil</Link>\n                        </div>\n                        <img className=\"stats-bitmap-image\" src=\"/images/utils/bitmap.png\" alt=\"\" />\n                    </div>\n\n                    <div className=\"stats-welcome\">\n                        <span className=\"stats-welcome-text\">\n                            {this.state.username\n                                ? this.state.username + \", voici ton récapitulatif Lowympact...\"\n                                : \"\"}\n                        </span>\n                    </div>\n\n                    <div className=\"stats-text-container\">{this.displayStats()}</div>\n\n                    {this.displayNavbar()}\n\n                    {this.state.value === 0 ? (\n                        <DoughnutChartEcoScore\n                            ecoScoreData={this.state.ecoScoreData}\n                            scannedProduct={this.state.scannedProduct}\n                            cartedProduct={this.state.cartedProduct}\n                        ></DoughnutChartEcoScore>\n                    ) : (\n                        <BarChartCarbonImpact\n                            carbonImpactData={this.state.carbonImpactData}\n                            scannedProduct={this.state.scannedProduct}\n                            cartedProduct={this.state.cartedProduct}\n                        ></BarChartCarbonImpact>\n                    )}\n\n                    <Navbar />\n                </div>\n            </React.Fragment>\n        );\n    };\n}\n\nexport default Statistics;\n\nconst delay = (ms) => new Promise((res) => setTimeout(res, ms));\n","import React, { Component } from \"react\";\nimport { BrowserRouter as Router, Route, Redirect, Switch } from \"react-router-dom\";\nimport { AnimatePresence } from \"framer-motion\";\n\nimport \"./App.css\";\nimport History from \"./pages/History\";\nimport Error404 from \"./pages/Error404\";\nimport Login from \"./pages/Login\";\nimport Product from \"./pages/Product\";\nimport Profil from \"./pages/Profil\";\nimport Signup from \"./pages/Signup\";\nimport Signin from \"./pages/Signin\";\nimport ProfileConfiguration from \"./pages/ProfileConfiguration\";\nimport Statistics from \"./pages/Statistics\";\nimport Scan_home from \"./components/Test/Scan_home\";\n\nclass App extends Component {\n    render() {\n        return (\n            <Router>\n                <AnimatePresence exitBeforeEnter={true}>\n                    <Switch>\n                        {/* Front Pages */}\n                        <Route path=\"/history\" component={History} exact key={1} />\n                        <Route path=\"/profil\" component={Profil} exact key={2} />\n                        <Route path=\"/login\" component={Login} exact />\n                        <Route path=\"/\" component={Login} exact key={1} />\n                        <Route path=\"/products/:barcode/:bcProductId\" component={Product} exact />\n                        <Route path=\"/products/:barcode\" component={Product} exact />\n                        <Route path=\"/signup\" component={Signup} exact />\n                        <Route path=\"/signin\" component={Signin} exact />\n                        <Route path=\"/configuration\" component={ProfileConfiguration} exact />\n                        <Route path=\"/stats\" component={Statistics} exact />\n                        <Route path=\"/test\" component={Scan_home} exact />\n                        {/* Errors Pages */}\n                        <Route path=\"/error404\" component={Error404} />\n                        <Redirect to=\"/error404\" />\n                        {/* <Route path=\"/MAINTENANCE\" component={ Maintenance } /> */}\n                    </Switch>\n                </AnimatePresence>\n                {/* </Suspense> */}\n            </Router>\n        );\n    }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}