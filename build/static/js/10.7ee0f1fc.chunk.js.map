{"version":3,"sources":["components/Button/ButtonSignin.js","pages/Signin.js"],"names":["ButtonSignin","Signin","props","handleSubmit","e","preventDefault","state","errors","email","password","length","push","validate","setState","Connect","componentDidMount","Verify","isExpired","token","localStorage","getItem","decodedToken","jwt","decode","complete","dateNow","Date","payload","exp","getTime","redirect","fetch","method","headers","body","JSON","stringify","then","response","json","data","error","loginSuccessful","err","success","setItem","_id","onPasswordChange","passwordInput","value","emailInput","this","to","Fragment","Header","className","src","fruits","alt","onChange","ref","type","onClick","Component"],"mappings":"kLAUeA,MARf,WACE,OACA,gD,2DCkBIC,E,kDACF,WAAYC,GAAQ,IAAD,8BACf,cAAMA,IAUVC,aAAe,SAACC,GACZA,EAAEC,iBACF,MAA4B,EAAKC,MAC3BC,EA3Bd,SAAkBC,EAAOC,GACrB,IAAMF,EAAS,GAQf,OANqB,IAAjBC,EAAME,QACNH,EAAOI,KAAK,8DAEQ,IAApBF,EAASC,QACTH,EAAOI,KAAK,4DAETJ,EAkBYK,CADf,EAAQJ,MAAR,EAAeC,UAGf,EAAKI,SAAS,CAAEN,WACM,IAAlBA,EAAOG,QACP,EAAKI,WAlBM,EAsBnBC,kBAAoB,WAChB,EAAKC,UAvBU,EA0BnBA,OAAS,WACL,IAAIC,GAAY,EACVC,EAAQC,aAAaC,QAAQ,SACnC,GAAIF,EAAO,CACP,IAAIG,EAAeC,IAAIC,OAAOL,EAAO,CAAEM,UAAU,IAC7CC,EAAU,IAAIC,KACdL,EAAaM,QAAQC,KAAOH,EAAQI,UAAY,MAChDZ,GAAY,IAGF,IAAdA,GACA,EAAKJ,SAAS,CAAEiB,UAAU,KArCf,EAyCnBhB,QAAU,WACNiB,MAAM,8CAA+C,CACjDC,OAAQ,OACRC,QAAS,CACL,eAAgB,mBAChB,UAAW,wCAIfC,KAAMC,KAAKC,UAAU,CACjB5B,MAAO,EAAKF,MAAME,MAClBC,SAAU,EAAKH,MAAMG,aAGxB4B,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACG,GAEH,GAAmB,kBAAfA,EAAKC,MAA2B,CAChC,EAAK5B,SAAS,CAAE6B,iBAAiB,IACjC,IAAIC,EAAM,EAAKrC,MAAMC,OACrBoC,EAAIhC,KAAK,qDACT,EAAKE,SAAS,CAAEN,OAAQoC,SACrB,GAAmB,uBAAfH,EAAKC,OAAmCD,EAAKI,QAOpDzB,aAAa0B,QAAQ,QAASL,EAAKtB,OACnCC,aAAa0B,QAAQ,SAAUL,EAAKM,KACpC,EAAKjC,SAAS,CAAE6B,iBAAiB,EAAMZ,UAAU,QATY,CAC7D,EAAKjB,SAAS,CAAE6B,iBAAiB,IACjC,IAAIC,EAAM,EAAKrC,MAAMC,OACrBoC,EAAIhC,KAAK,wDACT,EAAKE,SAAS,CAAEN,OAAQoC,SAnErB,EAgFnBI,iBAAmB,WACf,EAAKlC,SAAS,CACVJ,SAAU,EAAKuC,cAAcC,MAC7BzC,MAAO,EAAK0C,WAAWD,SAjF3B,EAAK3C,MAAQ,CACTE,MAAO,GACPC,SAAU,GACVF,OAAQ,GACRuB,UAAU,EACVY,gBAAiB,MAPN,E,0CAuFnB,WAAU,IAAD,OACL,OAAIS,KAAK7C,MAAMwB,SACJ,cAAC,IAAD,CAAUsB,GAAG,aAGpB,eAAC,IAAMC,SAAP,WACI,cAAC,IAAD,CAAMD,GAAG,SAAT,SACI,cAACE,EAAA,EAAD,MAEJ,qBAAKC,UAAU,cAAf,SACI,qBAAKC,IAAKC,IAAQF,UAAU,OAAOG,IAAI,aAG3C,cAAC,IAAD,CAAMH,UAAU,cAAcH,GAAG,SAAjC,SACK,aAEL,sBAAKG,UAAU,mBAAf,UACI,uBAAMA,UAAU,QAAhB,UACI,0CAEI,uBACIA,UAAU,cACVN,MAAOE,KAAK7C,MAAME,MAClBmD,SAAUR,KAAKJ,iBACfa,IAAK,SAACA,GAAD,OAAU,EAAKV,WAAaU,GACjCC,KAAK,aAGb,iDAEI,uBACIN,UAAU,cACVN,MAAOE,KAAK7C,MAAMG,SAClBkD,SAAUR,KAAKJ,iBACfa,IAAK,SAACA,GAAD,OAAU,EAAKZ,cAAgBY,GACpCC,KAAK,mBAIjB,uBAAON,UAAU,gBAAjB,SAAkCJ,KAAK7C,MAAMC,SAC7C,qBAAKgD,UAAU,gBAAgBO,QAASX,KAAKhD,aAA7C,SACI,cAAC,EAAD,gB,GAjIH4D,aAwIN9D","file":"static/js/10.7ee0f1fc.chunk.js","sourcesContent":["import React from \"react\";\n\nfunction ButtonSignin() {\n  return (\n  <div>\n    Me connecter\n  </div>\n  );\n}\n\nexport default ButtonSignin;","import React, { Component } from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport ButtonSignin from \"../components/Button/ButtonSignin\";\nimport fruits from \"../assets/images/fruits-vegetables-basket-by-oblik-studio.svg\";\nimport Header from \"../components/Header/Header\";\nimport blob from \"../assets/images/bitmap.png\";\nimport \"./Login.css\";\nimport { Link } from \"react-router-dom\";\nimport jwt from \"jsonwebtoken\";\n\nfunction validate(email, password) {\n    const errors = [];\n\n    if (email.length === 0) {\n        errors.push(<p>Saissez votre adresse e-mail</p>);\n    }\n    if (password.length === 0) {\n        errors.push(<p>Saissez votre mot de passe</p>);\n    }\n    return errors;\n}\n\nclass Signin extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            email: \"\",\n            password: \"\",\n            errors: [],\n            redirect: false,\n            loginSuccessful: null,\n        };\n    }\n\n    handleSubmit = (e) => {\n        e.preventDefault();\n        const { email, password } = this.state;\n        const errors = validate(email, password);\n        ////console.log(email, password, errors);\n        this.setState({ errors });\n        if (errors.length === 0) {\n            this.Connect();\n        }\n    };\n\n    componentDidMount = () => {\n        this.Verify();\n    };\n\n    Verify = () => {\n        let isExpired = true;\n        const token = localStorage.getItem(\"token\");\n        if (token) {\n            var decodedToken = jwt.decode(token, { complete: true });\n            var dateNow = new Date();\n            if (decodedToken.payload.exp >= dateNow.getTime() / 1000) {\n                isExpired = false;\n            }\n        }\n        if (isExpired === false) {\n            this.setState({ redirect: true }); // redirection vers la page login\n        }\n    };\n\n    Connect = () => {\n        fetch(`https://api.lowympact.fr/api/v1/users/login`, {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n                \"api-key\": \"99d8fb95-abdd-4885-bf6c-3a81d8874043\",\n\n                //'x-access-token': localStorage.getItem('token'),\n            },\n            body: JSON.stringify({\n                email: this.state.email,\n                password: this.state.password,\n            }),\n        })\n            .then((response) => response.json())\n            .then((data) => {\n                ////console.log(data);\n                if (data.error === \"No user found\") {\n                    this.setState({ loginSuccessful: false });\n                    let err = this.state.errors;\n                    err.push(<p>Utilisateur Inconnu</p>);\n                    this.setState({ errors: err });\n                } else if (data.error === \"Incorrect password\" || !data.success) {\n                    this.setState({ loginSuccessful: false });\n                    let err = this.state.errors;\n                    err.push(<p>Mot de passe Incorrect</p>);\n                    this.setState({ errors: err });\n                } else {\n                    // //console.log(data);\n                    localStorage.setItem(\"token\", data.token);\n                    localStorage.setItem(\"userId\", data._id);\n                    this.setState({ loginSuccessful: true, redirect: true });\n                    //this.props.history.goBack();\t// a ajouter pour être redirigé vers la page initialement\n                    // demandée. On doit cependant rediriger si la page demandée\n                    // était la page de login\n                }\n            });\n    };\n\n    onPasswordChange = () => {\n        this.setState({\n            password: this.passwordInput.value,\n            email: this.emailInput.value,\n        });\n    };\n\n    render() {\n        if (this.state.redirect) {\n            return <Redirect to=\"/history\" />;\n        }\n        return (\n            <React.Fragment>\n                <Link to=\"/login\">\n                    <Header />\n                </Link>\n                <div className=\"logo-fruits\">\n                    <img src={fruits} className=\"logo\" alt=\"Fruits\" />\n                </div>\n\n                <Link className=\"back-button\" to=\"/login\">\n                    {\"< Retour\"}\n                </Link>\n                <div className=\"signin-container\">\n                    <form className=\"forms\">\n                        <label>\n                            email\n                            <input\n                                className=\"input-forms\"\n                                value={this.state.email}\n                                onChange={this.onPasswordChange}\n                                ref={(ref) => (this.emailInput = ref)}\n                                type=\"email\"\n                            />\n                        </label>\n                        <label>\n                            mot de passe\n                            <input\n                                className=\"input-forms\"\n                                value={this.state.password}\n                                onChange={this.onPasswordChange}\n                                ref={(ref) => (this.passwordInput = ref)}\n                                type=\"password\"\n                            />\n                        </label>\n                    </form>\n                    <label className=\"errors-signin\">{this.state.errors}</label>\n                    <div className=\"button-signin\" onClick={this.handleSubmit}>\n                        <ButtonSignin />\n                    </div>\n                </div>\n            </React.Fragment>\n        );\n    }\n}\nexport default Signin;\n"],"sourceRoot":""}