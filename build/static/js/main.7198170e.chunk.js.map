{"version":3,"sources":["assets/images/fruits-vegetables-basket-by-oblik-studio.svg","components/Button/ButtonHistory.js","components/Button/ButtonProfil.js","components/Button/ButtonScan.js","components/Scan/Scan.js","components/Test/Scanner.js","components/Test/Scan_home.js","components/Navbar/Navbar.js","assets/images/logo.svg","assets/images/bitmap.png","components/Header/Header.js","pages/History.js","pages/Error404.js","components/Button/ButtonCreateAccount.js","components/Button/ButtonLogin.js","components/Button/ButtonNoAccount.js","pages/Login.js","components/Traceability/leaflet-curve/leaflet.curve.js","components/Traceability/leaflet-curve/Curve.js","components/Traceability/Traceability.js","assets/images/nutella.png","components/Environnement/Environnement.js","pages/Product.js","components/Labels/Labels.js","pages/Profil.js","components/Button/ButtonSignup.js","pages/Signup.js","components/Button/ButtonSignin.js","pages/Signin.js","components/Button/ButtonChangePassword.js","assets/users/users.js","pages/ProfileConfiguration.js","components/Charts/DoughnutChartEcoScore.js","components/Charts/BarChartCarbonImpact.js","pages/Statistics.js","App.js","reportWebVitals.js","index.js"],"names":["ButtonHistory","className","class","ButtonProfil","ButtonScan","configurationPromise","configure","engineLocation","catch","error","alert","style","position","top","bottom","left","right","margin","maxWidth","maxHeight","Scan","props","ref","React","createRef","then","ScanditSDKBarcodePicker","create","current","barcodePicker","onScan","on","onError","this","destroy","prevProps","JSON","stringify","scanSettings","applyScanSettings","visible","setVisible","AnimatePresence","exitBeforeEnter","motion","div","id","initial","animate","transition","duration","exit","onClick","onCrossClicked","Component","Scanner","componentDidMount","Quagga","init","inputStream","type","constraints","width","ideal","height","facingMode","aspectRatio","min","max","focusMode","locator","patchSize","halfSample","locate","area","numOfWorkers","window","navigator","hardwareConcurrency","decoder","readers","debug","drawBoundingBox","showFrequency","drawScanline","showPattern","multiple","singleChannel","err","console","log","start","setQuagga","onDetected","_onDetected","result","a","stop","offDetected","Fragment","Scan_home","state","scanning","status","results","usedCamera","devices","reading","barcode","undefined","bcProductId","mediaDevices","enumerateDevices","cameras","i","forEach","device","kind","push","label","match","setState","quagga","switchCamera","num","length","_scan","res","codeResult","code","fetch","response","json","handleScan","data","arr","split","handleError","displayQrCode","delay","showViewFinder","displayBarCode","map","switchReader","redirect","to","onChange","uncheckedIcon","checkedIcon","checked","onColor","offColor","Navbar","showScanner","updateWindowDimensions","innerHeight","handleScannerButton","bool","handleBarcode","render","vibrateOnScan","enableTorchToggle","enablePinchToZoom","enableCameraSwitcher","guiStyle","ScanSettings","enabledSymbologies","codeDuplicateFilter","scanResult","barcodes","message","location","pathname","addEventListener","removeEventListener","Header","src","blob","alt","logo","RenderHistoryItem","labelColor","item","pathProduct","name","opacity","image","brand","color","marginRight","History","userId","localStorage","getItem","token","loadHistoryInformations","loadLocalStorageHistory","method","credentials","headers","Headers","authorization","items","loading","history","parse","itemList","Object","keys","fruits","Error404","ButtonCreateAccount","ButtonLogin","ButtonNoAccount","Login","Verify","isExpired","decodedToken","jwt","decode","complete","dateNow","Date","getTime","payload","exp","L","Curve","Path","extend","options","initialize","path","setOptions","_initialUpdate","_setPath","getPath","_coords","setPath","redraw","getBounds","_bounds","_computeBounds","lastPoint","lastCommand","coord","bound","LatLngBounds","String","lat","latLng","lng","controlPoint1","controlPoint2","endPoint","diffLat","diffLng","controlPoint","getCenter","_update","_map","_updatePath","_renderer","_updatecurve","_project","lastCoord","curCommand","curPoint","_points","latLngToLayerPoint","curve","SVG","include","layer","_curvePointsToPath","_path","getTotalLength","dashArray","strokeDasharray","strokeDashoffset","points","point","str","x","y","positions","option","getOptions","fromProps","toProps","leafletElement","setStyleIfChanged","propTypes","children","PropTypes","oneOfType","arrayOf","node","object","array","isRequired","withLeaflet","Traceability","zoom","swiper","currentIndex","getMaterialIcon","mode","getTransportMode","getTranslation","displaySlides","slides","products","product","pastille","TransportCO2Impact","value","transport","productsOutput","productName","seller","localisation","city","country","buyer","Math","round","dist","handleMarkerClick","latlng","index","elem","document","getElementsByClassName","scrollIntoView","behavior","slideTo","p","latitude","longitude","getZoomRatio","flyTo","onSlideChange","parseFloat","long","displayMarker","markers","icon","icon2","marker1","lat1","long1","marker2","lat2","long2","zIndex","Icon","iconUrl","iconRetinaUrl","iconSize","Point","Marker","zIndexOffset","curves","setAttribute","getCurveOptions","fill","totalCO2Traceability","toFixed","Map","center","minZoom","scrollWheelZoom","maxBounds","maxBoundsViscosity","getBottomRef","whenCreated","TileLayer","attribution","url","spaceBetween","slidesPerView","centeredSlides","activeIndex","onSwiper","toRadian","degree","PI","origin","destination","distance","lon1","lon2","deltaLat","deltaLon","pow","sin","cos","asin","sqrt","getDistance","latlng1","latlng2","offsetX","offsetY","r","theta","atan2","r2","theta2","midpointX","RenderColor","labelLevel","eco_score","Environnement","showTransport","materials","getColor","note","getColorImpact","getLabel","getLabelImpact","getLabelImpactPackaging","getColorImpactPackaging","dataEcoScore","adjustments","packaging","packagings","recyclable","recycling","material","ecoscore_material_score","innerWidth","displayCO2Repartition","pourcentage","nbKg","percentage","strokeWidth","fontSize","primaryColor","displayRepartitionAllItems","html_agriculture","html_transport","html_consommation","html_distribution","html_packaging","html_processing","html_total","agribalyse","co2_agriculture","co2_total","co2_transportation","co2_consumption","co2_distribution","co2_packaging","co2_processing","handleShowTransport","displayTransportImpact","agribalyse_CO2","transportation_score","transport_final_indicator","n","origins_of_ingredients","value_fr","co2_impact_html","transportation_score_html","displayTranportImpact","displayPackagingDetailImpact","filter","pos","indexOf","separator","displayPackagingImpact","renderListAlternatives","listItems","href","img_url","alternativesloop","alternativesList","alternatives","alternatives_a","alternatives_b","alternatives_c","alternatives_d","sort","b","c","d","ecoScore","hmtl_suggestion","alternatives_title","Product","params","productImageUrl","genericName","connected","productData","cart","isFlipping","component","bottomComponent","loadHistory","loadFromOpenFoodFacts","loadProductInformations","handleBarCodeUpdate","traceability","impact","transportCO2Impact","loadAlternatives","score","success","alternativesInfos","image_url","product_name","generic_name","ecoscore_grade","ecoscore_data","saveHistory","scoreSearch","categories_properties","Authorization","quantity","body","bcProductAddress","exist","find","element","brands","setItem","addToCart","co2","ecoscore","flip","quantityDelta","carbonImpact","removeFromCart","event","imageFlip","transform","displayImage","scoreClass","handleChange","newValue","displayNavbar","retour","depth","ms","Promise","setTimeout","Profil","disconnect","clear","displayConnectedProfil","displayUnconnectedProfil","ButtonSignup","validEmail","RegExp","Signup","userName","email","password","confirmPassword","errors","submit","signUser","username","_id","handleSubmit","e","preventDefault","validate","displayErrors","test","evt","target","passwordConfirm","ButtonSignin","Signin","Connect","loginSuccessful","onPasswordChange","passwordInput","emailInput","ButtonChangePassword","USERS","ProfileConfiguration","currentPassword","newPassword","user","changeUserInfo","loadUserInfo","placeholder","DoughnutChartEcoScore","selectedSegment","displayChart","chart","ecoScoreData","cartedProduct","title","unknown","lineWidth","paddingAngle","radius","PieChart","defaultProps","animationDuration","dataEntry","labelStyle","fontFamily","labelPosition","segmentsStyle","cursor","segmentsShift","monthNames","BarChartCarbonImpact","toolbar","show","dropShadow","enabled","blur","plotOptions","bar","borderRadius","horizontal","xaxis","categories","labels","fontColor","text","yaxis","dataLabels","noData","colors","grid","lines","carbonImpactData","now","dataSize","unit","setHours","setDate","getDate","getDay","yearStart","getFullYear","ceil","getMonth","year","monthNum","toString","series","sortedData","offset","finalValue","nbProducts","Statistics","scannedProduct","loadUserData","loadEcoScoreData","loadCarbonImpactData","typeAggregate","statistics","displayStats","App","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","getElementById"],"mappings":"iuBAAe,G,OAAA,IAA0B,sE,uBCa1BA,MAXf,WACC,OACC,gCACC,qBAAKC,UAAU,cAAf,SACC,sBAAMC,MAAM,iBAAZ,uBAED,iDCGYC,MAXf,WACC,OACC,gCACC,8BACC,sBAAMD,MAAM,iBAAZ,sBAED,6CCMYE,MAVf,WACC,OACC,8BACC,qBAAKH,UAAU,mBAAf,SACC,sBAAMC,MAAM,iBAAZ,kC,0BCIEG,EAAuBC,oBAC5B,mzBACA,CACCC,eAAgB,wDAEhBC,OAAM,SAACC,GACRC,MAAMD,MAGDE,EAAQ,CACbC,SAAU,WACVC,IAAK,IACLC,OAAQ,IACRC,KAAM,IACNC,MAAO,IACPC,OAAQ,OACRC,SAAU,SACVC,UAAW,OA6FGC,E,kDArEd,WAAYC,GAAQ,IAAD,8BAClB,cAAMA,IACDC,IAAMC,IAAMC,YAFC,E,qDAKnB,WAAqB,IAAD,OACnBnB,EAAqBoB,MAAK,WACzBC,gBAAwBC,OAAO,EAAKL,IAAIM,QAAS,EAAKP,OAAOI,MAC5D,SAACI,GACA,EAAKA,cAAgBA,EAEI,MAArB,EAAKR,MAAMS,QACdD,EAAcE,GAAG,OAAQ,EAAKV,MAAMS,QAEX,MAAtB,EAAKT,MAAMW,SACdH,EAAcE,GAAG,YAAa,EAAKV,MAAMW,iB,kCAO9C,WAC2B,MAAtBC,KAAKJ,eACRI,KAAKJ,cAAcK,Y,gCAIrB,SAAmBC,GAIjBC,KAAKC,UAAUF,EAAUG,gBACzBF,KAAKC,UAAUJ,KAAKZ,MAAMiB,eAE1BL,KAAKJ,cAAcU,kBAAkBN,KAAKZ,MAAMiB,cAG7CH,EAAUK,UAAYP,KAAKZ,MAAMmB,SACpCP,KAAKJ,cAAcY,WAAWR,KAAKZ,MAAMmB,W,oBAI3C,WAAU,IAAD,OACR,OACC,cAACE,EAAA,EAAD,CAAiBC,iBAAiB,EAAlC,SACC,eAACC,EAAA,EAAOC,IAAR,CACCC,GAAG,kBACHC,QAAS,CAAEjC,OAAQ,WACnBkC,QAAS,CAAElC,OAAQ,OACnBmC,WAAY,CAAEC,SAAU,IACxBC,KAAM,CAAErC,OAAQ,WALjB,UAOC,qBAAKQ,IAAKW,KAAKX,IAAKX,MAAOA,IAC3B,sBACCT,MAAM,QACNkD,QAAS,WACR,EAAK/B,MAAMgC,gBAAe,IAH5B,kBAQA,qBAAKP,GAAG,oC,GAnFMQ,a,0CC8CJC,E,4MAxEXC,kBAAoB,WAChBC,IAAOC,KACH,CACIC,YAAa,CACTC,KAAM,aACNC,YAAa,CACTC,MAAO,CAAEC,MAAO,MAChBC,OAAQ,CAAED,MAAO,KACjBE,WAAY,cACZC,YAAa,CACTC,IAAK,EACLC,IAAK,GAETC,UAAW,eAGnBC,QAAS,CACLC,UAAW,SACXC,YAAY,GAEhBC,QAAQ,EACRC,KAAM,CACF7D,IAAK,MACLG,MAAO,MACPD,KAAM,MACND,OAAQ,OAEZ6D,aAAcC,OAAOC,UAAUC,qBAAuB,EACtDC,QAAS,CACLC,QAAS,CAAC,eAEdC,MAAO,CACHC,iBAAiB,EACjBC,eAAe,EACfC,cAAc,EACdC,aAAa,GAEjBC,UAAU,EACVC,eAAe,IAEnB,SAAUC,GACN,GAAIA,EACA,OAAOC,QAAQC,IAAIF,GAEvB/B,IAAOkC,WAGf,EAAKtE,MAAMuE,UAAUnC,KACrBA,IAAOoC,WAAW,EAAKC,c,EAO3BA,Y,uCAAc,WAAOC,GAAP,eAAAC,EAAA,sEACO,EAAK3E,MAAMwE,WAAWE,GAD7B,OACNE,EADM,OAEVR,QAAQC,IAAIO,GACRA,GACAxC,IAAOwC,OAJD,2C,gHAJd,WACIxC,IAAOyC,YAAYjE,KAAK6D,e,oBAW5B,WACI,OACI,cAAC,IAAMK,SAAP,UACI,qBAAKrD,GAAG,cAAc7C,UAAU,mB,GAnE1BqD,a,oCCmPP8C,E,4MA/OXC,MAAQ,CACJC,UAAU,EACVC,OAAQ,GACRC,QAAS,GACTC,WAAY,EACZC,QAAS,GACTC,QAAS,EACTC,aAASC,EACTC,iBAAaD,EACbpD,YAAQoD,G,EAGZrD,kB,sBAAoB,iBAAAwC,EAAA,aAAAA,EAAA,sEACFnB,UAAUkC,aAAaC,mBAAmBvF,MAAK,SAAUiF,GACnE,OAAOA,KAFK,OACZV,EADY,OAIZiB,EAAU,GACVC,EAAI,EACRlB,EAAEmB,SAAQ,SAAUC,GACG,cAAfA,EAAOC,OACPJ,EAAQK,KAAKF,GACqB,MAA9BA,EAAOG,MAAMC,MAAM,SACnBvF,KAAKwF,SAAS,CAAEhB,WAAYS,IAEhCA,QAGR,EAAKO,SAAS,CAAEf,QAASO,IAfT,2C,EAkBpBrB,UAAY,SAAC8B,GACTjC,QAAQC,IAAIgC,GACR,EAAKrB,MAAM5C,QACX,EAAK4C,MAAM5C,OAAOwC,OAEtB,EAAKwB,SAAS,CAAEhE,OAAQiE,K,EAG5BC,aAAe,WACX,IAAIC,EAAM,EAAKvB,MAAMI,WAAa,EAC9BmB,GAAO,EAAKvB,MAAMK,QAAQmB,SAC1BD,EAAM,GAGV,EAAKH,SAAS,CAAEhB,WAAYmB,EAAKtB,UAAU,IAAS,kBAChD,EAAKmB,SAAS,CAAEnB,UAAU,Q,EAIlCwB,MAAQ,WACJ,EAAKL,SAAS,CAAEnB,UAAW,EAAKD,MAAMC,SAAUC,OAAQ,M,EAG5DT,Y,uCAAc,WAAOiC,GAAP,iBAAA/B,EAAA,yDACVP,QAAQC,IAAIqC,IACRA,EAFM,qBAGFA,EAAIC,aAAcD,EAAIC,WAAWC,KAH/B,wBAIF,EAAKR,SAAS,CACVjB,QAAS,CAACuB,GACVzB,UAAU,EACVC,OAAQ,YAPV,SASmB2B,MAAM,kDAAD,OAC4BH,EAAIC,WAAWC,KAD3C,WATxB,cASEE,EATF,gBAYiBA,EAASC,OAZ1B,UAYErC,EAZF,OAaFN,QAAQC,IAAIK,GACU,IAAlBA,EAAOQ,OAdT,wBAeE,EAAKkB,SAAS,CACVnB,UAAU,EACVC,OAAQ,QACRK,QAASmB,EAAIC,WAAWC,OAlB9B,mBAoBS,GApBT,eAsBE,EAAKR,SAAS,CACVnB,UAAU,EACVC,OAAQ,cAxBd,mBA0BS,GA1BT,4C,wDAgDd8B,WAAa,SAACC,GACV,GAAIA,EAAM,CACN,IAAIC,EAAMD,EAAKE,MAAM,KACjBD,EAAIV,OAAS,GACb,EAAKJ,SAAS,CACVnB,UAAU,EACVM,QAAS2B,EAAI,GACbzB,YAAayB,EAAI,GACjBhC,OAAQ,UAGhB,EAAKF,MAAM5C,OAAOwC,S,EAG1BwC,YAAc,SAACjD,GACXC,QAAQhF,MAAM+E,I,EAGlBkD,cAAgB,WACZ,MAA0B,UAAtB,EAAKrC,MAAME,OAEP,cAAC,IAAD,CACIoC,MAAO,IACP3G,QAAS,EAAKyG,YACd3G,OAAQ,EAAKuG,WACb1H,MAAO,CAAEmD,MAAO,QAChB8E,gBAAgB,IAIjB,cAAC,IAAMzC,SAAP,K,EAIf0C,eAAiB,WACb,MAA0B,UAAtB,EAAKxC,MAAME,OAEP,eAAC,IAAMJ,SAAP,WACI,sBAAKlG,UAAU,SAAf,UACK,EAAKoG,MAAMC,SAAW,OAAS,QAShC,oBAAIrG,UAAU,UAAd,SACK,EAAKoG,MAAMG,QAAQsC,KAAI,SAAC/C,EAAQmB,GAAT,aACpB,gCAC2B,YAAtB,EAAKb,MAAME,OACN,kCAAyBR,QAAzB,IAAyBA,GAAzB,UAAyBA,EAAQiC,kBAAjC,aAAyB,EAAoBC,MAC7C,GACiB,cAAtB,EAAK5B,MAAME,OACN,4CACA,KANAR,EAAOiC,WAAWC,KAAOf,WAW9C,EAAKb,MAAMC,SACR,cAAC,EAAD,CAAST,WAAY,EAAKC,YAAaF,UAAW,EAAKA,YACvD,QAIL,cAAC,IAAMO,SAAP,K,EAIf4C,aAAe,WACP,EAAK1C,MAAMM,QAAS,EAAKc,SAAS,CAAEd,SAAS,IAC5C,EAAKc,SAAS,CAAEd,SAAS,K,4CAGlC,WAAU,IAAD,OAEL,OADAlB,QAAQC,IAAI,YAAazD,KAAKoE,MAAMG,QAASvE,KAAKoE,MAAM2C,UAEpD/G,KAAKoE,MAAMO,SACX3E,KAAKoE,MAAMS,cACV7E,KAAKZ,MAAMuF,UAAY3E,KAAKoE,MAAMO,SAC/B3E,KAAKZ,MAAMyF,cAAgB7E,KAAKoE,MAAMS,aAGtC,cAAC,IAAD,CAAUmC,GAAI,aAAehH,KAAKoE,MAAMO,QAAU,IAAM3E,KAAKoE,MAAMS,cAGvE7E,KAAKoE,MAAMO,SAAW3E,KAAKZ,MAAMuF,UAAY3E,KAAKoE,MAAMO,QACjD,cAAC,IAAD,CAAUqC,GAAI,aAAehH,KAAKoE,MAAMO,UAG3C,sBAAK3G,UAAU,wBAAf,UACI,sBACIC,MAAM,QACNkD,QAAS,WAAO,IAAD,EACX,YAAK/B,aAAL,SAAYgC,gBAAe,IAHnC,kBAQA,sBAAKpD,UAAU,cAAcmD,QAASnB,KAAK8G,aAA3C,UACI,sBAAK9I,UAAU,mBAAf,UACI,sBACIA,UACIgC,KAAKoE,MAAMM,QAAU,iBAAmB,uBAFhD,uBAOA,8CAEJ,cAAC,IAAD,CACIuC,SAAUjH,KAAK8G,aACfI,eAAe,EACfC,aAAa,EACbC,QAASpH,KAAKoE,MAAMM,QACpB2C,QAAS,OACTC,SAAU,SAEd,sBAAKtJ,UAAU,mBAAf,UACI,sBACIA,UACKgC,KAAKoE,MAAMM,QAA6B,uBAAnB,iBAF9B,6BAOA,iDAGP1E,KAAKoE,MAAMM,QAAU1E,KAAKyG,gBAAkBzG,KAAK4G,wB,GAzO9CvF,aC6ITkG,E,4MAxIXnD,MAAQ,CACJoD,aAAa,EACb7C,aAASC,EACTC,iBAAaD,EACb7C,OAAQ,G,EAYZ0F,uBAAyB,WACrB,EAAKjC,SAAS,CAAEzD,OAAQY,OAAO+E,e,EAGnCC,oBAAsB,SAACC,GACnB,EAAKpC,SAAS,CAAEgC,YAAaI,K,EAGjCC,cAAgB,SAAC/B,GACb,GAAIA,EAAK,CAEL,IAAIQ,EAAMR,EAAIS,MAAM,KAChBD,EAAIV,OAAS,EACb,EAAKJ,SAAS,CACVb,QAAS2B,EAAI,GACbzB,YAAayB,EAAI,GACjBkB,aAAa,IAGjB,EAAKhC,SAAS,CACVb,QAAS2B,EAAI,GACbkB,aAAa,EACb3C,iBAAaD,M,EAM7BkD,OAAS,WACL,OAAI,EAAK1D,MAAMrC,OAAS,IACb,cAAC,IAAMmC,SAAP,IAGP,EAAKE,MAAMO,SACX,EAAKP,MAAMS,cACV,EAAKzF,MAAMuF,UAAY,EAAKP,MAAMO,SAC/B,EAAKvF,MAAMyF,cAAgB,EAAKT,MAAMS,aAGtC,cAAC,IAAD,CAAUmC,GAAI,aAAe,EAAK5C,MAAMO,QAAU,IAAM,EAAKP,MAAMS,cAIvE,EAAKT,MAAMO,SAAW,EAAKvF,MAAMuF,UAAY,EAAKP,MAAMO,QACjD,cAAC,IAAD,CAAUqC,GAAI,aAAe,EAAK5C,MAAMO,UAG9C,EAAKP,MAAMoD,YAmCR,cAAC,EAAD,CACIpG,eAAgB,EAAKuG,oBAErBI,eAAe,EACfC,mBAAmB,EACnBC,mBAAmB,EACnBC,sBAAsB,EACtBC,SAAU,aACV9H,aACI,IAAI+H,eAAa,CACbC,mBAAoB,CAChB,KACA,OACA,QACA,OACA,OACA,UACA,SACA,SACA,OAEJC,oBAAqB,MAG7BzI,OAAQ,SAAC0I,GACL/E,QAAQC,IAAI8E,EAAWC,SAAS,GAAGnC,MACnC,EAAKwB,cAAcU,EAAWC,SAAS,GAAGnC,OAE9CtG,QAAS,SAACvB,GACNgF,QAAQhF,MAAMA,EAAMiK,YA9D5B,cAAC,IAAMvE,SAAP,UACI,sBAAKlG,UAAU,mBAAf,UACI,cAAC,IAAD,CACIgJ,GAAG,WACHhJ,UACgC,YAA5B2E,OAAO+F,SAASC,SACV,+CACA,gCALd,SAQI,cAAC,EAAD,MAEJ,qBAAKxH,QAAS,kBAAM,EAAKwG,qBAAoB,IAA7C,SACI,qBAAK3J,UAAU,gBAAf,SACI,cAAC,EAAD,QAGR,sBAAMA,UAAU,mBAAhB,kBACA,cAAC,IAAD,CACIgJ,GAAG,UACHhJ,UACgC,WAA5B2E,OAAO+F,SAASC,SACV,gDACA,iCALd,SAQI,cAAC,EAAD,Y,uDApFxB,WACI3I,KAAKyH,yBACL9E,OAAOiG,iBAAiB,SAAU5I,KAAKyH,0B,kCAG3C,WACI9E,OAAOkG,oBAAoB,SAAU7I,KAAKyH,4B,GAd7BnI,IAAM+B,WCVZ,G,OAAA,IAA0B,kCCA1B,MAA0B,mCCwB1ByH,MApBf,WACE,OACE,gCACE,8BACA,qBAAKC,IAAKC,EAAMhL,UAAU,WAAWiL,IAAI,WAEvC,8BACE,qBAAKF,IAAKC,EAAMhL,UAAU,YAAYiL,IAAI,WAE5C,8BACE,qBAAKF,IAAKC,EAAMhL,UAAU,aAAaiL,IAAI,WAE/C,sBAAKjL,UAAU,mBAAf,UACE,qBAAK+K,IAAKG,EAAMlL,UAAU,cAAciL,IAAI,SAC5C,oD,OCTR,SAASE,EAAT,GAAsC,IAC9BC,EADqBC,EAAQ,EAARA,KAEN,MAAfA,EAAK/D,OAAgC,MAAf+D,EAAK/D,MAC3B8D,EAAa,MACS,MAAfC,EAAK/D,MACZ8D,EAAa,SACS,MAAfC,EAAK/D,OAAgC,MAAf+D,EAAK/D,QAClC8D,EAAa,SAGjB,IAAIE,EAAc,aAAeD,EAAK1E,QAUtC,OATI0E,EAAKxE,cACLyE,GAAe,IAAMD,EAAKxE,aAIT,aAAjBwE,EAAK1E,UACL0E,EAAKE,KAAO,gBAIZ,cAAC5I,EAAA,EAAOC,IAAR,CAAYE,QAAS,CAAE0I,QAAS,GAAKzI,QAAS,CAAEyI,QAAS,GAAKtI,KAAM,CAAEsI,QAAS,GAA/E,SACI,eAAC,IAAD,CAAMxL,UAAU,eAAegJ,GAAIsC,EAAnC,UACI,qBAAKtL,UAAU,wBAAf,SACI,qBAAK+K,IAAKM,EAAKI,MAAOR,IAAI,OAE9B,sBAAKjL,UAAU,yBAAf,UACI,qBAAKA,UAAU,eAAf,SAA+BqL,EAAKE,OACpC,qBAAKvL,UAAU,gBAAf,SAAgCqL,EAAKK,WAEzC,sBAAK1L,UAAU,0BAAf,UACI,qBAAKU,MAAO,CAAEiL,MAAOP,GAArB,oBACA,qBAAKpL,UAAU,gBAAf,SACmB,kBAAdqL,EAAK/D,MAA4B,GAAK+D,EAAK/D,WAGpD,qBAAK5G,MAAO,CAAEkL,YAAa,OAAQD,MAAO,kBAA1C,SAA+D,W,IA8IhEE,E,kDAvIX,WAAYzK,GAAQ,IAAD,8BACf,cAAMA,IASVmC,kBAAoB,WAChB,IAAIuI,EAASC,aAAaC,QAAQ,UAC9BC,EAAQF,aAAaC,QAAQ,SAC7BF,GAAUG,GACV,EAAKzE,SAAS,CAAEsE,OAAQA,IACxB,EAAKI,wBAAwBJ,IAE7B,EAAKK,wBAAwBL,IAjBlB,EAqBnBI,wBAA0B,SAACJ,GACvB7D,MAAM,yCAAD,OACwC6D,EADxC,YAID,CACIM,OAAQ,MACRC,YAAa,UACbC,QAAS,IAAIC,QAAQ,CACjBC,cAAeT,aAAaC,QAAQ,SACpC,eAAgB,mBAChB,UAAW,2CAIlBxK,MAAK,SAAC0G,GAAD,OAAcA,EAASC,UAC5B3G,MAAK,SAACsG,GACHtC,QAAQC,IAAIqC,GAEZ,EAAKN,SAAS,CACViF,MAAK,OAAE3E,QAAF,IAAEA,OAAF,EAAEA,EAAKO,KACZqE,SAAS,QA1CN,EA+CnBP,wBAA0B,WACtB,IAAIQ,EAAUxK,KAAKyK,MAAMb,aAAaC,QAAQ,kBAC9C,EAAKxE,SAAS,CACViF,MAAOE,EACPD,SAAS,KAhDb,EAAKtG,MAAQ,CACTqG,WAAO7F,EACP8F,SAAS,EACTZ,YAAQlF,GANG,E,0CAuDnB,WACI,GAAI5E,KAAKoE,MAAMqG,MAAO,CAClB,IAAII,EAAW,cAAC,WAAD,IAiBf,OAPIA,EATC7K,KAAK0K,QAUF,qBAAK1M,UAAU,SAAf,SACI,qBAAK+K,IAAI,4BAA4BE,IAAI,OAVtCjJ,KAAKoE,MAAMqG,MAAM5D,KAAI,SAACwC,GAC7B,OACI,8BACI,cAACF,EAAD,CAAmBE,KAAMA,KADnBA,EAAKxI,OAakB,IAAzCiK,OAAOC,KAAK/K,KAAKoE,MAAMqG,OAAO7E,OAE1B,gCACI,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAACjF,EAAA,EAAOC,IAAR,CACI5C,UAAU,MACV8C,QAAS,CAAE0I,QAAS,GACpBzI,QAAS,CAAEyI,QAAS,GACpBtI,KAAM,CAAEsI,QAAS,GAJrB,SAMI,gCACI,qBAAKT,IAAKiC,EAAQhN,UAAU,OAAOiL,IAAI,WACvC,mBAAGjL,UAAU,YAAb,0DAOZ,gCACI,sBAAKA,UAAU,SAAf,UACI,qBAAKA,UAAU,iBACd6M,KAEL,cAAC,EAAD,IACA,cAAC,EAAD,OAIZ,IAAIpB,EACA,gCACI,qBAAKV,IAAKiC,EAAQhN,UAAU,OAAOiL,IAAI,WACvC,mBAAGjL,UAAU,YAAb,qDAUR,OAPIgC,KAAKoE,MAAMsG,UACXjB,EACI,qBAAKzL,UAAU,SAAf,SACI,qBAAK+K,IAAI,4BAA4BE,IAAI,QAKjD,gCACI,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAACtI,EAAA,EAAOC,IAAR,CACI5C,UAAU,MACV8C,QAAS,CAAE0I,QAAS,GACpBzI,QAAS,CAAEyI,QAAS,GACpBtI,KAAM,CAAEsI,QAAS,GAJrB,SAMKC,W,GAhIHpI,aCpCP4J,MAZf,WACC,OACC,qBAAKjN,UAAU,MAAf,SACC,yBAAQA,UAAU,aAAlB,UACC,qBAAK+K,IAAKG,EAAMlL,UAAU,OAAOiL,IAAI,SACrC,4CACA,cAAC,IAAD,CAAMjC,GAAG,IAAT,4C,MCDakE,MAPjB,WACI,OACE,sDCKWC,MAPjB,WACI,OACE,gDCASC,MAHf,WACC,OAAO,yDAA4B,Q,iBCsDrBC,E,4MA3Cd9J,kBAAoB,WACnB,EAAK+J,U,EAGNA,OAAS,WACR,IAAIC,GAAY,EACVtB,EAAQF,aAAaC,QAAQ,SACnC,GAAIC,EAAO,CACV,IAAIuB,EAAeC,IAAIC,OAAOzB,EAAO,CAAE0B,UAAU,IAC7CC,EAAU,IAAIC,KAClBrI,QAAQC,IAAI+H,EAAcI,EAAQE,UAAY,KAC1CN,EAAaO,QAAQC,KAAOJ,EAAQE,UAAY,MACnDP,GAAY,IAGI,IAAdA,IACH/H,QAAQC,IAAI,QACZ,EAAKrE,MAAMuL,QAAQtF,KAAnB,c,EAGFyC,OAAS,WACR,OACC,eAACnH,EAAA,EAAOC,IAAR,CAAYM,KAAM,CAAEsI,QAAS,GAA7B,UACC,qBAAKxL,UAAU,aAAf,SACC,qBAAK+K,IAAKG,EAAMlL,UAAU,OAAOiL,IAAI,WAEtC,qBAAKjL,UAAU,kBAAf,uBACA,cAAC,IAAD,CAAMgJ,GAAG,UAAUhJ,UAAU,iBAA7B,SACC,cAAC,EAAD,MAED,cAAC,IAAD,CAAMgJ,GAAG,UAAUhJ,UAAU,iBAA7B,SACC,cAAC,EAAD,MAED,cAAC,IAAD,CAAMgJ,GAAG,WAAWhJ,UAAU,oBAA9B,SACC,cAAC,EAAD,MAED,qBAAKA,UAAU,cAAf,SACC,qBAAK+K,IAAKiC,EAAQhN,UAAU,OAAOiL,IAAI,iB,YAtCxB3J,IAAM+B,W,yHCT1B4K,KAAEC,MAAQD,KAAEE,KAAKC,OAAO,CACvBC,QAAS,GAETC,WAAY,SAAUC,EAAMF,GAE3BJ,KAAEO,WAAWxM,KAAMqM,GACnBrM,KAAKyM,gBAAiB,EACtBzM,KAAK0M,SAASH,IAGfI,QAAS,WACR,OAAO3M,KAAK4M,SAGbC,QAAS,SAAUN,EAAMF,GAGxB,OAFArM,KAAKyM,gBAAiB,EACtBzM,KAAK0M,SAASH,GACPvM,KAAK8M,UAGbC,UAAW,WACV,OAAO/M,KAAKgN,SAGbN,SAAU,SAAUH,GAEnBvM,KAAK4M,QAAUL,EACfvM,KAAKgN,QAAUhN,KAAKiN,kBAGrBA,eAAgB,WAMf,IAJA,IACIC,EACAC,EACAC,EAHAC,EAAQ,IAAIpB,KAAEqB,aAITrI,EAAI,EAAGA,EAAIjF,KAAK4M,QAAQhH,OAAQX,IAExC,GAAoB,iBADpBmI,EAAQpN,KAAK4M,QAAQ3H,KACWmI,aAAiBG,OAChDJ,EAAcC,OACR,GAAmB,KAAfD,EACVE,EAAMjB,OAAO,CAACc,EAAUM,IAAKJ,EAAM,KACnCF,EAAY,IAAIjB,KAAEwB,OAAOP,EAAUM,IAAKJ,EAAM,SACxC,GAAmB,KAAfD,EACVE,EAAMjB,OAAO,CAACgB,EAAM,GAAIF,EAAUQ,MAClCR,EAAY,IAAIjB,KAAEwB,OAAOL,EAAM,GAAIF,EAAUQ,UACvC,GAAmB,KAAfP,EAAoB,CAC9B,IAAIQ,EAAgB,IAAI1B,KAAEwB,OAAOL,EAAM,GAAIA,EAAM,IACjDA,EAAQpN,KAAK4M,UAAU3H,GACvB,IAAI2I,EAAgB,IAAI3B,KAAEwB,OAAOL,EAAM,GAAIA,EAAM,IACjDA,EAAQpN,KAAK4M,UAAU3H,GACvB,IAAI4I,EAAW,IAAI5B,KAAEwB,OAAOL,EAAM,GAAIA,EAAM,IAE5CC,EAAMjB,OAAOuB,GACbN,EAAMjB,OAAOwB,GACbP,EAAMjB,OAAOyB,GAEbA,EAASF,cAAgBA,EACzBE,EAASD,cAAgBA,EACzBV,EAAYW,OACN,GAAmB,KAAfV,EAAoB,CAC1BS,EAAgB,IAAI3B,KAAEwB,OAAOL,EAAM,GAAIA,EAAM,IACjDA,EAAQpN,KAAK4M,UAAU3H,GACnB4I,EAAW,IAAI5B,KAAEwB,OAAOL,EAAM,GAAIA,EAAM,IAExCO,EAAgBT,EACpB,GAAIA,EAAUU,cAAe,CAC5B,IAAIE,EAAUZ,EAAUM,IAAMN,EAAUU,cAAcJ,IAClDO,EAAUb,EAAUQ,IAAMR,EAAUU,cAAcF,IACtDC,EAAgB,IAAI1B,KAAEwB,OACrBP,EAAUM,IAAMM,EAChBZ,EAAUQ,IAAMK,GAIlBV,EAAMjB,OAAOuB,GACbN,EAAMjB,OAAOwB,GACbP,EAAMjB,OAAOyB,GAEbA,EAASF,cAAgBA,EACzBE,EAASD,cAAgBA,EACzBV,EAAYW,OACN,GAAmB,KAAfV,EAAoB,CAC9B,IAAIa,EAAe,IAAI/B,KAAEwB,OAAOL,EAAM,GAAIA,EAAM,IAChDA,EAAQpN,KAAK4M,UAAU3H,GACnB4I,EAAW,IAAI5B,KAAEwB,OAAOL,EAAM,GAAIA,EAAM,IAE5CC,EAAMjB,OAAO4B,GACbX,EAAMjB,OAAOyB,GAEbA,EAASG,aAAeA,EACxBd,EAAYW,OACN,GAAmB,KAAfV,EAAoB,CAC1BU,EAAW,IAAI5B,KAAEwB,OAAOL,EAAM,GAAIA,EAAM,IAExCY,EAAed,EACnB,GAAIA,EAAUc,aAAc,CACvBF,EAAUZ,EAAUM,IAAMN,EAAUc,aAAaR,IACjDO,EAAUb,EAAUQ,IAAMR,EAAUc,aAAaN,IACrDM,EAAe,IAAI/B,KAAEwB,OACpBP,EAAUM,IAAMM,EAChBZ,EAAUQ,IAAMK,GAIlBV,EAAMjB,OAAO4B,GACbX,EAAMjB,OAAOyB,GAEbA,EAASG,aAAeA,EACxBd,EAAYW,OAEZR,EAAMjB,OAAOgB,GACbF,EAAY,IAAIjB,KAAEwB,OAAOL,EAAM,GAAIA,EAAM,IAG3C,OAAOC,GAIRY,UAAW,WACV,OAAOjO,KAAKgN,QAAQiB,aAGrBC,QAAS,WAEHlO,KAAKmO,MAGVnO,KAAKoO,eAGNA,YAAa,WAEZpO,KAAKqO,UAAUC,aAAatO,OAG7BuO,SAAU,WAET,IAAInB,EAAOoB,EAAWC,EAAYC,EAElC1O,KAAK2O,QAAU,GAEf,IAAK,IAAI1J,EAAI,EAAGA,EAAIjF,KAAK4M,QAAQhH,OAAQX,IAExC,GAAoB,iBADpBmI,EAAQpN,KAAK4M,QAAQ3H,KACWmI,aAAiBG,OAChDvN,KAAK2O,QAAQtJ,KAAK+H,GAClBqB,EAAarB,MACP,CACN,OAAQA,EAAMxH,QACb,KAAK,EACJ8I,EAAW1O,KAAKmO,KAAKS,mBAAmBxB,GACxCoB,EAAYpB,EACZ,MACD,KAAK,EACc,KAAdqB,GACHC,EAAW1O,KAAKmO,KAAKS,mBAAmB,CACvCJ,EAAU,GACVpB,EAAM,KAEPoB,EAAY,CAACA,EAAU,GAAIpB,EAAM,MAEjCsB,EAAW1O,KAAKmO,KAAKS,mBAAmB,CACvCxB,EAAM,GACNoB,EAAU,KAEXA,EAAY,CAACpB,EAAM,GAAIoB,EAAU,KAIpCxO,KAAK2O,QAAQtJ,KAAKqJ,OAMtBzC,KAAE4C,MAAQ,SAAUtC,EAAMF,GACzB,OAAO,IAAIJ,KAAEC,MAAMK,EAAMF,IAG1BJ,KAAE6C,IAAIC,QAAQ,CAEbT,aAAc,SAAUU,GAEvB,GADAhP,KAAK0M,SAASsC,EAAOhP,KAAKiP,mBAAmBD,EAAML,UAC/CK,EAAM3C,QAAQtL,QAAS,CAC1B,IAAIwL,EAAOyC,EAAME,MACbtJ,EAAS2G,EAAK4C,iBAEbH,EAAM3C,QAAQ+C,YAClB7C,EAAK7N,MAAM2Q,gBAAkBzJ,EAAS,IAAMA,GAGzCoJ,EAAMvC,iBACTF,EAAKxL,QACJ,CAAC,CAAEuO,iBAAkB1J,GAAU,CAAE0J,iBAAkB,IACnDN,EAAM3C,QAAQtL,SAEfiO,EAAMvC,gBAAiB,KAK1BwC,mBAAoB,SAAUM,GAI7B,IAHA,IAAIC,EACHf,EACAgB,EAAM,GACExK,EAAI,EAAGA,EAAIsK,EAAO3J,OAAQX,IAElC,GAAoB,iBADpBuK,EAAQD,EAAOtK,KACiBuK,aAAiBjC,OAEhDkC,GADAhB,EAAae,OAGb,OAAQf,GACP,IAAK,IACJgB,GAAOD,EAAME,EAAI,IACjB,MACD,IAAK,IACJD,GAAOD,EAAMG,EAAI,IACjB,MACD,QACCF,GAAOD,EAAME,EAAI,IAAMF,EAAMG,EAAI,IAKrC,OAAOF,GAAO,U,IC5NVvD,G,0KACL,SAAqB9M,GACpB,IAAQwQ,EAAkCxQ,EAAlCwQ,UAAWC,EAAuBzQ,EAAvByQ,OAAWxD,EAA9B,YAA0CjN,EAA1C,wBACA,OAAO6M,KAAE4C,MAAMe,EAAWC,EAAQ7P,KAAK8P,WAAWzD,M,kCAGnD,SAAqB0D,EAAWC,GAC3BA,EAAQJ,YAAcG,EAAUH,WACnC5P,KAAKiQ,eAAepD,QAAQmD,EAAQJ,WAErC5P,KAAKkQ,kBAAkBH,EAAWC,O,GAVhB7D,MAcpBD,GAAMiE,UAAY,CACjBC,SAAUC,KAAUC,UAAU,CAC7BD,KAAUE,QAAQF,KAAUG,MAC5BH,KAAUG,OAEXX,OAAQQ,KAAUI,OAClBb,UAAWS,KAAUK,MAAMC,YAGbC,oBAAY1E,ICiVZ2E,I,kNApWXhK,SAAMjC,E,EACNR,MAAQ,CACJ0M,KAAM,GACNC,YAAQnM,EACRoM,aAAc,EACdnK,SAAKjC,G,EAGTqM,gBAAkB,SAACC,GACf,OAAQA,GACJ,IAAK,WACD,MAAO,kBACX,IAAK,QACD,MAAO,iBACX,IAAK,QACD,MAAO,QACX,IAAK,OACD,MAAO,yBACX,IAAK,QACD,MAAO,iBACX,QACI,MAAO,kB,EAInBC,iBAAmB,SAACD,GAChB,OAAQA,GACJ,IAAK,WACD,MAAO,UACX,IAAK,QACD,MAAO,QACX,IAAK,QACD,MAAO,QACX,IAAK,OACD,MAAO,SACX,IAAK,QACD,MAAO,SACX,QACI,OAAOA,I,EAGnBE,eAAiB,SAACF,GACd,OAAQA,GACJ,IAAK,QACD,MAAO,YACX,IAAK,YACD,MAAO,aACX,IAAK,OACD,MAAO,YACX,QACI,OAAOA,I,EAInBG,cAAgB,WACZ,IAAIC,EAAS,cAAC,IAAMpN,SAAP,IA4Eb,OA3EI,EAAK9E,MAAMmS,WACXD,EAAS,EAAKlS,MAAMmS,SAAS1K,KAAI,SAAC2K,GAAa,IAAD,gBACtCC,EAAW,oCAQf,OAPI,UAAAD,EAAQE,0BAAR,eAA4BC,OAAQ,KACpCF,EAAW,uCAEX,UAAAD,EAAQE,0BAAR,eAA4BC,OAAQ,MACpCF,EAAW,mCAIX,cAAC,IAAD,UACI,sBAAKzT,UAAU,0BAAf,UACI,sBAAKA,UAAU,qBAAf,UACI,sBAAMC,MAAM,iBAAZ,SACK,EAAKgT,gBAAgBO,EAAQI,aAGlC,sBAAK5T,UAAU,qBAAf,UACI,sBAAMA,UAAU,6BAAhB,SACKwT,EAAQK,eAAe,GAAGC,cAE/B,uBAAM9T,UAAU,+BAAhB,0BACkB,EAAKmT,iBAAiBK,EAAQI,oBAIxD,sBAAK5T,UAAU,+BAAf,UACI,sBAAKA,UAAU,uBAAf,UACI,qBAAKA,UAAU,wBACf,qBAAKA,UAAU,uBACf,qBAAKA,UAAU,sCAEnB,sBAAKA,UAAU,oCAAf,UACI,qBAAKA,UAAU,wBAAf,SACI,iCACKwT,EAAQO,OAAOC,aAAaC,KADjC,IACwC,IACnCT,EAAQO,OAAOC,aAAaE,aAGrC,sBAAKlU,UAAU,2BAAf,UACK,EAAKoT,eAAL,UAAoBI,EAAQO,cAA5B,aAAoB,EAAgBpQ,MACpC,KAFL,UAGK6P,EAAQO,cAHb,aAGK,EAAgBxI,QAGrB,qBAAKvL,UAAU,sCAAf,SACI,iCACKwT,EAAQW,MAAMH,aAAaC,KADhC,IACuC,IAClCT,EAAQW,MAAMH,aAAaE,aAGpC,sBAAKlU,UAAU,2BAAf,UACK,EAAKoT,eAAL,UAAoBI,EAAQW,aAA5B,aAAoB,EAAexQ,MACnC,KAFL,UAGK6P,EAAQW,aAHb,aAGK,EAAe5I,cAI5B,qBAAKvL,UAAU,sBAAf,SAAsC,MACtC,sBAAKA,UAAU,4BAAf,UACI,qBAAKA,UAAWyT,IAChB,gCAAMW,KAAKC,MAAMb,EAAQc,KAAKX,OAA9B,UACA,iCACK,UAAAH,EAAQE,0BAAR,eAA4BC,OAAQ,EAC/BS,KAAKC,MAAL,UAAWb,EAAQE,0BAAnB,aAAW,EAA4BC,OACvC,MAAO,IAHjB,SAIW,mBAQ5BL,G,EAGXiB,kBAAoB,SAACC,EAAQC,GAAW,IAAD,EAE/BC,EAAOC,SAASC,uBAAuB,oBACvCF,EAAK,IACLA,EAAK,GAAGG,eAAe,CAAEC,SAAU,WAEvCtP,QAAQC,IAAIgP,GACRA,IAAK,UAAI,EAAKrT,MAAMmS,gBAAf,aAAI,EAAqB3L,QAC9B,EAAKxB,MAAM2M,OAAOgC,QAAQN,EAAQ,EAAG,KAErC,EAAKrO,MAAM2M,OAAOgC,QAAQN,EAAO,KAErC,IAAI3B,EAAO,EACX,GAAI,EAAK1R,MAAMmS,UAAY,EAAKnS,MAAMmS,SAASkB,GAAQ,CACnD,IAAIO,EAAI,EAAK5T,MAAMmS,SAASkB,GAC5BjP,QAAQC,IACJ,CAACuP,EAAEb,MAAMH,aAAaiB,SAAUD,EAAEb,MAAMH,aAAakB,WACrD,CAACF,EAAEjB,OAAOC,aAAaiB,SAAUD,EAAEjB,OAAOC,aAAakB,YAE3DpC,EAAOqC,GACH,CAACH,EAAEb,MAAMH,aAAaiB,SAAUD,EAAEb,MAAMH,aAAakB,WACrD,CAACF,EAAEjB,OAAOC,aAAaiB,SAAUD,EAAEjB,OAAOC,aAAakB,YAG/D1P,QAAQC,IAAIqN,GACZ,EAAKjK,IAAIoJ,eAAemD,MAAMZ,EAAQ1B,EAAM,CAAE7P,SAAU,M,EAG5DoS,cAAgB,SAACZ,GACb,EAAKjN,SAAS,CAAEwL,aAAcyB,IAC9B,IAAI3B,EAAO,EACX,GAAI,EAAK1R,MAAMmS,UAAY,EAAKnS,MAAMmS,SAASkB,GAAQ,CACnD,IAAIO,EAAI,EAAK5T,MAAMmS,SAASkB,GAE5B3B,EAAOqC,GACH,CAACH,EAAEb,MAAMH,aAAaiB,SAAUD,EAAEb,MAAMH,aAAakB,WACrD,CAACF,EAAEjB,OAAOC,aAAaiB,SAAUD,EAAEjB,OAAOC,aAAakB,YAG3D,IAAI1F,GACC8F,WAAWN,EAAEjB,OAAOC,aAAaiB,UAC9BK,WAAWN,EAAEb,MAAMH,aAAaiB,WACpC,EACAM,GACCD,WAAWN,EAAEjB,OAAOC,aAAakB,WAC9BI,WAAWN,EAAEb,MAAMH,aAAakB,YACpC,EACJ1P,QAAQC,IAAIqN,GACZ,EAAKjK,IAAIoJ,eAAemD,MAAM,CAAC5F,EAAK+F,GAAOzC,EAAM,CAAE7P,SAAU,O,EAIrEuS,cAAgB,WACZ,IAAIC,EAAU,cAAC,IAAMvP,SAAP,IA8Gd,OA7GI,EAAK9E,MAAMmS,WACXkC,EAAU,EAAKrU,MAAMmS,SAAS1K,KAAI,SAAC2K,EAASvM,GAAO,IAAD,gBAO1CyO,EACAC,EAPAC,EAAU,cAAC,IAAM1P,SAAP,IACV2P,EAAOP,WAAU,OAAC9B,QAAD,IAACA,GAAD,UAACA,EAASW,aAAV,iBAAC,EAAgBH,oBAAjB,aAAC,EAA8BiB,UAChDa,EAAQR,WAAU,OAAC9B,QAAD,IAACA,GAAD,UAACA,EAASW,aAAV,iBAAC,EAAgBH,oBAAjB,aAAC,EAA8BkB,WACjDa,EAAU,cAAC,IAAM7P,SAAP,IACV8P,EAAOV,WAAU,OAAC9B,QAAD,IAACA,GAAD,UAACA,EAASO,cAAV,iBAAC,EAAiBC,oBAAlB,aAAC,EAA+BiB,UACjDgB,EAAQX,WAAU,OAAC9B,QAAD,IAACA,GAAD,UAACA,EAASO,cAAV,iBAAC,EAAiBC,oBAAlB,aAAC,EAA+BkB,WAGlDgB,EAAS,EACTjP,IAAM,EAAKb,MAAM4M,cACjB0C,EAAO,IAAIzH,KAAEkI,KAAK,CACdC,QAAS,wBACTC,cAAe,wBACfC,SAAU,IAAIrI,KAAEsI,MAAM,GAAI,IAC1BvW,UAAW,sBAEf2V,EAAQ,IAAI1H,KAAEkI,KAAK,CACfC,QAAS,wBACTC,cAAe,yBACfC,SAAU,IAAIrI,KAAEsI,MAAM,GAAI,IAC1BvW,UAAW,sBAEfkW,EAAS,IAETR,EAAO,IAAIzH,KAAEkI,KAAK,CACdC,QAAS,yBACTC,cAAe,yBACfC,SAAU,IAAIrI,KAAEsI,MAAM,GAAI,IAC1BvW,UAAW,sBAEf2V,EAAQ,IAAI1H,KAAEkI,KAAK,CACfC,QAAS,yBACTC,cAAe,yBACfC,SAAU,IAAIrI,KAAEsI,MAAM,GAAI,IAC1BvW,UAAW,uBAIf6V,GAAQC,IACRF,EACI,cAACY,EAAA,EAAD,CACIC,aAAcP,EACdR,KAAMA,EACN/U,SAAU,CAACkV,EAAMC,GACjB3S,QAAS,kBACL,EAAKoR,kBACD,CACIe,WAAW9B,EAAQW,MAAMH,aAAaiB,UACtCK,WAAW9B,EAAQW,MAAMH,aAAakB,YAE1CjO,EAAI,OAQpB+O,GAAQC,IACRF,EACI,cAACS,EAAA,EAAD,CACIC,aAAcP,EACdR,KAAMC,EACNhV,SAAU,CAACqV,EAAMC,GACjB9S,QAAS,kBACL,EAAKoR,kBACD,CACIe,WAAW9B,EAAQO,OAAOC,aAAaiB,UACvCK,WAAW9B,EAAQO,OAAOC,aAAakB,YAE3CjO,OASpB,IACIyP,EAAS/B,SAASC,uBAAuB,uBAQ7C,OANI8B,GAAUA,EAAOzP,IAAMA,IAAM,EAAKb,MAAM4M,aACxC0D,EAAOzP,GAAG0P,aAAa,SAAU,WAC1BD,GAAUA,EAAOzP,IACxByP,EAAOzP,GAAG0P,aAAa,SAAU,WAIjC,eAAC,IAAMzQ,SAAP,WACI,qBAAKlG,UAAU,OAAf,SACI,cAAC,GAAD,CACI4R,UAAWgF,GAAgBZ,EAAMC,EAAOJ,EAAMC,GAC9CjE,OAAQ,CACJlG,MAfR,UAgBQkL,MAAM,EAENnO,MAAO,SAIlBkN,EACAG,SAKVN,G,EAGX3L,OAAS,WACL,OACI,sBAAK9J,UAAU,wBAAf,UACI,qBAAKA,UAAU,0CAAf,SACI,uBAAMA,UAAU,gCAAhB,uCAEI,sBAAMA,UAAU,sBAAhB,SACKsV,WAAW,EAAKlU,MAAM0V,sBAAsBC,QAAQ,KAH7D,mBAMI,sBAAM/W,UAAU,sBAAhB,SACKsV,WACuC,IAAlC,EAAKlU,MAAM0V,qBAA+B,GAAQ,KACtDC,QAAQ,KATlB,gCAeJ,eAACC,EAAA,EAAD,CACIC,OAAQ,CAAC,QAAS,KAClBnE,KAAM,EACNoE,QAAS,EACTC,iBAAiB,EACjBC,UAAW,CACP,EAAE,IAAK,KACP,CAAC,GAAI,MAETC,mBAAoB,EACpBhW,IAAK,SAACA,GACF,EAAKwH,IAAMxH,EACX,EAAKD,MAAMkW,aAAajW,IAE5BkW,YAAa,SAAC1O,GAAD,OAAS,EAAKrB,SAAS,CAAEqB,SAd1C,UAgBI,cAAC2O,EAAA,EAAD,CACIC,YAAY,4DACZC,IAAI,kFAGP,EAAKlC,mBAEV,cAAC,IAAD,CACImC,aAAc,GACdC,cAAe,IACfC,gBAAgB,EAChBxC,cAAe,SAACpO,GAAD,OAAO,EAAKoO,cAAcpO,EAAE6Q,cAC3CC,SAAU,SAAChF,GAAD,OAAY,EAAKvL,SAAS,CAAEuL,OAAQA,KALlD,SAOK,EAAKM,sB,YA9VC/R,IAAM+B,YAyXjC,SAAS2U,GAASC,GACd,OAAQA,EAAS7D,KAAK8D,GAAM,IAGhC,SAAS/C,GAAagD,EAAQC,GAC1B,IAAIC,EAvBR,SAAqBF,EAAQC,GAEzB,IAAIE,EAAON,GAASG,EAAO,IACvBtC,EAAOmC,GAASG,EAAO,IACvBI,EAAOP,GAASI,EAAY,IAC5BpC,EAAOgC,GAASI,EAAY,IAE5BI,EAAWxC,EAAOH,EAClB4C,EAAWF,EAAOD,EAElBvS,EACAqO,KAAKsE,IAAItE,KAAKuE,IAAIH,EAAW,GAAI,GACjCpE,KAAKwE,IAAI/C,GAAQzB,KAAKwE,IAAI5C,GAAQ5B,KAAKsE,IAAItE,KAAKuE,IAAIF,EAAW,GAAI,GAGvE,OAFQ,EAAIrE,KAAKyE,KAAKzE,KAAK0E,KAAK/S,IAUjBgT,CAAYZ,EAAQC,GAEnC,OADA5S,QAAQC,IAAI4S,GACL,EAAIjE,KAAK0E,KAAgB,IAAXT,GAGzB,SAASzB,GAAgBf,EAAMC,EAAOE,EAAMC,GACxC,IAAI+C,EAAU,CAACnD,EAAMC,GACjBmD,EAAU,CAACjD,EAAMC,GAEjBiD,EAAUD,EAAQ,GAAKD,EAAQ,GAC/BG,EAAUF,EAAQ,GAAKD,EAAQ,GAE/BI,EAAIhF,KAAK0E,KAAK1E,KAAKsE,IAAIQ,EAAS,GAAK9E,KAAKsE,IAAIS,EAAS,IACvDE,EAAQjF,KAAKkF,MAAMH,EAASD,GAI5BK,EAAKH,EAAI,EAAIhF,KAAKwE,IAFJ,MAGdY,EAASH,EAHK,KAKdI,EAAYF,EAAKnF,KAAKwE,IAAIY,GAAUR,EAAQ,GAKhD,MAAO,CAAC,IAAKA,EAAS,IAFD,CAFLO,EAAKnF,KAAKuE,IAAIa,GAAUR,EAAQ,GAEfS,GAEUR,G,qBChahC,ICUf,SAASS,GAAT,GAAgC,IACxBtO,EACAuO,EAFetO,EAAQ,EAARA,KAanB,OAVIA,EAAKuO,WAAa,IAClBxO,EAAa,MACbuO,EAAa,WACNtO,EAAKuO,UAAY,IAAMvO,EAAKuO,UAAY,IAC/CxO,EAAa,SACbuO,EAAa,UAEbvO,EAAa,QACbuO,EAAa,SAGb,sBAAK3Z,UAAU,qCAAf,UACI,sBAAKA,UAAU,4BAAf,UACI,qBAAKU,MAAO,CAAEiL,MAAOP,GAArB,oBACA,sBAAKpL,UAAU,iCAAf,UAAiDqL,EAAKuO,UAAtD,aAEJ,qBAAK5Z,UAAU,mCAAf,SAAmD2Z,O,IAysBhDE,G,4MAnsBXzT,MAAQ,CACJ2M,YAAQnM,EACRoM,aAAc,EACdnP,WAAO+C,EACPkT,eAAe,EACfC,UAAW,I,EAGf9G,gBAAkB,SAACC,GACf,OAAQA,GACJ,IAAK,iBACD,MAAO,YACX,IAAK,QACD,OAAI,EAAK9M,MAAM0T,cAAsB,gBACzB,kBAChB,IAAK,eACD,MAAO,YACX,IAAK,eACD,MAAO,QACX,IAAK,aACD,MAAO,uBACX,IAAK,iBACD,MAAO,gBACX,IAAK,QACD,MAAO,iBACX,IAAK,YACD,MAAO,cACX,IAAK,cACD,MAAO,cACX,IAAK,YACD,MAAO,iBACX,QACI,MAAO,e,EAInBE,SAAW,SAACC,GACR,OAAIA,EAAO,GACA,QAEPA,GAAQ,GACD,MAEJ,U,EAGXC,eAAiB,SAACD,GACd,OAAIA,EAAO,GACA,QAEPA,GAAQ,GACD,MAEJ,U,EAGXE,SAAW,SAACF,GACR,OAAIA,EAAO,GACA,MAEPA,GAAQ,GACD,UAEJ,S,EAGXG,eAAiB,SAACH,GACd,OAAIA,EAAO,GACA,cAEPA,GAAQ,GACD,gBAEJ,gB,EAGXI,wBAA0B,SAACJ,GACvB,OAAIA,EAAO,EACA,gBAEPA,GAAQ,EACD,cAEJ,gB,EAGXK,wBAA0B,SAACL,GACvB,OAAIA,EAAO,EACA,QAEPA,GAAQ,EACD,MAEJ,U,EAGX5G,cAAgB,WAAO,IAAD,MAMhB,MALEC,EAAS,cAAC,IAAMpN,SAAP,IAGT,EAAK9E,MAAMmZ,eACX,YAAKnZ,MAAMmZ,oBAAX,mBAAyBC,mBAAzB,mBAAsCC,iBAAtC,eAAiDC,WAAW9S,SAAU,IAEtE0L,EAAM,UAAG,EAAKlS,MAAMmZ,oBAAd,iBAAG,EAAyBC,mBAA5B,iBAAG,EAAsCC,iBAAzC,aAAG,EAAiDC,WAAW7R,KAAI,SAACR,GACtE,IAAIsS,EAAa,GAYjB,OAXItS,EAAKuS,YACLD,EAAatS,EAAKuS,UAAUrS,MAAM,KAAK,IAGvCoS,EADAA,GAA4B,WAAdA,EACD,aACNA,GAA4B,WAAdA,EACR,iBAEA,GAIb,8BACI,cAAC,IAAD,UACI,sBAAK3a,UAAU,+BAAf,UACI,qBAAKA,UAAU,yBAAf,SACI,sBAAMC,MAAM,gCAAZ,SACK,EAAKgT,gBAAgB,QAG9B,sBAAKjT,UAAU,4BAAf,UACI,qBAAKA,UAAU,qBAAf,gBACKqI,QADL,IACKA,OADL,EACKA,EAAMwS,SAAStS,MAAM,KAAK,KAE/B,sBAAKvI,UAAU,mBAAf,+BACgBqI,QADhB,IACgBA,OADhB,EACgBA,EAAMyS,2BAGtB,sBAAK9a,UAAU,8BAAf,UACI,sBACIA,UAAU,wBACVU,MAAO,CACHiL,MAAO,EAAKqO,SAAL,OAAc3R,QAAd,IAAcA,OAAd,EAAcA,EAAMyS,0BAHnC,oBAQA,qBAAK9a,UAAU,oBAAf,SACK,EAAKma,SAAL,OAAc9R,QAAd,IAAcA,OAAd,EAAcA,EAAMyS,8BAG7B,sBAAK9a,UAAU,2BAAf,UACK2a,EACD,qBAAK3a,UAAU,uCAAf,SACK,EAAKiT,gBAAgB0H,sBAU1D,OAAOrH,G,EAcX7J,uBAAyB,WACrB,EAAKjC,SAAS,CAAE3D,MAAOc,OAAOoW,c,EAGlCC,sBAAwB,SAACC,EAAaC,EAAMvX,GACxC,OACI,sBAAK3D,UAAU,+BAAf,UACI,sBAAKA,UAAU,4BAAf,UACI,qBAAKA,UAAU,0BAAf,SACI,qBAAKA,UAAU,uCAAf,SACK,EAAKiT,gBAAgBtP,OAG9B,sBAAK3D,UAAU,2BAAf,UACI,sBAAKA,UAAU,gCAAf,iBAAoD2D,KACpD,qBAAK3D,UAAU,iCAAf,kCAGR,sBAAKA,UAAU,6BAAf,UACI,sBAAKA,UAAU,gDAAf,UACKsV,WAAW4F,GAAMnE,QAAQ,GAD9B,0BAGA,qBAAK/W,UAAU,sCAAf,SACI,cAAC,KAAD,CACImb,WAAY7F,WAAyB,IAAd2F,GAAmBlE,QAAQ,GAClDqE,YAAazW,OAAOoW,YAAc,EAAM,IACxClX,MAAO,GAAAc,OAAOoW,WACdM,SAAU,IAAA1W,OAAOoW,WACjBO,aAAc,CAAC,UAAW,sB,EAQlDC,2BAA6B,WAAO,IAAD,4BAS2B,YAQG,YASH,YASC,YASH,YASC,YASL,KA7DhDC,GAAmB,cAAC,IAAMtV,SAAP,IACnBuV,GAAiB,cAAC,IAAMvV,SAAP,IACjBwV,GAAoB,cAAC,IAAMxV,SAAP,IACpByV,GAAoB,cAAC,IAAMzV,SAAP,IACpB0V,GAAiB,cAAC,IAAM1V,SAAP,IACjB2V,GAAkB,cAAC,IAAM3V,SAAP,IAClB4V,GAAa,cAAC,IAAM5V,SAAP,KAEjB,UAAI,EAAK9E,MAAMmZ,oBAAf,iBAAI,EAAyBwB,kBAA7B,aAAI,EAAqCC,mBACrCR,GAAmB,EAAKR,uBACpB,YAAK5Z,MAAMmZ,oBAAX,mBAAyBwB,kBAAzB,eAAqCC,kBAArC,UACI,EAAK5a,MAAMmZ,oBADf,iBACI,EAAyBwB,kBAD7B,aACI,EAAqCE,WAF1B,UAGf,EAAK7a,MAAMmZ,oBAHI,iBAGf,EAAyBwB,kBAHV,aAGf,EAAqCC,gBACrC,iBAGR,UAAI,EAAK5a,MAAMmZ,oBAAf,iBAAI,EAAyBwB,kBAA7B,aAAI,EAAqCG,sBACrCT,GAAiB,EAAKT,uBAClB,YAAK5Z,MAAMmZ,oBAAX,mBAAyBwB,kBAAzB,eAAqCG,qBAArC,UACI,EAAK9a,MAAMmZ,oBADf,iBACI,EAAyBwB,kBAD7B,aACI,EAAqCE,WAF5B,UAGb,EAAK7a,MAAMmZ,oBAHE,iBAGb,EAAyBwB,kBAHZ,aAGb,EAAqCG,mBACrC,eAIR,UAAI,EAAK9a,MAAMmZ,oBAAf,iBAAI,EAAyBwB,kBAA7B,aAAI,EAAqCI,mBACrCT,GAAoB,EAAKV,uBACrB,YAAK5Z,MAAMmZ,oBAAX,mBAAyBwB,kBAAzB,eAAqCI,kBAArC,UACI,EAAK/a,MAAMmZ,oBADf,iBACI,EAAyBwB,kBAD7B,aACI,EAAqCE,WAFzB,UAGhB,EAAK7a,MAAMmZ,oBAHK,iBAGhB,EAAyBwB,kBAHT,aAGhB,EAAqCI,gBACrC,kBAIR,UAAI,EAAK/a,MAAMmZ,oBAAf,iBAAI,EAAyBwB,kBAA7B,aAAI,EAAqCK,oBACrCT,GAAoB,EAAKX,uBACrB,YAAK5Z,MAAMmZ,oBAAX,mBAAyBwB,kBAAzB,eAAqCK,mBAArC,UACI,EAAKhb,MAAMmZ,oBADf,iBACI,EAAyBwB,kBAD7B,aACI,EAAqCE,WAFzB,UAGhB,EAAK7a,MAAMmZ,oBAHK,iBAGhB,EAAyBwB,kBAHT,aAGhB,EAAqCK,iBACrC,kBAIR,UAAI,EAAKhb,MAAMmZ,oBAAf,iBAAI,EAAyBwB,kBAA7B,aAAI,EAAqCM,iBACrCT,GAAiB,EAAKZ,uBAClB,YAAK5Z,MAAMmZ,oBAAX,mBAAyBwB,kBAAzB,eAAqCM,gBAArC,UACI,EAAKjb,MAAMmZ,oBADf,iBACI,EAAyBwB,kBAD7B,aACI,EAAqCE,WAF5B,UAGb,EAAK7a,MAAMmZ,oBAHE,iBAGb,EAAyBwB,kBAHZ,aAGb,EAAqCM,cACrC,eAIR,UAAI,EAAKjb,MAAMmZ,oBAAf,iBAAI,EAAyBwB,kBAA7B,aAAI,EAAqCO,kBACrCT,GAAkB,EAAKb,uBACnB,YAAK5Z,MAAMmZ,oBAAX,mBAAyBwB,kBAAzB,eAAqCO,iBAArC,UACI,EAAKlb,MAAMmZ,oBADf,iBACI,EAAyBwB,kBAD7B,aACI,EAAqCE,WAF3B,UAGd,EAAK7a,MAAMmZ,oBAHG,iBAGd,EAAyBwB,kBAHX,aAGd,EAAqCO,eACrC,oBAIR,UAAI,EAAKlb,MAAMmZ,oBAAf,iBAAI,EAAyBwB,kBAA7B,aAAI,EAAqCE,aACrCH,GACI,uBAAM9b,UAAU,oBAAhB,iDAEI,sBAAMA,UAAU,sBAAhB,SACKsV,WAAU,UAAC,EAAKlU,MAAMmZ,oBAAZ,kBAAC,EAAyBwB,kBAA1B,cAAC,GAAqCE,WAAWlF,QAAQ,KAH5E,2BAsBR,OAXI,eAAC,IAAM7Q,SAAP,WACK4V,GACAN,GACAC,GACAC,GACAC,GACAC,GACAC,O,EAObU,oBAAsB,WAClB,EAAK/U,SAAS,CAAEsS,eAAgB,EAAK1T,MAAM0T,iB,EAG/C0C,uBAAyB,WAAO,IAAD,UAQkC,IAKe,MAZxE1U,EAAM,cAAC,IAAM5B,SAAP,IAENuW,OAAiB7V,EACjB8V,OAAuB9V,EACvB+V,OAA4B/V,EAC5BgW,EAAI,GAER,UAAI,EAAKxb,MAAMmZ,oBAAf,iBAAI,EAAyBwB,kBAA7B,aAAI,EAAqCG,sBACrCO,EAAiB,cAAM,EAAKrb,MAAMmZ,oBAAjB,iBAAM,EAAyBwB,kBAA/B,aAAM,EAAqCG,oBAC5DU,GAAK,IAGT,UAAI,EAAKxb,MAAMmZ,oBAAf,iBAAI,EAAyBC,mBAA7B,iBAAI,EAAsCqC,8BAA1C,aAAI,EAA8DC,YAC9DJ,EACI,IACA,YAAKtb,MAAMmZ,oBAAX,mBAAyBC,mBAAzB,mBAAsCqC,8BAAtC,eAA8DC,YACxD,EAAM,IAChBF,GAAK,GAELA,EAAI,IACCH,IACDA,EAAiB,GAEhBC,IACDA,EAAuB,IAE3BC,GAA6BF,EAAiBC,GAAwBE,GACtC,IAC5BD,EAA4B,GAE5BA,EAA4B,IAC5BA,EAA4B,IAIpC,IAGwB,IAHpBI,EAAkB,cAAC,IAAM7W,SAAP,IAClB8W,EAA4B,cAAC,IAAM9W,SAAP,IAE5BuW,EAAiB,IACjBM,EACI,sBAAK/c,UAAU,gDAAf,UACKsV,WAAU,UAAC,EAAKlU,MAAMmZ,oBAAZ,iBAAC,EAAyBwB,kBAA1B,aAAC,EAAqCG,oBAAoBnF,QAAQ,GADjF,2BAuBR,OAhBI2F,EAAuB,IACvBM,EACI,sBAAKhd,UAAU,iDAAf,gEAEI,sBACIU,MAAO,CACHiL,MAAO,EAAKuO,eAAe,IAA6B,IAAvBwC,IAFzC,SAKKtI,KAAKC,MAAM,GAA4B,IAAvBqI,KAPzB,YAcH,EAAKtb,MAAM6b,uBAAyBN,GACrCA,EAA4BvI,KAAKC,MAAkC,IAA5BsI,GAEnC,sBACI3c,UAAU,qCACVmD,QAAS,EAAKoZ,oBAFlB,UAII,sBAAKvc,UAAU,kCAAf,UACI,qBAAKA,UAAU,gCAAf,SACI,qBAAKA,UAAU,6CAAf,SACK,EAAKiT,gBAAgB,aAG9B,sBAAKjT,UAAU,iCAAf,UACI,qBAAKA,UAAU,sCAAf,iCAGA,qBAAKA,UAAU,uCAAf,SACK,EAAKoa,eAAeuC,QAG7B,qBACI3c,UAAU,uCACVU,MAAO,CACHiL,MAAO,EAAKuO,eAAe,IAAMyC,IAHzC,uBASJ,qBAAK3c,UAAU,kBAAf,SACI,qBAAKA,UAAU,kCAAf,SACK,EAAKiT,gBAAgB,aAI9B,sBACIjT,UACI,EAAKoG,MAAM0T,cAAgB,mBAAqB,sBAFxD,UAKI,sBAAK9Z,UAAU,mCAAf,UACI,qBAAKA,UAAU,wCAAf,2BAGA,sBAAKA,UAAU,4CAAf,UACI,cAAC,KAAD,CACImb,WAAY,IAAMwB,EAClBvB,YAAa,IAAAzW,OAAOoW,WACpBlX,MAAOc,OAAOoW,YAAc,EAAM,GAClCM,SAAU,EACVC,aAAc,CAAC,UAAW,aAE9B,uBAAMtb,UAAU,gCAAhB,UACK,IAAM2c,EADX,gBAKR,sBAAK3c,UAAU,2CAAf,UACK+c,EACAC,YAOdlV,G,EAGXoV,6BAA+B,WAAO,IAAD,MAC7BpV,EAAM,cAAC,IAAM5B,SAAP,IAEV,aAAI,EAAK9E,MAAMmZ,oBAAf,iBAAI,EAAyBC,mBAA7B,iBAAI,EAAsCC,iBAA1C,aAAI,EAAiDC,WAAY,CAAC,IAAD,MACzDX,EAAY,GACZzG,EAAU,IAAMpN,SAEpB,YAAK9E,MAAMmZ,oBAAX,mBAAyBC,mBAAzB,mBAAsCC,iBAAtC,SAAiDC,WAAW7R,KAAI,SAACR,GACzB,YAA5B,OAAJA,QAAI,IAAJA,OAAA,EAAAA,EAAMwS,SAAStS,MAAM,KAAK,KAC1BwR,EAAU1S,KAAV,OAAegB,QAAf,IAAeA,OAAf,EAAeA,EAAMwS,SAAStS,MAAM,KAAK,OAIjD+K,EAASyG,EACJoD,QAAO,SAAU9R,EAAM+R,GACpB,OAAOrD,EAAUsD,QAAQhS,IAAS+R,KAErCvU,KAAI,SAACR,GACF,IAAIiV,EAAY,GAIhB,OAHIvD,EAAUsD,QAAQhV,GAAQ0R,EAAUnS,OAAS,IAC7C0V,EAAY,OAGZ,cAAC,IAAMpX,SAAP,UACI,iCACKmC,EADL,IACYiV,UAOxBxV,EADAiS,EAAUnS,OAAS,EAEf,cAAC,IAAM1B,SAAP,UACI,qBAAKlG,UAAU,6BAAf,SACI,sBAAKA,UAAU,gDAAf,4CACgCsT,SAOxC,cAAC,IAAMpN,SAAP,UACI,qBAAKlG,UAAU,6BAAf,SACI,qBAAKA,UAAU,gDAAf,yDASpB,OAAO8H,G,EAGXyV,uBAAyB,WAAO,IAAD,MAGiC,YAFxDzV,EAAM,cAAC,IAAM5B,SAAP,IAEV,iBAAI,EAAK9E,MAAMmZ,oBAAf,iBAAI,EAAyBC,mBAA7B,iBAAI,EAAsCC,iBAA1C,aAAI,EAAiD9G,OAE7C,sBAAK3T,UAAU,+BAAf,UACI,sBAAKA,UAAU,4BAAf,UACI,qBAAKA,UAAU,0BAAf,SACI,qBAAKA,UAAU,uCAAf,SACK,EAAKiT,gBAAgB,QAG9B,sBAAKjT,UAAU,2BAAf,UACI,qBAAKA,UAAU,gCAAf,mCAGA,qBAAKA,UAAU,iCAAf,SACK,EAAKqa,wBAAL,UACG,EAAKjZ,MAAMmZ,oBADd,iBACG,EAAyBC,mBAD5B,iBACG,EAAsCC,iBADzC,aACG,EAAiD9G,YAI7D,qBACI3T,UAAU,uCACVU,MAAO,CACHiL,MAAO,EAAK2O,wBAAL,UACH,EAAKlZ,MAAMmZ,oBADR,iBACH,EAAyBC,mBADtB,iBACH,EAAsCC,iBADnC,aACH,EAAiD9G,QAJ7D,uBAWH,EAAKuJ,kCAIPpV,G,EAIfuN,cAAgB,SAACZ,GACb,EAAKjN,SAAS,CAAEwL,aAAcyB,K,EAGlC+I,uBAAyB,SAACC,GACX,IAAMvX,SAiCjB,OAhCMuX,EAAU5U,KAAI,SAACwC,GACjB,IAAIC,EAAc,aAAeD,EAAKxI,GAMtC,MAJgB,kBAAZwI,EAAKxI,KACLyI,GAAe,OAGfD,EAAKxI,KAAO,EAAKzB,MAAMuF,QAEnB,cAAC,IAAD,UACI,oBAAG+W,KAAMpS,EAAatL,UAAU,sBAAhC,UACI,8BACI,qBACI+K,IAAKM,EAAKsS,QACV3d,UAAU,4BACViL,IAAI,OAGZ,sBAAKjL,UAAU,2BAAf,UACI,uBAAOA,UAAU,4BAAjB,SAA8CqL,EAAKE,OACnD,uBAAOvL,UAAU,8BACjB,cAAC0Z,GAAD,CAAarO,KAAMA,OAEvB,qBAAKrL,UAAU,6BAAf,SAA6C,WAKlD,cAAC,IAAMkG,SAAP,Q,EAOnB0X,iBAAmB,WACf,IAAIC,EAAmB,cAAC,IAAM3X,SAAP,IAEvB,GACI,EAAK9E,MAAM0c,cACgB,WAA3B,EAAK1c,MAAM0c,cACgB,IAA3B,EAAK1c,MAAM0c,aACb,CACE,IAAIC,EAAiB,cAAC,IAAM7X,SAAP,IACjB8X,EAAiB,cAAC,IAAM9X,SAAP,IACjB+X,EAAiB,cAAC,IAAM/X,SAAP,IACjBgY,EAAiB,cAAC,IAAMhY,SAAP,IAgBrB,OAdA,EAAK9E,MAAM0c,aAAa/X,EAAEoY,MAAK,SAAUpY,EAAGqY,GACxC,OAAOA,EAAExE,UAAY7T,EAAE6T,aAG3B,EAAKxY,MAAM0c,aAAaM,EAAED,MAAK,SAAUpY,EAAGqY,GACxC,OAAOA,EAAExE,UAAY7T,EAAE6T,aAE3B,EAAKxY,MAAM0c,aAAaO,EAAEF,MAAK,SAAUpY,EAAGqY,GACxC,OAAOA,EAAExE,UAAY7T,EAAE6T,aAE3B,EAAKxY,MAAM0c,aAAaQ,EAAEH,MAAK,SAAUpY,EAAGqY,GACxC,OAAOA,EAAExE,UAAY7T,EAAE6T,aAGnB,EAAKxY,MAAMmd,UACf,IAAK,IACD,MACJ,IAAK,IACDR,EAAiB,EAAKP,uBAAuB,EAAKpc,MAAM0c,aAAa/X,GACrE,MACJ,IAAK,IACDgY,EAAiB,EAAKP,uBAAuB,EAAKpc,MAAM0c,aAAa/X,GACrEiY,EAAiB,EAAKR,uBAAuB,EAAKpc,MAAM0c,aAAaM,GACrE,MACJ,IAAK,IACDL,EAAiB,EAAKP,uBAAuB,EAAKpc,MAAM0c,aAAa/X,GACrEiY,EAAiB,EAAKR,uBAAuB,EAAKpc,MAAM0c,aAAaM,GACrEH,EAAiB,EAAKT,uBAAuB,EAAKpc,MAAM0c,aAAaO,GACrE,MACJ,IAAK,IACDN,EAAiB,EAAKP,uBAAuB,EAAKpc,MAAM0c,aAAa/X,GACrEiY,EAAiB,EAAKR,uBAAuB,EAAKpc,MAAM0c,aAAaM,GACrEH,EAAiB,EAAKT,uBAAuB,EAAKpc,MAAM0c,aAAaO,GACrEH,EAAiB,EAAKV,uBAAuB,EAAKpc,MAAM0c,aAAaQ,GAK7ET,EACI,eAAC,IAAM3X,SAAP,WACK6X,EADL,IACsBC,EADtB,IACuCC,EADvC,IACwDC,EADxD,OAMR,OAAOL,G,EAGX/T,OAAS,WACL,IAYI0U,EAAmB,IAAMtY,SAE7BsY,EAAkB,EAAKZ,mBACvB,IAAIa,EAAqB,GAYzB,OATIA,EAD4B,KAA5B,EAAKrd,MAAM0c,aACU,gCAEW,YAA5B,EAAK1c,MAAM0c,aACU,kCAEA,eAIzB,EAAK1c,MAAMuF,QAEP,eAAC,IAAMT,SAAP,WACK,EAAKsW,yBACL,EAAKe,yBACL,EAAKhC,6BAEL,EAAKna,MAAMmd,SACR,eAAC,IAAMrY,SAAP,WACI,sBAAMlG,UAAU,2BAAhB,SAA4Cye,IAC5C,cAAC,IAAD,CACI9G,aAAc,EACdC,cAAe,EACfC,gBAAgB,EAChBxC,cAAe,SAACpO,GAAD,OAAO,EAAKoO,cAAcpO,EAAE6Q,cAC3CC,SAAU,SAAChF,GAAD,OAAY,EAAKvL,SAAS,CAAEuL,OAAQA,KALlD,SAOKyL,IACK,OAGd,4EAiBL,cAAC,IAAMtY,SAAP,K,uDA1hBf,WACIlE,KAAKyH,yBACL9E,OAAOiG,iBAAiB,SAAU5I,KAAKyH,0B,kCAG3C,WACI9E,OAAOkG,oBAAoB,SAAU7I,KAAKyH,4B,GA3KtBnI,IAAM+B,WCugBnBqb,I,OCniBMpd,IAAM+B,U,mNDIvB+C,MAAQ,CACJO,QAAS,EAAKvF,MAAMmG,MAAMoX,OAAOhY,QACjCE,YAAa,EAAKzF,MAAMmG,MAAMoX,OAAO9X,YACrC2M,aAAS5M,EACTgY,qBAAiBhY,EACjBkN,iBAAalN,EACbiY,iBAAajY,EACb2X,cAAU3X,EACV2T,kBAAc3T,EACd+M,MAAO,EACPmL,WAAW,EACXC,iBAAanY,EACbkF,YAAQlF,EACRoY,KAAM,EACNlI,0BAAsBlQ,EACtBkX,kBAAclX,G,EAGlBqY,YAAa,E,EAGb3H,aAAe,SAAC4H,GACZ,EAAKC,gBAAkBD,G,EAG3B3b,kBAAoB,WAChB,EAAK+J,SACL,IAAIxB,EAASC,aAAaC,QAAQ,UAC9BF,IACA,EAAKtE,SAAS,CAAEsE,OAAQA,IACxB,EAAKsT,YAAYtT,IAErB,EAAKuT,sBAAsB,EAAKje,MAAMmG,MAAMoX,OAAOhY,SAC/C,EAAKvF,MAAMmG,MAAMoX,OAAO9X,aACxB,EAAKyY,wBACD,EAAKle,MAAMmG,MAAMoX,OAAOhY,QACxB,EAAKvF,MAAMmG,MAAMoX,OAAO9X,c,EAKpC0Y,oBAAsB,WACd,EAAKnZ,MAAMO,UAAY,EAAKvF,MAAMmG,MAAMoX,OAAOhY,UAC/C,EAAKa,SAAS,CACVb,QAAS,EAAKvF,MAAMmG,MAAMoX,OAAOhY,QACjCE,YAAa,EAAKzF,MAAMmG,MAAMoX,OAAO9X,cAEzC,EAAKwY,sBAAsB,EAAKje,MAAMmG,MAAMoX,OAAOhY,SAC/C,EAAKvF,MAAMmG,MAAMoX,OAAO9X,aACxB,EAAKyY,wBACD,EAAKle,MAAMmG,MAAMoX,OAAOhY,QACxB,EAAKvF,MAAMmG,MAAMoX,OAAO9X,e,EAMxCyG,OAAS,WACL,IAAIC,GAAY,EACVtB,EAAQF,aAAaC,QAAQ,SACnC,GAAIC,EAAO,CACP,IAAIuB,EAAeC,IAAIC,OAAOzB,EAAO,CAAE0B,UAAU,IAC7CC,EAAU,IAAIC,KACdL,EAAaO,QAAQC,KAAOJ,EAAQE,UAAY,MAChDP,GAAY,IAGF,IAAdA,GACA,EAAK/F,SAAS,CAAEsX,WAAW,K,EAInCQ,wBAA0B,SAAC3Y,EAASE,GAChCoB,MAAM,4CAAD,OAC2CtB,EAD3C,wBACkEE,GAEnE,CACIuF,OAAQ,MACRC,YAAa,UACbC,QAAS,IAAIC,QAAQ,CACjB,UAAW,uCACX,eAAgB,uBAIvB/K,MAAK,SAAC0G,GAAD,OAAcA,EAASC,UAC5B3G,MAAK,SAACsG,GAAS,IAAD,MACX,EAAKN,SAAS,CACV+L,SAAQ,OAAEzL,QAAF,IAAEA,GAAF,UAAEA,EAAKO,YAAP,aAAE,EAAWmX,aACrBC,OAAM,OAAE3X,QAAF,IAAEA,GAAF,UAAEA,EAAKO,YAAP,aAAE,EAAWoX,OACnB3I,qBAAoB,OAAEhP,QAAF,IAAEA,GAAF,UAAEA,EAAKO,YAAP,aAAE,EAAWqX,yB,EAKjDC,iBAAmB,SAAC3X,EAAM4X,GACtB,EAAKpY,SAAS,CAAEsW,aAAc,YAC9B7V,MAAM,gDAAD,OAAiDD,IACjDxG,MAAK,SAAC0G,GAAD,OAAcA,EAASC,UAC5B3G,MAAK,SAACsG,GACgB,GAAfA,EAAI+X,SAIRra,QAAQC,IAAIqC,EAAIO,KAAKyX,mBACrB,EAAKtY,SAAS,CAAEsW,aAAchW,EAAIO,KAAKyX,qBAJnC,EAAKtY,SAAS,CAAEsW,aAAc,S,EAQ9CuB,sBAAwB,SAAC1Y,GACrB,IAAI4T,EAEJtS,MAAM,kDAAD,OAAmDtB,EAAnD,WACAnF,MAAK,SAAC0G,GAAD,OAAcA,EAASC,UAC5B3G,MAAK,SAACsG,GAAS,IAAD,cACP8W,EAAe,OAAG9W,QAAH,IAAGA,GAAH,UAAGA,EAAK0L,eAAR,aAAG,EAAcuM,UAChCjM,EAAW,OAAGhM,QAAH,IAAGA,GAAH,UAAGA,EAAK0L,eAAR,aAAG,EAAcwM,aAC5BnB,EAAW,OAAG/W,QAAH,IAAGA,GAAH,UAAGA,EAAK0L,eAAR,aAAG,EAAcyM,aAC5B1B,EAAQ,OAAGzW,QAAH,IAAGA,GAAH,UAAGA,EAAK0L,eAAR,aAAG,EAAc0M,eAE7B3F,EAAY,OAAGzS,QAAH,IAAGA,GAAH,UAAGA,EAAK0L,eAAR,aAAG,EAAc2M,eAE7B,OAAIrY,QAAJ,IAAIA,OAAJ,EAAIA,EAAK0L,UACL,EAAKhM,SAAS,CAAEuX,YAAajX,EAAI0L,UAGjCoL,GACA,EAAKpX,SAAS,CAAEoX,gBAAiBA,IAEjC9K,GACA,EAAKtM,SAAS,CAAEsM,YAAaA,IAE7B+K,GACA,EAAKrX,SAAS,CAAEqX,YAAaA,KAG7BN,GACc,MAAbA,GACgB,MAAbA,GACa,MAAbA,GACa,MAAbA,GACa,MAAbA,GAEJ,EAAK/W,SAAS,CAAE+W,SAAUA,IAE1BhE,GACA,EAAK/S,SAAS,CAAE+S,aAAcA,IAEf,IAAfzS,EAAIxB,QACJ,EAAK8Z,cAIO,aAAZzZ,GACA,EAAKa,SAAS,CAAEsM,YAAa,iBAGjC,IAAIuM,EAAc,IAElB,iBAAQvY,EAAI0L,eAAZ,aAAQ,EAAa0M,gBACjB,IAAK,IACDG,EAAc,IACd,MACJ,IAAK,IACDA,EAAc,IACd,MACJ,IAAK,IAGL,IAAK,IACDA,EAAc,IAOa,MAA/B,UAAAvY,EAAI0L,eAAJ,eAAa0M,gBACb,EAAKP,iBACD7X,EAAI0L,QAAQ8M,sBAAsB,uBAClCD,GAGJ,EAAK7Y,SAAS,CAAEsW,aAAc,S,EAK9CsB,YAAc,SAACtT,GACPA,GAAU,EAAK1F,MAAMO,SAAW,EAAKP,MAAMS,aAC3CoB,MAAM,yCAAD,OACwC6D,EADxC,iBACuD,EAAK1F,MAAMO,QADlE,6BAC8F,EAAKP,MAAMS,aAE1G,CACIuF,OAAQ,MACRC,YAAa,UACbC,QAAS,IAAIC,QAAQ,CACjBgU,cAAexU,aAAaC,QAAQ,SACpC,UAAW,uCACX,eAAgB,uBAIvBxK,MAAK,SAAC0G,GAAD,OAAcA,EAASC,UAC5B3G,MAAK,SAACsG,GACe,IAAD,EAAbA,EAAI+X,SACJ,EAAKrY,SAAS,CAAEwX,KAAI,UAAElX,EAAIO,YAAN,aAAE,EAAUmY,e,EAMpDJ,Y,sBAAc,kCAAAra,EAAA,sEACJ2C,GAAM,KADF,OAGL,EAAKtC,MAAM0Y,UAwBL,EAAK1Y,MAAM0F,QAClB7D,MAAM,yCAAD,OACwC,EAAK7B,MAAM0F,OADnD,YAGD,CACIM,OAAQ,MACRC,YAAa,UACbC,QAAS,IAAIC,QAAQ,CACjBgU,cAAexU,aAAaC,QAAQ,SACpC,UAAW,uCACX,eAAgB,qBAEpByU,KAAMte,KAAKC,UAAU,CACjBuE,QAAS,EAAKP,MAAMO,QACpB+Z,iBAAkB,EAAKta,MAAMS,gBAIpCrF,MAAK,SAAC0G,GAAD,OAAcA,EAASC,UAC5B3G,MAAK,SAACsG,GACHtC,QAAQC,IAAIqC,OA3ChB6E,EAAUxK,KAAKyK,MAAMb,aAAaC,QAAQ,kBAC1C2U,EAAQ,KACRhU,EACAgU,EAAK,UAAGhU,SAAH,aAAG,EAASiU,MACb,SAACC,GAAD,OACIA,EAAQla,UAAY,EAAKP,MAAMO,SAC/Bka,EAAQha,aAAe,EAAKT,MAAMS,eAG1C8F,EAAU,GAGTgU,GAA2B,KAAb,QAAL,EAAAA,SAAA,eAAO/Y,UACjB+E,EAAQtF,KAAK,CACTV,QAAS,EAAKP,MAAMO,QACpBE,YAAa,EAAKT,MAAMS,YACxB6E,MAAO,EAAKtF,MAAM2Y,YAAY+B,OAC9BrV,MAAO,EAAKrF,MAAMwY,gBAClBtX,MAAO,EAAKlB,MAAMmY,SAClBhT,KAAM,EAAKnF,MAAM0N,cAErB/H,aAAagV,QAAQ,gBAAiB5e,KAAKC,UAAUuK,MAzBnD,2C,EAoDdqU,UAAY,WACR,GAAI,EAAK5a,MAAMO,SAAW,EAAKP,MAAM4Y,MAAQ,EAAG,CAAC,IAAD,IAEQ,IADhDiC,GAAO,EACX,aAAI,EAAK7a,MAAMmU,oBAAf,iBAAI,EAAyBwB,kBAA7B,aAAI,EAAqCE,UACrCgF,EAAM3L,WAAU,UAAC,EAAKlP,MAAMmU,oBAAZ,iBAAC,EAAyBwB,kBAA1B,aAAC,EAAqCE,WAG1D,IAAIiF,EAAW,SACX,EAAK9a,MAAMmY,WACX2C,EAAW,EAAK9a,MAAMmY,UAE1B,EAAK4C,OACLlZ,MAAM,yCAAD,OACwC,EAAK7B,MAAM0F,OADnD,SAGD,CACIM,OAAQ,MACRC,YAAa,UACbC,QAAS,IAAIC,QAAQ,CACjBgU,cAAexU,aAAaC,QAAQ,SACpC,UAAW,uCACX,eAAgB,qBAEpByU,KAAMte,KAAKC,UAAU,CACjBuE,QAAS,EAAKP,MAAMO,QACpB+Z,iBAAkB,EAAKta,MAAMS,YAC7Bua,cAAe,EACfF,SAAUA,EACVG,aAAcJ,MAIrBzf,MAAK,SAAC0G,GAAD,OAAcA,EAASC,UAC5B3G,MAAK,SAACsG,GACHtC,QAAQC,IAAIqC,GACRA,EAAI+X,SACJ,EAAKrY,SAAS,CAAEwX,KAAM,EAAK5Y,MAAM4Y,KAAO,S,EAM5DsC,eAAiB,WACb,GAAI,EAAKlb,MAAMO,SAAW,EAAKP,MAAM4Y,KAAO,EAAG,CAAC,IAAD,IAC3C,EAAKmC,OACL,IACoD,IADhDF,GAAO,EACX,aAAI,EAAK7a,MAAMmU,oBAAf,iBAAI,EAAyBwB,kBAA7B,aAAI,EAAqCE,UACrCgF,EAAM3L,WAAU,UAAC,EAAKlP,MAAMmU,oBAAZ,iBAAC,EAAyBwB,kBAA1B,aAAC,EAAqCE,WAE1D,IAAIiF,EAAW,SACX,EAAK9a,MAAMmY,WACX2C,EAAW,EAAK9a,MAAMmY,UAE1BtW,MAAM,yCAAD,OACwC,EAAK7B,MAAM0F,OADnD,SAGD,CACIM,OAAQ,MACRC,YAAa,UACbC,QAAS,IAAIC,QAAQ,CACjBgU,cAAexU,aAAaC,QAAQ,SACpC,UAAW,uCACX,eAAgB,qBAEpByU,KAAMte,KAAKC,UAAU,CACjBuE,QAAS,EAAKP,MAAMO,QACpB+Z,iBAAkB,EAAKta,MAAMS,YAC7Bua,eAAgB,EAChBF,SAAUA,EACVG,aAAcJ,MAIrBzf,MAAK,SAAC0G,GAAD,OAAcA,EAASC,UAC5B3G,MAAK,SAACsG,GACHtC,QAAQC,IAAIqC,GACRA,EAAI+X,SACJ,EAAKrY,SAAS,CAAEwX,KAAM,EAAK5Y,MAAM4Y,KAAO,S,EAM5DmC,K,uCAAO,WAAOI,GAAP,SAAAxb,EAAA,sDAIHP,QAAQC,IAAI,EAAK+b,UAAU9gB,MAAM+gB,WAC7B,EAAKD,YAAc,EAAKpb,MAAM6Y,aACS,oBAAnC,EAAKuC,UAAU9gB,MAAM+gB,UACrB,EAAKD,UAAU9gB,MAAM+gB,UAAY,gBAEjC,EAAKD,UAAU9gB,MAAM+gB,UAAY,mBATtC,2C,wDAiBPC,aAAe,WACX,EAAKnC,sBAEL,IAAI9T,EAAQ,cAAC,IAAMvF,SAAP,IACR4N,EAAc,cAAC,IAAM5N,SAAP,IACd2Y,EAAc,cAAC,IAAM3Y,SAAP,IACdqY,EAAW,cAAC,IAAMrY,SAAP,IAUf,GATI,EAAKE,MAAMwY,kBACXnT,EACI,qBAAKV,IAAK,EAAK3E,MAAMwY,gBAAiB5e,UAAU,gBAAgBiL,IAAI,aAIxE,EAAK7E,MAAM0N,cACXA,EAAc,qBAAK9T,UAAU,eAAf,SAA+B,EAAKoG,MAAM0N,eAExD,EAAK1N,MAAMmY,SAAU,CACrB,IAAIoD,EAAa,eAAiB,EAAKvb,MAAMmY,SAC7CA,EACI,sBAAKve,UAAU,yBAAf,UACI,sBAAMA,UAAW,gBAAkB2hB,EAAnC,qBADJ,aAEc,sBAAM3hB,UAAU,aAAhB,SAA8B,IAAM,EAAKoG,MAAMmY,mBAG1D,EAAKnY,MAAMyY,cAClBA,EAAc,qBAAK7e,UAAU,uBAAf,SAAuC,EAAKoG,MAAMyY,eAEpE,OACI,eAAC,IAAM3Y,SAAP,WACK,EAAKE,MAAM0F,OACR,sBACI9L,UAAW,EAAKoG,MAAM4Y,KAAO,EAAI,oBAAsB,cACvD7b,QAAS,EAAK6d,UAFlB,UAII,sBAAMhhB,UAAU,aAAhB,SACK,EAAKoG,MAAM4Y,KAAO,EAAI,EAAK5Y,MAAM4Y,KAAO,KAE7C,sBAAM/e,MAAM,iBAAZ,kCAGJ,cAAC,IAAMiG,SAAP,IAEH,EAAKE,MAAM4Y,KAAO,EACf,qBAAKhf,UAAU,mBAAmBmD,QAAS,EAAKme,eAAhD,SACI,sBAAMrhB,MAAM,iBAAZ,oCAGJ,cAAC,IAAMiG,SAAP,IAEHuF,EACAqI,EACD,sBAAK9T,UAAU,2BAAf,UACK6e,EACAN,S,EAMjBqD,aAAe,SAACL,EAAOM,GAEnB,GADA,EAAKra,SAAS,CAAEmM,MAAOkO,IACN,IAAbA,EAAgB,CAChB,IAAInN,EAAOC,SAASC,uBAAuB,oBACvCF,EAAK,IACLA,EAAK,GAAGG,eAAe,CAAEC,SAAU,a,EAK/CgN,cAAgB,WACZ,IAAIC,EAAS,cAAC,IAAM7b,SAAP,IAkCb,OAjCI,EAAKE,MAAMS,cACXkb,EACI,sBAAK/hB,UAAU,2BAAf,UACI,wBACIA,UACyB,IAArB,EAAKoG,MAAMuN,MACL,iCACA,wBAEVxQ,QAAS,kBAAM,EAAKye,aAAa,GAAI,IANzC,2BAUA,wBACI5hB,UACyB,IAArB,EAAKoG,MAAMuN,MACL,iCACA,wBAEVxQ,QAAS,kBAAM,EAAKye,aAAa,GAAI,IANzC,+BAUA,qBACI5hB,UACyB,IAArB,EAAKoG,MAAMuN,MACL,wBACA,+BAMnBoO,G,EAGXjY,OAAS,WAAO,IAAD,EAEPyJ,EAAQ,UAAG,EAAKnN,MAAMmN,gBAAd,aAAG,EAAqB4K,MAAK,SAACpY,EAAGqY,GACzC,OAAIrY,EAAEic,MAAQ5D,EAAE4D,OAAe,EACnB,KAEhB,OACI,cAAC,IAAM9b,SAAP,UACI,sBAAKlG,UAAU,yBAAf,UACI,sBAAKA,UAAU,2BAAf,UACI,qBAAKA,UAAU,uBAAf,SACI,eAAC,IAAD,CAAMgJ,GAAG,WAAT,cAAsB,IAAtB,mBAEJ,qBACIhJ,UAAU,uBACV+K,IAAI,2BACJE,IAAI,QAGZ,qBACIjL,UAAU,0BAEVqB,IAAK,SAACA,GAAD,OAAU,EAAKmgB,UAAYngB,GAHpC,SAKK,EAAKqgB,iBAGT,EAAKI,gBAegB,IAArB,EAAK1b,MAAMuN,MACR,cAAC,GAAD,CACI4G,aAAc,EAAKnU,MAAMmU,aACzBgE,SAAU,EAAKnY,MAAMmY,SACrBtB,sBAC4C,OAAxC,EAAK7b,MAAMmG,MAAMoX,OAAO9X,kBACgBD,IAAxC,EAAKxF,MAAMmG,MAAMoX,OAAO9X,YAE5BF,QAAS,EAAKvF,MAAMmG,MAAMoX,OAAOhY,QACjCmX,aAAc,EAAK1X,MAAM0X,eAG7B,qBAAK9d,UAAU,2BAAf,SACI,cAAC,GAAD,CACIuT,SAAUA,EACV+D,aAAc,EAAKA,aACnBR,qBAAsB,EAAK1Q,MAAM0Q,yBAI7C,cAAC,EAAD,CACInQ,QAAS,EAAKvF,MAAMmG,MAAMoX,OAAOhY,QACjCE,YAAa,EAAKzF,MAAMmG,MAAMoX,OAAO9X,oB,YAxhBvCvF,IAAM+B,YAkiBtBqF,GAAQ,SAACuZ,GAAD,OAAQ,IAAIC,SAAQ,SAACpa,GAAD,OAASqa,WAAWra,EAAKma,OEhd5CG,I,mNAlFXhc,MAAQ,CACJ0Y,WAAW,G,EAGfuD,WAAa,WACTtW,aAAauW,QACb,EAAKlhB,MAAMuL,QAAQtF,KAAK,W,EAG5B9D,kBAAoB,WAChB,EAAK+J,U,EAGTA,OAAS,WACL,IAAIC,GAAY,EACVtB,EAAQF,aAAaC,QAAQ,SACnC,GAAIC,EAAO,CACP,IAAIuB,EAAeC,IAAIC,OAAOzB,EAAO,CAAE0B,UAAU,IAC7CC,EAAU,IAAIC,KACdL,EAAaO,QAAQC,KAAOJ,EAAQE,UAAY,MAChDP,GAAY,IAGF,IAAdA,GACA,EAAK/F,SAAS,CAAEsX,WAAW,K,EAInCyD,uBAAyB,WACrB,OACI,eAAC,IAAMrc,SAAP,WACI,oBAAIlG,UAAU,eAAd,uCACA,cAAC,IAAD,CAAMgJ,GAAG,SAAShJ,UAAU,gBAA5B,0BAGA,cAAC,IAAD,CAAMgJ,GAAG,iBAAiBhJ,UAAU,gBAApC,2BAGA,qBAAKmD,QAAS,EAAKkf,WAAYriB,UAAU,gBAAzC,gC,EAOZwiB,yBAA2B,WACvB,OACI,eAAC,IAAMtc,SAAP,WACI,oBAAIlG,UAAU,eAAd,6BACA,0FACA,cAAC,IAAD,CAAMgJ,GAAG,SAAShJ,UAAU,gBAA5B,8B,4CAOZ,WACI,OACI,gCACI,cAAC,IAAD,CAAMgJ,GAAG,IAAT,SACI,cAAC,EAAD,MAEJ,eAACrG,EAAA,EAAOC,IAAR,CACIE,QAAS,CAAE0I,QAAS,GACpBzI,QAAS,CAAEyI,QAAS,GACpBtI,KAAM,CAAEsI,QAAS,GACjBxL,UAAU,gBAJd,UAMI,qBAAKA,UAAU,iBAAf,SACI,qBAAKC,MAAM,iBAAX,sBAEH+B,KAAKoE,MAAM0Y,UACN9c,KAAKugB,yBACLvgB,KAAKwgB,8BAEf,cAAC,EAAD,W,GA7EKlhB,IAAM+B,YCEZof,OARf,WACE,OACA,uDCIWC,GAAa,IAAIC,OAAO,iDAkKtBC,G,4MA/JXxc,MAAQ,CACJyc,SAAU,GACVC,MAAO,GACPC,SAAU,GACVC,gBAAiB,GACjBC,OAAQ,GACRla,UAAU,EACVma,QAAQ,G,EAwBZC,S,sBAAW,4BAAApd,EAAA,sEACYkC,MAAM,yCAA0C,CAC/DmE,OAAQ,OACRC,YAAa,UACbC,QAAS,IAAIC,QAAQ,CACjB,UAAW,uCACX,eAAgB,qBAEpBkU,KAAMte,KAAKC,UAAU,CACjBghB,SAAU,EAAKhd,MAAMyc,SACrBC,MAAO,EAAK1c,MAAM0c,MAClBC,SAAU,EAAK3c,MAAM2c,aAGxBvhB,MAAK,SAAC0G,GAAD,OAAcA,EAASC,UAC5B3G,MAAK,SAACsG,GACHtC,QAAQC,IAAIqC,GACZ,IAAImb,EAAS,GAUb,OARKnb,EAAI+X,SAGL9T,aAAagV,QAAQ,QAASjZ,EAAImE,OAClCF,aAAagV,QAAQ,SAAUjZ,EAAIub,KACnC,EAAKjiB,MAAMuL,QAAQtF,KAAK,aAJxB4b,EAAO5b,KAAK,qEAMhB,EAAKG,SAAS,CAAEyb,OAAQA,IACjBA,KA3BR,cACHA,EADG,yBA6BAA,GA7BA,2C,EAgCXK,a,uCAAe,WAAOC,GAAP,eAAAxd,EAAA,yDACXwd,EAAEC,iBAGoB,KAFlBP,EAAS,EAAKQ,YAEP7b,OAJA,gCAKQ,EAAKub,WALb,OAKPF,EALO,cAOW,IAAlBA,EAAOrb,QACP,EAAKJ,SAAS,CAAEuB,UAAU,IARnB,2C,wDAYf2a,cAAgB,WACE,IAAMxd,SAIpB,OAHS,EAAKE,MAAM6c,OAAOpa,KAAI,SAACrI,GAC5B,OAAO,4BAAIA,Q,8CApEnB,WACI,IAAIyiB,EAAS,GAiBb,OAhBmC,IAA/BjhB,KAAKoE,MAAMyc,SAASjb,QACpBqb,EAAO5b,KAAK,qBAEgB,IAA5BrF,KAAKoE,MAAM0c,MAAMlb,QACjBqb,EAAO5b,KAAK,iCAE0B,IAAtCqb,GAAWiB,KAAK3hB,KAAKoE,MAAM0c,QAC3BG,EAAO5b,KAAK,qCAEZrF,KAAKoE,MAAM2c,SAASnb,OAAS,GAC7Bqb,EAAO5b,KAAK,yDAEZrF,KAAKoE,MAAM2c,WAAa/gB,KAAKoE,MAAM4c,iBACnCC,EAAO5b,KAAK,0CAEhBrF,KAAKwF,SAAS,CAAEyb,OAAQA,IACjBA,I,oBAuDX,WAAU,IAAD,OACL,OAAIjhB,KAAKoE,MAAM2C,SACJ,cAAC,IAAD,CAAUC,GAAG,aAIpB,eAAC,IAAM9C,SAAP,WACI,cAAC,IAAD,CAAM8C,GAAG,SAAT,SACI,cAAC,EAAD,MAEJ,qBAAKhJ,UAAU,cAAf,SACI,qBAAK+K,IAAKiC,EAAQhN,UAAU,OAAOiL,IAAI,aAE3C,cAAC,IAAD,CAAMjL,UAAU,cAAcgJ,GAAG,SAAjC,SACK,aAEL,sBAAKhJ,UAAU,mBAAf,UACI,uBAAMA,UAAU,QAAhB,UACI,wCAEI,uBACIA,UAAU,cACV2T,MAAO3R,KAAKoE,MAAMyc,SAClB5Z,SAAU,SAAC2a,GAAD,OACN,EAAKpc,SAAS,CACVqb,SAAUe,EAAIC,OAAOlQ,SAG7BhQ,KAAK,YAGb,0CAEI,uBACI3D,UAAU,cACV2T,MAAO3R,KAAKoE,MAAM0c,MAClB7Z,SAAU,SAAC2a,GAAD,OAAS,EAAKpc,SAAS,CAAEsb,MAAOc,EAAIC,OAAOlQ,SACrDhQ,KAAK,aAGb,iDAEI,uBACI3D,UAAU,cACV2T,MAAO3R,KAAKoE,MAAM2c,SAClB9Z,SAAU,SAAC2a,GAAD,OACN,EAAKpc,SAAS,CACVub,SAAUa,EAAIC,OAAOlQ,SAG7BhQ,KAAK,gBAGb,2DAEI,uBACI3D,UAAU,cACV2T,MAAO3R,KAAKoE,MAAM0d,gBAClB7a,SAAU,SAAC2a,GAAD,OACN,EAAKpc,SAAS,CACVwb,gBAAiBY,EAAIC,OAAOlQ,SAGpChQ,KAAK,mBAIjB,uBAAO3D,UAAU,gBAAjB,SAAkCgC,KAAK0hB,kBACvC,qBAAK1jB,UAAU,gBAAgBmD,QAASnB,KAAKshB,aAA7C,SACI,cAAC,GAAD,gB,GAzJHjgB,aCAN0gB,OARf,WACE,OACA,gD,IC0JaC,G,kDAvIX,WAAY5iB,GAAQ,IAAD,8BACf,cAAMA,IAUVkiB,aAAe,SAACC,GACZA,EAAEC,iBACF,MAA4B,EAAKpd,MAC3B6c,EA3Bd,SAAkBH,EAAOC,GACrB,IAAME,EAAS,GAQf,OANqB,IAAjBH,EAAMlb,QACNqb,EAAO5b,KAAK,8DAEQ,IAApB0b,EAASnb,QACTqb,EAAO5b,KAAK,4DAET4b,EAkBYQ,CADf,EAAQX,MAAR,EAAeC,UAGf,EAAKvb,SAAS,CAAEyb,WACM,IAAlBA,EAAOrb,QACP,EAAKqc,WAlBM,EAsBnB1gB,kBAAoB,WAChB,EAAK+J,UAvBU,EA0BnBA,OAAS,WACL,IAAIC,GAAY,EACVtB,EAAQF,aAAaC,QAAQ,SACnC,GAAIC,EAAO,CACP,IAAIuB,EAAeC,IAAIC,OAAOzB,EAAO,CAAE0B,UAAU,IAC7CC,EAAU,IAAIC,KACdL,EAAaO,QAAQC,KAAOJ,EAAQE,UAAY,MAChDP,GAAY,IAGF,IAAdA,GACA,EAAK/F,SAAS,CAAEuB,UAAU,KArCf,EAyCnBkb,QAAU,WACNhc,MAAM,8CAA+C,CACjDmE,OAAQ,OACRE,QAAS,CACL,eAAgB,mBAChB,UAAW,wCAIfmU,KAAMte,KAAKC,UAAU,CACjB0gB,MAAO,EAAK1c,MAAM0c,MAClBC,SAAU,EAAK3c,MAAM2c,aAGxBvhB,MAAK,SAAC0G,GAAD,OAAcA,EAASC,UAC5B3G,MAAK,SAAC6G,GAEH,GAAmB,kBAAfA,EAAK7H,MAA2B,CAChC,EAAKgH,SAAS,CAAE0c,iBAAiB,IACjC,IAAI3e,EAAM,EAAKa,MAAM6c,OACrB1d,EAAI8B,KAAK,qDACT,EAAKG,SAAS,CAAEyb,OAAQ1d,SACrB,GAAmB,uBAAf8C,EAAK7H,OAAmC6H,EAAKwX,QAOpD9T,aAAagV,QAAQ,QAAS1Y,EAAK4D,OACnCF,aAAagV,QAAQ,SAAU1Y,EAAKgb,KACpC,EAAK7b,SAAS,CAAE0c,iBAAiB,EAAMnb,UAAU,QATY,CAC7D,EAAKvB,SAAS,CAAE0c,iBAAiB,IACjC,IAAI3e,EAAM,EAAKa,MAAM6c,OACrB1d,EAAI8B,KAAK,wDACT,EAAKG,SAAS,CAAEyb,OAAQ1d,SAnErB,EAgFnB4e,iBAAmB,WACf,EAAK3c,SAAS,CACVub,SAAU,EAAKqB,cAAczQ,MAC7BmP,MAAO,EAAKuB,WAAW1Q,SAjF3B,EAAKvN,MAAQ,CACT0c,MAAO,GACPC,SAAU,GACVE,OAAQ,GACRla,UAAU,EACVmb,gBAAiB,MAPN,E,0CAuFnB,WAAU,IAAD,OACL,OAAIliB,KAAKoE,MAAM2C,SACJ,cAAC,IAAD,CAAUC,GAAG,aAGpB,eAAC,IAAM9C,SAAP,WACI,cAAC,IAAD,CAAM8C,GAAG,SAAT,SACI,cAAC,EAAD,MAEJ,qBAAKhJ,UAAU,cAAf,SACI,qBAAK+K,IAAKiC,EAAQhN,UAAU,OAAOiL,IAAI,aAG3C,cAAC,IAAD,CAAMjL,UAAU,cAAcgJ,GAAG,SAAjC,SACK,aAEL,sBAAKhJ,UAAU,mBAAf,UACI,uBAAMA,UAAU,QAAhB,UACI,0CAEI,uBACIA,UAAU,cACV2T,MAAO3R,KAAKoE,MAAM0c,MAClB7Z,SAAUjH,KAAKmiB,iBACf9iB,IAAK,SAACA,GAAD,OAAU,EAAKgjB,WAAahjB,GACjCsC,KAAK,aAGb,iDAEI,uBACI3D,UAAU,cACV2T,MAAO3R,KAAKoE,MAAM2c,SAClB9Z,SAAUjH,KAAKmiB,iBACf9iB,IAAK,SAACA,GAAD,OAAU,EAAK+iB,cAAgB/iB,GACpCsC,KAAK,mBAIjB,uBAAO3D,UAAU,gBAAjB,SAAkCgC,KAAKoE,MAAM6c,SAC7C,qBAAKjjB,UAAU,gBAAgBmD,QAASnB,KAAKshB,aAA7C,SACI,cAAC,GAAD,gB,GAjIHjgB,a,UCZNihB,OARf,WACE,OACA,wDCJWC,I,OACT,CACI1hB,GAAI,EACJigB,MAAO,oBACPC,SAAU,W,ICiMHyB,G,kDA9KX,WAAYpjB,GAAQ,IAAD,8BACf,cAAMA,IAWVwgB,aAAe,SAAC2B,GACZA,EAAEC,iBACF,MAA0D,EAAKpd,MAAvDqe,EAAR,EAAQA,gBAAiBC,EAAzB,EAAyBA,YAAa1B,EAAtC,EAAsCA,gBAChCC,EA3Bd,SAAkByB,EAAa1B,GAC3B,IAAMC,EAAS,GAOf,OANIyB,EAAY9c,OAAS,GACrBqb,EAAO5b,KAAK,uFAEZqd,IAAgB1B,GAChBC,EAAO5b,KAAK,wEAET4b,EAmBYQ,CAASiB,EAAa1B,GACrCxd,QAAQC,IAAI,EAAKW,MAAMue,KAAK7B,MAAO2B,EAAiBC,EAAa1B,EAAiBC,GAClF,EAAKzb,SAAS,CAAEyb,WACM,IAAlBA,EAAOrb,QACP,EAAKgd,eAAe,EAAKxe,MAAMue,KAAKtB,IAAKoB,EAAiBC,IAnB/C,EAuBnBE,eAAiB,SAAC9Y,EAAQ2Y,EAAiBC,GACvClf,QAAQC,IAAI,OACZwC,MAAM,yCAAD,OACwC6D,GAEzC,CACIM,OAAQ,MACRE,QAAS,CACL,eAAgB,mBAChB,UAAW,uCACXE,cAAeT,aAAaC,QAAQ,UAExCyU,KAAMte,KAAKC,UAAU,CACjBqiB,gBAAiBA,EACjBC,YAAaA,MAIpBljB,MAAK,SAAC0G,GAAD,OAAcA,EAASC,UAC5B3G,MAAK,SAACsG,GACHtC,QAAQC,IAAIqC,IACQ,IAAhBA,EAAI+X,QACJ,EAAKrY,SAAS,CACVyb,OAAO,GAAD,oBAAM,EAAK7c,MAAM6c,QAAjB,CAAyBnb,EAAItH,UAGvC,EAAKgH,SAAS,CAAEuB,UAAU,QAjDvB,EAsDnBuE,OAAS,WACL,IAAIC,GAAY,EACVtB,EAAQF,aAAaC,QAAQ,SACnC,GAAIC,EAAO,CACP,IAAIuB,EAAeC,IAAIC,OAAOzB,EAAO,CAAE0B,UAAU,IAC7CC,EAAU,IAAIC,KACdL,EAAaO,QAAQC,KAAOJ,EAAQE,UAAY,MAChDP,GAAY,IAGF,IAAdA,GACA,EAAK/F,SAAS,CAAEuB,UAAU,KAjEf,EAqEnBxF,kBAAoB,WAChB,EAAK+J,SACL,IAAIxB,EAASC,aAAaC,QAAQ,UAC9BF,GACA,EAAK+Y,aAAa/Y,IAzEP,EA6EnB+Y,aAAe,SAAC/Y,GACZ7D,MAAM,yCAAD,OACwC6D,GAEzC,CACIM,OAAQ,MACRE,QAAS,CACL,eAAgB,mBAChB,UAAW,uCACXE,cAAeT,aAAaC,QAAQ,YAI3CxK,MAAK,SAAC0G,GAAD,OAAcA,EAASC,UAC5B3G,MAAK,SAACsG,GACHtC,QAAQC,IAAIqC,GAEZ,EAAKN,SAAS,CAAEmd,KAAM7c,EAAIO,WA5FlC,EAAKjC,MAAQ,CACTue,KAAMJ,GACNE,gBAAiB,GACjBC,YAAa,GACb1B,gBAAiB,GACjBC,OAAQ,GACRla,UAAU,GARC,E,0CAkGnB,WAAU,IAAD,OACL,OAAI/G,KAAKoE,MAAM2C,SACJ,cAAC,IAAD,CAAUC,GAAG,aAExBxD,QAAQC,IAAIzD,KAAKoE,MAAM2C,UAEnB,sBAAK/I,UAAU,SAAf,UACI,cAAC,IAAD,CAAMgJ,GAAG,IAAT,SACI,cAAC,EAAD,MAEJ,cAAC,EAAD,IACA,qBAAKhJ,UAAU,cAAf,SACI,qBAAK+K,IAAKiC,EAAQhN,UAAU,OAAOiL,IAAI,aAE3C,cAAC,IAAD,CAAMjL,UAAU,cAAcgJ,GAAG,UAAjC,SACK,aAEL,qBAAKhJ,UAAU,+BACf,qBAAKA,UAAU,yBAAf,SAAyCgC,KAAKoE,MAAM6c,SACpD,sBAAKjjB,UAAU,0BAAf,UACI,sBAAKA,UAAU,4BAAf,UACI,wCACA,8BAAMgC,KAAKoE,MAAMue,KAAK7B,WAE1B,uBAAM9iB,UAAU,qBAAhB,UACI,gCAEI,uBACI8kB,YAAY,sBACZ9kB,UAAU,cACV2T,MAAO3R,KAAKoE,MAAMqe,gBAClBxb,SAAU,SAAC2a,GAAD,OACN,EAAKpc,SAAS,CACVid,gBAAiBb,EAAIC,OAAOlQ,SAGpChQ,KAAK,eAGb,gCAEI,uBACIgQ,MAAO3R,KAAKoE,MAAMse,YAClB1kB,UAAU,cACViJ,SAAU,SAAC2a,GAAD,OACN,EAAKpc,SAAS,CACVkd,YAAad,EAAIC,OAAOlQ,SAGhChQ,KAAK,WACLmhB,YAAY,2BAGpB,gCAEI,uBACIA,YAAY,sBACZ9kB,UAAU,cACV2T,MAAO3R,KAAKoE,MAAM4c,gBAClB/Z,SAAU,SAAC2a,GAAD,OACN,EAAKpc,SAAS,CACVwb,gBAAiBY,EAAIC,OAAOlQ,SAGpChQ,KAAK,eAGb,cAAC,IAAD,CAAM3D,UAAU,yBAAyBmD,QAASnB,KAAK4f,aAAc5Y,GAAG,GAAxE,SACI,cAAC,GAAD,oB,GAvKO3F,a,UCgNpB0hB,G,4MA1NX3e,MAAQ,CACJ2M,YAAQnM,EACRoe,qBAAiBpe,G,EAGrBqe,aAAe,WACX,IAAIC,EAAQ,cAAC,IAAMhf,SAAP,IACZ,GAAI,EAAK9E,MAAM+jB,cAAgB,EAAK/jB,MAAMgkB,cAAgB,EAAG,CACzD,IAAI/c,EAAO,CACP,CACIgd,MAAO,aACP1R,MAAO,EAAKvS,MAAM+jB,aAAapf,EAC/B4F,MAAO,WAEX,CACI0Z,MAAO,aACP1R,MAAO,EAAKvS,MAAM+jB,aAAa/G,EAC/BzS,MAAO,WAEX,CACI0Z,MAAO,aACP1R,MAAO,EAAKvS,MAAM+jB,aAAa9G,EAC/B1S,MAAO,WAEX,CACI0Z,MAAO,aACP1R,MAAO,EAAKvS,MAAM+jB,aAAa7G,EAC/B3S,MAAO,WAEX,CACI0Z,MAAO,aACP1R,MAAO,EAAKvS,MAAM+jB,aAAa5B,EAC/B5X,MAAO,WAEX,CACI0Z,MAAO,mBACP1R,MAAO,EAAKvS,MAAM+jB,aAAaG,QAC/B3Z,MAAO,YAGfuZ,EACI,cAAC,YAAD,CACI7c,KAAMA,EACNkd,UAAW,GACXC,aAAc,EACdC,OAAQC,YAASC,aAAaF,OAAS,EACvC1iB,SAAO,EACP6iB,kBAAmB,IACnBte,MAAO,gBAAGue,EAAH,EAAGA,UAAH,gBAAsBzR,KAAKC,MAAMwR,EAAU1K,YAA3C,MACP2K,WAAY,SAACrR,GAAD,OACRA,IAAU,EAAKrO,MAAM4e,gBACf,CACI3J,SAAU,MACV0K,WAAY,YACZlP,KAAMxO,EAAKoM,GAAO9I,OAEtB,CACI0P,SAAU,MACV0K,WAAY,YACZlP,KAAMxO,EAAKoM,GAAO9I,QAGhCqa,cAAe,GACfC,cAAe,CACXjjB,WAAY,sBACZkjB,OAAQ,WAEZC,cAAe,SAAC1R,GAAD,OAAYA,IAAU,EAAKrO,MAAM4e,gBAAkB,EAAI,GACtE7hB,QAAS,SAACoe,EAAO9M,GACTA,IAAU,EAAKrO,MAAM4e,iBACrB,EAAKxd,SAAS,CAAEwd,qBAAiBpe,IACjC,EAAKR,MAAM2M,OAAOgC,QAAQ,EAAG,OAE7B,EAAKvN,SAAS,CAAEwd,gBAAiBvQ,IACjC,EAAKrO,MAAM2M,OAAOgC,QAAQN,EAAQ,EAAG,cAMrDyQ,EACI,cAACviB,EAAA,EAAOC,IAAR,CACI5C,UAAU,mBACV8C,QAAS,CAAE0I,QAAS,GACpBzI,QAAS,CAAEyI,QAAS,GACpBtI,KAAM,CAAEsI,QAAS,GAJrB,SAMI,gCACI,qBAAKT,IAAKiC,EAAQhN,UAAU,OAAOiL,IAAI,WACvC,mBAAGjL,UAAU,YAAb,uDAKhB,OAAOklB,G,EAGX7P,cAAgB,SAACZ,GACC,IAAVA,EACA,EAAKjN,SAAS,CAAEwd,qBAAiBpe,IAEjC,EAAKY,SAAS,CAAEwd,gBAAiBvQ,EAAQ,K,EAIjDpB,cAAgB,WACZ,IAAIC,EAAS,cAAC,IAAMpN,SAAP,IAyFb,OAxFI,EAAK9E,MAAM+jB,cAAgB,EAAK/jB,MAAMgkB,cAAgB,IACtD9R,EACI,eAAC,IAAMpN,SAAP,WACI,cAAC,IAAD,UACI,qBAAKlG,UAAU,eAAf,SACI,qBACIA,UAAU,sBACV+K,IAAI,iCACJE,IAAI,SAIhB,cAAC,IAAD,UACI,sBAAKjL,UAAU,eAAf,UACI,uBAAMA,UAAU,oBAAhB,UACK,IADL,iBACwB,EAAKoB,MAAM+jB,aAAapf,EAAG,IAC9C,EAAK3E,MAAM+jB,aAAapf,EAAI,EAAI,YAAc,cAEnD,qBACI/F,UAAU,uBACV+K,IAAI,8BACJE,IAAI,UAIhB,cAAC,IAAD,UACI,sBAAKjL,UAAU,eAAf,UACI,uBAAMA,UAAU,oBAAhB,UACK,IADL,iBACwB,EAAKoB,MAAM+jB,aAAa/G,EAAG,IAC9C,EAAKhd,MAAM+jB,aAAa/G,EAAI,EAAI,YAAc,cAEnD,qBACIpe,UAAU,uBACV+K,IAAI,8BACJE,IAAI,UAIhB,cAAC,IAAD,UACI,sBAAKjL,UAAU,eAAf,UACI,uBAAMA,UAAU,oBAAhB,UACK,IADL,iBACwB,EAAKoB,MAAM+jB,aAAa9G,EAAG,IAC9C,EAAKjd,MAAM+jB,aAAa9G,EAAI,EAAI,YAAc,cAEnD,qBACIre,UAAU,uBACV+K,IAAI,8BACJE,IAAI,UAIhB,cAAC,IAAD,UACI,sBAAKjL,UAAU,eAAf,UACI,uBAAMA,UAAU,oBAAhB,UACK,IADL,iBACwB,EAAKoB,MAAM+jB,aAAa7G,EAAG,IAC9C,EAAKld,MAAM+jB,aAAa7G,EAAI,EAAI,YAAc,cAEnD,qBACIte,UAAU,uBACV+K,IAAI,8BACJE,IAAI,UAIhB,cAAC,IAAD,UACI,sBAAKjL,UAAU,eAAf,UACI,uBAAMA,UAAU,oBAAhB,UACK,IADL,iBACwB,EAAKoB,MAAM+jB,aAAa5B,EAAG,IAC9C,EAAKniB,MAAM+jB,aAAa5B,EAAI,EAAI,YAAc,cAEnD,qBACIvjB,UAAU,uBACV+K,IAAI,8BACJE,IAAI,UAIhB,cAAC,IAAD,UACI,qBAAKjL,UAAU,eAAf,SACI,uBAAMA,UAAU,oBAAhB,UACK,IADL,uBAC8B,EAAKoB,MAAM+jB,aAAaG,QAAS,IAC1D,EAAKlkB,MAAM+jB,aAAaG,QAAU,EAAI,YAAc,sBAOtEhS,G,EAGXxJ,OAAS,WACL,OACI,eAAC,IAAM5D,SAAP,WACI,qBAAKlG,UAAU,kBAAf,SAAkC,EAAKilB,iBACvC,qBAAKjlB,UAAU,qBAAf,SACI,cAAC,IAAD,CACI2X,aAAc,EACdC,cAAe,EACfC,gBAAgB,EAChBxC,cAAe,SAACpO,GAAD,OAAO,EAAKoO,cAAcpO,EAAE6Q,cAC3CC,SAAU,SAAChF,GAAD,OAAY,EAAKvL,SAAS,CAAEuL,OAAQA,KALlD,SAOK,EAAKM,wB,YAnNM/R,IAAM+B,W,qBCApC+iB,GAAa,CACf,UACA,aACA,OACA,QACA,MACA,OACA,UACA,UACA,YACA,UACA,WACA,eAyNWC,G,4MArNXjgB,MAAQ,CACJ4e,gBAAiB,EACjB3W,QAAS,CACL6W,MAAO,CACHoB,QAAS,CACLC,MAAM,GAEVC,WAAY,CACRC,SAAS,EACT7lB,IAAK,EACLE,KAAM,EACN4lB,KAAM,EACNlb,QAAS,KAGjBmb,YAAa,CACTC,IAAK,CACDC,aAAc,EACdC,YAAY,IAGpBC,MAAO,CACHC,WAAY,CAAC,UAAW,aAAW,OAAQ,QAAS,OACpDC,OAAQ,CACJvmB,MAAO,CACH2a,SAAU,OACV0K,WAAY,YACZmB,UAAW,YAGnB7B,MAAO,CACH8B,KAAM,8BACNzmB,MAAO,CACH2a,SAAU,OACV0K,WAAY,YACZmB,UAAW,aAIvBE,MAAO,CACHH,OAAQ,CACJvmB,MAAO,CACH2a,SAAU,OACV0K,WAAY,YACZmB,UAAW,aAIvBG,WAAY,CACRZ,SAAS,EACT/lB,MAAO,CACH2a,SAAU,OACV0K,WAAY,cAGpBuB,OAAQ,CACJH,KAAM,iBAEVtQ,KAAM,CACF0Q,OAAQ,CAAC,YAEbC,KAAM,CACFT,MAAO,CACHU,MAAO,CACHlB,MAAM,IAGda,MAAO,CACHK,MAAO,CACHlB,MAAM,O,EAO1BtB,aAAe,WACX,IAAIC,EAAQ,cAAC,IAAMhf,SAAP,IACZ,GAAI,EAAK9E,MAAMsmB,kBAAoB,EAAKtmB,MAAMgkB,cAAgB,EAAG,CAC7D,IAEIuC,EAFAC,EAAW,EAAKxmB,MAAMsmB,iBAAiBrf,KAAKT,OAC5Cmf,EAAQ,GAGZ,OAAQ,EAAK3lB,MAAMsmB,iBAAiBG,MAChC,IAAK,SACD,IAAIvJ,EAAI,IAAIzQ,KACZyQ,EAAEwJ,SAAS,EAAG,EAAG,EAAG,GACpBxJ,EAAEyJ,QAAQzJ,EAAE0J,UAAY,GAAK1J,EAAE2J,UAAY,IAC3C,IAAIC,EAAY,IAAIra,KAAKyQ,EAAE6J,cAAe,EAAG,GAC7CR,EAAMvT,KAAKgU,OAAO9J,EAAI4J,GAAa,MAAW,GAAK,GACnD,IAAK,IAAIjhB,EAAI2gB,EAAW,EAAG3gB,GAAK,EAAGA,IAC/B8f,EAAM1f,KAAK,YAAcsgB,EAAM1gB,IAEnC,MACJ,IAAK,UACD0gB,GAAM,IAAI9Z,MAAOwa,WAEjB,IADA,IAAIC,GAAO,IAAIza,MAAOsa,cACblhB,EAAI2gB,EAAW,EAAG3gB,GAAK,EAAGA,IAAK,CACpC,IAAIshB,EAAWZ,EAAM1gB,EACjBshB,EAAW,EACXxB,EAAM1f,KAAK+e,GAAWmC,EAAW,IAAM,KAAOD,EAAO,IAErDvB,EAAM1f,KAAK+e,GAAWmC,GAAY,IAAMD,GAGhD,MACJ,IAAK,SACDX,GAAM,IAAI9Z,MAAOsa,cACjB,IAAK,IAAIlhB,EAAI2gB,EAAW,EAAG3gB,GAAK,EAAGA,IAC/B8f,EAAM1f,MAAMsgB,EAAM1gB,GAAGuhB,YAKjC,EAAKpiB,MAAMiI,QAAQ0Y,MAAMC,WAAaD,EAEtC,IAAI0B,EAAS,CACT,CACIld,KAAM,8BACNlD,KAAM,KAIVqgB,EAAa,EAAKtnB,MAAMsmB,iBAAiBrf,KAC7C7C,QAAQC,IAAIijB,GACZA,EAAWvK,MAAK,SAACpY,EAAGqY,GAAJ,OAAWrY,EAAE4iB,OAASvK,EAAEuK,OAAS,GAAK,KACtDnjB,QAAQC,IAAIijB,GAEZ,IAAK,IAAIzhB,EAAI,EAAGA,EAAIyhB,EAAW9gB,OAAQX,IAAK,CACxC,IAAI2hB,EAC+B,IAA/B,EAAKxiB,MAAM4e,gBACL0D,EAAWzhB,GAAGwY,OAAO1I,QAAQ,IAC5B2R,EAAWzhB,GAAGwY,OAASiJ,EAAWzhB,GAAG4hB,YAAY9R,QAAQ,GACpE0R,EAAO,GAAGpgB,KAAKhB,KAAKuhB,GAGxB1D,EACI,cAAC,IAAMhf,SAAP,UACI,qBAAKlG,UAAU,kBAAf,SACI,cAAC,KAAD,CACIqO,QAAS,EAAKjI,MAAMiI,QACpBoa,OAAQA,EACR9kB,KAAK,MACLI,OAAQ,eAMxBmhB,EACI,cAACviB,EAAA,EAAOC,IAAR,CACI5C,UAAU,mBACV8C,QAAS,CAAE0I,QAAS,GACpBzI,QAAS,CAAEyI,QAAS,GACpBtI,KAAM,CAAEsI,QAAS,GAJrB,SAMI,gCACI,qBAAKT,IAAKiC,EAAQhN,UAAU,OAAOiL,IAAI,WACvC,mBAAGjL,UAAU,YAAb,uDAKhB,OAAOklB,G,EAGX7P,cAAgB,SAACZ,GACb,EAAKjN,SAAS,CAAEwd,gBAAgD,IAA/B,EAAK5e,MAAM4e,gBAAwB,EAAI,K,EAG5E3R,cAAgB,WACZ,IAAIC,EAAS,cAAC,IAAMpN,SAAP,IAmBb,OAlBI,EAAK9E,MAAMsmB,kBAAoB,EAAKtmB,MAAMgkB,cAAgB,IAC1D9R,EACI,eAAC,IAAMpN,SAAP,WACI,cAAC,IAAD,UACI,qBAAKlG,UAAU,eAAf,SACI,uBAAMA,UAAU,oBAAhB,UAAqC,IAArC,+BAGR,cAAC,IAAD,UACI,qBAAKA,UAAU,eAAf,SACI,uBAAMA,UAAU,oBAAhB,UACK,IADL,yCAQbsT,G,EAGXxJ,OAAS,WACL,OACI,eAAC,IAAM5D,SAAP,WACK,EAAK+e,eACN,qBAAKjlB,UAAU,qBAAf,SACI,cAAC,IAAD,CACI2X,aAAc,EACdC,cAAe,EACfC,gBAAgB,EAChBxC,cAAe,SAACpO,GAAD,OAAO,EAAKoO,cAAcpO,EAAE6Q,cAC3CC,SAAU,SAAChF,GAAD,OAAY,EAAKvL,SAAS,CAAEuL,OAAQA,KALlD,SAOK,EAAKM,wB,YA9MK/R,IAAM+B,WC2M1BylB,G,4MA5NX1iB,MAAQ,CACJ+e,kBAAcve,EACd8gB,sBAAkB9gB,EAClBwc,cAAUxc,EACVmiB,oBAAgBniB,EAChBwe,mBAAexe,EACfkF,YAAQlF,EACR+M,MAAO,G,EAGXrG,OAAS,WACL,IAAIC,GAAY,EACVtB,EAAQF,aAAaC,QAAQ,SACnC,GAAIC,EAAO,CACP,IAAIuB,EAAeC,IAAIC,OAAOzB,EAAO,CAAE0B,UAAU,IAC7CC,EAAU,IAAIC,KACdL,EAAaO,QAAQC,KAAOJ,EAAQE,UAAY,MAChDP,GAAY,IAGF,IAAdA,GACA,EAAK/F,SAAS,CAAEsX,WAAW,K,EAInCvb,kBAAoB,WAChB,EAAK+J,SACL,IAAIxB,EAASC,aAAaC,QAAQ,UAC9BF,GACA,EAAKtE,SAAS,CAAEsE,OAAQA,IAE5B,EAAKkd,aAAald,GAClB,EAAKmd,iBAAiBnd,EAAQ,iBAC9B,EAAKod,qBAAqBpd,EAAQ,kB,EAGtCkd,aAAe,SAACld,GACZ7D,MAAM,yCAAD,OACwC6D,GAEzC,CACIM,OAAQ,MACRC,YAAa,UACbC,QAAS,IAAIC,QAAQ,CACjBC,cAAeT,aAAaC,QAAQ,SACpC,UAAW,uCACX,eAAgB,uBAIvBxK,MAAK,SAAC0G,GAAD,OAAcA,EAASC,UAC5B3G,MAAK,SAACsG,GAAS,IAAD,EACXtC,QAAQC,IAAIqC,GACZ,EAAKN,SAAS,CACV4b,SAAQ,OAAEtb,QAAF,IAAEA,GAAF,UAAEA,EAAKO,YAAP,aAAE,EAAW+a,SACrB2F,eAAc,OAAEjhB,QAAF,IAAEA,OAAF,EAAEA,EAAKihB,eACrB3D,cAAa,OAAEtd,QAAF,IAAEA,OAAF,EAAEA,EAAKsd,oB,EAKpC6D,iBAAmB,SAACnd,EAAQqd,GACxBlhB,MAAM,yCAAD,OACwC6D,EADxC,4DACkGqd,GAEnG,CACI/c,OAAQ,MACRC,YAAa,UACbC,QAAS,IAAIC,QAAQ,CACjBC,cAAeT,aAAaC,QAAQ,SACpC,UAAW,uCACX,eAAgB,uBAIvBxK,MAAK,SAAC0G,GAAD,OAAcA,EAASC,UAC5B3G,MAAK,SAACsG,GAAS,IAAD,EACXtC,QAAQC,IAAIqC,GACZ,EAAKN,SAAS,CACV2d,aAAY,OAAErd,QAAF,IAAEA,GAAF,UAAEA,EAAKshB,kBAAP,aAAE,EAAiBlI,e,EAK/CgI,qBAAuB,SAACpd,EAAQqd,GAC5BlhB,MAAM,yCAAD,OACwC6D,EADxC,gEACsGqd,GAEvG,CACI/c,OAAQ,MACRC,YAAa,UACbC,QAAS,IAAIC,QAAQ,CACjBC,cAAeT,aAAaC,QAAQ,SACpC,UAAW,uCACX,eAAgB,uBAIvBxK,MAAK,SAAC0G,GAAD,OAAcA,EAASC,UAC5B3G,MAAK,SAACsG,GAAS,IAAD,EACXtC,QAAQC,IAAIqC,GACZ,EAAKN,SAAS,CACVkgB,iBAAgB,OAAE5f,QAAF,IAAEA,GAAF,UAAEA,EAAKshB,kBAAP,aAAE,EAAiB/H,mB,EAKnDgI,aAAe,WACX,IAAIN,EAAiB,cAAC,IAAM7iB,SAAP,IACjBkf,EAAgB,cAAC,IAAMlf,SAAP,IAsBpB,YApBkCU,IAA9B,EAAKR,MAAM2iB,iBACXA,EACI,sBAAK/oB,UAAU,oBAAf,UACI,sBAAMA,UAAW,iCAAjB,qBACC,EAAKoG,MAAM2iB,eAAiB,EAAI,wBAAuB,sBACxD,uBAAM/oB,UAAU,aAAhB,cAA+B,EAAKoG,MAAM2iB,2BAKrBniB,IAA7B,EAAKR,MAAMgf,gBACXA,EACI,sBAAKplB,UAAU,oBAAf,UACI,sBAAMA,UAAW,iCAAjB,qBACC,EAAKoG,MAAMgf,cAAgB,EAAI,wBAAuB,sBACvD,uBAAMplB,UAAU,aAAhB,cAA+B,EAAKoG,MAAMgf,qBAMlD,eAAC,IAAMlf,SAAP,WACK6iB,EACA3D,M,EAKbxD,aAAe,SAACL,EAAOM,GACnB,EAAKra,SAAS,CAAEmM,MAAOkO,K,EAG3BC,cAAgB,WA8BZ,OA5BI,sBAAK9hB,UAAU,yBAAf,UACI,wBACIA,UACyB,IAArB,EAAKoG,MAAMuN,MACL,+BACA,sBAEVxQ,QAAS,kBAAM,EAAKye,aAAa,GAAI,IANzC,sBAUA,wBACI5hB,UACyB,IAArB,EAAKoG,MAAMuN,MACL,+BACA,sBAEVxQ,QAAS,kBAAM,EAAKye,aAAa,GAAI,IANzC,4BAUA,qBACI5hB,UACyB,IAArB,EAAKoG,MAAMuN,MAAc,wBAA0B,+B,EAQvE7J,OAAS,WACL,OACI,cAAC,IAAM5D,SAAP,UACI,sBAAKlG,UAAU,uBAAf,UACI,sBAAKA,UAAU,yBAAf,UACI,qBAAKA,UAAU,oBAAf,SACI,eAAC,IAAD,CAAMgJ,GAAG,UAAT,cAAqB,IAArB,eAEJ,qBAAKhJ,UAAU,qBAAqB+K,IAAI,2BAA2BE,IAAI,QAG3E,qBAAKjL,UAAU,gBAAf,SACI,sBAAMA,UAAU,qBAAhB,SACK,EAAKoG,MAAMgd,SACN,EAAKhd,MAAMgd,SAAW,4CACtB,OAId,qBAAKpjB,UAAU,uBAAf,SAAuC,EAAKqpB,iBAE3C,EAAKvH,gBAEgB,IAArB,EAAK1b,MAAMuN,MACR,cAAC,GAAD,CACIwR,aAAc,EAAK/e,MAAM+e,aACzB4D,eAAgB,EAAK3iB,MAAM2iB,eAC3B3D,cAAe,EAAKhf,MAAMgf,gBAG9B,cAAC,GAAD,CACIsC,iBAAkB,EAAKthB,MAAMshB,iBAC7BqB,eAAgB,EAAK3iB,MAAM2iB,eAC3B3D,cAAe,EAAKhf,MAAMgf,gBAIlC,cAAC,EAAD,U,YAtNK9jB,IAAM+B,WCsChBimB,G,4JA7BX,WACI,OACI,cAAC,IAAD,UACI,cAAC7mB,EAAA,EAAD,CAAiBC,iBAAiB,EAAlC,SACI,eAAC,IAAD,WAEI,cAAC,IAAD,CAAO6L,KAAK,WAAW2Q,UAAWrT,EAAS0d,OAAK,GAAM,GACtD,cAAC,IAAD,CAAOhb,KAAK,UAAU2Q,UAAWkD,GAAQmH,OAAK,GAAM,GACpD,cAAC,IAAD,CAAOhb,KAAK,SAAS2Q,UAAW7R,EAAOkc,OAAK,IAC5C,cAAC,IAAD,CAAOhb,KAAK,IAAI2Q,UAAW7R,EAAOkc,OAAK,GAAM,GAC7C,cAAC,IAAD,CAAOhb,KAAK,kCAAkC2Q,UAAWR,GAAS6K,OAAK,IACvE,cAAC,IAAD,CAAOhb,KAAK,qBAAqB2Q,UAAWR,GAAS6K,OAAK,IAC1D,cAAC,IAAD,CAAOhb,KAAK,UAAU2Q,UAAW0D,GAAQ2G,OAAK,IAC9C,cAAC,IAAD,CAAOhb,KAAK,UAAU2Q,UAAW8E,GAAQuF,OAAK,IAC9C,cAAC,IAAD,CAAOhb,KAAK,iBAAiB2Q,UAAWsF,GAAsB+E,OAAK,IACnE,cAAC,IAAD,CAAOhb,KAAK,SAAS2Q,UAAW4J,GAAYS,OAAK,IACjD,cAAC,IAAD,CAAOhb,KAAK,QAAQ2Q,UAAW/Y,EAAWojB,OAAK,IAE/C,cAAC,IAAD,CAAOhb,KAAK,YAAY2Q,UAAWjS,IACnC,cAAC,IAAD,CAAUjE,GAAG,yB,GApBnB3F,aCJHmmB,GAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBloB,MAAK,YAAkD,IAA/CmoB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASlgB,OACP,cAAC,IAAMmgB,WAAP,UACE,cAAC,GAAD,MAEFtV,SAASuV,eAAe,SAM1BV,M","file":"static/js/main.7198170e.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/fruits-vegetables-basket-by-oblik-studio.9dfc6522.svg\";","import \"./ButtonNavBar.css\";\r\n\r\nfunction ButtonHistory() {\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<div className=\"button-logo\">\r\n\t\t\t\t<span class=\"material-icons\">history</span>\r\n\t\t\t</div>\r\n\t\t\t<div>Historique</div>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default ButtonHistory;\r\n","function ButtonProfil() {\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<div>\r\n\t\t\t\t<span class=\"material-icons\">person</span>\r\n\t\t\t</div>\r\n\t\t\t<div>Profil</div>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default ButtonProfil;\r\n","import { React } from \"react\";\r\n\r\nfunction ButtonScan() {\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<div className=\"navbar-scan-icon\">\r\n\t\t\t\t<span class=\"material-icons\">qr_code_scanner</span>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default ButtonScan;\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport {\r\n\tconfigure,\r\n\tBarcodePicker as ScanditSDKBarcodePicker,\r\n} from \"scandit-sdk\";\r\nimport \"./Scan.css\";\r\nimport { motion, AnimatePresence } from \"framer-motion\";\r\n\r\n// Configure the library and activate it with a license key\r\nconst configurationPromise = configure(\r\n\t\"ASHf6Cx7DGz5BbkR5RWee94Ezm55DtkCAFB5HoNVQLhPf8gUhk8ypmZ72tbfAdIo33/I2gZR9pcXcdBwQGyYu69PkahqLA0dEEN5WFtpVEjMfQMiBhwmRWIJQgn+E54DiwJm/5CjsV1+Uy7AJWXnvrLiuwxG2D/b7b1QoPFJfkKp2OSreWJXnV/kJ+rtqFyNOu2wQb5Rq5IFXOU/tnjlTvJp8Kxl4jezOVoWlQZreaLKfxfBforPArJErC16cldrqFULYUdsPqb4Vn27hWUmPQTfaX/SbeDCl1h++IPmcvRpzwM9hY0ti7zzfhBKg3TgEYTMiPUipakmM21mU92xYjA9kmKO6bOjzY4XqyrWBUzv/C1TwJfK1aZDDLH8BOmqqJILi2Ty9fN84y09vBgv0dfXhQa3Q0/UW0Hnv0Xge2am3RY5dmE6pfWaxYyA3fDj920DpnlUNcAsfdErnvpZz8H1eftw6D2w3ps6q3jNFc/CTkALFZOk9Sy2u+lOfzvjKrcz5d1yoSo1sVhFsLWNUoaoHTP6NPnQaawC1YwPRp90T+2yNfx+iESAhn3qfn2pOEpBG0rHdZNLLj1yeNJU9Pjt7dznNeCJwG2SzSQvPZU5HzLuIu+siWjUPStB9WWMfVluWN3opv+ReRWBjBsaRFPBmit6LNbRk3QLT6To50yVZg8Zy1NuDFUoE+Ms2ytVn9fs30n1DeNYJLCWjQJ4ktQaz2mIFTOFvRVrJqPkTBwzOaAjWoPxOr097hga8bRhPAqV6ir7ojSffUeCjL/jmp1x1uSE4OaQe3Y32oC0XOVJqA==\",\r\n\t{\r\n\t\tengineLocation: \"https://cdn.jsdelivr.net/npm/scandit-sdk@5.x/build/\",\r\n\t}\r\n).catch((error) => {\r\n\talert(error);\r\n});\r\n\r\nconst style = {\r\n\tposition: \"absolute\",\r\n\ttop: \"0\",\r\n\tbottom: \"0\",\r\n\tleft: \"0\",\r\n\tright: \"0\",\r\n\tmargin: \"auto\",\r\n\tmaxWidth: \"1280px\",\r\n\tmaxHeight: \"80%\",\r\n};\r\n\r\nclass Scan extends Component {\r\n\tstatic propTypes = {\r\n\t\tvisible: PropTypes.bool,\r\n\t\tplaySoundOnScan: PropTypes.bool,\r\n\t\tvibrateOnScan: PropTypes.bool,\r\n\t\tscanningPaused: PropTypes.bool,\r\n\t\tguiStyle: PropTypes.string,\r\n\t\tvideoFit: PropTypes.string,\r\n\t\tscanSettings: PropTypes.object,\r\n\t\tenableCameraSwitcher: PropTypes.bool,\r\n\t\tenableTorchToggle: PropTypes.bool,\r\n\t\tenableTapToFocus: PropTypes.bool,\r\n\t\tenablePinchToZoom: PropTypes.bool,\r\n\t\taccessCamera: PropTypes.bool,\r\n\t\tcamera: PropTypes.object,\r\n\t\tcameraSettings: PropTypes.object,\r\n\t\ttargetScanningFPS: PropTypes.number,\r\n\t\tonScan: PropTypes.func,\r\n\t\tonError: PropTypes.func,\r\n\t};\r\n\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.ref = React.createRef();\r\n\t}\r\n\r\n\tcomponentDidMount() {\r\n\t\tconfigurationPromise.then(() => {\r\n\t\t\tScanditSDKBarcodePicker.create(this.ref.current, this.props).then(\r\n\t\t\t\t(barcodePicker) => {\r\n\t\t\t\t\tthis.barcodePicker = barcodePicker;\r\n\r\n\t\t\t\t\tif (this.props.onScan != null) {\r\n\t\t\t\t\t\tbarcodePicker.on(\"scan\", this.props.onScan);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (this.props.onError != null) {\r\n\t\t\t\t\t\tbarcodePicker.on(\"scanError\", this.props.onError);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t);\r\n\t\t});\r\n\t}\r\n\r\n\tcomponentWillUnmount() {\r\n\t\tif (this.barcodePicker != null) {\r\n\t\t\tthis.barcodePicker.destroy();\r\n\t\t}\r\n\t}\r\n\r\n\tcomponentDidUpdate(prevProps) {\r\n\t\t// These are just some examples of how to react to some possible property changes\r\n\r\n\t\tif (\r\n\t\t\tJSON.stringify(prevProps.scanSettings) !==\r\n\t\t\tJSON.stringify(this.props.scanSettings)\r\n\t\t) {\r\n\t\t\tthis.barcodePicker.applyScanSettings(this.props.scanSettings);\r\n\t\t}\r\n\r\n\t\tif (prevProps.visible !== this.props.visible) {\r\n\t\t\tthis.barcodePicker.setVisible(this.props.visible);\r\n\t\t}\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<AnimatePresence exitBeforeEnter={true}>\r\n\t\t\t\t<motion.div\r\n\t\t\t\t\tid=\"background-scan\"\r\n\t\t\t\t\tinitial={{ bottom: \"-1000px\" }}\r\n\t\t\t\t\tanimate={{ bottom: \"0px\" }}\r\n\t\t\t\t\ttransition={{ duration: 0.5 }}\r\n\t\t\t\t\texit={{ bottom: \"-1000px\" }}\r\n\t\t\t\t>\r\n\t\t\t\t\t<div ref={this.ref} style={style} />\r\n\t\t\t\t\t<span\r\n\t\t\t\t\t\tclass=\"close\"\r\n\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\tthis.props.onCrossClicked(false);\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t&times;\r\n\t\t\t\t\t</span>\r\n\t\t\t\t\t<div id=\"scandit-barcode-picker\"></div>\r\n\t\t\t\t</motion.div>\r\n\t\t\t</AnimatePresence>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default Scan;\r\n","import React, { Component } from \"react\";\r\nimport Quagga from \"quagga\";\r\n\r\nclass Scanner extends Component {\r\n    componentDidMount = () => {\r\n        Quagga.init(\r\n            {\r\n                inputStream: {\r\n                    type: \"LiveStream\",\r\n                    constraints: {\r\n                        width: { ideal: 1280 },\r\n                        height: { ideal: 960 },\r\n                        facingMode: \"environment\", // or user\r\n                        aspectRatio: {\r\n                            min: 1,\r\n                            max: 2,\r\n                        },\r\n                        focusMode: \"continuous\",\r\n                    },\r\n                },\r\n                locator: {\r\n                    patchSize: \"normal\",\r\n                    halfSample: false,\r\n                },\r\n                locate: false,\r\n                area: {\r\n                    top: \"25%\",\r\n                    right: \"25%\",\r\n                    left: \"25%\",\r\n                    bottom: \"25%\",\r\n                },\r\n                numOfWorkers: window.navigator.hardwareConcurrency || 2,\r\n                decoder: {\r\n                    readers: [\"ean_reader\"],\r\n                },\r\n                debug: {\r\n                    drawBoundingBox: true,\r\n                    showFrequency: true,\r\n                    drawScanline: true,\r\n                    showPattern: true,\r\n                },\r\n                multiple: false,\r\n                singleChannel: false,\r\n            },\r\n            function (err) {\r\n                if (err) {\r\n                    return console.log(err);\r\n                }\r\n                Quagga.start();\r\n            }\r\n        );\r\n        this.props.setQuagga(Quagga);\r\n        Quagga.onDetected(this._onDetected);\r\n    };\r\n\r\n    componentWillUnmount() {\r\n        Quagga.offDetected(this._onDetected);\r\n    }\r\n\r\n    _onDetected = async (result) => {\r\n        let stop = await this.props.onDetected(result);\r\n        console.log(stop);\r\n        if (stop) {\r\n            Quagga.stop();\r\n        }\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <div id=\"interactive\" className=\"viewport\" />\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Scanner;\r\n","import React, { Component } from \"react\";\r\nimport Scanner from \"./Scanner\";\r\nimport QrReader from \"react-qr-reader\";\r\nimport Switch from \"react-switch\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nclass Scan_home extends Component {\r\n    state = {\r\n        scanning: true,\r\n        status: \"\",\r\n        results: [],\r\n        usedCamera: 0,\r\n        devices: [],\r\n        reading: 0,\r\n        barcode: undefined,\r\n        bcProductId: undefined,\r\n        Quagga: undefined,\r\n    };\r\n\r\n    componentDidMount = async () => {\r\n        let a = await navigator.mediaDevices.enumerateDevices().then(function (devices) {\r\n            return devices;\r\n        });\r\n        let cameras = [];\r\n        let i = 0;\r\n        a.forEach(function (device) {\r\n            if (device.kind == \"videoinput\") {\r\n                cameras.push(device);\r\n                if (device.label.match(/back/) != null) {\r\n                    this.setState({ usedCamera: i });\r\n                }\r\n                i++;\r\n            }\r\n        });\r\n        this.setState({ devices: cameras });\r\n    };\r\n\r\n    setQuagga = (quagga) => {\r\n        console.log(quagga);\r\n        if (this.state.Quagga) {\r\n            this.state.Quagga.stop();\r\n        }\r\n        this.setState({ Quagga: quagga });\r\n    };\r\n\r\n    switchCamera = () => {\r\n        let num = this.state.usedCamera + 1;\r\n        if (num >= this.state.devices.length) {\r\n            num = 0;\r\n        }\r\n\r\n        this.setState({ usedCamera: num, scanning: false }, () =>\r\n            this.setState({ scanning: true })\r\n        );\r\n    };\r\n\r\n    _scan = () => {\r\n        this.setState({ scanning: !this.state.scanning, status: \"\" });\r\n    };\r\n\r\n    _onDetected = async (res) => {\r\n        console.log(res);\r\n        if (res) {\r\n            if (res.codeResult && res.codeResult.code) {\r\n                this.setState({\r\n                    results: [res],\r\n                    scanning: true,\r\n                    status: \"waiting\",\r\n                });\r\n                let response = await fetch(\r\n                    `https://world.openfoodfacts.org/api/v0/product/${res.codeResult.code}.json/`\r\n                );\r\n                let result = await response.json();\r\n                console.log(result);\r\n                if (result.status !== 0) {\r\n                    this.setState({\r\n                        scanning: false,\r\n                        status: \"found\",\r\n                        barcode: res.codeResult.code,\r\n                    });\r\n                    return true;\r\n                } else {\r\n                    this.setState({\r\n                        scanning: true,\r\n                        status: \"not found\",\r\n                    });\r\n                    return false;\r\n                }\r\n                // .then((response) => response.json())\r\n                //     .then((result) => {\r\n                //         console.log(result);\r\n                //         if (result.status !== 0) {\r\n                //             this.setState({\r\n                //                 scanning: false,\r\n                //                 status: \"found\",\r\n                //                 barcode: res.codeResult.code,\r\n                //             });\r\n                //         } else {\r\n                //             this.setState({\r\n                //                 scanning: true,\r\n                //                 status: \"not found\",\r\n                //             });\r\n                //         }\r\n                //     });\r\n            }\r\n        }\r\n    };\r\n\r\n    handleScan = (data) => {\r\n        if (data) {\r\n            let arr = data.split(\"/\");\r\n            if (arr.length > 1) {\r\n                this.setState({\r\n                    scanning: false,\r\n                    barcode: arr[4],\r\n                    bcProductId: arr[5],\r\n                    status: \"found\",\r\n                });\r\n            }\r\n            this.state.Quagga.stop();\r\n        }\r\n    };\r\n    handleError = (err) => {\r\n        console.error(err);\r\n    };\r\n\r\n    displayQrCode = () => {\r\n        if (this.state.status !== \"found\") {\r\n            return (\r\n                <QrReader\r\n                    delay={300}\r\n                    onError={this.handleError}\r\n                    onScan={this.handleScan}\r\n                    style={{ width: \"100%\" }}\r\n                    showViewFinder={false}\r\n                />\r\n            );\r\n        } else {\r\n            return <React.Fragment />;\r\n        }\r\n    };\r\n\r\n    displayBarCode = () => {\r\n        if (this.state.status !== \"found\") {\r\n            return (\r\n                <React.Fragment>\r\n                    <div className=\"header\">\r\n                        {this.state.scanning ? \"true\" : \"false\"}\r\n                        {/* {this.state.devices?.length > 4 ? (\r\n                            <button className=\"code-switch-camera\" onClick={this.switchCamera}>\r\n                                <span className=\"material-icons\">cameraswitch</span>\r\n                                {this.state.usedCamera}\r\n                            </button>\r\n                        ) : (\r\n                            <React.Fragment />\r\n                        )} */}\r\n                        <ul className=\"results\">\r\n                            {this.state.results.map((result, i) => (\r\n                                <div key={result.codeResult.code + i}>\r\n                                    {this.state.status === \"waiting\"\r\n                                        ? \"Vérification du code\" + result?.codeResult?.code\r\n                                        : \"\"}\r\n                                    {this.state.status === \"not found\"\r\n                                        ? \"code non trouvé, merci de réessayer\"\r\n                                        : \"\"}\r\n                                </div>\r\n                            ))}\r\n                        </ul>\r\n                    </div>\r\n                    {this.state.scanning ? (\r\n                        <Scanner onDetected={this._onDetected} setQuagga={this.setQuagga} />\r\n                    ) : null}\r\n                </React.Fragment>\r\n            );\r\n        } else {\r\n            return <React.Fragment />;\r\n        }\r\n    };\r\n\r\n    switchReader = () => {\r\n        if (this.state.reading) this.setState({ reading: false });\r\n        else this.setState({ reading: true });\r\n    };\r\n\r\n    render() {\r\n        console.log(\"Results: \", this.state.results, this.state.redirect);\r\n        if (\r\n            this.state.barcode &&\r\n            this.state.bcProductId &&\r\n            (this.props.barcode !== this.state.barcode ||\r\n                this.props.bcProductId !== this.state.bcProductId)\r\n        ) {\r\n            return (\r\n                <Redirect to={\"/products/\" + this.state.barcode + \"/\" + this.state.bcProductId} />\r\n            );\r\n        }\r\n        if (this.state.barcode && this.props.barcode !== this.state.barcode) {\r\n            return <Redirect to={\"/products/\" + this.state.barcode} />;\r\n        } else {\r\n            return (\r\n                <div className=\"code-reader-container\">\r\n                    <span\r\n                        class=\"close\"\r\n                        onClick={() => {\r\n                            this.props?.onCrossClicked(false);\r\n                        }}\r\n                    >\r\n                        &times;\r\n                    </span>\r\n                    <div className=\"code-switch\" onClick={this.switchReader}>\r\n                        <div className=\"span-code-switch\">\r\n                            <span\r\n                                className={\r\n                                    this.state.reading ? \"material-icons\" : \"material-icons green\"\r\n                                }\r\n                            >\r\n                                view_week\r\n                            </span>\r\n                            <span>Barcode</span>\r\n                        </div>\r\n                        <Switch\r\n                            onChange={this.switchReader}\r\n                            uncheckedIcon={false}\r\n                            checkedIcon={false}\r\n                            checked={this.state.reading}\r\n                            onColor={\"#888\"}\r\n                            offColor={\"#888\"}\r\n                        />\r\n                        <div className=\"span-code-switch\">\r\n                            <span\r\n                                className={\r\n                                    !this.state.reading ? \"material-icons\" : \"material-icons green\"\r\n                                }\r\n                            >\r\n                                qr_code_scanner\r\n                            </span>\r\n                            <span>QR Code</span>\r\n                        </div>\r\n                    </div>\r\n                    {this.state.reading ? this.displayQrCode() : this.displayBarCode()}\r\n                </div>\r\n            );\r\n        }\r\n    }\r\n}\r\n\r\nexport default Scan_home;\r\n","import \"./Navbar.css\";\r\nimport React from \"react\";\r\nimport ButtonHistory from \"../Button/ButtonHistory\";\r\nimport ButtonProfil from \"../Button/ButtonProfil\";\r\nimport ButtonScan from \"../Button/ButtonScan\";\r\nimport Scan from \"../Scan/Scan\";\r\nimport Scan_home from \"../Test/Scan_home\";\r\nimport { ScanSettings } from \"scandit-sdk\";\r\nimport { Redirect, Link } from \"react-router-dom\";\r\n\r\nclass Navbar extends React.Component {\r\n    state = {\r\n        showScanner: false,\r\n        barcode: undefined,\r\n        bcProductId: undefined,\r\n        height: 0,\r\n    };\r\n\r\n    componentDidMount() {\r\n        this.updateWindowDimensions();\r\n        window.addEventListener(\"resize\", this.updateWindowDimensions);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        window.removeEventListener(\"resize\", this.updateWindowDimensions);\r\n    }\r\n\r\n    updateWindowDimensions = () => {\r\n        this.setState({ height: window.innerHeight });\r\n    };\r\n\r\n    handleScannerButton = (bool) => {\r\n        this.setState({ showScanner: bool });\r\n    };\r\n\r\n    handleBarcode = (res) => {\r\n        if (res) {\r\n            //détecté par barcode scanner\r\n            let arr = res.split(\"/\");\r\n            if (arr.length > 1) {\r\n                this.setState({\r\n                    barcode: arr[4],\r\n                    bcProductId: arr[5],\r\n                    showScanner: false,\r\n                });\r\n            } else {\r\n                this.setState({\r\n                    barcode: arr[0],\r\n                    showScanner: false,\r\n                    bcProductId: undefined,\r\n                });\r\n            }\r\n        }\r\n    };\r\n\r\n    render = () => {\r\n        if (this.state.height < 550) {\r\n            return <React.Fragment />;\r\n        }\r\n        if (\r\n            this.state.barcode &&\r\n            this.state.bcProductId &&\r\n            (this.props.barcode !== this.state.barcode ||\r\n                this.props.bcProductId !== this.state.bcProductId)\r\n        ) {\r\n            return (\r\n                <Redirect to={\"/products/\" + this.state.barcode + \"/\" + this.state.bcProductId} />\r\n            );\r\n        }\r\n\r\n        if (this.state.barcode && this.props.barcode !== this.state.barcode) {\r\n            return <Redirect to={\"/products/\" + this.state.barcode} />;\r\n        }\r\n\r\n        if (!this.state.showScanner) {\r\n            return (\r\n                <React.Fragment>\r\n                    <div className=\"navbar-container\">\r\n                        <Link\r\n                            to=\"/history\"\r\n                            className={\r\n                                window.location.pathname == \"/history\"\r\n                                    ? \"navbar-link navbar-text-left navbar-selected\"\r\n                                    : \"navbar-link navbar-text-left \"\r\n                            }\r\n                        >\r\n                            <ButtonHistory />\r\n                        </Link>\r\n                        <div onClick={() => this.handleScannerButton(true)}>\r\n                            <div className=\"navbar-circle\">\r\n                                <ButtonScan />\r\n                            </div>\r\n                        </div>\r\n                        <span className=\"navbar-scan-text\">Scan</span>\r\n                        <Link\r\n                            to=\"/profil\"\r\n                            className={\r\n                                window.location.pathname == \"/profil\"\r\n                                    ? \"navbar-link navbar-text-right navbar-selected\"\r\n                                    : \"navbar-link navbar-text-right \"\r\n                            }\r\n                        >\r\n                            <ButtonProfil />\r\n                        </Link>\r\n                    </div>\r\n                </React.Fragment>\r\n            );\r\n        } else {\r\n            return (\r\n                <Scan\r\n                    onCrossClicked={this.handleScannerButton}\r\n                    // playSoundOnScan={true}\r\n                    vibrateOnScan={true}\r\n                    enableTorchToggle={true}\r\n                    enablePinchToZoom={true}\r\n                    enableCameraSwitcher={true}\r\n                    guiStyle={\"viewfinder\"}\r\n                    scanSettings={\r\n                        new ScanSettings({\r\n                            enabledSymbologies: [\r\n                                \"qr\",\r\n                                \"ean8\",\r\n                                \"ean13\",\r\n                                \"upca\",\r\n                                \"upce\",\r\n                                \"code128\",\r\n                                \"code39\",\r\n                                \"code93\",\r\n                                \"itf\",\r\n                            ],\r\n                            codeDuplicateFilter: 1000,\r\n                        })\r\n                    }\r\n                    onScan={(scanResult) => {\r\n                        console.log(scanResult.barcodes[0].data);\r\n                        this.handleBarcode(scanResult.barcodes[0].data);\r\n                    }}\r\n                    onError={(error) => {\r\n                        console.error(error.message);\r\n                    }}\r\n                />\r\n                // <Scan_home onCrossClicked={this.handleScannerButton} history={this.props.history} />\r\n            );\r\n        }\r\n    };\r\n}\r\n\r\nexport default Navbar;\r\n","export default __webpack_public_path__ + \"static/media/logo.0dcb8e95.svg\";","export default __webpack_public_path__ + \"static/media/bitmap.6f490d5b.png\";","import './Header.css';\r\nimport logo from '../../assets/images/logo.svg';\r\nimport blob from \"../../assets/images/bitmap.png\";\r\n\r\nfunction Header() {\r\n  return (\r\n    <div>\r\n      <div>\r\n\t\t\t\t\t\t<img src={blob} className=\"blob-top\" alt=\"Blob\" />\r\n\t\t\t\t</div>\r\n        <div>\r\n          <img src={blob} className=\"blob-left\" alt=\"Blob\" />\r\n        </div>\r\n        <div>\r\n          <img src={blob} className=\"blob-right\" alt=\"Blob\" />\r\n        </div>\r\n      <div className=\"header-container\">\r\n        <img src={logo} className=\"header-logo\" alt=\"Logo\"/>\r\n        <span>Lowympact</span>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Header;","import { React, Component, Fragment } from \"react\";\r\nimport fruits from \"../assets/images/fruits-vegetables-basket-by-oblik-studio.svg\";\r\nimport Navbar from \"../components/Navbar/Navbar\";\r\nimport Header from \"../components/Header/Header\";\r\nimport \"./History.css\";\r\n// import { ITEMS } from \"../assets/scanned/items\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { motion } from \"framer-motion\";\r\n\r\nfunction RenderHistoryItem({ item }) {\r\n    var labelColor;\r\n    if (item.label === \"d\" || item.label === \"e\") {\r\n        labelColor = \"red\";\r\n    } else if (item.label === \"c\") {\r\n        labelColor = \"yellow\";\r\n    } else if (item.label === \"a\" || item.label === \"b\") {\r\n        labelColor = \"green\";\r\n    }\r\n\r\n    var pathProduct = \"/products/\" + item.barcode;\r\n    if (item.bcProductId) {\r\n        pathProduct += \"/\" + item.bcProductId;\r\n    }\r\n\r\n    // Mock Soutenance\r\n    if (item.barcode === \"80135463\") {\r\n        item.name = \"Nutella 200g\";\r\n    }\r\n\r\n    return (\r\n        <motion.div initial={{ opacity: 0 }} animate={{ opacity: 1 }} exit={{ opacity: 0 }}>\r\n            <Link className=\"history-item\" to={pathProduct}>\r\n                <div className=\"history-img-container\">\r\n                    <img src={item.image} alt=\"\" />\r\n                </div>\r\n                <div className=\"history-name-container\">\r\n                    <div className=\"history-name\">{item.name}</div>\r\n                    <div className=\"history-brand\">{item.brand}</div>\r\n                </div>\r\n                <div className=\"history-label-container\">\r\n                    <div style={{ color: labelColor }}>●</div>\r\n                    <div className=\"history-label\">\r\n                        {item.label == \"not-applicable\" ? \"\" : item.label}\r\n                    </div>\r\n                </div>\r\n                <div style={{ marginRight: \"10px\", color: \"rgb(41,72,102)\" }}>{\">\"}</div>\r\n            </Link>\r\n        </motion.div>\r\n    );\r\n}\r\n\r\nclass History extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            items: undefined,\r\n            loading: true,\r\n            userId: undefined,\r\n        };\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        let userId = localStorage.getItem(\"userId\");\r\n        let token = localStorage.getItem(\"token\");\r\n        if (userId && token) {\r\n            this.setState({ userId: userId });\r\n            this.loadHistoryInformations(userId);\r\n        } else {\r\n            this.loadLocalStorageHistory(userId);\r\n        }\r\n    };\r\n\r\n    loadHistoryInformations = (userId) => {\r\n        fetch(\r\n            `https://api.lowympact.fr/api/v1/users/${userId}/history`,\r\n            // `http://localhost:8080/api/v1/users/${userId}/history`,\r\n\r\n            {\r\n                method: \"get\",\r\n                credentials: \"include\",\r\n                headers: new Headers({\r\n                    authorization: localStorage.getItem(\"token\"),\r\n                    \"Content-Type\": \"application/json\",\r\n                    \"api-key\": \"99d8fb95-abdd-4885-bf6c-3a81d8874043\",\r\n                }),\r\n            }\r\n        )\r\n            .then((response) => response.json())\r\n            .then((res) => {\r\n                console.log(res);\r\n\r\n                this.setState({\r\n                    items: res?.data,\r\n                    loading: false,\r\n                });\r\n            });\r\n    };\r\n\r\n    loadLocalStorageHistory = () => {\r\n        let history = JSON.parse(localStorage.getItem(\"local_history\"));\r\n        this.setState({\r\n            items: history,\r\n            loading: false,\r\n        });\r\n    };\r\n\r\n    render() {\r\n        if (this.state.items) {\r\n            let itemList = <Fragment />;\r\n            if (!this.loading) {\r\n                itemList = this.state.items.map((item) => {\r\n                    return (\r\n                        <div key={item.id}>\r\n                            <RenderHistoryItem item={item} />\r\n                        </div>\r\n                    );\r\n                });\r\n            } else {\r\n                itemList = (\r\n                    <div className=\"loader\">\r\n                        <img src=\"/images/utils/loading.gif\" alt=\"\" />\r\n                    </div>\r\n                );\r\n            }\r\n\r\n            if (Object.keys(this.state.items).length === 0)\r\n                return (\r\n                    <div>\r\n                        <Header />\r\n                        <Navbar />\r\n                        <motion.div\r\n                            className=\"App\"\r\n                            initial={{ opacity: 0 }}\r\n                            animate={{ opacity: 1 }}\r\n                            exit={{ opacity: 0 }}\r\n                        >\r\n                            <div>\r\n                                <img src={fruits} className=\"logo\" alt=\"Fruits\" />\r\n                                <p className=\"logo-text\">Commence à scanner des produits !</p>\r\n                            </div>\r\n                        </motion.div>\r\n                    </div>\r\n                );\r\n            else\r\n                return (\r\n                    <div>\r\n                        <div className=\"screen\">\r\n                            <div className=\"screen-title\"></div>\r\n                            {itemList}\r\n                        </div>\r\n                        <Header />\r\n                        <Navbar />\r\n                    </div>\r\n                );\r\n        } else {\r\n            let image = (\r\n                <div>\r\n                    <img src={fruits} className=\"logo\" alt=\"Fruits\" />\r\n                    <p className=\"logo-text\">Commence à scanner des produits !</p>\r\n                </div>\r\n            );\r\n            if (this.state.loading) {\r\n                image = (\r\n                    <div className=\"loader\">\r\n                        <img src=\"/images/utils/loading.gif\" alt=\"\" />\r\n                    </div>\r\n                );\r\n            }\r\n            return (\r\n                <div>\r\n                    <Header />\r\n                    <Navbar />\r\n                    <motion.div\r\n                        className=\"App\"\r\n                        initial={{ opacity: 0 }}\r\n                        animate={{ opacity: 1 }}\r\n                        exit={{ opacity: 0 }}\r\n                    >\r\n                        {image}\r\n                    </motion.div>\r\n                </div>\r\n            );\r\n        }\r\n    }\r\n}\r\n\r\nexport default History;\r\n","import logo from \"../assets/images/logo.svg\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction Error404() {\r\n\treturn (\r\n\t\t<div className=\"App\">\r\n\t\t\t<header className=\"App-header\">\r\n\t\t\t\t<img src={logo} className=\"logo\" alt=\"logo\" />\r\n\t\t\t\t<h1>Erreur 404</h1>\r\n\t\t\t\t<Link to=\"/\">Retourner à l'accueil</Link>\r\n\t\t\t</header>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default Error404;\r\n","import '../../pages/Login.css';\r\nfunction ButtonCreateAccount() {\r\n    return (\r\n      <div>\r\n        Créer un compte\r\n      </div>\r\n    );\r\n  }\r\n  export default ButtonCreateAccount;\r\n","\r\nfunction ButtonLogin() {\r\n    return (\r\n      <div>\r\n        Me connecter\r\n      </div>\r\n    );\r\n  }\r\n  export default ButtonLogin;","function ButtonNoAccount() {\r\n\treturn <div>Continuer sans compte {\">\"}</div>;\r\n}\r\nexport default ButtonNoAccount;\r\n","import React from \"react\";\r\nimport logo from \"../assets/images/logo.svg\";\r\nimport fruits from \"../assets/images/fruits-vegetables-basket-by-oblik-studio.svg\";\r\nimport \"./Login.css\";\r\nimport ButtonCreateAccount from \"../components/Button/ButtonCreateAccount\";\r\nimport ButtonLogin from \"../components/Button/ButtonLogin\";\r\nimport { Link } from \"react-router-dom\";\r\nimport ButtonNoAccount from \"../components/Button/ButtonNoAccount\";\r\nimport jwt from \"jsonwebtoken\";\r\nimport { motion } from \"framer-motion\";\r\n\r\nclass Login extends React.Component {\r\n\tcomponentDidMount = () => {\r\n\t\tthis.Verify();\r\n\t};\r\n\r\n\tVerify = () => {\r\n\t\tlet isExpired = true;\r\n\t\tconst token = localStorage.getItem(\"token\");\r\n\t\tif (token) {\r\n\t\t\tvar decodedToken = jwt.decode(token, { complete: true });\r\n\t\t\tvar dateNow = new Date();\r\n\t\t\tconsole.log(decodedToken, dateNow.getTime() / 1000);\r\n\t\t\tif (decodedToken.payload.exp >= dateNow.getTime() / 1000) {\r\n\t\t\t\tisExpired = false;\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (isExpired === false) {\r\n\t\t\tconsole.log(\"here\");\r\n\t\t\tthis.props.history.push(`/history`); // redirection vers la page login\r\n\t\t}\r\n\t};\r\n\trender = () => {\r\n\t\treturn (\r\n\t\t\t<motion.div exit={{ opacity: 0 }}>\r\n\t\t\t\t<div className=\"login-logo\">\r\n\t\t\t\t\t<img src={logo} className=\"logo\" alt=\"Logo\" />\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"login-lowympact\">Lowympact</div>\r\n\t\t\t\t<Link to=\"/signup\" className=\"button-account\">\r\n\t\t\t\t\t<ButtonCreateAccount />\r\n\t\t\t\t</Link>\r\n\t\t\t\t<Link to=\"/signin\" className=\"button-connect\">\r\n\t\t\t\t\t<ButtonLogin />\r\n\t\t\t\t</Link>\r\n\t\t\t\t<Link to=\"/history\" className=\"button-no-account\">\r\n\t\t\t\t\t<ButtonNoAccount />\r\n\t\t\t\t</Link>\r\n\t\t\t\t<div className=\"logo-fruits\">\r\n\t\t\t\t\t<img src={fruits} className=\"logo\" alt=\"Fruits\" />\r\n\t\t\t\t</div>\r\n\t\t\t</motion.div>\r\n\t\t);\r\n\t};\r\n}\r\nexport default Login;\r\n","import L from \"leaflet\";\r\n\r\nL.Curve = L.Path.extend({\r\n\toptions: {},\r\n\r\n\tinitialize: function (path, options) {\r\n\t\t//1\r\n\t\tL.setOptions(this, options);\r\n\t\tthis._initialUpdate = true;\r\n\t\tthis._setPath(path);\r\n\t},\r\n\r\n\tgetPath: function () {\r\n\t\treturn this._coords;\r\n\t},\r\n\r\n\tsetPath: function (path, options) {\r\n\t\tthis._initialUpdate = true;\r\n\t\tthis._setPath(path);\r\n\t\treturn this.redraw();\r\n\t},\r\n\r\n\tgetBounds: function () {\r\n\t\treturn this._bounds;\r\n\t},\r\n\r\n\t_setPath: function (path) {\r\n\t\t//2\r\n\t\tthis._coords = path;\r\n\t\tthis._bounds = this._computeBounds();\r\n\t},\r\n\r\n\t_computeBounds: function () {\r\n\t\t//3\r\n\t\tvar bound = new L.LatLngBounds();\r\n\t\tvar lastPoint;\r\n\t\tvar lastCommand;\r\n\t\tvar coord;\r\n\t\tfor (var i = 0; i < this._coords.length; i++) {\r\n\t\t\tcoord = this._coords[i];\r\n\t\t\tif (typeof coord == \"string\" || coord instanceof String) {\r\n\t\t\t\tlastCommand = coord;\r\n\t\t\t} else if (lastCommand == \"H\") {\r\n\t\t\t\tbound.extend([lastPoint.lat, coord[0]]);\r\n\t\t\t\tlastPoint = new L.latLng(lastPoint.lat, coord[0]);\r\n\t\t\t} else if (lastCommand == \"V\") {\r\n\t\t\t\tbound.extend([coord[0], lastPoint.lng]);\r\n\t\t\t\tlastPoint = new L.latLng(coord[0], lastPoint.lng);\r\n\t\t\t} else if (lastCommand == \"C\") {\r\n\t\t\t\tvar controlPoint1 = new L.latLng(coord[0], coord[1]);\r\n\t\t\t\tcoord = this._coords[++i];\r\n\t\t\t\tvar controlPoint2 = new L.latLng(coord[0], coord[1]);\r\n\t\t\t\tcoord = this._coords[++i];\r\n\t\t\t\tvar endPoint = new L.latLng(coord[0], coord[1]);\r\n\r\n\t\t\t\tbound.extend(controlPoint1);\r\n\t\t\t\tbound.extend(controlPoint2);\r\n\t\t\t\tbound.extend(endPoint);\r\n\r\n\t\t\t\tendPoint.controlPoint1 = controlPoint1;\r\n\t\t\t\tendPoint.controlPoint2 = controlPoint2;\r\n\t\t\t\tlastPoint = endPoint;\r\n\t\t\t} else if (lastCommand == \"S\") {\r\n\t\t\t\tvar controlPoint2 = new L.latLng(coord[0], coord[1]);\r\n\t\t\t\tcoord = this._coords[++i];\r\n\t\t\t\tvar endPoint = new L.latLng(coord[0], coord[1]);\r\n\r\n\t\t\t\tvar controlPoint1 = lastPoint;\r\n\t\t\t\tif (lastPoint.controlPoint2) {\r\n\t\t\t\t\tvar diffLat = lastPoint.lat - lastPoint.controlPoint2.lat;\r\n\t\t\t\t\tvar diffLng = lastPoint.lng - lastPoint.controlPoint2.lng;\r\n\t\t\t\t\tcontrolPoint1 = new L.latLng(\r\n\t\t\t\t\t\tlastPoint.lat + diffLat,\r\n\t\t\t\t\t\tlastPoint.lng + diffLng\r\n\t\t\t\t\t);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tbound.extend(controlPoint1);\r\n\t\t\t\tbound.extend(controlPoint2);\r\n\t\t\t\tbound.extend(endPoint);\r\n\r\n\t\t\t\tendPoint.controlPoint1 = controlPoint1;\r\n\t\t\t\tendPoint.controlPoint2 = controlPoint2;\r\n\t\t\t\tlastPoint = endPoint;\r\n\t\t\t} else if (lastCommand == \"Q\") {\r\n\t\t\t\tvar controlPoint = new L.latLng(coord[0], coord[1]);\r\n\t\t\t\tcoord = this._coords[++i];\r\n\t\t\t\tvar endPoint = new L.latLng(coord[0], coord[1]);\r\n\r\n\t\t\t\tbound.extend(controlPoint);\r\n\t\t\t\tbound.extend(endPoint);\r\n\r\n\t\t\t\tendPoint.controlPoint = controlPoint;\r\n\t\t\t\tlastPoint = endPoint;\r\n\t\t\t} else if (lastCommand == \"T\") {\r\n\t\t\t\tvar endPoint = new L.latLng(coord[0], coord[1]);\r\n\r\n\t\t\t\tvar controlPoint = lastPoint;\r\n\t\t\t\tif (lastPoint.controlPoint) {\r\n\t\t\t\t\tvar diffLat = lastPoint.lat - lastPoint.controlPoint.lat;\r\n\t\t\t\t\tvar diffLng = lastPoint.lng - lastPoint.controlPoint.lng;\r\n\t\t\t\t\tcontrolPoint = new L.latLng(\r\n\t\t\t\t\t\tlastPoint.lat + diffLat,\r\n\t\t\t\t\t\tlastPoint.lng + diffLng\r\n\t\t\t\t\t);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tbound.extend(controlPoint);\r\n\t\t\t\tbound.extend(endPoint);\r\n\r\n\t\t\t\tendPoint.controlPoint = controlPoint;\r\n\t\t\t\tlastPoint = endPoint;\r\n\t\t\t} else {\r\n\t\t\t\tbound.extend(coord);\r\n\t\t\t\tlastPoint = new L.latLng(coord[0], coord[1]);\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn bound;\r\n\t},\r\n\r\n\t//TODO: use a centroid algorithm instead\r\n\tgetCenter: function () {\r\n\t\treturn this._bounds.getCenter();\r\n\t},\r\n\r\n\t_update: function () {\r\n\t\t//5\r\n\t\tif (!this._map) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tthis._updatePath();\r\n\t},\r\n\r\n\t_updatePath: function () {\r\n\t\t//6\r\n\t\tthis._renderer._updatecurve(this);\r\n\t},\r\n\r\n\t_project: function () {\r\n\t\t//4\r\n\t\tvar coord, lastCoord, curCommand, curPoint;\r\n\r\n\t\tthis._points = [];\r\n\r\n\t\tfor (var i = 0; i < this._coords.length; i++) {\r\n\t\t\tcoord = this._coords[i];\r\n\t\t\tif (typeof coord == \"string\" || coord instanceof String) {\r\n\t\t\t\tthis._points.push(coord);\r\n\t\t\t\tcurCommand = coord;\r\n\t\t\t} else {\r\n\t\t\t\tswitch (coord.length) {\r\n\t\t\t\t\tcase 2:\r\n\t\t\t\t\t\tcurPoint = this._map.latLngToLayerPoint(coord);\r\n\t\t\t\t\t\tlastCoord = coord;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 1:\r\n\t\t\t\t\t\tif (curCommand == \"H\") {\r\n\t\t\t\t\t\t\tcurPoint = this._map.latLngToLayerPoint([\r\n\t\t\t\t\t\t\t\tlastCoord[0],\r\n\t\t\t\t\t\t\t\tcoord[0],\r\n\t\t\t\t\t\t\t]);\r\n\t\t\t\t\t\t\tlastCoord = [lastCoord[0], coord[0]];\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tcurPoint = this._map.latLngToLayerPoint([\r\n\t\t\t\t\t\t\t\tcoord[0],\r\n\t\t\t\t\t\t\t\tlastCoord[1],\r\n\t\t\t\t\t\t\t]);\r\n\t\t\t\t\t\t\tlastCoord = [coord[0], lastCoord[1]];\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t\tthis._points.push(curPoint);\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n});\r\n\r\nL.curve = function (path, options) {\r\n\treturn new L.Curve(path, options);\r\n};\r\n\r\nL.SVG.include({\r\n\t//7\r\n\t_updatecurve: function (layer) {\r\n\t\tthis._setPath(layer, this._curvePointsToPath(layer._points));\r\n\t\tif (layer.options.animate) {\r\n\t\t\tvar path = layer._path;\r\n\t\t\tvar length = path.getTotalLength();\r\n\r\n\t\t\tif (!layer.options.dashArray) {\r\n\t\t\t\tpath.style.strokeDasharray = length + \" \" + length;\r\n\t\t\t}\r\n\r\n\t\t\tif (layer._initialUpdate) {\r\n\t\t\t\tpath.animate(\r\n\t\t\t\t\t[{ strokeDashoffset: length }, { strokeDashoffset: 0 }],\r\n\t\t\t\t\tlayer.options.animate\r\n\t\t\t\t);\r\n\t\t\t\tlayer._initialUpdate = false;\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\r\n\t_curvePointsToPath: function (points) {\r\n\t\tvar point,\r\n\t\t\tcurCommand,\r\n\t\t\tstr = \"\";\r\n\t\tfor (var i = 0; i < points.length; i++) {\r\n\t\t\tpoint = points[i];\r\n\t\t\tif (typeof point == \"string\" || point instanceof String) {\r\n\t\t\t\tcurCommand = point;\r\n\t\t\t\tstr += curCommand;\r\n\t\t\t} else {\r\n\t\t\t\tswitch (curCommand) {\r\n\t\t\t\t\tcase \"H\":\r\n\t\t\t\t\t\tstr += point.x + \" \";\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase \"V\":\r\n\t\t\t\t\t\tstr += point.y + \" \";\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tdefault:\r\n\t\t\t\t\t\tstr += point.x + \",\" + point.y + \" \";\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn str || \"M0 0\";\r\n\t},\r\n});\r\n","// import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Path, withLeaflet } from \"react-leaflet\";\r\nimport { curve } from \"./leaflet.curve\";\r\nimport L from \"leaflet\";\r\n\r\nclass Curve extends Path {\r\n\tcreateLeafletElement(props) {\r\n\t\tconst { positions, option, ...options } = props;\r\n\t\treturn L.curve(positions, option, this.getOptions(options));\r\n\t}\r\n\r\n\tupdateLeafletElement(fromProps, toProps) {\r\n\t\tif (toProps.positions !== fromProps.positions) {\r\n\t\t\tthis.leafletElement.setPath(toProps.positions);\r\n\t\t}\r\n\t\tthis.setStyleIfChanged(fromProps, toProps);\r\n\t}\r\n}\r\n\r\nCurve.propTypes = {\r\n\tchildren: PropTypes.oneOfType([\r\n\t\tPropTypes.arrayOf(PropTypes.node),\r\n\t\tPropTypes.node,\r\n\t]),\r\n\toption: PropTypes.object,\r\n\tpositions: PropTypes.array.isRequired,\r\n};\r\n\r\nexport default withLeaflet(Curve);\r\n\r\n/*\r\n  componentWillMount() {\r\n    super.componentWillMount();\r\n    const { positions, ...options } = this.props\r\n    this.leafletElement = L.curve(positions, this.getOptions(options))\r\n  }*/\r\n","import React from \"react\";\r\nimport { Map, TileLayer, Marker } from \"react-leaflet\";\r\nimport \"./Traceability.css\";\r\nimport { Swiper, SwiperSlide } from \"swiper/react\";\r\nimport { Curve } from \"./leaflet-curve\";\r\nimport L from \"leaflet\";\r\n// Import Swiper styles\r\nimport \"swiper/swiper-bundle.css\";\r\n\r\nclass Traceability extends React.Component {\r\n    map = undefined;\r\n    state = {\r\n        zoom: 12,\r\n        swiper: undefined,\r\n        currentIndex: 0,\r\n        map: undefined,\r\n    };\r\n\r\n    getMaterialIcon = (mode) => {\r\n        switch (mode) {\r\n            case \"Charette\":\r\n                return \"directions_bike\";\r\n            case \"Plane\":\r\n                return \"flight_takeoff\";\r\n            case \"Train\":\r\n                return \"train\";\r\n            case \"Boat\":\r\n                return \"directions_boat_filled\";\r\n            case \"Truck\":\r\n                return \"local_shipping\";\r\n            default:\r\n                return \"nature_people\";\r\n        }\r\n    };\r\n\r\n    getTransportMode = (mode) => {\r\n        switch (mode) {\r\n            case \"Charette\":\r\n                return \"vélo\";\r\n            case \"Plane\":\r\n                return \"avion\";\r\n            case \"Train\":\r\n                return \"train\";\r\n            case \"Boat\":\r\n                return \"bateau\";\r\n            case \"Truck\":\r\n                return \"camion\";\r\n            default:\r\n                return mode;\r\n        }\r\n    };\r\n    getTranslation = (mode) => {\r\n        switch (mode) {\r\n            case \"maker\":\r\n                return \"Fabricant\";\r\n            case \"productor\":\r\n                return \"Producteur\";\r\n            case \"shop\":\r\n                return \"Revendeur\";\r\n            default:\r\n                return mode;\r\n        }\r\n    };\r\n\r\n    displaySlides = () => {\r\n        let slides = <React.Fragment />;\r\n        if (this.props.products) {\r\n            slides = this.props.products.map((product) => {\r\n                let pastille = \"product-slide-pastille past-green\";\r\n                if (product.TransportCO2Impact?.value > 10) {\r\n                    pastille = \"product-slide-pastille past-orange\";\r\n                }\r\n                if (product.TransportCO2Impact?.value > 100) {\r\n                    pastille = \"product-slide-pastille past-red\";\r\n                }\r\n\r\n                return (\r\n                    <SwiperSlide>\r\n                        <div className=\"product-slide-container\">\r\n                            <div className=\"product-slide-icon\">\r\n                                <span class=\"material-icons\">\r\n                                    {this.getMaterialIcon(product.transport)}\r\n                                </span>\r\n\r\n                                <div className=\"product-slide-name\">\r\n                                    <span className=\"product-slide-name-product\">\r\n                                        {product.productsOutput[0].productName}\r\n                                    </span>\r\n                                    <span className=\"product-slide-name-transport\">\r\n                                        Transport en {this.getTransportMode(product.transport)}\r\n                                    </span>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"product-slide-origin-wrapper\">\r\n                                <div className=\"product-transport-ui\">\r\n                                    <div className=\"transport-ui-circle\"></div>\r\n                                    <div className=\"transport-ui-tiret\"></div>\r\n                                    <div className=\"transport-ui-circle circle-bis\"></div>\r\n                                </div>\r\n                                <div className=\"product-slide-transport-container\">\r\n                                    <div className=\"product-slide-bigname\">\r\n                                        <span>\r\n                                            {product.seller.localisation.city},{\" \"}\r\n                                            {product.seller.localisation.country}\r\n                                        </span>\r\n                                    </div>\r\n                                    <div className=\"product-slide-lowername2\">\r\n                                        {this.getTranslation(product.seller?.type)}\r\n                                        {\": \"}\r\n                                        {product.seller?.name}\r\n                                    </div>\r\n\r\n                                    <div className=\"product-slide-bigname bigname-lower\">\r\n                                        <span>\r\n                                            {product.buyer.localisation.city},{\" \"}\r\n                                            {product.buyer.localisation.country}\r\n                                        </span>\r\n                                    </div>\r\n                                    <div className=\"product-slide-lowername2\">\r\n                                        {this.getTranslation(product.buyer?.type)}\r\n                                        {\": \"}\r\n                                        {product.buyer?.name}\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"product-slide-arrow\">{\">\"}</div>\r\n                            <div className=\"product-slide-consumption\">\r\n                                <div className={pastille}></div>\r\n                                <div>{Math.round(product.dist.value)} km </div>\r\n                                <div>\r\n                                    {product.TransportCO2Impact?.value > 1\r\n                                        ? Math.round(product.TransportCO2Impact?.value)\r\n                                        : \"< 1\"}{\" \"}\r\n                                    kg CO2{\" \"}\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </SwiperSlide>\r\n                );\r\n            });\r\n        }\r\n        return slides;\r\n    };\r\n\r\n    handleMarkerClick = (latlng, index) => {\r\n        // window.scrollTo({ top: \"8000px\", behavior: \"smooth\" });\r\n        let elem = document.getElementsByClassName(\"swiper-container\");\r\n        if (elem[0]) {\r\n            elem[0].scrollIntoView({ behavior: \"smooth\" });\r\n        }\r\n        console.log(index);\r\n        if (index >= this.props.products?.length) {\r\n            this.state.swiper.slideTo(index - 1, 500);\r\n        } else {\r\n            this.state.swiper.slideTo(index, 500);\r\n        }\r\n        let zoom = 5;\r\n        if (this.props.products && this.props.products[index]) {\r\n            let p = this.props.products[index];\r\n            console.log(\r\n                [p.buyer.localisation.latitude, p.buyer.localisation.longitude],\r\n                [p.seller.localisation.latitude, p.seller.localisation.longitude]\r\n            );\r\n            zoom = getZoomRatio(\r\n                [p.buyer.localisation.latitude, p.buyer.localisation.longitude],\r\n                [p.seller.localisation.latitude, p.seller.localisation.longitude]\r\n            );\r\n        }\r\n        console.log(zoom);\r\n        this.map.leafletElement.flyTo(latlng, zoom, { duration: 0.5 });\r\n    };\r\n\r\n    onSlideChange = (index) => {\r\n        this.setState({ currentIndex: index });\r\n        let zoom = 5;\r\n        if (this.props.products && this.props.products[index]) {\r\n            let p = this.props.products[index];\r\n\r\n            zoom = getZoomRatio(\r\n                [p.buyer.localisation.latitude, p.buyer.localisation.longitude],\r\n                [p.seller.localisation.latitude, p.seller.localisation.longitude]\r\n            );\r\n\r\n            let lat =\r\n                (parseFloat(p.seller.localisation.latitude) +\r\n                    parseFloat(p.buyer.localisation.latitude)) /\r\n                2;\r\n            let long =\r\n                (parseFloat(p.seller.localisation.longitude) +\r\n                    parseFloat(p.buyer.localisation.longitude)) /\r\n                2;\r\n            console.log(zoom);\r\n            this.map.leafletElement.flyTo([lat, long], zoom, { duration: 0.5 });\r\n        }\r\n    };\r\n\r\n    displayMarker = () => {\r\n        let markers = <React.Fragment />;\r\n        if (this.props.products) {\r\n            markers = this.props.products.map((product, i) => {\r\n                let marker1 = <React.Fragment />;\r\n                let lat1 = parseFloat(product?.buyer?.localisation?.latitude);\r\n                let long1 = parseFloat(product?.buyer?.localisation?.longitude);\r\n                let marker2 = <React.Fragment />;\r\n                let lat2 = parseFloat(product?.seller?.localisation?.latitude);\r\n                let long2 = parseFloat(product?.seller?.localisation?.longitude);\r\n                let icon;\r\n                let icon2;\r\n                let zIndex = 0;\r\n                if (i === this.state.currentIndex) {\r\n                    icon = new L.Icon({\r\n                        iconUrl: \"/images/utils/map.png\", //require('../../images/logo/logo.svg'),\r\n                        iconRetinaUrl: \"/images/utils/map.png\", //\"/images/images_volume/1-l.png\", //require('../../images/logo/logo.svg'),\r\n                        iconSize: new L.Point(32, 32),\r\n                        className: \"leaflet-mark-icon\",\r\n                    });\r\n                    icon2 = new L.Icon({\r\n                        iconUrl: \"/images/utils/map.png\", //require('../../images/logo/logo.svg'),\r\n                        iconRetinaUrl: \"/images/utils/map3.png\", //\"/images/images_volume/1-l.png\", //require('../../images/logo/logo.svg'),\r\n                        iconSize: new L.Point(32, 32),\r\n                        className: \"leaflet-mark-icon\",\r\n                    });\r\n                    zIndex = 5;\r\n                } else {\r\n                    icon = new L.Icon({\r\n                        iconUrl: \"/images/utils/map2.png\", //require('../../images/logo/logo.svg'),\r\n                        iconRetinaUrl: \"/images/utils/map2.png\", //\"/images/images_volume/1-l.png\", //require('../../images/logo/logo.svg'),\r\n                        iconSize: new L.Point(25, 25),\r\n                        className: \"leaflet-mark-icon\",\r\n                    });\r\n                    icon2 = new L.Icon({\r\n                        iconUrl: \"/images/utils/map2.png\", //require('../../images/logo/logo.svg'),\r\n                        iconRetinaUrl: \"/images/utils/map2.png\", //\"/images/images_volume/1-l.png\", //require('../../images/logo/logo.svg'),\r\n                        iconSize: new L.Point(25, 25),\r\n                        className: \"leaflet-mark-icon\",\r\n                    });\r\n                }\r\n\r\n                if (lat1 && long1) {\r\n                    marker1 = (\r\n                        <Marker\r\n                            zIndexOffset={zIndex}\r\n                            icon={icon}\r\n                            position={[lat1, long1]}\r\n                            onClick={() =>\r\n                                this.handleMarkerClick(\r\n                                    [\r\n                                        parseFloat(product.buyer.localisation.latitude),\r\n                                        parseFloat(product.buyer.localisation.longitude),\r\n                                    ],\r\n                                    i + 1\r\n                                )\r\n                            }\r\n                        >\r\n                            {/* <Popup>{product.buyer.name}</Popup> */}\r\n                        </Marker>\r\n                    );\r\n                }\r\n                if (lat2 && long2) {\r\n                    marker2 = (\r\n                        <Marker\r\n                            zIndexOffset={zIndex}\r\n                            icon={icon2}\r\n                            position={[lat2, long2]}\r\n                            onClick={() =>\r\n                                this.handleMarkerClick(\r\n                                    [\r\n                                        parseFloat(product.seller.localisation.latitude),\r\n                                        parseFloat(product.seller.localisation.longitude),\r\n                                    ],\r\n                                    i\r\n                                )\r\n                            }\r\n                        >\r\n                            {/* <Popup>{product.seller.name}</Popup> */}\r\n                        </Marker>\r\n                    );\r\n                }\r\n\r\n                let color = \"#1b3044\";\r\n                let curves = document.getElementsByClassName(\"leaflet-interactive\");\r\n\r\n                if (curves && curves[i] && i === this.state.currentIndex) {\r\n                    curves[i].setAttribute(\"stroke\", \"#78be95\");\r\n                } else if (curves && curves[i]) {\r\n                    curves[i].setAttribute(\"stroke\", \"#1b3044\");\r\n                }\r\n\r\n                return (\r\n                    <React.Fragment>\r\n                        <div className=\"test\">\r\n                            <Curve\r\n                                positions={getCurveOptions(lat2, long2, lat1, long1)}\r\n                                option={{\r\n                                    color: color,\r\n                                    fill: false,\r\n                                    // animate: animate,\r\n                                    delay: 5000,\r\n                                }}\r\n                            />\r\n                        </div>\r\n                        {marker1}\r\n                        {marker2}\r\n                    </React.Fragment>\r\n                );\r\n            });\r\n        }\r\n        return markers;\r\n    };\r\n\r\n    render = () => {\r\n        return (\r\n            <div className=\"tracability-container\">\r\n                <div className=\"product-CO2-total-tracability-container\">\r\n                    <span className=\"product-CO2-total-tracability\">\r\n                        Impact total carbone :&nbsp;\r\n                        <span className=\"carbon-total-number\">\r\n                            {parseFloat(this.props.totalCO2Traceability).toFixed(1)}\r\n                        </span>\r\n                        kg CO2 soit &nbsp;\r\n                        <span className=\"carbon-total-number\">\r\n                            {parseFloat(\r\n                                ((this.props.totalCO2Traceability * 0.05) / 11.0) * 1000.0\r\n                            ).toFixed(1)}\r\n                        </span>\r\n                        kms parcourus en voiture\r\n                    </span>\r\n                </div>\r\n\r\n                <Map\r\n                    center={[51.505, -0.09]}\r\n                    zoom={1}\r\n                    minZoom={1}\r\n                    scrollWheelZoom={true}\r\n                    maxBounds={[\r\n                        [-90, -180],\r\n                        [90, 180],\r\n                    ]}\r\n                    maxBoundsViscosity={1}\r\n                    ref={(ref) => {\r\n                        this.map = ref;\r\n                        this.props.getBottomRef(ref);\r\n                    }}\r\n                    whenCreated={(map) => this.setState({ map })}\r\n                >\r\n                    <TileLayer\r\n                        attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a>'\r\n                        url=\"https://stamen-tiles-{s}.a.ssl.fastly.net/toner-background/{z}/{x}/{y}{r}.png\" //'https://maps.wikimedia.org/osm-intl/{z}/{x}/{y}{r}.png' //'https://{s}.tile.osm.org/{z}/{x}/{y}.png'\r\n                    />\r\n\r\n                    {this.displayMarker()}\r\n                </Map>\r\n                <Swiper\r\n                    spaceBetween={10}\r\n                    slidesPerView={1.2}\r\n                    centeredSlides={true}\r\n                    onSlideChange={(i) => this.onSlideChange(i.activeIndex)}\r\n                    onSwiper={(swiper) => this.setState({ swiper: swiper })}\r\n                >\r\n                    {this.displaySlides()}\r\n                </Swiper>\r\n            </div>\r\n        );\r\n    };\r\n}\r\n\r\nexport default Traceability;\r\n\r\nfunction getDistance(origin, destination) {\r\n    // return distance in meters\r\n    var lon1 = toRadian(origin[1]),\r\n        lat1 = toRadian(origin[0]),\r\n        lon2 = toRadian(destination[1]),\r\n        lat2 = toRadian(destination[0]);\r\n\r\n    var deltaLat = lat2 - lat1;\r\n    var deltaLon = lon2 - lon1;\r\n\r\n    var a =\r\n        Math.pow(Math.sin(deltaLat / 2), 2) +\r\n        Math.cos(lat1) * Math.cos(lat2) * Math.pow(Math.sin(deltaLon / 2), 2);\r\n    var c = 2 * Math.asin(Math.sqrt(a));\r\n    var EARTH_RADIUS = 6371;\r\n    return c; //* EARTH_RADIUS * 1000;\r\n}\r\n\r\nfunction toRadian(degree) {\r\n    return (degree * Math.PI) / 180;\r\n}\r\n\r\nfunction getZoomRatio(origin, destination) {\r\n    var distance = getDistance(origin, destination);\r\n    console.log(distance);\r\n    return 9 - Math.sqrt(distance * 150);\r\n}\r\n\r\nfunction getCurveOptions(lat1, long1, lat2, long2) {\r\n    var latlng1 = [lat1, long1],\r\n        latlng2 = [lat2, long2];\r\n\r\n    var offsetX = latlng2[1] - latlng1[1],\r\n        offsetY = latlng2[0] - latlng1[0];\r\n\r\n    var r = Math.sqrt(Math.pow(offsetX, 2) + Math.pow(offsetY, 2)),\r\n        theta = Math.atan2(offsetY, offsetX);\r\n\r\n    var thetaOffset = 3.14 / 10;\r\n\r\n    var r2 = r / 2 / Math.cos(thetaOffset),\r\n        theta2 = theta + thetaOffset;\r\n\r\n    var midpointX = r2 * Math.cos(theta2) + latlng1[1],\r\n        midpointY = r2 * Math.sin(theta2) + latlng1[0];\r\n\r\n    var midpointLatLng = [midpointY, midpointX];\r\n\r\n    return [\"M\", latlng1, \"Q\", midpointLatLng, latlng2];\r\n}\r\n\r\nfunction getChildElementIndex(node) {\r\n    return Array.prototype.indexOf.call(node.parentNode.children, node);\r\n}\r\n","export default __webpack_public_path__ + \"static/media/nutella.14ecd263.png\";","import React from \"react\";\r\nimport \"./Environnement.css\";\r\nimport { Swiper, SwiperSlide } from \"swiper/react\";\r\n// Import Swiper styles\r\nimport \"swiper/swiper-bundle.css\";\r\nimport { CircleProgress } from \"react-gradient-progress\";\r\n//import { PRODUCTS } from \"../../assets/alternatives/alternatives\";\r\nimport nutella from \"../../assets/images/nutella.png\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction RenderColor({ item }) {\r\n    var labelColor;\r\n    var labelLevel;\r\n    if (item.eco_score <= 33) {\r\n        labelColor = \"red\";\r\n        labelLevel = \"Mauvais\";\r\n    } else if (item.eco_score > 33 && item.eco_score < 67) {\r\n        labelColor = \"yellow\";\r\n        labelLevel = \"Moyen\";\r\n    } else {\r\n        labelColor = \"green\";\r\n        labelLevel = \"Bonne\";\r\n    }\r\n    return (\r\n        <div className=\"product-alternative-label-position\">\r\n            <div className=\"product-alternative-label\">\r\n                <div style={{ color: labelColor }}>●</div>\r\n                <div className=\"product-alternative-label-text\">{item.eco_score}/100</div>\r\n            </div>\r\n            <div className=\"product-alternative-label-level \">{labelLevel}</div>\r\n        </div>\r\n    );\r\n}\r\n\r\nclass Environnement extends React.Component {\r\n    state = {\r\n        swiper: undefined,\r\n        currentIndex: 0,\r\n        width: undefined,\r\n        showTransport: false,\r\n        materials: [],\r\n    };\r\n\r\n    getMaterialIcon = (mode) => {\r\n        switch (mode) {\r\n            case \"Transformation\":\r\n                return \"transform\";\r\n            case \"Arrow\":\r\n                if (this.state.showTransport) return \"arrow_drop_up\";\r\n                else return \"arrow_drop_down\";\r\n            case \"Consommation\":\r\n                return \"microwave\";\r\n            case \"Distribution\":\r\n                return \"store\";\r\n            case \"Recyclable\":\r\n                return \"check_circle_outline\";\r\n            case \"Non recyclable\":\r\n                return \"highlight_off\";\r\n            case \"Truck\":\r\n                return \"local_shipping\";\r\n            case \"Packaging\":\r\n                return \"inventory_2\";\r\n            case \"Agriculture\":\r\n                return \"agriculture\";\r\n            case \"Transport\":\r\n                return \"local_shipping\";\r\n            default:\r\n                return \"view_in_ar\";\r\n        }\r\n    };\r\n\r\n    getColor = (note) => {\r\n        if (note > 67) {\r\n            return \"green\";\r\n        }\r\n        if (note <= 33) {\r\n            return \"red\";\r\n        }\r\n        return \"yellow\";\r\n    };\r\n\r\n    getColorImpact = (note) => {\r\n        if (note > 70) {\r\n            return \"green\";\r\n        }\r\n        if (note <= 40) {\r\n            return \"red\";\r\n        }\r\n        return \"yellow\";\r\n    };\r\n\r\n    getLabel = (note) => {\r\n        if (note > 67) {\r\n            return \"Bon\";\r\n        }\r\n        if (note <= 33) {\r\n            return \"Mauvais\";\r\n        }\r\n        return \"Moyen\";\r\n    };\r\n\r\n    getLabelImpact = (note) => {\r\n        if (note > 60) {\r\n            return \"Impact fort\";\r\n        }\r\n        if (note <= 30) {\r\n            return \"Impact faible\";\r\n        }\r\n        return \"Impact moyen\";\r\n    };\r\n\r\n    getLabelImpactPackaging = (note) => {\r\n        if (note > 2) {\r\n            return \"Impact faible\";\r\n        }\r\n        if (note < -2) {\r\n            return \"Impact fort\";\r\n        }\r\n        return \"Impact moyen\";\r\n    };\r\n\r\n    getColorImpactPackaging = (note) => {\r\n        if (note > 2) {\r\n            return \"green\";\r\n        }\r\n        if (note < -2) {\r\n            return \"red\";\r\n        }\r\n        return \"yellow\";\r\n    };\r\n\r\n    displaySlides = () => {\r\n        let slides = <React.Fragment></React.Fragment>;\r\n\r\n        if (\r\n            this.props.dataEcoScore &&\r\n            this.props.dataEcoScore?.adjustments?.packaging?.packagings.length >= 1\r\n        ) {\r\n            slides = this.props.dataEcoScore?.adjustments?.packaging?.packagings.map((data) => {\r\n                var recyclable = \"\";\r\n                if (data.recycling) {\r\n                    recyclable = data.recycling.split(\":\")[1];\r\n                }\r\n                if (recyclable && recyclable == \"recycle\") {\r\n                    recyclable = \"Recyclable\";\r\n                } else if (recyclable && recyclable == \"discard\") {\r\n                    recyclable = \"Non recyclable\";\r\n                } else {\r\n                    recyclable = \"\";\r\n                }\r\n\r\n                return (\r\n                    <div>\r\n                        <SwiperSlide>\r\n                            <div className=\"env-product-slide-container \">\r\n                                <div className=\"env-product-slide-icon\">\r\n                                    <span class=\"material-icons env-icon-label\">\r\n                                        {this.getMaterialIcon(\"\")}\r\n                                    </span>\r\n                                </div>\r\n                                <div className=\"env-product-slide-wrapper\">\r\n                                    <div className=\"product-slide-name\">\r\n                                        {data?.material.split(\":\")[1]}\r\n                                    </div>\r\n                                    <div className=\"product-ecoscore\">\r\n                                        Ecoscore : {data?.ecoscore_material_score}\r\n                                    </div>\r\n\r\n                                    <div className=\"env-history-label-container\">\r\n                                        <span\r\n                                            className=\"packaging-label-color\"\r\n                                            style={{\r\n                                                color: this.getColor(data?.ecoscore_material_score),\r\n                                            }}\r\n                                        >\r\n                                            ●\r\n                                        </span>\r\n                                        <div className=\"env-history-label\">\r\n                                            {this.getLabel(data?.ecoscore_material_score)}\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"product-slide-recyclable\">\r\n                                        {recyclable}\r\n                                        <div className=\"material-icons icon-label-recyclable\">\r\n                                            {this.getMaterialIcon(recyclable)}\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </SwiperSlide>\r\n                    </div>\r\n                );\r\n            });\r\n        }\r\n        return slides;\r\n\r\n        // return slides;\r\n    };\r\n\r\n    componentDidMount() {\r\n        this.updateWindowDimensions();\r\n        window.addEventListener(\"resize\", this.updateWindowDimensions);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        window.removeEventListener(\"resize\", this.updateWindowDimensions);\r\n    }\r\n\r\n    updateWindowDimensions = () => {\r\n        this.setState({ width: window.innerWidth });\r\n    };\r\n\r\n    displayCO2Repartition = (pourcentage, nbKg, type) => {\r\n        return (\r\n            <div className=\"product-co2-impact-container\">\r\n                <div className=\"product-co2-impact-header\">\r\n                    <div className=\"product-co2-impact-logo\">\r\n                        <div className=\"material-icons icon-label-co2-impact\">\r\n                            {this.getMaterialIcon(type)}\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"product-co2-impact-title\">\r\n                        <div className=\"product-co2-impact-title-text\">CO2 {type}</div>\r\n                        <div className=\"product-co2-impact-title-label\">Répartition</div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"product-co2-impact-content\">\r\n                    <div className=\"product-transport-impact-content-details-text\">\r\n                        {parseFloat(nbKg).toFixed(3)}kg C02 eq/kg produit\r\n                    </div>\r\n                    <div className=\"product-co2-impact-content-progress\">\r\n                        <CircleProgress\r\n                            percentage={parseFloat(pourcentage * 100).toFixed(1)}\r\n                            strokeWidth={window.innerWidth * (1.0 / 60.0)}\r\n                            width={window.innerWidth * (1.0 / 5.0)}\r\n                            fontSize={window.innerWidth * (1.0 / 25.0)}\r\n                            primaryColor={[\"#FF3333\", \"#33FF63\"]}\r\n                        />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    };\r\n\r\n    displayRepartitionAllItems = () => {\r\n        var html_agriculture = <React.Fragment></React.Fragment>;\r\n        var html_transport = <React.Fragment></React.Fragment>;\r\n        var html_consommation = <React.Fragment></React.Fragment>;\r\n        var html_distribution = <React.Fragment></React.Fragment>;\r\n        var html_packaging = <React.Fragment></React.Fragment>;\r\n        var html_processing = <React.Fragment></React.Fragment>;\r\n        var html_total = <React.Fragment></React.Fragment>;\r\n\r\n        if (this.props.dataEcoScore?.agribalyse?.co2_agriculture) {\r\n            html_agriculture = this.displayCO2Repartition(\r\n                this.props.dataEcoScore?.agribalyse?.co2_agriculture /\r\n                    this.props.dataEcoScore?.agribalyse?.co2_total,\r\n                this.props.dataEcoScore?.agribalyse?.co2_agriculture,\r\n                \"Agriculture\"\r\n            );\r\n        }\r\n        if (this.props.dataEcoScore?.agribalyse?.co2_transportation) {\r\n            html_transport = this.displayCO2Repartition(\r\n                this.props.dataEcoScore?.agribalyse?.co2_transportation /\r\n                    this.props.dataEcoScore?.agribalyse?.co2_total,\r\n                this.props.dataEcoScore?.agribalyse?.co2_transportation,\r\n                \"Transport\"\r\n            );\r\n        }\r\n\r\n        if (this.props.dataEcoScore?.agribalyse?.co2_consumption) {\r\n            html_consommation = this.displayCO2Repartition(\r\n                this.props.dataEcoScore?.agribalyse?.co2_consumption /\r\n                    this.props.dataEcoScore?.agribalyse?.co2_total,\r\n                this.props.dataEcoScore?.agribalyse?.co2_consumption,\r\n                \"Consommation\"\r\n            );\r\n        }\r\n\r\n        if (this.props.dataEcoScore?.agribalyse?.co2_distribution) {\r\n            html_distribution = this.displayCO2Repartition(\r\n                this.props.dataEcoScore?.agribalyse?.co2_distribution /\r\n                    this.props.dataEcoScore?.agribalyse?.co2_total,\r\n                this.props.dataEcoScore?.agribalyse?.co2_distribution,\r\n                \"Distribution\"\r\n            );\r\n        }\r\n\r\n        if (this.props.dataEcoScore?.agribalyse?.co2_packaging) {\r\n            html_packaging = this.displayCO2Repartition(\r\n                this.props.dataEcoScore?.agribalyse?.co2_packaging /\r\n                    this.props.dataEcoScore?.agribalyse?.co2_total,\r\n                this.props.dataEcoScore?.agribalyse?.co2_packaging,\r\n                \"Emballage\"\r\n            );\r\n        }\r\n\r\n        if (this.props.dataEcoScore?.agribalyse?.co2_processing) {\r\n            html_processing = this.displayCO2Repartition(\r\n                this.props.dataEcoScore?.agribalyse?.co2_processing /\r\n                    this.props.dataEcoScore?.agribalyse?.co2_total,\r\n                this.props.dataEcoScore?.agribalyse?.co2_processing,\r\n                \"Transformation\"\r\n            );\r\n        }\r\n\r\n        if (this.props.dataEcoScore?.agribalyse?.co2_total) {\r\n            html_total = (\r\n                <span className=\"product-CO2-total\">\r\n                    Impact carbone générique :&nbsp;\r\n                    <span className=\"carbon-total-number\">\r\n                        {parseFloat(this.props.dataEcoScore?.agribalyse?.co2_total).toFixed(3)}\r\n                    </span>\r\n                    kg C02 eq/kg produit\r\n                </span>\r\n            );\r\n        }\r\n\r\n        let res = (\r\n            <React.Fragment>\r\n                {html_total}\r\n                {html_agriculture}\r\n                {html_transport}\r\n                {html_consommation}\r\n                {html_distribution}\r\n                {html_packaging}\r\n                {html_processing}\r\n            </React.Fragment>\r\n        );\r\n\r\n        return res;\r\n    };\r\n\r\n    handleShowTransport = () => {\r\n        this.setState({ showTransport: !this.state.showTransport });\r\n    };\r\n\r\n    displayTransportImpact = () => {\r\n        let res = <React.Fragment></React.Fragment>;\r\n\r\n        var agribalyse_CO2 = undefined;\r\n        var transportation_score = undefined;\r\n        var transport_final_indicator = undefined;\r\n        var n = 0;\r\n\r\n        if (this.props.dataEcoScore?.agribalyse?.co2_transportation) {\r\n            agribalyse_CO2 = 0.5 * this.props.dataEcoScore?.agribalyse?.co2_transportation;\r\n            n += 1;\r\n        }\r\n\r\n        if (this.props.dataEcoScore?.adjustments?.origins_of_ingredients?.value_fr) {\r\n            transportation_score =\r\n                0.5 +\r\n                this.props.dataEcoScore?.adjustments?.origins_of_ingredients?.value_fr *\r\n                    (-1.0 / 40.0);\r\n            n += 1;\r\n        }\r\n        if (n > 0) {\r\n            if (!agribalyse_CO2) {\r\n                agribalyse_CO2 = 0;\r\n            }\r\n            if (!transportation_score) {\r\n                transportation_score = 0;\r\n            }\r\n            transport_final_indicator = (agribalyse_CO2 + transportation_score) / n;\r\n            if (transport_final_indicator > 1) {\r\n                transport_final_indicator = 1;\r\n            }\r\n            if (transport_final_indicator < 0) {\r\n                transport_final_indicator = 0;\r\n            }\r\n        }\r\n\r\n        let co2_impact_html = <React.Fragment></React.Fragment>;\r\n        let transportation_score_html = <React.Fragment></React.Fragment>;\r\n\r\n        if (agribalyse_CO2 > 0) {\r\n            co2_impact_html = (\r\n                <div className=\"product-transport-impact-content-details-text\">\r\n                    {parseFloat(this.props.dataEcoScore?.agribalyse?.co2_transportation).toFixed(3)}\r\n                    kg C02 eq/kg produit\r\n                </div>\r\n            );\r\n        }\r\n\r\n        if (transportation_score > 0) {\r\n            transportation_score_html = (\r\n                <div className=\"product-transport-impact-content-details-score\">\r\n                    Score environnemental du transport vers la France :\r\n                    <span\r\n                        style={{\r\n                            color: this.getColorImpact(100 - transportation_score * 100),\r\n                        }}\r\n                    >\r\n                        {Math.round(99 - transportation_score * 100)}\r\n                    </span>\r\n                    /100\r\n                </div>\r\n            );\r\n        }\r\n\r\n        if (!this.props.displayTranportImpact && transport_final_indicator) {\r\n            transport_final_indicator = Math.round(transport_final_indicator * 100);\r\n            return (\r\n                <div\r\n                    className=\"product-transport-impact-container\"\r\n                    onClick={this.handleShowTransport}\r\n                >\r\n                    <div className=\"product-transport-impact-header\">\r\n                        <div className=\"product-transport-impact-logo\">\r\n                            <div className=\"material-icons icon-label-transport-impact\">\r\n                                {this.getMaterialIcon(\"Truck\")}\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"product-transport-impact-title\">\r\n                            <div className=\"product-transport-impact-title-text\">\r\n                                Impact du transport\r\n                            </div>\r\n                            <div className=\"product-transport-impact-title-label\">\r\n                                {this.getLabelImpact(transport_final_indicator)}\r\n                            </div>\r\n                        </div>\r\n                        <div\r\n                            className=\"product-transport-impact-color-label\"\r\n                            style={{\r\n                                color: this.getColorImpact(100 - transport_final_indicator),\r\n                            }}\r\n                        >\r\n                            ●\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"arrow-container\">\r\n                        <div className=\"material-icons icon-label-arrow\">\r\n                            {this.getMaterialIcon(\"Arrow\")}\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div\r\n                        className={\r\n                            this.state.showTransport ? \"animation-appear\" : \"animation-disappear\"\r\n                        }\r\n                    >\r\n                        <div className=\"product-transport-impact-content\">\r\n                            <div className=\"product-transport-impact-content-text\">\r\n                                Score total :\r\n                            </div>\r\n                            <div className=\"product-transport-impact-content-progress\">\r\n                                <CircleProgress\r\n                                    percentage={100 - transport_final_indicator}\r\n                                    strokeWidth={window.innerWidth * (1.0 / 50.0)}\r\n                                    width={window.innerWidth * (1.0 / 4.0)}\r\n                                    fontSize={0}\r\n                                    primaryColor={[\"#33FF63\", \"#FF3333\"]}\r\n                                />\r\n                                <span className=\"impact-percentage-progressBar\">\r\n                                    {100 - transport_final_indicator}/100\r\n                                </span>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"product-transport-impact-content-details\">\r\n                            {co2_impact_html}\r\n                            {transportation_score_html}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n\r\n        return res;\r\n    };\r\n\r\n    displayPackagingDetailImpact = () => {\r\n        let res = <React.Fragment></React.Fragment>;\r\n\r\n        if (this.props.dataEcoScore?.adjustments?.packaging?.packagings) {\r\n            var materials = [];\r\n            let slides = <React.Fragment></React.Fragment>;\r\n\r\n            this.props.dataEcoScore?.adjustments?.packaging?.packagings.map((data) => {\r\n                if (data?.material.split(\":\")[1] != \"unknown\") {\r\n                    materials.push(data?.material.split(\":\")[1]);\r\n                }\r\n            });\r\n\r\n            slides = materials\r\n                .filter(function (item, pos) {\r\n                    return materials.indexOf(item) == pos;\r\n                })\r\n                .map((data) => {\r\n                    var separator = \"\";\r\n                    if (materials.indexOf(data) < materials.length - 1) {\r\n                        separator = \" ; \";\r\n                    }\r\n                    return (\r\n                        <React.Fragment>\r\n                            <span>\r\n                                {data} {separator}\r\n                            </span>\r\n                        </React.Fragment>\r\n                    );\r\n                });\r\n\r\n            if (materials.length > 0) {\r\n                res = (\r\n                    <React.Fragment>\r\n                        <div className=\"product-co2-impact-content\">\r\n                            <div className=\"product-packaging-impact-content-details-text\">\r\n                                Matériaux utilisés : &nbsp;{slides}\r\n                            </div>\r\n                        </div>\r\n                    </React.Fragment>\r\n                );\r\n            } else {\r\n                res = (\r\n                    <React.Fragment>\r\n                        <div className=\"product-co2-impact-content\">\r\n                            <div className=\"product-packaging-impact-content-details-text\">\r\n                                Matériaux utilisés : &nbsp; Inconnu\r\n                            </div>\r\n                        </div>\r\n                    </React.Fragment>\r\n                );\r\n            }\r\n        }\r\n\r\n        return res;\r\n    };\r\n\r\n    displayPackagingImpact = () => {\r\n        let res = <React.Fragment></React.Fragment>;\r\n\r\n        if (this.props.dataEcoScore?.adjustments?.packaging?.value) {\r\n            return (\r\n                <div className=\"product-co2-impact-container\">\r\n                    <div className=\"product-co2-impact-header\">\r\n                        <div className=\"product-co2-impact-logo\">\r\n                            <div className=\"material-icons icon-label-co2-impact\">\r\n                                {this.getMaterialIcon(\"\")}\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"product-co2-impact-title\">\r\n                            <div className=\"product-co2-impact-title-text\">\r\n                                Impact de l'emballage\r\n                            </div>\r\n                            <div className=\"product-co2-impact-title-label\">\r\n                                {this.getLabelImpactPackaging(\r\n                                    this.props.dataEcoScore?.adjustments?.packaging?.value\r\n                                )}\r\n                            </div>\r\n                        </div>\r\n                        <div\r\n                            className=\"product-transport-impact-color-label\"\r\n                            style={{\r\n                                color: this.getColorImpactPackaging(\r\n                                    this.props.dataEcoScore?.adjustments?.packaging?.value\r\n                                ),\r\n                            }}\r\n                        >\r\n                            ●\r\n                        </div>\r\n                    </div>\r\n                    {this.displayPackagingDetailImpact()}\r\n                </div>\r\n            );\r\n        } else {\r\n            return res;\r\n        }\r\n    };\r\n\r\n    onSlideChange = (index) => {\r\n        this.setState({ currentIndex: index });\r\n    };\r\n\r\n    renderListAlternatives = (listItems) => {\r\n        var res = <React.Fragment>;</React.Fragment>;\r\n        res = listItems.map((item) => {\r\n            var pathProduct = \"/products/\" + item.id;\r\n            // Mock Front\r\n            if (item.id === \"8001505005707\") {\r\n                pathProduct += \"/24\";\r\n            }\r\n\r\n            if (item.id !== this.props.barcode) {\r\n                return (\r\n                    <SwiperSlide>\r\n                        <a href={pathProduct} className=\"product-alternative\">\r\n                            <div>\r\n                                <img\r\n                                    src={item.img_url}\r\n                                    className=\"product-alternative-image\"\r\n                                    alt=\"\"\r\n                                />\r\n                            </div>\r\n                            <div className=\"product-alternative-text\">\r\n                                <label className=\"product-alternative-title\">{item.name}</label>\r\n                                <label className=\"product-alternative-brand\">{}</label>\r\n                                <RenderColor item={item} />\r\n                            </div>\r\n                            <div className=\"product-alternative-fleche\">{\">\"}</div>\r\n                        </a>\r\n                    </SwiperSlide>\r\n                );\r\n            } else {\r\n                return <React.Fragment></React.Fragment>;\r\n            }\r\n        });\r\n\r\n        return res;\r\n    };\r\n\r\n    alternativesloop = () => {\r\n        var alternativesList = <React.Fragment></React.Fragment>;\r\n\r\n        if (\r\n            this.props.alternatives &&\r\n            this.props.alternatives != \"loading\" &&\r\n            this.props.alternatives != \"\"\r\n        ) {\r\n            var alternatives_a = <React.Fragment></React.Fragment>;\r\n            var alternatives_b = <React.Fragment></React.Fragment>;\r\n            var alternatives_c = <React.Fragment></React.Fragment>;\r\n            var alternatives_d = <React.Fragment></React.Fragment>;\r\n\r\n            this.props.alternatives.a.sort(function (a, b) {\r\n                return b.eco_score - a.eco_score;\r\n            });\r\n\r\n            this.props.alternatives.b.sort(function (a, b) {\r\n                return b.eco_score - a.eco_score;\r\n            });\r\n            this.props.alternatives.c.sort(function (a, b) {\r\n                return b.eco_score - a.eco_score;\r\n            });\r\n            this.props.alternatives.d.sort(function (a, b) {\r\n                return b.eco_score - a.eco_score;\r\n            });\r\n\r\n            switch (this.props.ecoScore) {\r\n                case \"a\":\r\n                    break;\r\n                case \"b\":\r\n                    alternatives_a = this.renderListAlternatives(this.props.alternatives.a);\r\n                    break;\r\n                case \"c\":\r\n                    alternatives_a = this.renderListAlternatives(this.props.alternatives.a);\r\n                    alternatives_b = this.renderListAlternatives(this.props.alternatives.b);\r\n                    break;\r\n                case \"d\":\r\n                    alternatives_a = this.renderListAlternatives(this.props.alternatives.a);\r\n                    alternatives_b = this.renderListAlternatives(this.props.alternatives.b);\r\n                    alternatives_c = this.renderListAlternatives(this.props.alternatives.c);\r\n                    break;\r\n                case \"e\":\r\n                    alternatives_a = this.renderListAlternatives(this.props.alternatives.a);\r\n                    alternatives_b = this.renderListAlternatives(this.props.alternatives.b);\r\n                    alternatives_c = this.renderListAlternatives(this.props.alternatives.c);\r\n                    alternatives_d = this.renderListAlternatives(this.props.alternatives.d);\r\n                    break;\r\n                default:\r\n            }\r\n\r\n            alternativesList = (\r\n                <React.Fragment>\r\n                    {alternatives_a} {alternatives_b} {alternatives_c} {alternatives_d};\r\n                </React.Fragment>\r\n            );\r\n        }\r\n\r\n        return alternativesList;\r\n    };\r\n\r\n    render = () => {\r\n        let displaySugg = true;\r\n        let arraySuggestion = [\r\n            \"8001505005707\",\r\n            \"3560070472888\",\r\n            \"3760020500658\",\r\n            \"3256226384296\",\r\n            \"8001505000061\",\r\n            \"3017620424403\",\r\n            \"3017620425035\",\r\n            \"80135463\",\r\n        ];\r\n\r\n        var hmtl_suggestion = <React.Fragment></React.Fragment>;\r\n\r\n        hmtl_suggestion = this.alternativesloop();\r\n        var alternatives_title = \"\";\r\n\r\n        if (this.props.alternatives === \"\") {\r\n            alternatives_title = \"Pas d'alternatives disponible\";\r\n        } else {\r\n            if (this.props.alternatives === \"loading\") {\r\n                alternatives_title = \"Chargement des alternatives ...\";\r\n            } else {\r\n                alternatives_title = \"Alternatives\";\r\n            }\r\n        }\r\n\r\n        if (this.props.barcode) {\r\n            return (\r\n                <React.Fragment>\r\n                    {this.displayTransportImpact()}\r\n                    {this.displayPackagingImpact()}\r\n                    {this.displayRepartitionAllItems()}\r\n\r\n                    {this.props.ecoScore ? (\r\n                        <React.Fragment>\r\n                            <span className=\"title-part-environnement\">{alternatives_title}</span>\r\n                            <Swiper\r\n                                spaceBetween={0}\r\n                                slidesPerView={1}\r\n                                centeredSlides={true}\r\n                                onSlideChange={(i) => this.onSlideChange(i.activeIndex)}\r\n                                onSwiper={(swiper) => this.setState({ swiper: swiper })}\r\n                            >\r\n                                {hmtl_suggestion}\r\n                            </Swiper>{\" \"}\r\n                        </React.Fragment>\r\n                    ) : (\r\n                        <p>Pas encore de données pour ce produit</p>\r\n                    )}\r\n                    {/* <span className=\"title-part-environnement\">\r\n                    Impact de l'emballage\r\n                </span>\r\n                <Swiper\r\n                    spaceBetween={10}\r\n                    slidesPerView={1}\r\n                    centeredSlides={true}\r\n                    onSlideChange={(i) => this.onSlideChange(i.activeIndex)}\r\n                    onSwiper={(swiper) => this.setState({ swiper: swiper })}\r\n                >\r\n                    {this.displaySlides()}\r\n                </Swiper> */}\r\n                </React.Fragment>\r\n            );\r\n        } else {\r\n            return <React.Fragment></React.Fragment>;\r\n        }\r\n    };\r\n}\r\n\r\nexport default Environnement;\r\n","import React from \"react\";\r\nimport Navbar from \"../components/Navbar/Navbar\";\r\nimport Traceability from \"../components/Traceability/Traceability\";\r\nimport Environnement from \"../components/Environnement/Environnement\";\r\nimport Labels from \"../components/Labels/Labels\";\r\nimport \"./Product.css\";\r\nimport { Link } from \"react-router-dom\";\r\nimport jwt from \"jsonwebtoken\";\r\n\r\nclass Product extends React.Component {\r\n    state = {\r\n        barcode: this.props.match.params.barcode,\r\n        bcProductId: this.props.match.params.bcProductId,\r\n        product: undefined,\r\n        productImageUrl: undefined,\r\n        productName: undefined,\r\n        genericName: undefined,\r\n        ecoScore: undefined,\r\n        dataEcoScore: undefined,\r\n        value: 0,\r\n        connected: false,\r\n        productData: undefined,\r\n        userId: undefined,\r\n        cart: 0,\r\n        totalCO2Traceability: undefined,\r\n        alternatives: undefined,\r\n    };\r\n\r\n    isFlipping = false;\r\n\r\n    //for scrolling\r\n    getBottomRef = (component) => {\r\n        this.bottomComponent = component;\r\n    };\r\n\r\n    componentDidMount = () => {\r\n        this.Verify();\r\n        let userId = localStorage.getItem(\"userId\");\r\n        if (userId) {\r\n            this.setState({ userId: userId });\r\n            this.loadHistory(userId);\r\n        }\r\n        this.loadFromOpenFoodFacts(this.props.match.params.barcode);\r\n        if (this.props.match.params.bcProductId) {\r\n            this.loadProductInformations(\r\n                this.props.match.params.barcode,\r\n                this.props.match.params.bcProductId\r\n            );\r\n        }\r\n    };\r\n\r\n    handleBarCodeUpdate = () => {\r\n        if (this.state.barcode !== this.props.match.params.barcode) {\r\n            this.setState({\r\n                barcode: this.props.match.params.barcode,\r\n                bcProductId: this.props.match.params.bcProductId,\r\n            });\r\n            this.loadFromOpenFoodFacts(this.props.match.params.barcode);\r\n            if (this.props.match.params.bcProductId) {\r\n                this.loadProductInformations(\r\n                    this.props.match.params.barcode,\r\n                    this.props.match.params.bcProductId\r\n                );\r\n            }\r\n        }\r\n    };\r\n\r\n    Verify = () => {\r\n        let isExpired = true;\r\n        const token = localStorage.getItem(\"token\");\r\n        if (token) {\r\n            var decodedToken = jwt.decode(token, { complete: true });\r\n            var dateNow = new Date();\r\n            if (decodedToken.payload.exp >= dateNow.getTime() / 1000) {\r\n                isExpired = false;\r\n            }\r\n        }\r\n        if (isExpired === false) {\r\n            this.setState({ connected: true });\r\n        }\r\n    };\r\n\r\n    loadProductInformations = (barcode, bcProductId) => {\r\n        fetch(\r\n            `https://api.lowympact.fr/api/v1/products/${barcode}?bcProductId=${bcProductId}`,\r\n            // `http://localhost:8080/api/v1/products/${barcode}?bcProductId=${bcProductId}`,\r\n            {\r\n                method: \"get\",\r\n                credentials: \"include\",\r\n                headers: new Headers({\r\n                    \"api-key\": \"99d8fb95-abdd-4885-bf6c-3a81d8874043\",\r\n                    \"Content-Type\": \"application/json\",\r\n                }),\r\n            }\r\n        )\r\n            .then((response) => response.json())\r\n            .then((res) => {\r\n                this.setState({\r\n                    products: res?.data?.traceability,\r\n                    impact: res?.data?.impact,\r\n                    totalCO2Traceability: res?.data?.transportCO2Impact,\r\n                });\r\n            });\r\n    };\r\n\r\n    loadAlternatives = (code, score) => {\r\n        this.setState({ alternatives: \"loading\" });\r\n        fetch(`https://api.lowympact.fr/api/v1/alternatives/${code}`)\r\n            .then((response) => response.json())\r\n            .then((res) => {\r\n                if (res.success == false) {\r\n                    this.setState({ alternatives: \"\" });\r\n                    return;\r\n                }\r\n                console.log(res.data.alternativesInfos);\r\n                this.setState({ alternatives: res.data.alternativesInfos });\r\n            });\r\n    };\r\n\r\n    loadFromOpenFoodFacts = (barcode) => {\r\n        let dataEcoScore;\r\n\r\n        fetch(`https://world.openfoodfacts.org/api/v0/product/${barcode}.json/`)\r\n            .then((response) => response.json())\r\n            .then((res) => {\r\n                let productImageUrl = res?.product?.image_url;\r\n                let productName = res?.product?.product_name;\r\n                let genericName = res?.product?.generic_name;\r\n                let ecoScore = res?.product?.ecoscore_grade;\r\n\r\n                dataEcoScore = res?.product?.ecoscore_data;\r\n\r\n                if (res?.product) {\r\n                    this.setState({ productData: res.product });\r\n                }\r\n\r\n                if (productImageUrl) {\r\n                    this.setState({ productImageUrl: productImageUrl });\r\n                }\r\n                if (productName) {\r\n                    this.setState({ productName: productName });\r\n                }\r\n                if (genericName) {\r\n                    this.setState({ genericName: genericName });\r\n                }\r\n                if (\r\n                    ecoScore &&\r\n                    (ecoScore === \"a\" ||\r\n                        ecoScore === \"b\" ||\r\n                        ecoScore === \"c\" ||\r\n                        ecoScore === \"d\" ||\r\n                        ecoScore === \"e\")\r\n                ) {\r\n                    this.setState({ ecoScore: ecoScore });\r\n                }\r\n                if (dataEcoScore) {\r\n                    this.setState({ dataEcoScore: dataEcoScore });\r\n                }\r\n                if (res.status === 1) {\r\n                    this.saveHistory();\r\n                }\r\n\r\n                // Mock Soutenance\r\n                if (barcode === \"80135463\") {\r\n                    this.setState({ productName: \"Nutella 200g\" });\r\n                }\r\n\r\n                var scoreSearch = \"a\";\r\n\r\n                switch (res.product?.ecoscore_grade) {\r\n                    case \"b\":\r\n                        scoreSearch = \"a\";\r\n                        break;\r\n                    case \"c\":\r\n                        scoreSearch = \"b\";\r\n                        break;\r\n                    case \"d\":\r\n                        scoreSearch = \"c\";\r\n                        break;\r\n                    case \"e\":\r\n                        scoreSearch = \"c\";\r\n                        break;\r\n\r\n                    default:\r\n                        break;\r\n                }\r\n\r\n                if (res.product?.ecoscore_grade != \"a\") {\r\n                    this.loadAlternatives(\r\n                        res.product.categories_properties[\"ciqual_food_code:en\"],\r\n                        scoreSearch\r\n                    );\r\n                } else {\r\n                    this.setState({ alternatives: \"\" });\r\n                }\r\n            });\r\n    };\r\n\r\n    loadHistory = (userId) => {\r\n        if (userId && this.state.barcode && this.state.bcProductId) {\r\n            fetch(\r\n                `https://api.lowympact.fr/api/v1/users/${userId}/cart/${this.state.barcode}?bcProductAddress=${this.state.bcProductId}`,\r\n                // `http://localhost:8080/api/v1/users/${this.state.userId}/history`,\r\n                {\r\n                    method: \"get\",\r\n                    credentials: \"include\",\r\n                    headers: new Headers({\r\n                        Authorization: localStorage.getItem(\"token\"),\r\n                        \"api-key\": \"99d8fb95-abdd-4885-bf6c-3a81d8874043\",\r\n                        \"Content-Type\": \"application/json\",\r\n                    }),\r\n                }\r\n            )\r\n                .then((response) => response.json())\r\n                .then((res) => {\r\n                    if (res.success) {\r\n                        this.setState({ cart: res.data?.quantity });\r\n                    }\r\n                });\r\n        }\r\n    };\r\n\r\n    saveHistory = async () => {\r\n        await delay(2000);\r\n\r\n        if (!this.state.connected) {\r\n            let history = JSON.parse(localStorage.getItem(\"local_history\"));\r\n            let exist = null;\r\n            if (history) {\r\n                exist = history?.find(\r\n                    (element) =>\r\n                        element.barcode === this.state.barcode &&\r\n                        element.bcProductId == this.state.bcProductId\r\n                );\r\n            } else {\r\n                history = [];\r\n            }\r\n\r\n            if (!exist || exist?.length === 0) {\r\n                history.push({\r\n                    barcode: this.state.barcode,\r\n                    bcProductId: this.state.bcProductId,\r\n                    brand: this.state.productData.brands,\r\n                    image: this.state.productImageUrl,\r\n                    label: this.state.ecoScore,\r\n                    name: this.state.productName,\r\n                });\r\n                localStorage.setItem(\"local_history\", JSON.stringify(history));\r\n            }\r\n        } else if (this.state.userId) {\r\n            fetch(\r\n                `https://api.lowympact.fr/api/v1/users/${this.state.userId}/history`,\r\n                // `http://localhost:8080/api/v1/users/${this.state.userId}/history`,\r\n                {\r\n                    method: \"put\",\r\n                    credentials: \"include\",\r\n                    headers: new Headers({\r\n                        Authorization: localStorage.getItem(\"token\"),\r\n                        \"api-key\": \"99d8fb95-abdd-4885-bf6c-3a81d8874043\",\r\n                        \"Content-Type\": \"application/json\",\r\n                    }),\r\n                    body: JSON.stringify({\r\n                        barcode: this.state.barcode,\r\n                        bcProductAddress: this.state.bcProductId,\r\n                    }),\r\n                }\r\n            )\r\n                .then((response) => response.json())\r\n                .then((res) => {\r\n                    console.log(res);\r\n                });\r\n        }\r\n    };\r\n\r\n    addToCart = () => {\r\n        if (this.state.barcode && this.state.cart >= 0) {\r\n            let co2 = -1;\r\n            if (this.state.dataEcoScore?.agribalyse?.co2_total) {\r\n                co2 = parseFloat(this.state.dataEcoScore?.agribalyse?.co2_total);\r\n            }\r\n\r\n            let ecoscore = \"unkown\";\r\n            if (this.state.ecoScore) {\r\n                ecoscore = this.state.ecoScore;\r\n            }\r\n            this.flip();\r\n            fetch(\r\n                `https://api.lowympact.fr/api/v1/users/${this.state.userId}/cart`,\r\n                // `http://localhost:8080/api/v1/users/${this.state.userId}/cart`,\r\n                {\r\n                    method: \"put\",\r\n                    credentials: \"include\",\r\n                    headers: new Headers({\r\n                        Authorization: localStorage.getItem(\"token\"),\r\n                        \"api-key\": \"99d8fb95-abdd-4885-bf6c-3a81d8874043\",\r\n                        \"Content-Type\": \"application/json\",\r\n                    }),\r\n                    body: JSON.stringify({\r\n                        barcode: this.state.barcode,\r\n                        bcProductAddress: this.state.bcProductId,\r\n                        quantityDelta: 1,\r\n                        ecoscore: ecoscore,\r\n                        carbonImpact: co2,\r\n                    }),\r\n                }\r\n            )\r\n                .then((response) => response.json())\r\n                .then((res) => {\r\n                    console.log(res);\r\n                    if (res.success) {\r\n                        this.setState({ cart: this.state.cart + 1 });\r\n                    }\r\n                });\r\n        }\r\n    };\r\n\r\n    removeFromCart = () => {\r\n        if (this.state.barcode && this.state.cart > 0) {\r\n            this.flip();\r\n            let co2 = -1;\r\n            if (this.state.dataEcoScore?.agribalyse?.co2_total) {\r\n                co2 = parseFloat(this.state.dataEcoScore?.agribalyse?.co2_total);\r\n            }\r\n            let ecoscore = \"unkown\";\r\n            if (this.state.ecoScore) {\r\n                ecoscore = this.state.ecoScore;\r\n            }\r\n            fetch(\r\n                `https://api.lowympact.fr/api/v1/users/${this.state.userId}/cart`,\r\n                // `http://localhost:8080/api/v1/users/${this.state.userId}/cart`,\r\n                {\r\n                    method: \"put\",\r\n                    credentials: \"include\",\r\n                    headers: new Headers({\r\n                        Authorization: localStorage.getItem(\"token\"),\r\n                        \"api-key\": \"99d8fb95-abdd-4885-bf6c-3a81d8874043\",\r\n                        \"Content-Type\": \"application/json\",\r\n                    }),\r\n                    body: JSON.stringify({\r\n                        barcode: this.state.barcode,\r\n                        bcProductAddress: this.state.bcProductId,\r\n                        quantityDelta: -1,\r\n                        ecoscore: ecoscore,\r\n                        carbonImpact: co2,\r\n                    }),\r\n                }\r\n            )\r\n                .then((response) => response.json())\r\n                .then((res) => {\r\n                    console.log(res);\r\n                    if (res.success) {\r\n                        this.setState({ cart: this.state.cart - 1 });\r\n                    }\r\n                });\r\n        }\r\n    };\r\n\r\n    flip = async (event) => {\r\n        // if (!this.isFlipping) {\r\n        // \tthis.isFlipping = true;\r\n        // \tawait delay(500);\r\n        console.log(this.imageFlip.style.transform);\r\n        if (this.imageFlip && !this.state.isFlipping) {\r\n            if (this.imageFlip.style.transform === \"rotateY(360deg)\") {\r\n                this.imageFlip.style.transform = \"rotateY(0deg)\";\r\n            } else {\r\n                this.imageFlip.style.transform = \"rotateY(360deg)\";\r\n            }\r\n        }\r\n        // await delay(1000);\r\n        // this.isFlipping = false;\r\n        // }\r\n    };\r\n\r\n    displayImage = () => {\r\n        this.handleBarCodeUpdate();\r\n\r\n        let image = <React.Fragment />;\r\n        let productName = <React.Fragment />;\r\n        let genericName = <React.Fragment />;\r\n        let ecoScore = <React.Fragment />;\r\n        if (this.state.productImageUrl) {\r\n            image = (\r\n                <img src={this.state.productImageUrl} className=\"product-image\" alt=\"produit\" />\r\n            );\r\n        }\r\n\r\n        if (this.state.productName) {\r\n            productName = <div className=\"product-name\">{this.state.productName}</div>;\r\n        }\r\n        if (this.state.ecoScore) {\r\n            let scoreClass = \"color_score_\" + this.state.ecoScore;\r\n            ecoScore = (\r\n                <div className=\"product-ecoscore-image\">\r\n                    <span className={\"circle-score \" + scoreClass}>⬤ </span>\r\n                    EcoScore :<span className=\"uppercase \">{\" \" + this.state.ecoScore}</span>\r\n                </div>\r\n            );\r\n        } else if (this.state.genericName) {\r\n            genericName = <div className=\"product-generic-name\">{this.state.genericName}</div>;\r\n        }\r\n        return (\r\n            <React.Fragment>\r\n                {this.state.userId ? (\r\n                    <div\r\n                        className={this.state.cart > 0 ? \"add-to-cart green\" : \"add-to-cart\"}\r\n                        onClick={this.addToCart}\r\n                    >\r\n                        <span className=\"cart-count\">\r\n                            {this.state.cart > 0 ? this.state.cart : \"\"}\r\n                        </span>\r\n                        <span class=\"material-icons\">add_shopping_cart</span>\r\n                    </div>\r\n                ) : (\r\n                    <React.Fragment />\r\n                )}\r\n                {this.state.cart > 0 ? (\r\n                    <div className=\"remove-from-cart\" onClick={this.removeFromCart}>\r\n                        <span class=\"material-icons\">remove_shopping_cart</span>\r\n                    </div>\r\n                ) : (\r\n                    <React.Fragment />\r\n                )}\r\n                {image}\r\n                {productName}\r\n                <div className=\"product-bottom-image-div\">\r\n                    {genericName}\r\n                    {ecoScore}\r\n                </div>\r\n            </React.Fragment>\r\n        );\r\n    };\r\n\r\n    handleChange = (event, newValue) => {\r\n        this.setState({ value: newValue });\r\n        if (newValue === 1) {\r\n            let elem = document.getElementsByClassName(\"swiper-container\");\r\n            if (elem[0]) {\r\n                elem[0].scrollIntoView({ behavior: \"smooth\" });\r\n            }\r\n        }\r\n    };\r\n\r\n    displayNavbar = () => {\r\n        let retour = <React.Fragment />;\r\n        if (this.state.bcProductId) {\r\n            retour = (\r\n                <div className=\"product-navbar-container\">\r\n                    <button\r\n                        className={\r\n                            this.state.value === 0\r\n                                ? \"product-navbar-button selected\"\r\n                                : \"product-navbar-button\"\r\n                        }\r\n                        onClick={() => this.handleChange(\"\", 0)}\r\n                    >\r\n                        Environnement\r\n                    </button>\r\n                    <button\r\n                        className={\r\n                            this.state.value === 1\r\n                                ? \"product-navbar-button selected\"\r\n                                : \"product-navbar-button\"\r\n                        }\r\n                        onClick={() => this.handleChange(\"\", 1)}\r\n                    >\r\n                        Traçabilité\r\n                    </button>\r\n                    <div\r\n                        className={\r\n                            this.state.value === 0\r\n                                ? \"navbar-under nav-left\"\r\n                                : \"navbar-under nav-right\"\r\n                        }\r\n                    ></div>\r\n                </div>\r\n            );\r\n        }\r\n        return retour;\r\n    };\r\n\r\n    render = () => {\r\n        //tri des produits\r\n        let products = this.state.products?.sort((a, b) => {\r\n            if (a.depth > b.depth) return -1;\r\n            else return 1;\r\n        });\r\n        return (\r\n            <React.Fragment>\r\n                <div className=\"product-page-container\">\r\n                    <div className=\"product-header-container\">\r\n                        <div className=\"product-history-link\">\r\n                            <Link to=\"/history\"> {\"<\"} Historique</Link>\r\n                        </div>\r\n                        <img\r\n                            className=\"product-bitmap-image\"\r\n                            src=\"/images/utils/bitmap.png\"\r\n                            alt=\"\"\r\n                        />\r\n                    </div>\r\n                    <div\r\n                        className=\"product-image-container\"\r\n                        // onClick={this.flip}\r\n                        ref={(ref) => (this.imageFlip = ref)}\r\n                    >\r\n                        {this.displayImage()}\r\n                    </div>\r\n\r\n                    {this.displayNavbar()}\r\n\r\n                    {/* <AppBar position=\"static\">\r\n\t\t\t\t\t\t<Tabs\r\n\t\t\t\t\t\t\tvalue={this.state.value}\r\n\t\t\t\t\t\t\tonChange={this.handleChange}\r\n\t\t\t\t\t\t\taria-label=\"simple tabs example\"\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<Tab label=\"Traçabilité\" />\r\n\t\t\t\t\t\t\t<Tab label=\"Environnement\" />\r\n\t\t\t\t\t\t</Tabs>\r\n\t\t\t\t\t</AppBar>\r\n\t\t\t\t\t<TabPanel value={this.state.value} index={0}></TabPanel>\r\n\t\t\t\t\t<TabPanel value={this.state.value} index={1}>\r\n\t\t\t\t</TabPanel> */}\r\n                    {this.state.value === 0 ? (\r\n                        <Environnement\r\n                            dataEcoScore={this.state.dataEcoScore}\r\n                            ecoScore={this.state.ecoScore}\r\n                            displayTranportImpact={\r\n                                this.props.match.params.bcProductId !== null &&\r\n                                this.props.match.params.bcProductId !== undefined\r\n                            }\r\n                            barcode={this.props.match.params.barcode}\r\n                            alternatives={this.state.alternatives}\r\n                        ></Environnement>\r\n                    ) : (\r\n                        <div className=\"product-bottom-container\">\r\n                            <Traceability\r\n                                products={products}\r\n                                getBottomRef={this.getBottomRef}\r\n                                totalCO2Traceability={this.state.totalCO2Traceability}\r\n                            />\r\n                        </div>\r\n                    )}\r\n                    <Navbar\r\n                        barcode={this.props.match.params.barcode}\r\n                        bcProductId={this.props.match.params.bcProductId}\r\n                    />\r\n                </div>\r\n            </React.Fragment>\r\n        );\r\n    };\r\n}\r\n\r\nexport default Product;\r\n\r\nconst delay = (ms) => new Promise((res) => setTimeout(res, ms));\r\n","import React from \"react\";\r\nimport { Swiper, SwiperSlide } from \"swiper/react\";\r\n// Import Swiper styles\r\nimport \"swiper/swiper-bundle.css\";\r\nimport \"./Labels.css\";\r\n\r\nclass Labels extends React.Component {\r\n\tdisplaySpecies = () => {\r\n\t\tif (\r\n\t\t\tthis.props.dataEcoScore?.adjustments?.threatened_species?.length ===\r\n\t\t\t0\r\n\t\t) {\r\n\t\t\treturn <div></div>;\r\n\t\t} else {\r\n\t\t\tif (\r\n\t\t\t\tthis.props.dataEcoScore?.adjustments?.threatened_species\r\n\t\t\t\t\t?.value < 0\r\n\t\t\t) {\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<div className=\"labels-container-bad\">\r\n\t\t\t\t\t\t\t<span class=\"material-icons\">warning_amber</span>\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\tthis.props.dataEcoScore?.adjustments\r\n\t\t\t\t\t\t\t\t\t?.threatened_species?.ingredient\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t);\r\n\t\t\t} else {\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<div className=\"labels-container-good\">\r\n\t\t\t\t\t\t\t<span class=\"material-icons\">task_alt</span>\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\tthis.props.dataEcoScore?.adjustments\r\n\t\t\t\t\t\t\t\t\t?.threatened_species?.ingredient\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\tdisplaySpecies = () => {\r\n\t\tif (\r\n\t\t\t!this.props.dataEcoScore?.adjustments?.threatened_species\r\n\t\t\t\t?.ingredient\r\n\t\t) {\r\n\t\t\treturn <div></div>;\r\n\t\t} else {\r\n\t\t\tif (\r\n\t\t\t\tthis.props.dataEcoScore?.adjustments?.threatened_species\r\n\t\t\t\t\t?.value < 0\r\n\t\t\t) {\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<div className=\"labels-container-bad\">\r\n\t\t\t\t\t\t\t<span class=\"material-icons\">warning_amber</span>\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\tthis.props.dataEcoScore?.adjustments\r\n\t\t\t\t\t\t\t\t\t?.threatened_species?.ingredient\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t);\r\n\t\t\t} else {\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<div className=\"labels-container-good\">\r\n\t\t\t\t\t\t\t<span class=\"material-icons\">task_alt</span>\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\tthis.props.dataEcoScore?.adjustments\r\n\t\t\t\t\t\t\t\t\t?.threatened_species?.ingredient\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\tdisplayProduction = () => {\r\n\t\tif (!this.props.dataEcoScore?.adjustments?.production_system?.label) {\r\n\t\t\treturn <div></div>;\r\n\t\t} else {\r\n\t\t\tif (\r\n\t\t\t\tthis.props.dataEcoScore?.adjustments?.production_system?.value <\r\n\t\t\t\t0\r\n\t\t\t) {\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<div className=\"labels-container-bad\">\r\n\t\t\t\t\t\t\t<span class=\"material-icons\">warning_amber</span>\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\tthis.props.dataEcoScore?.adjustments\r\n\t\t\t\t\t\t\t\t\t?.production_system?.label\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t);\r\n\t\t\t} else {\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<div className=\"labels-container-good\">\r\n\t\t\t\t\t\t\t<span class=\"material-icons\">task_alt</span>\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\tthis.props.dataEcoScore?.adjustments\r\n\t\t\t\t\t\t\t\t\t?.production_system?.label\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\trender() {\r\n\t\tif (\r\n\t\t\tthis.props.dataEcoScore?.adjustments?.threatened_species?.length !=\r\n\t\t\t\t0 &&\r\n\t\t\tthis.props.dataEcoScore?.adjustments?.production_system?.label\r\n\t\t) {\r\n\t\t\treturn (\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<h1>Labels</h1>\r\n\r\n\t\t\t\t\t<div className=\"labels-container\">\r\n\t\t\t\t\t\t{this.displaySpecies()}\r\n\t\t\t\t\t\t{this.displayProduction()}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t);\r\n\t\t} else {\r\n\t\t\treturn <React.Fragment />;\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport default Labels;\r\n","import React from \"react\";\r\nimport Navbar from \"../components/Navbar/Navbar\";\r\nimport Header from \"../components/Header/Header\";\r\nimport \"./Profil.css\";\r\nimport { Link } from \"react-router-dom\";\r\nimport jwt from \"jsonwebtoken\";\r\nimport { motion } from \"framer-motion\";\r\n\r\nclass Profil extends React.Component {\r\n    state = {\r\n        connected: false,\r\n    };\r\n\r\n    disconnect = () => {\r\n        localStorage.clear();\r\n        this.props.history.push(\"/login\");\r\n    };\r\n\r\n    componentDidMount = () => {\r\n        this.Verify();\r\n    };\r\n\r\n    Verify = () => {\r\n        let isExpired = true;\r\n        const token = localStorage.getItem(\"token\");\r\n        if (token) {\r\n            var decodedToken = jwt.decode(token, { complete: true });\r\n            var dateNow = new Date();\r\n            if (decodedToken.payload.exp >= dateNow.getTime() / 1000) {\r\n                isExpired = false;\r\n            }\r\n        }\r\n        if (isExpired === false) {\r\n            this.setState({ connected: true }); // redirection vers la page login\r\n        }\r\n    };\r\n\r\n    displayConnectedProfil = () => {\r\n        return (\r\n            <React.Fragment>\r\n                <h2 className=\"profil-title\">Bienvenue sur ton profil!</h2>\r\n                <Link to=\"/stats\" className=\"profil-button\">\r\n                    Statistiques\r\n                </Link>\r\n                <Link to=\"/configuration\" className=\"profil-button\">\r\n                    Configuration\r\n                </Link>\r\n                <div onClick={this.disconnect} className=\"profil-button\">\r\n                    Déconnecter\r\n                </div>\r\n            </React.Fragment>\r\n        );\r\n    };\r\n\r\n    displayUnconnectedProfil = () => {\r\n        return (\r\n            <React.Fragment>\r\n                <h2 className=\"profil-title\">Non connecté</h2>\r\n                <p>Connecte toi pour que ton historique soit sauvegardé !</p>\r\n                <Link to=\"/login\" className=\"profil-button\">\r\n                    Me Connecter\r\n                </Link>\r\n            </React.Fragment>\r\n        );\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Link to=\"/\">\r\n                    <Header />\r\n                </Link>\r\n                <motion.div\r\n                    initial={{ opacity: 0 }}\r\n                    animate={{ opacity: 1 }}\r\n                    exit={{ opacity: 0 }}\r\n                    className=\"profil-screen\"\r\n                >\r\n                    <div className=\"profil-picture\">\r\n                        <div class=\"material-icons\">person</div>\r\n                    </div>\r\n                    {this.state.connected\r\n                        ? this.displayConnectedProfil()\r\n                        : this.displayUnconnectedProfil()}\r\n                </motion.div>\r\n                <Navbar />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Profil;\r\n","import React from \"react\";\r\n\r\nfunction ButtonSignup() {\r\n  return (\r\n  <div>\r\n    Créer mon compte\r\n  </div>\r\n  );\r\n}\r\n\r\nexport default ButtonSignup;","import React, { Component } from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport ButtonSignup from \"../components/Button/ButtonSignup\";\r\nimport fruits from \"../assets/images/fruits-vegetables-basket-by-oblik-studio.svg\";\r\nimport Header from \"../components/Header/Header\";\r\nimport \"./Login.css\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport const validEmail = new RegExp(\"^[a-zA-Z0-9._:$!%-]+@[a-zA-Z0-9.-]+.[a-zA-Z]$\");\r\n\r\nclass Signup extends Component {\r\n    state = {\r\n        userName: \"\",\r\n        email: \"\",\r\n        password: \"\",\r\n        confirmPassword: \"\",\r\n        errors: [],\r\n        redirect: false,\r\n        submit: false,\r\n    };\r\n\r\n    validate() {\r\n        var errors = [];\r\n        if (this.state.userName.length === 0) {\r\n            errors.push(\"Saissez votre nom\");\r\n        }\r\n        if (this.state.email.length === 0) {\r\n            errors.push(\"Saissez votre adresse e-mail\");\r\n        }\r\n        if (validEmail.test(this.state.email) === false) {\r\n            errors.push(\"Saissez une adresse e-mail valide\");\r\n        }\r\n        if (this.state.password.length < 6) {\r\n            errors.push(\"Entre un mot de passe. 6 caràcteres minimum requis\");\r\n        }\r\n        if (this.state.password !== this.state.confirmPassword) {\r\n            errors.push(\"Les mots de passe ne correspondent pas\");\r\n        }\r\n        this.setState({ errors: errors });\r\n        return errors;\r\n    }\r\n\r\n    signUser = async () => {\r\n        let errors = await fetch(`https://api.lowympact.fr/api/v1/users/`, {\r\n            method: \"post\",\r\n            credentials: \"include\",\r\n            headers: new Headers({\r\n                \"api-key\": \"99d8fb95-abdd-4885-bf6c-3a81d8874043\",\r\n                \"Content-Type\": \"application/json\",\r\n            }),\r\n            body: JSON.stringify({\r\n                username: this.state.userName,\r\n                email: this.state.email,\r\n                password: this.state.password,\r\n            }),\r\n        })\r\n            .then((response) => response.json())\r\n            .then((res) => {\r\n                console.log(res);\r\n                let errors = [];\r\n\r\n                if (!res.success) {\r\n                    errors.push(\"Il y a déjà un compte avec ce mail ou une erreur réseau.\");\r\n                } else {\r\n                    localStorage.setItem(\"token\", res.token);\r\n                    localStorage.setItem(\"userId\", res._id);\r\n                    this.props.history.push(\"/history\");\r\n                }\r\n                this.setState({ errors: errors });\r\n                return errors;\r\n            });\r\n        return errors;\r\n    };\r\n\r\n    handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        let errors = this.validate();\r\n        //console.log(\"errors: \" + errors);\r\n        if (errors.length === 0) {\r\n            errors = await this.signUser();\r\n        }\r\n        if (errors.length === 0) {\r\n            this.setState({ redirect: true });\r\n        }\r\n    };\r\n\r\n    displayErrors = () => {\r\n        let errors = <React.Fragment></React.Fragment>;\r\n        errors = this.state.errors.map((error) => {\r\n            return <p>{error}</p>;\r\n        });\r\n        return errors;\r\n    };\r\n\r\n    render() {\r\n        if (this.state.redirect) {\r\n            return <Redirect to=\"/history\" />;\r\n        }\r\n        //console.log(\"render\");\r\n        return (\r\n            <React.Fragment>\r\n                <Link to=\"/login\">\r\n                    <Header />\r\n                </Link>\r\n                <div className=\"logo-fruits\">\r\n                    <img src={fruits} className=\"logo\" alt=\"Fruits\" />\r\n                </div>\r\n                <Link className=\"back-button\" to=\"/login\">\r\n                    {\"< Retour\"}\r\n                </Link>\r\n                <div className=\"signup-container\">\r\n                    <form className=\"forms\">\r\n                        <label>\r\n                            nom\r\n                            <input\r\n                                className=\"input-forms\"\r\n                                value={this.state.userName}\r\n                                onChange={(evt) =>\r\n                                    this.setState({\r\n                                        userName: evt.target.value,\r\n                                    })\r\n                                }\r\n                                type=\"text\"\r\n                            />\r\n                        </label>\r\n                        <label>\r\n                            email\r\n                            <input\r\n                                className=\"input-forms\"\r\n                                value={this.state.email}\r\n                                onChange={(evt) => this.setState({ email: evt.target.value })}\r\n                                type=\"email\"\r\n                            />\r\n                        </label>\r\n                        <label>\r\n                            mot de passe\r\n                            <input\r\n                                className=\"input-forms\"\r\n                                value={this.state.password}\r\n                                onChange={(evt) =>\r\n                                    this.setState({\r\n                                        password: evt.target.value,\r\n                                    })\r\n                                }\r\n                                type=\"password\"\r\n                            />\r\n                        </label>\r\n                        <label>\r\n                            confirmer mot de passe\r\n                            <input\r\n                                className=\"input-forms\"\r\n                                value={this.state.passwordConfirm}\r\n                                onChange={(evt) =>\r\n                                    this.setState({\r\n                                        confirmPassword: evt.target.value,\r\n                                    })\r\n                                }\r\n                                type=\"password\"\r\n                            />\r\n                        </label>\r\n                    </form>\r\n                    <label className=\"errors-signup\">{this.displayErrors()}</label>\r\n                    <div className=\"button-signup\" onClick={this.handleSubmit}>\r\n                        <ButtonSignup />\r\n                    </div>\r\n                </div>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\nexport default Signup;\r\n","import React from \"react\";\r\n\r\nfunction ButtonSignin() {\r\n  return (\r\n  <div>\r\n    Me connecter\r\n  </div>\r\n  );\r\n}\r\n\r\nexport default ButtonSignin;","import React, { Component } from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport ButtonSignin from \"../components/Button/ButtonSignin\";\r\nimport fruits from \"../assets/images/fruits-vegetables-basket-by-oblik-studio.svg\";\r\nimport Header from \"../components/Header/Header\";\r\nimport blob from \"../assets/images/bitmap.png\";\r\nimport \"./Login.css\";\r\nimport { Link } from \"react-router-dom\";\r\nimport jwt from \"jsonwebtoken\";\r\n\r\nfunction validate(email, password) {\r\n    const errors = [];\r\n\r\n    if (email.length === 0) {\r\n        errors.push(<p>Saissez votre adresse e-mail</p>);\r\n    }\r\n    if (password.length === 0) {\r\n        errors.push(<p>Saissez votre mot de passe</p>);\r\n    }\r\n    return errors;\r\n}\r\n\r\nclass Signin extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            email: \"\",\r\n            password: \"\",\r\n            errors: [],\r\n            redirect: false,\r\n            loginSuccessful: null,\r\n        };\r\n    }\r\n\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        const { email, password } = this.state;\r\n        const errors = validate(email, password);\r\n        //console.log(email, password, errors);\r\n        this.setState({ errors });\r\n        if (errors.length === 0) {\r\n            this.Connect();\r\n        }\r\n    };\r\n\r\n    componentDidMount = () => {\r\n        this.Verify();\r\n    };\r\n\r\n    Verify = () => {\r\n        let isExpired = true;\r\n        const token = localStorage.getItem(\"token\");\r\n        if (token) {\r\n            var decodedToken = jwt.decode(token, { complete: true });\r\n            var dateNow = new Date();\r\n            if (decodedToken.payload.exp >= dateNow.getTime() / 1000) {\r\n                isExpired = false;\r\n            }\r\n        }\r\n        if (isExpired === false) {\r\n            this.setState({ redirect: true }); // redirection vers la page login\r\n        }\r\n    };\r\n\r\n    Connect = () => {\r\n        fetch(`https://api.lowympact.fr/api/v1/users/login`, {\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"api-key\": \"99d8fb95-abdd-4885-bf6c-3a81d8874043\",\r\n\r\n                //'x-access-token': localStorage.getItem('token'),\r\n            },\r\n            body: JSON.stringify({\r\n                email: this.state.email,\r\n                password: this.state.password,\r\n            }),\r\n        })\r\n            .then((response) => response.json())\r\n            .then((data) => {\r\n                //console.log(data);\r\n                if (data.error === \"No user found\") {\r\n                    this.setState({ loginSuccessful: false });\r\n                    let err = this.state.errors;\r\n                    err.push(<p>Utilisateur Inconnu</p>);\r\n                    this.setState({ errors: err });\r\n                } else if (data.error === \"Incorrect password\" || !data.success) {\r\n                    this.setState({ loginSuccessful: false });\r\n                    let err = this.state.errors;\r\n                    err.push(<p>Mot de passe Incorrect</p>);\r\n                    this.setState({ errors: err });\r\n                } else {\r\n                    // console.log(data);\r\n                    localStorage.setItem(\"token\", data.token);\r\n                    localStorage.setItem(\"userId\", data._id);\r\n                    this.setState({ loginSuccessful: true, redirect: true });\r\n                    //this.props.history.goBack();\t// a ajouter pour être redirigé vers la page initialement\r\n                    // demandée. On doit cependant rediriger si la page demandée\r\n                    // était la page de login\r\n                }\r\n            });\r\n    };\r\n\r\n    onPasswordChange = () => {\r\n        this.setState({\r\n            password: this.passwordInput.value,\r\n            email: this.emailInput.value,\r\n        });\r\n    };\r\n\r\n    render() {\r\n        if (this.state.redirect) {\r\n            return <Redirect to=\"/history\" />;\r\n        }\r\n        return (\r\n            <React.Fragment>\r\n                <Link to=\"/login\">\r\n                    <Header />\r\n                </Link>\r\n                <div className=\"logo-fruits\">\r\n                    <img src={fruits} className=\"logo\" alt=\"Fruits\" />\r\n                </div>\r\n\r\n                <Link className=\"back-button\" to=\"/login\">\r\n                    {\"< Retour\"}\r\n                </Link>\r\n                <div className=\"signin-container\">\r\n                    <form className=\"forms\">\r\n                        <label>\r\n                            email\r\n                            <input\r\n                                className=\"input-forms\"\r\n                                value={this.state.email}\r\n                                onChange={this.onPasswordChange}\r\n                                ref={(ref) => (this.emailInput = ref)}\r\n                                type=\"email\"\r\n                            />\r\n                        </label>\r\n                        <label>\r\n                            mot de passe\r\n                            <input\r\n                                className=\"input-forms\"\r\n                                value={this.state.password}\r\n                                onChange={this.onPasswordChange}\r\n                                ref={(ref) => (this.passwordInput = ref)}\r\n                                type=\"password\"\r\n                            />\r\n                        </label>\r\n                    </form>\r\n                    <label className=\"errors-signin\">{this.state.errors}</label>\r\n                    <div className=\"button-signin\" onClick={this.handleSubmit}>\r\n                        <ButtonSignin />\r\n                    </div>\r\n                </div>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\nexport default Signin;\r\n","import React from \"react\";\r\n\r\nfunction ButtonChangePassword() {\r\n  return (\r\n  <div>\r\n    Changer mot de passe\r\n  </div>\r\n  );\r\n}\r\n\r\nexport default ButtonChangePassword;","export const USERS =\r\n    {\r\n        id: 0,\r\n        email: \"bububu@bababa.com\",\r\n        password: \"123456\"\r\n    };","import React, { Component } from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport ButtonChangePassword from \"../components/Button/ButtonChangePassword\";\r\nimport fruits from \"../assets/images/fruits-vegetables-basket-by-oblik-studio.svg\";\r\nimport Header from \"../components/Header/Header\";\r\nimport Navbar from \"../components/Navbar/Navbar\";\r\nimport \"./ProfileConfiguration.css\";\r\nimport { USERS } from \"../assets/users/users\";\r\nimport jwt from \"jsonwebtoken\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction validate(newPassword, confirmPassword) {\r\n    const errors = [];\r\n    if (newPassword.length < 6) {\r\n        errors.push(<p>Entre un mot de passe. 6 caractères minimum requis</p>);\r\n    }\r\n    if (newPassword !== confirmPassword) {\r\n        errors.push(<p>Les mots de passe ne correspondent pas</p>);\r\n    }\r\n    return errors;\r\n}\r\n\r\nclass ProfileConfiguration extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            user: USERS,\r\n            currentPassword: \"\",\r\n            newPassword: \"\",\r\n            confirmPassword: \"\",\r\n            errors: [],\r\n            redirect: false,\r\n        };\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        e.preventDefault();\r\n        const { currentPassword, newPassword, confirmPassword } = this.state;\r\n        const errors = validate(newPassword, confirmPassword);\r\n        console.log(this.state.user.email, currentPassword, newPassword, confirmPassword, errors);\r\n        this.setState({ errors });\r\n        if (errors.length === 0) {\r\n            this.changeUserInfo(this.state.user._id, currentPassword, newPassword);\r\n        }\r\n    };\r\n\r\n    changeUserInfo = (userId, currentPassword, newPassword) => {\r\n        console.log(\"hey\");\r\n        fetch(\r\n            `https://api.lowympact.fr/api/v1/users/${userId}`,\r\n            // `http://localhost:8080/api/v1/users/login`,\r\n            {\r\n                method: \"PUT\",\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\",\r\n                    \"api-key\": \"99d8fb95-abdd-4885-bf6c-3a81d8874043\",\r\n                    authorization: localStorage.getItem(\"token\"),\r\n                },\r\n                body: JSON.stringify({\r\n                    currentPassword: currentPassword,\r\n                    newPassword: newPassword,\r\n                }),\r\n            }\r\n        )\r\n            .then((response) => response.json())\r\n            .then((res) => {\r\n                console.log(res);\r\n                if (res.success === false) {\r\n                    this.setState({\r\n                        errors: [...this.state.errors, res.error],\r\n                    });\r\n                } else {\r\n                    this.setState({ redirect: true });\r\n                }\r\n            });\r\n    };\r\n\r\n    Verify = () => {\r\n        let isExpired = true;\r\n        const token = localStorage.getItem(\"token\");\r\n        if (token) {\r\n            var decodedToken = jwt.decode(token, { complete: true });\r\n            var dateNow = new Date();\r\n            if (decodedToken.payload.exp >= dateNow.getTime() / 1000) {\r\n                isExpired = false;\r\n            }\r\n        }\r\n        if (isExpired === true) {\r\n            this.setState({ redirect: true }); // redirection vers la page login\r\n        }\r\n    };\r\n\r\n    componentDidMount = () => {\r\n        this.Verify();\r\n        let userId = localStorage.getItem(\"userId\");\r\n        if (userId) {\r\n            this.loadUserInfo(userId);\r\n        }\r\n    };\r\n\r\n    loadUserInfo = (userId) => {\r\n        fetch(\r\n            `https://api.lowympact.fr/api/v1/users/${userId}`,\r\n            // `http://localhost:8080/api/v1/users/login`,\r\n            {\r\n                method: \"GET\",\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\",\r\n                    \"api-key\": \"99d8fb95-abdd-4885-bf6c-3a81d8874043\",\r\n                    authorization: localStorage.getItem(\"token\"),\r\n                },\r\n            }\r\n        )\r\n            .then((response) => response.json())\r\n            .then((res) => {\r\n                console.log(res);\r\n\r\n                this.setState({ user: res.data });\r\n            });\r\n    };\r\n\r\n    render() {\r\n        if (this.state.redirect) {\r\n            return <Redirect to=\"/profil\" />;\r\n        }\r\n        console.log(this.state.redirect);\r\n        return (\r\n            <div className=\"screen\">\r\n                <Link to=\"/\">\r\n                    <Header />\r\n                </Link>\r\n                <Navbar />\r\n                <div className=\"logo-fruits\">\r\n                    <img src={fruits} className=\"logo\" alt=\"Fruits\" />\r\n                </div>\r\n                <Link className=\"back-button\" to=\"/profil\">\r\n                    {\"< Retour\"}\r\n                </Link>\r\n                <div className=\"configuration-screen-title\"></div>\r\n                <div className=\"errors-change-password\">{this.state.errors}</div>\r\n                <div className=\"configuration-container\">\r\n                    <div className=\"configuration-email-block\">\r\n                        <div>email</div>\r\n                        <div>{this.state.user.email}</div>\r\n                    </div>\r\n                    <form className=\"configuration-form\">\r\n                        <label>\r\n                            {/* Mot de passe actuel */}\r\n                            <input\r\n                                placeholder=\"mot de passe actuel\"\r\n                                className=\"input-forms\"\r\n                                value={this.state.currentPassword}\r\n                                onChange={(evt) =>\r\n                                    this.setState({\r\n                                        currentPassword: evt.target.value,\r\n                                    })\r\n                                }\r\n                                type=\"password\"\r\n                            />\r\n                        </label>\r\n                        <label>\r\n                            {/* Nouveau mot de passe */}\r\n                            <input\r\n                                value={this.state.newPassword}\r\n                                className=\"input-forms\"\r\n                                onChange={(evt) =>\r\n                                    this.setState({\r\n                                        newPassword: evt.target.value,\r\n                                    })\r\n                                }\r\n                                type=\"password\"\r\n                                placeholder=\"nouveau mot de passe\"\r\n                            />\r\n                        </label>\r\n                        <label>\r\n                            {/* Confirmation de mot de passe */}\r\n                            <input\r\n                                placeholder=\"confirmation de mdp\"\r\n                                className=\"input-forms\"\r\n                                value={this.state.confirmPassword}\r\n                                onChange={(evt) =>\r\n                                    this.setState({\r\n                                        confirmPassword: evt.target.value,\r\n                                    })\r\n                                }\r\n                                type=\"password\"\r\n                            />\r\n                        </label>\r\n                        <Link className=\"button-change-password\" onClick={this.handleChange} to=\"\">\r\n                            <ButtonChangePassword />\r\n                        </Link>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default ProfileConfiguration;\r\n","import React from \"react\";\r\nimport { Swiper, SwiperSlide } from \"swiper/react\";\r\n// Import Swiper styles\r\nimport \"swiper/swiper-bundle.css\";\r\n\r\n//Import Pie Chart\r\nimport { PieChart } from \"react-minimal-pie-chart\";\r\n\r\nimport fruits from \"../../assets/images/fruits-vegetables-basket-by-oblik-studio.svg\";\r\nimport { motion } from \"framer-motion\";\r\n\r\nclass DoughnutChartEcoScore extends React.Component {\r\n    state = {\r\n        swiper: undefined,\r\n        selectedSegment: undefined,\r\n    };\r\n\r\n    displayChart = () => {\r\n        let chart = <React.Fragment></React.Fragment>;\r\n        if (this.props.ecoScoreData && this.props.cartedProduct > 0) {\r\n            let data = [\r\n                {\r\n                    title: \"EcoScore A\",\r\n                    value: this.props.ecoScoreData.a,\r\n                    color: \"#1e8f4f\",\r\n                },\r\n                {\r\n                    title: \"EcoScore B\",\r\n                    value: this.props.ecoScoreData.b,\r\n                    color: \"#5fad0c\",\r\n                },\r\n                {\r\n                    title: \"EcoScore C\",\r\n                    value: this.props.ecoScoreData.c,\r\n                    color: \"#ecb10f\",\r\n                },\r\n                {\r\n                    title: \"EcoScore D\",\r\n                    value: this.props.ecoScoreData.d,\r\n                    color: \"#ff6f1e\",\r\n                },\r\n                {\r\n                    title: \"EcoScore E\",\r\n                    value: this.props.ecoScoreData.e,\r\n                    color: \"#df1e1f\",\r\n                },\r\n                {\r\n                    title: \"EcoScore Inconnu\",\r\n                    value: this.props.ecoScoreData.unknown,\r\n                    color: \"#000000\",\r\n                },\r\n            ];\r\n            chart = (\r\n                <PieChart\r\n                    data={data}\r\n                    lineWidth={30}\r\n                    paddingAngle={1}\r\n                    radius={PieChart.defaultProps.radius - 3}\r\n                    animate\r\n                    animationDuration={700}\r\n                    label={({ dataEntry }) => `${Math.round(dataEntry.percentage)}%`}\r\n                    labelStyle={(index) =>\r\n                        index === this.state.selectedSegment\r\n                            ? {\r\n                                  fontSize: \"6px\",\r\n                                  fontFamily: \"comfortaa\",\r\n                                  fill: data[index].color,\r\n                              }\r\n                            : {\r\n                                  fontSize: \"0px\",\r\n                                  fontFamily: \"comfortaa\",\r\n                                  fill: data[index].color,\r\n                              }\r\n                    }\r\n                    labelPosition={60}\r\n                    segmentsStyle={{\r\n                        transition: \"stroke .3s ease-out\",\r\n                        cursor: \"pointer\",\r\n                    }}\r\n                    segmentsShift={(index) => (index === this.state.selectedSegment ? 3 : 0)}\r\n                    onClick={(event, index) => {\r\n                        if (index === this.state.selectedSegment) {\r\n                            this.setState({ selectedSegment: undefined });\r\n                            this.state.swiper.slideTo(0, 500);\r\n                        } else {\r\n                            this.setState({ selectedSegment: index });\r\n                            this.state.swiper.slideTo(index + 1, 500);\r\n                        }\r\n                    }}\r\n                />\r\n            );\r\n        } else {\r\n            chart = (\r\n                <motion.div\r\n                    className=\"stats-no-product\"\r\n                    initial={{ opacity: 0 }}\r\n                    animate={{ opacity: 1 }}\r\n                    exit={{ opacity: 0 }}\r\n                >\r\n                    <div>\r\n                        <img src={fruits} className=\"logo\" alt=\"Fruits\" />\r\n                        <p className=\"logo-text\">Commence à scanner des produits !</p>\r\n                    </div>\r\n                </motion.div>\r\n            );\r\n        }\r\n        return chart;\r\n    };\r\n\r\n    onSlideChange = (index) => {\r\n        if (index === 0) {\r\n            this.setState({ selectedSegment: undefined });\r\n        } else {\r\n            this.setState({ selectedSegment: index - 1 });\r\n        }\r\n    };\r\n\r\n    displaySlides = () => {\r\n        let slides = <React.Fragment></React.Fragment>;\r\n        if (this.props.ecoScoreData && this.props.cartedProduct > 0) {\r\n            slides = (\r\n                <React.Fragment>\r\n                    <SwiperSlide>\r\n                        <div className=\"stats-slider\">\r\n                            <img\r\n                                className=\"stats-ecoscore-full\"\r\n                                src=\"/images/utils/ecoScoreFull.png\"\r\n                                alt=\"\"\r\n                            />\r\n                        </div>\r\n                    </SwiperSlide>\r\n                    <SwiperSlide>\r\n                        <div className=\"stats-slider\">\r\n                            <span className=\"stats-slider-text\">\r\n                                {\">\"} EcoScore A : {this.props.ecoScoreData.a}{\" \"}\r\n                                {this.props.ecoScoreData.a > 1 ? \" produits\" : \" produit\"}\r\n                            </span>\r\n                            <img\r\n                                className=\"stats-ecoscore-image\"\r\n                                src=\"/images/utils/ecoScoreA.png\"\r\n                                alt=\"\"\r\n                            />\r\n                        </div>\r\n                    </SwiperSlide>\r\n                    <SwiperSlide>\r\n                        <div className=\"stats-slider\">\r\n                            <span className=\"stats-slider-text\">\r\n                                {\">\"} EcoScore B : {this.props.ecoScoreData.b}{\" \"}\r\n                                {this.props.ecoScoreData.b > 1 ? \" produits\" : \" produit\"}\r\n                            </span>\r\n                            <img\r\n                                className=\"stats-ecoscore-image\"\r\n                                src=\"/images/utils/ecoScoreB.png\"\r\n                                alt=\"\"\r\n                            />\r\n                        </div>\r\n                    </SwiperSlide>\r\n                    <SwiperSlide>\r\n                        <div className=\"stats-slider\">\r\n                            <span className=\"stats-slider-text\">\r\n                                {\">\"} EcoScore C : {this.props.ecoScoreData.c}{\" \"}\r\n                                {this.props.ecoScoreData.c > 1 ? \" produits\" : \" produit\"}\r\n                            </span>\r\n                            <img\r\n                                className=\"stats-ecoscore-image\"\r\n                                src=\"/images/utils/ecoScoreC.png\"\r\n                                alt=\"\"\r\n                            />\r\n                        </div>\r\n                    </SwiperSlide>\r\n                    <SwiperSlide>\r\n                        <div className=\"stats-slider\">\r\n                            <span className=\"stats-slider-text\">\r\n                                {\">\"} EcoScore D : {this.props.ecoScoreData.d}{\" \"}\r\n                                {this.props.ecoScoreData.d > 1 ? \" produits\" : \" produit\"}\r\n                            </span>\r\n                            <img\r\n                                className=\"stats-ecoscore-image\"\r\n                                src=\"/images/utils/ecoScoreD.png\"\r\n                                alt=\"\"\r\n                            />\r\n                        </div>\r\n                    </SwiperSlide>\r\n                    <SwiperSlide>\r\n                        <div className=\"stats-slider\">\r\n                            <span className=\"stats-slider-text\">\r\n                                {\">\"} EcoScore E : {this.props.ecoScoreData.e}{\" \"}\r\n                                {this.props.ecoScoreData.e > 1 ? \" produits\" : \" produit\"}\r\n                            </span>\r\n                            <img\r\n                                className=\"stats-ecoscore-image\"\r\n                                src=\"/images/utils/ecoScoreE.png\"\r\n                                alt=\"\"\r\n                            />\r\n                        </div>\r\n                    </SwiperSlide>\r\n                    <SwiperSlide>\r\n                        <div className=\"stats-slider\">\r\n                            <span className=\"stats-slider-text\">\r\n                                {\">\"} EcoScore Inconnu : {this.props.ecoScoreData.unknown}{\" \"}\r\n                                {this.props.ecoScoreData.unknown > 1 ? \" produits\" : \" produit\"}\r\n                            </span>\r\n                        </div>\r\n                    </SwiperSlide>\r\n                </React.Fragment>\r\n            );\r\n        }\r\n        return slides;\r\n    };\r\n\r\n    render = () => {\r\n        return (\r\n            <React.Fragment>\r\n                <div className=\"stats-chart-pie\">{this.displayChart()}</div>\r\n                <div className=\"stats-chart-slider\">\r\n                    <Swiper\r\n                        spaceBetween={0}\r\n                        slidesPerView={1}\r\n                        centeredSlides={true}\r\n                        onSlideChange={(i) => this.onSlideChange(i.activeIndex)}\r\n                        onSwiper={(swiper) => this.setState({ swiper: swiper })}\r\n                    >\r\n                        {this.displaySlides()}\r\n                    </Swiper>\r\n                </div>\r\n            </React.Fragment>\r\n        );\r\n    };\r\n}\r\n\r\nexport default DoughnutChartEcoScore;\r\n","import React from \"react\";\r\nimport { Swiper, SwiperSlide } from \"swiper/react\";\r\n// Import Swiper styles\r\nimport \"swiper/swiper-bundle.css\";\r\n\r\n//Import Bar Chart\r\nimport Chart from \"react-apexcharts\";\r\n\r\nimport fruits from \"../../assets/images/fruits-vegetables-basket-by-oblik-studio.svg\";\r\nimport { motion } from \"framer-motion\";\r\n\r\nconst monthNames = [\r\n    \"Janvier\",\r\n    \"Février\",\r\n    \"Mars\",\r\n    \"Avril\",\r\n    \"Mai\",\r\n    \"Juin\",\r\n    \"Juillet\",\r\n    \"Août\",\r\n    \"Septembre\",\r\n    \"Octobre\",\r\n    \"Novembre\",\r\n    \"Décembre\",\r\n];\r\n\r\nclass BarChartCarbonImpact extends React.Component {\r\n    state = {\r\n        selectedSegment: 0,\r\n        options: {\r\n            chart: {\r\n                toolbar: {\r\n                    show: false,\r\n                },\r\n                dropShadow: {\r\n                    enabled: true,\r\n                    top: 0,\r\n                    left: 0,\r\n                    blur: 2,\r\n                    opacity: 0.5,\r\n                },\r\n            },\r\n            plotOptions: {\r\n                bar: {\r\n                    borderRadius: 5,\r\n                    horizontal: true,\r\n                },\r\n            },\r\n            xaxis: {\r\n                categories: [\"Janvier\", \"Février\", \"Mars\", \"Avril\", \"Mai\"],\r\n                labels: {\r\n                    style: {\r\n                        fontSize: \"12px\",\r\n                        fontFamily: \"Comfortaa\",\r\n                        fontColor: \"#1b3044\",\r\n                    },\r\n                },\r\n                title: {\r\n                    text: \"CO₂ équivalent (kg)\",\r\n                    style: {\r\n                        fontSize: \"12px\",\r\n                        fontFamily: \"Comfortaa\",\r\n                        fontColor: \"#1b3044\",\r\n                    },\r\n                },\r\n            },\r\n            yaxis: {\r\n                labels: {\r\n                    style: {\r\n                        fontSize: \"12px\",\r\n                        fontFamily: \"Comfortaa\",\r\n                        fontColor: \"#1b3044\",\r\n                    },\r\n                },\r\n            },\r\n            dataLabels: {\r\n                enabled: true,\r\n                style: {\r\n                    fontSize: \"10px\",\r\n                    fontFamily: \"Comfortaa\",\r\n                },\r\n            },\r\n            noData: {\r\n                text: \"Chargement...\",\r\n            },\r\n            fill: {\r\n                colors: [\"#ff914d\"],\r\n            },\r\n            grid: {\r\n                xaxis: {\r\n                    lines: {\r\n                        show: true,\r\n                    },\r\n                },\r\n                yaxis: {\r\n                    lines: {\r\n                        show: false,\r\n                    },\r\n                },\r\n            },\r\n        },\r\n    };\r\n\r\n    displayChart = () => {\r\n        let chart = <React.Fragment></React.Fragment>;\r\n        if (this.props.carbonImpactData && this.props.cartedProduct > 0) {\r\n            let dataSize = this.props.carbonImpactData.data.length;\r\n            let xaxis = [];\r\n            let now;\r\n\r\n            switch (this.props.carbonImpactData.unit) {\r\n                case \"weekly\":\r\n                    let d = new Date();\r\n                    d.setHours(0, 0, 0, 0);\r\n                    d.setDate(d.getDate() + 4 - (d.getDay() || 7));\r\n                    let yearStart = new Date(d.getFullYear(), 0, 1);\r\n                    now = Math.ceil(((d - yearStart) / 86400000 + 1) / 7);\r\n                    for (let i = dataSize - 1; i >= 0; i--) {\r\n                        xaxis.push(\"Semaine \" + (now - i));\r\n                    }\r\n                    break;\r\n                case \"monthly\":\r\n                    now = new Date().getMonth();\r\n                    let year = new Date().getFullYear();\r\n                    for (let i = dataSize - 1; i >= 0; i--) {\r\n                        let monthNum = now - i;\r\n                        if (monthNum < 0) {\r\n                            xaxis.push(monthNames[monthNum + 12] + \" \" + (year - 1));\r\n                        } else {\r\n                            xaxis.push(monthNames[monthNum] + \" \" + year);\r\n                        }\r\n                    }\r\n                    break;\r\n                case \"yearly\":\r\n                    now = new Date().getFullYear();\r\n                    for (let i = dataSize - 1; i >= 0; i--) {\r\n                        xaxis.push((now - i).toString());\r\n                    }\r\n                    break;\r\n            }\r\n\r\n            this.state.options.xaxis.categories = xaxis;\r\n\r\n            let series = [\r\n                {\r\n                    name: \"CO₂ équivalent (kg)\",\r\n                    data: [],\r\n                },\r\n            ];\r\n\r\n            let sortedData = this.props.carbonImpactData.data;\r\n            console.log(sortedData);\r\n            sortedData.sort((a, b) => (a.offset > b.offset ? 1 : -1));\r\n            console.log(sortedData);\r\n\r\n            for (let i = 0; i < sortedData.length; i++) {\r\n                let finalValue =\r\n                    this.state.selectedSegment === 0\r\n                        ? sortedData[i].impact.toFixed(2)\r\n                        : (sortedData[i].impact / sortedData[i].nbProducts).toFixed(2);\r\n                series[0].data.push(finalValue);\r\n            }\r\n\r\n            chart = (\r\n                <React.Fragment>\r\n                    <div className=\"stats-chart-bar\">\r\n                        <Chart\r\n                            options={this.state.options}\r\n                            series={series}\r\n                            type=\"bar\"\r\n                            height={350}\r\n                        ></Chart>\r\n                    </div>\r\n                </React.Fragment>\r\n            );\r\n        } else {\r\n            chart = (\r\n                <motion.div\r\n                    className=\"stats-no-product\"\r\n                    initial={{ opacity: 0 }}\r\n                    animate={{ opacity: 1 }}\r\n                    exit={{ opacity: 0 }}\r\n                >\r\n                    <div>\r\n                        <img src={fruits} className=\"logo\" alt=\"Fruits\" />\r\n                        <p className=\"logo-text\">Commence à scanner des produits !</p>\r\n                    </div>\r\n                </motion.div>\r\n            );\r\n        }\r\n        return chart;\r\n    };\r\n\r\n    onSlideChange = (index) => {\r\n        this.setState({ selectedSegment: this.state.selectedSegment === 0 ? 1 : 0 });\r\n    };\r\n\r\n    displaySlides = () => {\r\n        let slides = <React.Fragment></React.Fragment>;\r\n        if (this.props.carbonImpactData && this.props.cartedProduct > 0) {\r\n            slides = (\r\n                <React.Fragment>\r\n                    <SwiperSlide>\r\n                        <div className=\"stats-slider\">\r\n                            <span className=\"stats-slider-text\">{\">\"} Impact Carbone total</span>\r\n                        </div>\r\n                    </SwiperSlide>\r\n                    <SwiperSlide>\r\n                        <div className=\"stats-slider\">\r\n                            <span className=\"stats-slider-text\">\r\n                                {\">\"} Impact Carbone par produit\r\n                            </span>\r\n                        </div>\r\n                    </SwiperSlide>\r\n                </React.Fragment>\r\n            );\r\n        }\r\n        return slides;\r\n    };\r\n\r\n    render = () => {\r\n        return (\r\n            <React.Fragment>\r\n                {this.displayChart()}\r\n                <div className=\"stats-chart-slider\">\r\n                    <Swiper\r\n                        spaceBetween={0}\r\n                        slidesPerView={1}\r\n                        centeredSlides={true}\r\n                        onSlideChange={(i) => this.onSlideChange(i.activeIndex)}\r\n                        onSwiper={(swiper) => this.setState({ swiper: swiper })}\r\n                    >\r\n                        {this.displaySlides()}\r\n                    </Swiper>\r\n                </div>\r\n            </React.Fragment>\r\n        );\r\n    };\r\n}\r\n\r\nexport default BarChartCarbonImpact;\r\n","import React from \"react\";\r\nimport Navbar from \"../components/Navbar/Navbar\";\r\nimport DoughnutChartEcoScore from \"../components/Charts/DoughnutChartEcoScore\";\r\nimport BarChartCarbonImpact from \"../components/Charts/BarChartCarbonImpact\";\r\nimport \"./Product.css\";\r\nimport { Link } from \"react-router-dom\";\r\nimport jwt from \"jsonwebtoken\";\r\n\r\nclass Statistics extends React.Component {\r\n    state = {\r\n        ecoScoreData: undefined,\r\n        carbonImpactData: undefined,\r\n        username: undefined,\r\n        scannedProduct: undefined,\r\n        cartedProduct: undefined,\r\n        userId: undefined,\r\n        value: 0,\r\n    };\r\n\r\n    Verify = () => {\r\n        let isExpired = true;\r\n        const token = localStorage.getItem(\"token\");\r\n        if (token) {\r\n            var decodedToken = jwt.decode(token, { complete: true });\r\n            var dateNow = new Date();\r\n            if (decodedToken.payload.exp >= dateNow.getTime() / 1000) {\r\n                isExpired = false;\r\n            }\r\n        }\r\n        if (isExpired === false) {\r\n            this.setState({ connected: true });\r\n        }\r\n    };\r\n\r\n    componentDidMount = () => {\r\n        this.Verify();\r\n        let userId = localStorage.getItem(\"userId\");\r\n        if (userId) {\r\n            this.setState({ userId: userId });\r\n        }\r\n        this.loadUserData(userId);\r\n        this.loadEcoScoreData(userId, \"fromBeginning\");\r\n        this.loadCarbonImpactData(userId, \"fromBeginning\");\r\n    };\r\n\r\n    loadUserData = (userId) => {\r\n        fetch(\r\n            `https://api.lowympact.fr/api/v1/users/${userId}`,\r\n            // `http://localhost:8080/api/v1/users/${userId}`,\r\n            {\r\n                method: \"get\",\r\n                credentials: \"include\",\r\n                headers: new Headers({\r\n                    authorization: localStorage.getItem(\"token\"),\r\n                    \"api-key\": \"99d8fb95-abdd-4885-bf6c-3a81d8874043\",\r\n                    \"Content-Type\": \"application/json\",\r\n                }),\r\n            }\r\n        )\r\n            .then((response) => response.json())\r\n            .then((res) => {\r\n                console.log(res);\r\n                this.setState({\r\n                    username: res?.data?.username,\r\n                    scannedProduct: res?.scannedProduct,\r\n                    cartedProduct: res?.cartedProduct,\r\n                });\r\n            });\r\n    };\r\n\r\n    loadEcoScoreData = (userId, typeAggregate) => {\r\n        fetch(\r\n            `https://api.lowympact.fr/api/v1/users/${userId}/statistics?typeStatistic=ecoscore&typeAggregate=${typeAggregate}`,\r\n            // `http://localhost:8080/api/v1/users/${userId}/statistics?typeStatistic=ecoscore&typeAggregate=${typeAggregate}`,\r\n            {\r\n                method: \"get\",\r\n                credentials: \"include\",\r\n                headers: new Headers({\r\n                    authorization: localStorage.getItem(\"token\"),\r\n                    \"api-key\": \"99d8fb95-abdd-4885-bf6c-3a81d8874043\",\r\n                    \"Content-Type\": \"application/json\",\r\n                }),\r\n            }\r\n        )\r\n            .then((response) => response.json())\r\n            .then((res) => {\r\n                console.log(res);\r\n                this.setState({\r\n                    ecoScoreData: res?.statistics?.ecoscore,\r\n                });\r\n            });\r\n    };\r\n\r\n    loadCarbonImpactData = (userId, typeAggregate) => {\r\n        fetch(\r\n            `https://api.lowympact.fr/api/v1/users/${userId}/statistics?typeStatistic=carbonImpact&typeAggregate=${typeAggregate}`,\r\n            // `http://localhost:8080/api/v1/users/${userId}/statistics?typeStatistic=carbonImpact&typeAggregate=${typeAggregate}`,\r\n            {\r\n                method: \"get\",\r\n                credentials: \"include\",\r\n                headers: new Headers({\r\n                    authorization: localStorage.getItem(\"token\"),\r\n                    \"api-key\": \"99d8fb95-abdd-4885-bf6c-3a81d8874043\",\r\n                    \"Content-Type\": \"application/json\",\r\n                }),\r\n            }\r\n        )\r\n            .then((response) => response.json())\r\n            .then((res) => {\r\n                console.log(res);\r\n                this.setState({\r\n                    carbonImpactData: res?.statistics?.carbonImpact,\r\n                });\r\n            });\r\n    };\r\n\r\n    displayStats = () => {\r\n        let scannedProduct = <React.Fragment />;\r\n        let cartedProduct = <React.Fragment />;\r\n\r\n        if (this.state.scannedProduct !== undefined) {\r\n            scannedProduct = (\r\n                <div className=\"stats-header-text\">\r\n                    <span className={\"circle-stats color_score_stats\"}>⬤ </span>\r\n                    {this.state.scannedProduct > 1 ? \"Produits scannés :\" : \"Produit scanné :\"}\r\n                    <span className=\"uppercase \"> {this.state.scannedProduct}</span>\r\n                </div>\r\n            );\r\n        }\r\n\r\n        if (this.state.cartedProduct !== undefined) {\r\n            cartedProduct = (\r\n                <div className=\"stats-header-text\">\r\n                    <span className={\"circle-stats color_score_stats\"}>⬤ </span>\r\n                    {this.state.cartedProduct > 1 ? \"Produits achetés :\" : \"Produit acheté :\"}\r\n                    <span className=\"uppercase \"> {this.state.cartedProduct}</span>\r\n                </div>\r\n            );\r\n        }\r\n\r\n        return (\r\n            <React.Fragment>\r\n                {scannedProduct}\r\n                {cartedProduct}\r\n            </React.Fragment>\r\n        );\r\n    };\r\n\r\n    handleChange = (event, newValue) => {\r\n        this.setState({ value: newValue });\r\n    };\r\n\r\n    displayNavbar = () => {\r\n        let retour = (\r\n            <div className=\"stats-navbar-container\">\r\n                <button\r\n                    className={\r\n                        this.state.value === 0\r\n                            ? \"stats-navbar-button selected\"\r\n                            : \"stats-navbar-button\"\r\n                    }\r\n                    onClick={() => this.handleChange(\"\", 0)}\r\n                >\r\n                    EcoScore\r\n                </button>\r\n                <button\r\n                    className={\r\n                        this.state.value === 1\r\n                            ? \"stats-navbar-button selected\"\r\n                            : \"stats-navbar-button\"\r\n                    }\r\n                    onClick={() => this.handleChange(\"\", 1)}\r\n                >\r\n                    Impact Carbone\r\n                </button>\r\n                <div\r\n                    className={\r\n                        this.state.value === 0 ? \"navbar-under nav-left\" : \"navbar-under nav-right\"\r\n                    }\r\n                ></div>\r\n            </div>\r\n        );\r\n        return retour;\r\n    };\r\n\r\n    render = () => {\r\n        return (\r\n            <React.Fragment>\r\n                <div className=\"stats-page-container\">\r\n                    <div className=\"stats-header-container\">\r\n                        <div className=\"stats-profil-link\">\r\n                            <Link to=\"/profil\"> {\"<\"} Profil</Link>\r\n                        </div>\r\n                        <img className=\"stats-bitmap-image\" src=\"/images/utils/bitmap.png\" alt=\"\" />\r\n                    </div>\r\n\r\n                    <div className=\"stats-welcome\">\r\n                        <span className=\"stats-welcome-text\">\r\n                            {this.state.username\r\n                                ? this.state.username + \", voici ton récapitulatif Lowympact...\"\r\n                                : \"\"}\r\n                        </span>\r\n                    </div>\r\n\r\n                    <div className=\"stats-text-container\">{this.displayStats()}</div>\r\n\r\n                    {this.displayNavbar()}\r\n\r\n                    {this.state.value === 0 ? (\r\n                        <DoughnutChartEcoScore\r\n                            ecoScoreData={this.state.ecoScoreData}\r\n                            scannedProduct={this.state.scannedProduct}\r\n                            cartedProduct={this.state.cartedProduct}\r\n                        ></DoughnutChartEcoScore>\r\n                    ) : (\r\n                        <BarChartCarbonImpact\r\n                            carbonImpactData={this.state.carbonImpactData}\r\n                            scannedProduct={this.state.scannedProduct}\r\n                            cartedProduct={this.state.cartedProduct}\r\n                        ></BarChartCarbonImpact>\r\n                    )}\r\n\r\n                    <Navbar />\r\n                </div>\r\n            </React.Fragment>\r\n        );\r\n    };\r\n}\r\n\r\nexport default Statistics;\r\n\r\nconst delay = (ms) => new Promise((res) => setTimeout(res, ms));\r\n","import React, { Component } from \"react\";\r\nimport { BrowserRouter as Router, Route, Redirect, Switch } from \"react-router-dom\";\r\nimport { AnimatePresence } from \"framer-motion\";\r\n\r\nimport \"./App.css\";\r\nimport History from \"./pages/History\";\r\nimport Error404 from \"./pages/Error404\";\r\nimport Login from \"./pages/Login\";\r\nimport Product from \"./pages/Product\";\r\nimport Profil from \"./pages/Profil\";\r\nimport Signup from \"./pages/Signup\";\r\nimport Signin from \"./pages/Signin\";\r\nimport ProfileConfiguration from \"./pages/ProfileConfiguration\";\r\nimport Statistics from \"./pages/Statistics\";\r\nimport Scan_home from \"./components/Test/Scan_home\";\r\n\r\nclass App extends Component {\r\n    render() {\r\n        return (\r\n            <Router>\r\n                <AnimatePresence exitBeforeEnter={true}>\r\n                    <Switch>\r\n                        {/* Front Pages */}\r\n                        <Route path=\"/history\" component={History} exact key={1} />\r\n                        <Route path=\"/profil\" component={Profil} exact key={2} />\r\n                        <Route path=\"/login\" component={Login} exact />\r\n                        <Route path=\"/\" component={Login} exact key={1} />\r\n                        <Route path=\"/products/:barcode/:bcProductId\" component={Product} exact />\r\n                        <Route path=\"/products/:barcode\" component={Product} exact />\r\n                        <Route path=\"/signup\" component={Signup} exact />\r\n                        <Route path=\"/signin\" component={Signin} exact />\r\n                        <Route path=\"/configuration\" component={ProfileConfiguration} exact />\r\n                        <Route path=\"/stats\" component={Statistics} exact />\r\n                        <Route path=\"/test\" component={Scan_home} exact />\r\n                        {/* Errors Pages */}\r\n                        <Route path=\"/error404\" component={Error404} />\r\n                        <Redirect to=\"/error404\" />\r\n                        {/* <Route path=\"/MAINTENANCE\" component={ Maintenance } /> */}\r\n                    </Switch>\r\n                </AnimatePresence>\r\n                {/* </Suspense> */}\r\n            </Router>\r\n        );\r\n    }\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}