{"version":3,"sources":["components/Button/ButtonCreateAccount.js","components/Button/ButtonLogin.js","components/Button/ButtonNoAccount.js","pages/Login.js","pages/History.js","pages/Profil.js","App.js","reportWebVitals.js","index.js","components/Header/Header.js","components/Button/ButtonHistory.js","components/Button/ButtonProfil.js","components/Button/ButtonScan.js","components/Scan/Scanner.js","components/Scan/Scan.js","components/Navbar/Navbar.js","assets/images/fruits-vegetables-basket-by-oblik-studio.svg","assets/images/logo.svg","assets/images/bitmap.png"],"names":["ButtonCreateAccount","ButtonLogin","ButtonNoAccount","Login","componentDidMount","Verify","queryString","window","location","search","urlParams","URLSearchParams","innerWidth","get","assign","isExpired","token","localStorage","getItem","decodedToken","jwt","decode","complete","dateNow","Date","payload","exp","getTime","props","history","push","render","motion","div","exit","opacity","className","src","logo","alt","to","fruits","React","Component","RenderHistoryItem","labelColor","item","label","pathProduct","barcode","bcProductId","name","initial","animate","image","brand","style","color","indexOf","marginRight","History","loadLocalStorageHistory","userId","setState","loadHistoryInformations","fetch","method","credentials","headers","Headers","authorization","then","response","json","res","items","data","loading","setItem","JSON","stringify","parse","state","undefined","this","itemList","sort","a","b","date","map","Object","keys","length","Header","Navbar","Profil","connected","disconnect","clear","displayConnectedProfil","Fragment","onClick","displayUnconnectedProfil","Error404","lazy","Product","Signup","Signin","ProfileConfiguration","Statistics","App","AnimatePresence","exitBeforeEnter","fallback","path","component","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById","blob","ButtonHistory","ButtonProfil","ButtonScan","Scanner","error","usedCamera","devices","switchCamera","num","Quagga","stop","QuaggaInit","deviceId","navigator","mediaDevices","enumerateDevices","videoDevices","forEach","device","kind","maxResolution","i","getUserMedia","video","stream","getVideoTracks","track","capabilities","getCapabilities","height","max","match","usedCameraId","getTracks","err","console","log","width","init","inputStream","type","constraints","focusMode","min","aspectRatio","locator","patchSize","halfSample","locate","area","top","right","left","bottom","numOfWorkers","hardwareConcurrency","decoder","readers","debug","drawBoundingBox","showFrequency","drawScanline","showPattern","multiple","singleChannel","start","setQuagga","onDetected","_onDetected","result","offDetected","id","href","Scan","scanning","status","results","reading","quagga","_scan","codeResult","code","showScanner","handleScan","arr","split","handleError","displayQrCode","delay","onError","onScan","showViewFinder","displayBarCode","switchReader","onChange","uncheckedIcon","checkedIcon","checked","onColor","offColor","updateWindowDimensions","innerHeight","handleScannerButton","bool","pathname","addEventListener","removeEventListener"],"mappings":"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","file":"static/js/main.040646db.chunk.js","sourcesContent":["import '../../pages/Login.css';\nfunction ButtonCreateAccount() {\n    return (\n      <div>\n        Créer un compte\n      </div>\n    );\n  }\n  export default ButtonCreateAccount;\n","\nfunction ButtonLogin() {\n    return (\n      <div>\n        Me connecter\n      </div>\n    );\n  }\n  export default ButtonLogin;","function ButtonNoAccount() {\n\treturn <div>Continuer sans compte {\">\"}</div>;\n}\nexport default ButtonNoAccount;\n","import React from \"react\";\nimport logo from \"../assets/images/logo.svg\";\nimport fruits from \"../assets/images/fruits-vegetables-basket-by-oblik-studio.svg\";\nimport \"./Login.css\";\nimport ButtonCreateAccount from \"../components/Button/ButtonCreateAccount\";\nimport ButtonLogin from \"../components/Button/ButtonLogin\";\nimport { Link } from \"react-router-dom\";\nimport ButtonNoAccount from \"../components/Button/ButtonNoAccount\";\nimport jwt from \"jsonwebtoken\";\nimport { motion } from \"framer-motion\";\n\nclass Login extends React.Component {\n    componentDidMount = () => {\n        this.Verify();\n        const queryString = window.location.search;\n        const urlParams = new URLSearchParams(queryString);\n\n        if (window.innerWidth > 1200 && urlParams.get(\"from\") != \"website\") {\n            window.location.assign(\"https://lowympact.fr\");\n        }\n    };\n\n    Verify = () => {\n        let isExpired = true;\n        const token = localStorage.getItem(\"token\");\n        if (token) {\n            var decodedToken = jwt.decode(token, { complete: true });\n            var dateNow = new Date();\n            //console.log(decodedToken, dateNow.getTime() / 1000);\n            if (decodedToken.payload.exp >= dateNow.getTime() / 1000) {\n                isExpired = false;\n            }\n        }\n        if (isExpired === false) {\n            //console.log(\"here\");\n            this.props.history.push(`/history`); // redirection vers la page login\n        }\n    };\n    render = () => {\n        return (\n            <motion.div exit={{ opacity: 0 }}>\n                <div className=\"login-logo\">\n                    <img src={logo} className=\"logo\" alt=\"Logo\" />\n                </div>\n                <div className=\"login-lowympact\">Lowympact</div>\n                <Link to=\"/signup\" className=\"button-account\">\n                    <ButtonCreateAccount />\n                </Link>\n                <Link to=\"/signin\" className=\"button-connect\">\n                    <ButtonLogin />\n                </Link>\n                <Link to=\"/history\" className=\"button-no-account\">\n                    <ButtonNoAccount />\n                </Link>\n                <div className=\"logo-fruits\">\n                    <img src={fruits} className=\"logo\" alt=\"Fruits\" />\n                </div>\n            </motion.div>\n        );\n    };\n}\nexport default Login;\n","import { React, Component, Fragment } from \"react\";\nimport fruits from \"../assets/images/fruits-vegetables-basket-by-oblik-studio.svg\";\nimport Navbar from \"../components/Navbar/Navbar\";\nimport Header from \"../components/Header/Header\";\nimport \"./History.css\";\n// import { ITEMS } from \"../assets/scanned/items\";\nimport { Link } from \"react-router-dom\";\nimport { motion } from \"framer-motion\";\n\nfunction RenderHistoryItem({ item }) {\n    var labelColor;\n    if (item.label === \"d\" || item.label === \"e\") {\n        labelColor = \"red\";\n    } else if (item.label === \"c\") {\n        labelColor = \"yellow\";\n    } else if (item.label === \"a\" || item.label === \"b\") {\n        labelColor = \"green\";\n    }\n\n    var pathProduct = \"/products/\" + item.barcode;\n    if (item.bcProductId) {\n        pathProduct += \"/\" + item.bcProductId;\n    }\n    pathProduct += \"?cart=no\";\n\n    // Mock Soutenance\n    if (item.barcode === \"80135463\") {\n        item.name = \"Nutella 200g\";\n    }\n\n    return (\n        <motion.div initial={{ opacity: 0 }} animate={{ opacity: 1 }} exit={{ opacity: 0 }}>\n            <Link className=\"history-item\" to={pathProduct}>\n                <div className=\"history-img-container\">\n                    <img src={item.image} alt=\"\" />\n                </div>\n                <div className=\"history-name-container\">\n                    <div className=\"history-name\">{item.name}</div>\n                    <div className=\"history-brand\">{item.brand}</div>\n                </div>\n                <div className=\"history-label-container\">\n                    <div style={{ color: labelColor }}>●</div>\n                    <div className=\"history-label\">\n                        {[\"a\", \"b\", \"c\", \"d\", \"e\"].indexOf(item.label) == -1 ? \"\" : item.label}\n                    </div>\n                </div>\n                <div style={{ marginRight: \"10px\", color: \"rgb(41,72,102)\" }}>{\">\"}</div>\n            </Link>\n        </motion.div>\n    );\n}\n\nclass History extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            items: undefined,\n            loading: true,\n            userId: undefined,\n        };\n    }\n\n    componentDidMount = () => {\n        this.loadLocalStorageHistory();\n        let userId = localStorage.getItem(\"userId\");\n        let token = localStorage.getItem(\"token\");\n        if (userId && token) {\n            this.setState({ userId: userId });\n            // this.loadHistoryInformations(userId);\n        }\n    };\n\n    loadHistoryInformations = (userId) => {\n        fetch(\n            `https://api.lowympact.fr/api/v1/users/${userId}/history`,\n            // `http://localhost:8080/api/v1/users/${userId}/history`,\n\n            {\n                method: \"get\",\n                credentials: \"include\",\n                headers: new Headers({\n                    authorization: localStorage.getItem(\"token\"),\n                    \"Content-Type\": \"application/json\",\n                    \"api-key\": \"99d8fb95-abdd-4885-bf6c-3a81d8874043\",\n                }),\n            }\n        )\n            .then((response) => response.json())\n            .then((res) => {\n                //console.log(res);\n\n                this.setState({\n                    items: res?.data,\n                    loading: false,\n                });\n                localStorage.setItem(\"local_history\", JSON.stringify(res?.data));\n            });\n    };\n\n    loadLocalStorageHistory = () => {\n        let history = JSON.parse(localStorage.getItem(\"local_history\"));\n        this.setState({\n            items: history,\n            loading: false,\n        });\n\n        if (!history) {\n            let userId = localStorage.getItem(\"userId\");\n            let token = localStorage.getItem(\"token\");\n            if (userId && token) {\n                this.setState({\n                    loading: true,\n                });\n                this.loadHistoryInformations(userId);\n            }\n        }\n    };\n\n    render() {\n        if (this.state.items) {\n            let itemList = <Fragment />;\n            if (!this.loading) {\n                itemList = this.state.items\n                    .sort((a, b) => {\n                        if (Date.parse(new Date(a.date)) < Date.parse(new Date(b.date))) {\n                            return 1;\n                        } else {\n                            return -1;\n                        }\n                        // else return true;\n                    })\n                    .map((item) => {\n                        return (\n                            <div key={item.barcode + item.bcProductId}>\n                                <RenderHistoryItem item={item} />\n                            </div>\n                        );\n                    });\n            } else {\n                itemList = (\n                    <div className=\"loader\">\n                        <img src=\"/images/utils/loading.gif\" alt=\"\" />\n                    </div>\n                );\n            }\n\n            if (Object.keys(this.state.items).length === 0)\n                return (\n                    <div>\n                        <Header />\n                        <Navbar />\n                        <motion.div\n                            className=\"App\"\n                            initial={{ opacity: 0 }}\n                            animate={{ opacity: 1 }}\n                            exit={{ opacity: 0 }}\n                        >\n                            <div>\n                                <img src={fruits} className=\"logo\" alt=\"Fruits\" />\n                                <p className=\"logo-text\">Commence à scanner des produits !</p>\n                            </div>\n                        </motion.div>\n                    </div>\n                );\n            else\n                return (\n                    <div>\n                        <div className=\"screen\">\n                            <div className=\"screen-title\">{itemList}</div>\n                        </div>\n                        <Header />\n                        <Navbar />\n                    </div>\n                );\n        } else {\n            let image = (\n                <div>\n                    <img src={fruits} className=\"logo\" alt=\"Fruits\" />\n                    <p className=\"logo-text\">Commence à scanner des produits !</p>\n                </div>\n            );\n            if (this.state.loading) {\n                image = (\n                    <div className=\"loader\">\n                        <img src=\"/images/utils/loading.gif\" alt=\"\" />\n                    </div>\n                );\n            }\n            return (\n                <div>\n                    <Header />\n                    <Navbar />\n                    <motion.div\n                        className=\"App\"\n                        initial={{ opacity: 0 }}\n                        animate={{ opacity: 1 }}\n                        exit={{ opacity: 0 }}\n                    >\n                        {image}\n                    </motion.div>\n                </div>\n            );\n        }\n    }\n}\n\nexport default History;\n","import React from \"react\";\nimport Navbar from \"../components/Navbar/Navbar\";\nimport Header from \"../components/Header/Header\";\nimport \"./Profil.css\";\nimport { Link } from \"react-router-dom\";\nimport jwt from \"jsonwebtoken\";\nimport { motion } from \"framer-motion\";\n\nclass Profil extends React.Component {\n    state = {\n        connected: false,\n    };\n\n    disconnect = () => {\n        localStorage.clear();\n        this.props.history.push(\"/login\");\n    };\n\n    componentDidMount = () => {\n        this.Verify();\n    };\n\n    Verify = () => {\n        let isExpired = true;\n        const token = localStorage.getItem(\"token\");\n        if (token) {\n            var decodedToken = jwt.decode(token, { complete: true });\n            var dateNow = new Date();\n            if (decodedToken.payload.exp >= dateNow.getTime() / 1000) {\n                isExpired = false;\n            }\n        }\n        if (isExpired === false) {\n            this.setState({ connected: true }); // redirection vers la page login\n        }\n    };\n\n    displayConnectedProfil = () => {\n        return (\n            <React.Fragment>\n                <h2 className=\"profil-title\">Bienvenue sur ton profil!</h2>\n                <Link to=\"/stats\" className=\"profil-button\">\n                    Statistiques\n                </Link>\n                <Link to=\"/configuration\" className=\"profil-button\">\n                    Configuration\n                </Link>\n                <div onClick={this.disconnect} className=\"profil-button\">\n                    Déconnecter\n                </div>\n            </React.Fragment>\n        );\n    };\n\n    displayUnconnectedProfil = () => {\n        return (\n            <React.Fragment>\n                <h2 className=\"profil-title\">Non connecté</h2>\n                <p>Connecte toi pour que ton historique soit sauvegardé !</p>\n                <Link to=\"/login\" className=\"profil-button\">\n                    Me Connecter\n                </Link>\n            </React.Fragment>\n        );\n    };\n\n    render() {\n        return (\n            <div>\n                <Link to=\"/\">\n                    <Header />\n                </Link>\n                <motion.div\n                    initial={{ opacity: 0 }}\n                    animate={{ opacity: 1 }}\n                    exit={{ opacity: 0 }}\n                    className=\"profil-screen\"\n                >\n                    <div className=\"profil-picture\">\n                        <div className=\"material-icons\">person</div>\n                    </div>\n                    {this.state.connected\n                        ? this.displayConnectedProfil()\n                        : this.displayUnconnectedProfil()}\n                </motion.div>\n                <Navbar />\n            </div>\n        );\n    }\n}\n\nexport default Profil;\n","//noprotect\nimport React, { Component, Suspense } from \"react\";\nimport { BrowserRouter as Router, Route, Redirect, Switch } from \"react-router-dom\";\nimport { AnimatePresence } from \"framer-motion\";\n\nimport \"./App.css\";\n// import History from \"./pages/History\";\n// import Error404 from \"./pages/Error404\";\nimport Login from \"./pages/Login\";\nimport History from \"./pages/History\";\nimport Profil from \"./pages/Profil\";\n// const History = React.lazy(() => import(\"./pages/History\"));\n// const Login = React.lazy(() => import('./pages/Login'));\n// import Product from \"./pages/Product\";\n// import Signup from \"./pages/Signup\";\n// const Profil = React.lazy(() => import(\"./pages/Profil\"));\n// import Signin from \"./pages/Signin\";\n// import ProfileConfiguration from \"./pages/ProfileConfiguration\";\n// import Statistics from \"./pages/Statistics\";\nconst Error404 = React.lazy(() => import(\"./pages/Error404\"));\nconst Product = React.lazy(() => import(\"./pages/Product\"));\nconst Signup = React.lazy(() => import(\"./pages/Signup\"));\nconst Signin = React.lazy(() => import(\"./pages/Signin\"));\nconst ProfileConfiguration = React.lazy(() => import(\"./pages/ProfileConfiguration\"));\nconst Statistics = React.lazy(() => import(\"./pages/Statistics\"));\n\nclass App extends Component {\n    render() {\n        return (\n            <Router>\n                <AnimatePresence exitBeforeEnter={true}>\n                    <Suspense fallback={<div className=\"loading\">Chargement ...</div>}>\n                        <Switch>\n                            {/* Front Pages */}\n                            <Route path=\"/history\" component={History} exact key={1} />\n                            <Route path=\"/profil\" component={Profil} exact key={2} />\n                            <Route path=\"/login\" component={Login} exact />\n                            <Route path=\"/\" component={Login} exact key={1} />\n                            <Route\n                                path=\"/products/:barcode/:bcProductId\"\n                                component={Product}\n                                exact\n                            />\n                            <Route path=\"/products/:barcode\" component={Product} exact />\n                            <Route path=\"/signup\" component={Signup} exact />\n                            <Route path=\"/signin\" component={Signin} exact />\n                            <Route path=\"/configuration\" component={ProfileConfiguration} exact />\n                            <Route path=\"/stats\" component={Statistics} exact />\n                            {/* Errors Pages */}\n                            <Route path=\"/error404\" component={Error404} />\n                            <Redirect to=\"/error404\" />\n                            {/* <Route path=\"/MAINTENANCE\" component={ Maintenance } /> */}\n                        </Switch>\n                    </Suspense>\n                </AnimatePresence>\n                {/* </Suspense> */}\n            </Router>\n        );\n    }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","import \"./Header.css\";\nimport logo from \"../../assets/images/logo.svg\";\nimport blob from \"../../assets/images/bitmap.png\";\nimport React from \"react\";\n\nfunction Header(props) {\n    return (\n        <div>\n            <div>\n                <img src={blob} className=\"blob-top\" alt=\"Blob\" />\n            </div>\n            {props.history ? (\n                <React.Fragment />\n            ) : (\n                <React.Fragment>\n                    <div>\n                        <img src={blob} className=\"blob-left\" alt=\"Blob\" />\n                    </div>\n                    <div>\n                        <img src={blob} className=\"blob-right\" alt=\"Blob\" />\n                    </div>{\" \"}\n                </React.Fragment>\n            )}\n            <div className=\"header-container\">\n                <img src={logo} className=\"header-logo\" alt=\"Logo\" />\n                <span>Lowympact</span>\n            </div>\n        </div>\n    );\n}\n\nexport default Header;\n","import \"./ButtonNavBar.css\";\n\nfunction ButtonHistory() {\n    return (\n        <div>\n            <div className=\"button-logo\">\n                <span className=\"material-icons\">history</span>\n            </div>\n            <div>Historique</div>\n        </div>\n    );\n}\n\nexport default ButtonHistory;\n","function ButtonProfil() {\n    return (\n        <div>\n            <div>\n                <span className=\"material-icons\">person</span>\n            </div>\n            <div>Profil</div>\n        </div>\n    );\n}\n\nexport default ButtonProfil;\n","import { React } from \"react\";\n\nfunction ButtonScan() {\n    return (\n        <div>\n            <div className=\"navbar-scan-icon\">\n                <span className=\"material-icons\">qr_code_scanner</span>\n            </div>\n        </div>\n    );\n}\n\nexport default ButtonScan;\n","import React, { Component } from \"react\";\nimport Quagga from \"quagga\";\n\nclass Scanner extends Component {\n    state = {\n        error: false,\n        usedCamera: 0,\n        devices: [],\n    };\n\n    switchCamera = () => {\n        let num = this.state.usedCamera + 1;\n        if (num >= this.state.devices.length) {\n            num = 0;\n        }\n        this.setState({ usedCamera: num });\n        Quagga.stop();\n        this.QuaggaInit(this.state.devices[num].deviceId);\n    };\n\n    componentDidMount = async () => {\n        let usedCameraId;\n        const devices = await navigator.mediaDevices.enumerateDevices().then(function (devices) {\n            return devices;\n        });\n        let videoDevices = [];\n        devices.forEach((device) => {\n            if (device.kind === \"videoinput\") {\n                videoDevices.push(device);\n                // if (device.label.match(/back/) != null) {\n                //     ////console.log(\"Found video device: \" + JSON.stringify(device));\n                // }\n            }\n        });\n        // ALL  cameras\n        //console.log(videoDevices);\n        this.setState({ devices: videoDevices });\n\n        // open every video device and dump its characteristics\n        let maxResolution = -1;\n        for (let i in videoDevices) {\n            const device = videoDevices[i];\n            // //console.log(\"Opening video device \" + device.deviceId + \" (\" + device.label + \")\");\n\n            await navigator.mediaDevices\n                .getUserMedia({\n                    video: { deviceId: { exact: device.deviceId } },\n                })\n                .then(\n                    (stream) => {\n                        stream.getVideoTracks().forEach((track) => {\n                            const capabilities = track.getCapabilities();\n\n                            if (\n                                capabilities.height.max >= maxResolution &&\n                                device.label.match(/back/) != null\n                            ) {\n                                maxResolution = capabilities.height.max;\n                                usedCameraId = device.deviceId;\n                                this.setState({ usedCamera: i });\n                            }\n\n                            ////console.log(\"Track capabilities: \" + JSON.stringify(capabilities));\n                        });\n\n                        stream.getTracks().forEach((track) => track.stop());\n                    },\n                    (err) => console.log(err)\n                );\n        }\n        this.QuaggaInit(usedCameraId);\n    };\n\n    QuaggaInit = (usedCameraId, width = 1920, height = 1080) => {\n        Quagga.init(\n            {\n                inputStream: {\n                    type: \"LiveStream\",\n                    constraints: {\n                        deviceId: usedCameraId,\n                        focusMode: \"continuous\",\n                        width: { min: width },\n                        height: { min: height },\n                        aspectRatio: {\n                            min: 1,\n                            max: 2,\n                        },\n                    },\n                },\n                locator: {\n                    patchSize: \"normal\",\n                    halfSample: false,\n                },\n                locate: false,\n                area: {\n                    top: \"25%\",\n                    right: \"25%\",\n                    left: \"25%\",\n                    bottom: \"25%\",\n                },\n                numOfWorkers: window.navigator.hardwareConcurrency || 2,\n                decoder: {\n                    readers: [\"ean_reader\"],\n                },\n                debug: {\n                    drawBoundingBox: true,\n                    showFrequency: true,\n                    drawScanline: true,\n                    showPattern: true,\n                },\n                multiple: false,\n                singleChannel: false,\n            },\n            (err) => {\n                if (err) {\n                    //console.log(err);\n                    if (width != 960 && height != 540) {\n                        this.QuaggaInit(usedCameraId, 960, 540);\n                    } else {\n                        this.setState({ error: true });\n                    }\n                    return false;\n                }\n                Quagga.start();\n            }\n        );\n        this.props.setQuagga(Quagga);\n        Quagga.onDetected(this._onDetected);\n    };\n\n    componentWillUnmount() {\n        Quagga.offDetected(this._onDetected);\n    }\n\n    _onDetected = async (result) => {\n        let stop = await this.props.onDetected(result);\n        //console.log(stop);\n        if (stop) {\n            Quagga.stop();\n        }\n    };\n\n    render() {\n        return (\n            <React.Fragment>\n                <div id=\"interactive\" className=\"viewport\" />\n                {this.state.devices?.length > 1 ? (\n                    <button className=\"code-switch-camera\" onClick={this.switchCamera}>\n                        <span className=\"material-icons\">cameraswitch</span>\n                        {this.state.usedCamera}\n                    </button>\n                ) : (\n                    <React.Fragment />\n                )}\n                {this.state.error ? (\n                    <div className=\"scan-error\">\n                        Il semblerait que votre caméra ne soit pas détectée. Essayez de changer de\n                        navigateur. Si le problème persiste, contactez-nous{\" \"}\n                        <a href=\"mailto:corentin.branchereau@insa-lyon.fr?Subject=Lowympact-camera not working\">\n                            via ce lien\n                        </a>\n                    </div>\n                ) : (\n                    <React.Fragment />\n                )}\n            </React.Fragment>\n        );\n    }\n}\n\nexport default Scanner;\n","import React, { Component } from \"react\";\nimport Scanner from \"./Scanner\";\nimport QrReader from \"react-qr-reader\";\nimport Switch from \"react-switch\";\nimport { Redirect } from \"react-router-dom\";\n\nclass Scan extends Component {\n    state = {\n        scanning: true,\n        status: \"\",\n        results: [],\n        usedCameraId: \"3f6fc4177028f25c3e8215f4444838450630b8d656c627ef511346545d37f302\",\n        devices: [],\n        reading: 0, //false : barcode - true: qrcode\n        barcode: undefined,\n        bcProductId: undefined,\n        Quagga: undefined,\n    };\n\n    setQuagga = (quagga) => {\n        if (this.state.Quagga) {\n            this.state.Quagga.stop();\n        }\n        this.setState({ Quagga: quagga });\n    };\n\n    _scan = () => {\n        this.setState({ scanning: !this.state.scanning, status: \"\" });\n    };\n\n    _onDetected = async (res) => {\n        if (res) {\n            if (res.codeResult && res.codeResult.code) {\n                this.setState({\n                    results: [res],\n                    scanning: true,\n                    status: \"waiting\",\n                });\n                let response = await fetch(\n                    `https://world.openfoodfacts.org/api/v0/product/${res.codeResult.code}.json/`\n                );\n                let result = await response.json();\n                if (result.status !== 0) {\n                    this.setState({\n                        scanning: false,\n                        status: \"found\",\n                        barcode: res.codeResult.code,\n                    });\n                    this.props.showScanner(false);\n                    if (this.state.Quagga) this.state.Quagga.stop();\n                    return true;\n                } else {\n                    this.setState({\n                        scanning: true,\n                        status: \"not found\",\n                    });\n                    return false;\n                }\n            }\n        }\n    };\n\n    handleScan = (data) => {\n        if (data) {\n            let arr = data.split(\"/\");\n            if (arr.length > 1) {\n                this.setState({\n                    scanning: false,\n                    barcode: arr[4],\n                    bcProductId: arr[5],\n                    status: \"found\",\n                });\n            }\n            if (this.state.Quagga) this.state.Quagga.stop();\n        }\n    };\n    handleError = (err) => {\n        console.error(err);\n    };\n\n    displayQrCode = () => {\n        if (this.state.status !== \"found\") {\n            return (\n                <QrReader\n                    delay={300}\n                    onError={this.handleError}\n                    onScan={this.handleScan}\n                    style={{ width: \"100%\" }}\n                    showViewFinder={false}\n                />\n            );\n        } else {\n            return <React.Fragment />;\n        }\n    };\n\n    displayBarCode = () => {\n        if (this.state.status !== \"found\") {\n            return (\n                <React.Fragment>\n                    <div className=\"header\">\n                        <ul className=\"results\">\n                            {this.state.results.map((result, i) => (\n                                <div key={result.codeResult.code + i}>\n                                    {this.state.status === \"waiting\"\n                                        ? \"Vérification du code\" + result?.codeResult?.code\n                                        : \"\"}\n                                    {this.state.status === \"not found\"\n                                        ? \"code non trouvé, merci de réessayer\"\n                                        : \"\"}\n                                </div>\n                            ))}\n                        </ul>\n                    </div>\n                    {this.state.scanning ? (\n                        <Scanner\n                            onDetected={this._onDetected}\n                            setQuagga={this.setQuagga}\n                            usedCameraId={this.usedCameraId}\n                        />\n                    ) : null}\n                </React.Fragment>\n            );\n        } else {\n            return <React.Fragment />;\n        }\n    };\n\n    switchReader = () => {\n        if (this.state.reading) this.setState({ reading: false });\n        else {\n            if (this.state.Quagga) this.state.Quagga.stop();\n            this.setState({ reading: true });\n        }\n    };\n\n    render() {\n        if (\n            this.state.barcode &&\n            this.state.bcProductId &&\n            (this.props.barcode !== this.state.barcode ||\n                this.props.bcProductId !== this.state.bcProductId)\n        ) {\n            return (\n                <Redirect to={\"/products/\" + this.state.barcode + \"/\" + this.state.bcProductId} />\n            );\n        }\n        if (this.state.barcode && this.props.barcode !== this.state.barcode) {\n            return <Redirect to={\"/products/\" + this.state.barcode} />;\n        } else {\n            return (\n                <div className=\"code-reader-container\">\n                    <span\n                        className=\"close\"\n                        onClick={() => {\n                            if (this.state.Quagga) this.state.Quagga.stop();\n\n                            this.props.showScanner(false);\n                        }}\n                    >\n                        &times;\n                    </span>\n                    <div className=\"code-switch\" onClick={this.switchReader}>\n                        <div className=\"span-code-switch\">\n                            <span\n                                className={\n                                    this.state.reading ? \"material-icons\" : \"material-icons green\"\n                                }\n                            >\n                                view_week\n                            </span>\n                            <span>Barcode</span>\n                        </div>\n                        <Switch\n                            onChange={this.switchReader}\n                            uncheckedIcon={false}\n                            checkedIcon={false}\n                            checked={this.state.reading}\n                            onColor={\"#888\"}\n                            offColor={\"#888\"}\n                        />\n                        <div className=\"span-code-switch\">\n                            <span\n                                className={\n                                    !this.state.reading ? \"material-icons\" : \"material-icons green\"\n                                }\n                            >\n                                qr_code_scanner\n                            </span>\n                            <span>QR Code</span>\n                        </div>\n                    </div>\n                    {this.state.reading ? this.displayQrCode() : this.displayBarCode()}\n                </div>\n            );\n        }\n    }\n}\n\nexport default Scan;\n","import \"./Navbar.css\";\nimport React from \"react\";\nimport ButtonHistory from \"../Button/ButtonHistory\";\nimport ButtonProfil from \"../Button/ButtonProfil\";\nimport ButtonScan from \"../Button/ButtonScan\";\n// import Scan from \"../Scan/Scan\";\nimport Scan from \"../Scan/Scan\";\n// import { ScanSettings } from \"scandit-sdk\";\nimport { Link } from \"react-router-dom\";\n\nclass Navbar extends React.Component {\n    state = {\n        showScanner: false,\n        barcode: undefined,\n        bcProductId: undefined,\n        height: 0,\n    };\n\n    componentDidMount() {\n        this.updateWindowDimensions();\n        window.addEventListener(\"resize\", this.updateWindowDimensions);\n    }\n\n    componentWillUnmount() {\n        window.removeEventListener(\"resize\", this.updateWindowDimensions);\n    }\n\n    updateWindowDimensions = () => {\n        this.setState({ height: window.innerHeight });\n    };\n\n    handleScannerButton = (bool) => {\n        this.setState({ showScanner: bool });\n    };\n\n    // handleBarcode = (res) => {\n    //     if (res) {\n    //         //détecté par barcode scanner\n    //         let arr = res.split(\"/\");\n    //         if (arr.length > 1) {\n    //             this.setState({\n    //                 barcode: arr[4],\n    //                 bcProductId: arr[5],\n    //                 showScanner: false,\n    //             });\n    //         } else {\n    //             this.setState({\n    //                 barcode: arr[0],\n    //                 showScanner: false,\n    //                 bcProductId: undefined,\n    //             });\n    //         }\n    //     }\n    // };\n\n    render = () => {\n        if (this.state.height < 550) {\n            return <React.Fragment />;\n        }\n        // if (\n        //     this.state.barcode &&\n        //     this.state.bcProductId &&\n        //     (this.props.barcode !== this.state.barcode ||\n        //         this.props.bcProductId !== this.state.bcProductId)\n        // ) {\n        //     return (\n        //         <Redirect to={\"/products/\" + this.state.barcode + \"/\" + this.state.bcProductId} />\n        //     );\n        // }\n\n        // if (this.state.barcode && this.props.barcode !== this.state.barcode) {\n        //     return <Redirect to={\"/products/\" + this.state.barcode} />;\n        // }\n\n        if (!this.state.showScanner) {\n            return (\n                <React.Fragment>\n                    <div className=\"navbar-container\">\n                        <Link\n                            to=\"/history\"\n                            className={\n                                window.location.pathname === \"/history\"\n                                    ? \"navbar-link navbar-text-left navbar-selected\"\n                                    : \"navbar-link navbar-text-left \"\n                            }\n                        >\n                            <ButtonHistory />\n                        </Link>\n                        <div onClick={() => this.handleScannerButton(true)}>\n                            <div className=\"navbar-circle\">\n                                <ButtonScan />\n                            </div>\n                        </div>\n                        <span className=\"navbar-scan-text\">Scan</span>\n                        <Link\n                            to=\"/profil\"\n                            className={\n                                window.location.pathname === \"/profil\"\n                                    ? \"navbar-link navbar-text-right navbar-selected\"\n                                    : \"navbar-link navbar-text-right \"\n                            }\n                        >\n                            <ButtonProfil />\n                        </Link>\n                    </div>\n                </React.Fragment>\n            );\n        } else {\n            return (\n                // <Scan\n                //     onCrossClicked={this.handleScannerButton}\n                //     // playSoundOnScan={true}\n                //     vibrateOnScan={true}\n                //     enableTorchToggle={true}\n                //     enablePinchToZoom={true}\n                //     enableCameraSwitcher={true}\n                //     guiStyle={\"viewfinder\"}\n                //     scanSettings={\n                //         new ScanSettings({\n                //             enabledSymbologies: [\n                //                 \"qr\",\n                //                 \"ean8\",\n                //                 \"ean13\",\n                //                 \"upca\",\n                //                 \"upce\",\n                //                 \"code128\",\n                //                 \"code39\",\n                //                 \"code93\",\n                //                 \"itf\",\n                //             ],\n                //             codeDuplicateFilter: 1000,\n                //         })\n                //     }\n                //     onScan={(scanResult) => {\n                //         //console.log(scanResult.barcodes[0].data);\n                //         this.handleBarcode(scanResult.barcodes[0].data);\n                //     }}\n                //     onError={(error) => {\n                //         console.error(error.message);\n                //     }}\n                // />\n                <Scan showScanner={this.handleScannerButton} history={this.props.history} />\n            );\n        }\n    };\n}\n\nexport default Navbar;\n","export default __webpack_public_path__ + \"static/media/fruits-vegetables-basket-by-oblik-studio.7d5e1c64.svg\";","export default __webpack_public_path__ + \"static/media/logo.b235ef42.svg\";","export default __webpack_public_path__ + \"static/media/bitmap.6f490d5b.png\";"],"sourceRoot":""}